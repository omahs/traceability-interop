{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fe5c647d-b6f6-4360-a873-7291dc51ab17",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b9e48fca-6bc8-4c46-b598-7fa66962d033",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0ce5fb2-421d-46a1-b258-6d803a650a9c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0db55018-2c42-4685-870a-dce0a38c1e2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f6b675b-6816-459a-b3aa-cb3d233f301d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fc9aec6-2482-44c3-a574-fb4ca1efeb22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d9b05d1-32cd-4fd1-b1b2-ea45122e0bb4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9333555-b864-4b71-98a1-46ad563904b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "392aca17-1193-4c1f-b97e-5a4a89daf7db"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c92dc0df-de8c-4f06-8763-2ad2a54fa935",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f85581f8-78d8-45fa-9773-4e6015b60120"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89f34618-579a-4164-b69c-2fdb41cf0141",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b50bc9be-ece1-43ed-8061-028086e1009a"
            }
          }
        ]
      },
      {
        "id": "4c820833-f3b0-4d65-8470-106e476e5e4a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a5374233-7ad2-42f4-9bd7-994ab328750e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "177fbc56-5163-4ae5-acb6-be93130dce64",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de948917-6c4e-4ece-9c89-a656e1c00768",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf06bee-7f58-4d5f-a538-45ae94ca03dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aceff708-4c0b-4f7e-99af-b2aaca1088ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d48102-18cb-40da-8b95-a2deb04237db",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092dd82d-3db3-4902-a5ce-1f88a61260d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c363e51e-0c0d-4348-a17a-5abbd9c04f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e28b91-de10-4cca-b847-b94257360518",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b89b8d-84bd-43d6-8ade-82054633e9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f790ff2-3f53-40bf-aaba-1583d3d2f009"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b81882df-0610-47b5-b93d-b49e70db6036",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0a1d281-b8f6-464d-9e13-c19a2c08d1a2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707e60ab-e6de-40fe-b049-e212d02602cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6320d5a0-da4a-4d1b-a9f5-cfd964984add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a458e50-8394-43a0-86bc-b42fc73b07ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5d6c21-1bcd-453a-bc2d-fb17c7fd3a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb4e83b-e0f1-4644-ac05-d768502e6b01",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fc724a-0209-4b45-954c-5522ff2f0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6093e7d-1392-4c4a-a003-18226290236b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790b7a27-8dea-4013-8208-c9b1353be2e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "2ca8d583-949e-4647-a98d-bbfaa6a0c93c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6f5a8cb-d27b-4d92-806a-761a5a2ebec5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d2ddd98-b384-4416-9d7c-c0a0e3caa971",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d67e8353-d3ba-4aaf-b4e6-6be84c82bb76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8e1e1ddb-f52f-47dd-91d6-e9c52f651e38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67cd4717-5e8a-424a-930f-791a9905c311",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9da1603a-41dd-4010-beab-3b4972bb683e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81458fc3-7b1e-45fc-b615-337a1f1eda0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2207f6e-e483-4c2e-b4ae-3738b0598401"
            }
          }
        ]
      },
      {
        "id": "960da75f-aa5a-4e0e-8257-fe0f9b79f331",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c33addad-d7f1-4e1c-acfe-55ed918a818e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fd2b0d6-1977-4ba0-8cd4-ca1f907b58b8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b9e8a377-8873-4fdc-b85c-00d3da5e6e64",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4cead4-38a1-4458-8785-8472b5d7c336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a98ea2-72ed-4bd8-a6bb-28624a3c18e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d506250-e87c-4927-ac7e-6435a0c95c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "606113af-498e-44b0-aa0f-f9fee57d25e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e5f637-3d8f-4e72-8dc8-04a129942d50",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffea9088-addf-4dcd-94ab-4d2502359023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6e0955-38d1-42e1-92d8-c8b97f5184a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee720cf-0230-496f-8f86-fc70ad531aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1365746-9298-4805-b9fd-be700294c607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a37415d-abd9-4c22-bb35-b30af2d13cfb",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19030b76-a8e0-423b-89c1-81a794484bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95aec2d-edad-4cb8-bd92-2ea88e6ec884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb36de8c-baf2-48b6-bd4e-364f61955b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c47a04b-38d9-482a-bc13-33a3c4e9fc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb6db7d-7a0f-454d-8d38-7f53a08ebd94",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07463f15-f93d-4f74-b27c-04e98d51d820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb35d12-49ff-4d60-9e16-ea8b3a9725f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bd3d5d-c1bb-4a2e-ae55-ceb1b33fadc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d21442e-b66c-4108-9056-7434ba68f724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f76f41-b404-40c5-82af-46319a6de6bb",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daaecda-e246-4bd9-85c0-52ee04ed8692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28868eaa-b839-4232-93c0-098aa6dc555e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6d2733-bfcc-41c2-a950-8e5298785276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33fe6c08-bbaa-49ba-adf4-29b67e68a53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189f72c0-e59d-422e-a1c1-e7078435a52c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3173cc-06e1-430a-b4fe-ba6b3b293c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6174eb6f-9533-4b69-8f7c-c7b836f24a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35648740-512d-4bfa-8df9-bd5a7c9599f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46119507-db42-485f-9009-a0b2dd0299d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a590986-4e8e-4503-b6e4-0fc7a79f84f4",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd2de2-b859-4a20-9858-c436d5e75d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f222569-f1c5-4037-8b23-adcbdc4a87ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7de1a5-ca1e-43dc-bd5d-0cf1b342ce72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308f52cb-44c0-4d91-bc8c-0eb9343c9c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d264fe96-0eaa-4d66-ad3d-7a59c2a09dc1",
                    "name": "credentials_issue:credential.type.members:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d408c0a0-e01f-424d-a062-d9128a41b0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae5d95d-f7cb-4549-a9d0-5feea052c5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2374566-0ce1-40f6-831f-09c6ce612362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain at least one element",
                            "rawBody.credential.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393caaa8-3c6e-462c-8f1e-7e95c5e44a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e899cc-7092-4455-9e2e-c046f49192b9",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13aaaee7-6692-4270-ae8b-3a77cbcf79c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6d10cc-63c2-430a-999e-a59b77474f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4cdacb-ea5f-48ac-851c-d6db652395f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b9c3ca-a42c-44f5-a658-f18d3e46cc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec54ca9-017a-4766-812b-5509d2c34a3b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed18695-67ab-4c4d-9d15-c24a3b8a749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b7d405-d00e-4aa2-b553-cd978bff6738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2323321d-1b17-40ca-aef8-be664c4b0054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f340c04-4f57-4e94-8e7c-220158484170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f638786-cf17-4533-add2-1c4ec6b86a2c",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bece5bc-6992-4956-9d02-9768daf9157f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bde3bff-3bd1-436f-a72e-b6eb55e26e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f979fea-1e27-446e-8d5a-e10858e06ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46534ede-a5a8-47c8-bc28-a3c1ce349ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c493633-1bcd-4ce8-af92-75211000a475",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845bc38-fb39-4d25-8a83-419558679a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e69faa2-7f5b-4d00-9597-7b3a0e65b560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88e0374-c9de-4bda-98eb-7994df862ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "b1c56b44-bede-4209-802f-f9caeb973e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a961d1-1aea-4271-826b-a3dd1d881d2a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb70ad76-798b-4cd0-9604-cfb6b062b559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a83d71-9c7a-46dc-9161-d6a5290f6cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e088a59a-c0a9-453a-83f2-3770d471e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "09462ae4-783d-489e-8d50-6b3204b29c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19042abb-f202-4e02-8c70-cfe4e5c9ee08",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec6abd7-ac1e-4869-bc4e-2b0692488af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b26b05d-1ffd-4aa1-9351-d28c78f00047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ba85d0-bbd7-448e-b37d-f1b8fd49a42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64315054-89d8-4c94-8d34-71e3cd20ca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0c158d-bdd4-41c8-bff9-d17e8a9eb806",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2b1928-9871-4294-b26f-be9f05ce360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42affc34-412e-413d-9549-2549405140cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850bbfa0-1623-492c-82c9-2cf527f65230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb69b62-785b-425d-83c0-b4dc539e8c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ddf7c3-be66-43c9-8dfd-6877c77689dc",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda8dd06-640e-4798-845d-a58f013d0725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df155e7d-e3d7-4d79-a85e-b2f9e2caa177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b5ddf3-caf0-43f9-8c3c-a0fe204e64c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "251b06a2-1da0-4077-bcfa-5bbb0a12cdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5bb20c-c4b8-452c-b607-e50bb4b7accf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a4d1fe-073d-4189-92d4-068b1e03292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba54f31-0153-41f7-88e7-47e98574cc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6e7d06-5127-4af1-a10f-c12542663ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "21f46f50-9fda-462d-b6cf-1c7b46b10722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccd1a81-8678-4b76-8813-6804cfff01ad",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc857c5e-4387-40db-ab9e-f8b88245a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b590ad40-0572-4f7a-9df8-608b5f61529a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13b2afb-4cef-4f7f-9f02-24e3d581b0c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb7f0455-402f-444e-9842-0b9c81c4a306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153064e2-a29b-4c83-ad14-ee2c124f0aef",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca9019a-ef35-4cf8-a9c2-1377b1fff8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef640197-e1e3-423f-b728-fa4d405e87bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aad334a-0bdb-492c-bfb7-a3bbdd07b302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42496c70-f164-4588-abec-7aff689fb718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bf51ab-2648-4617-b0c3-bdc439848fa4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184f40a2-2913-4867-be4d-1fc222324cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f96cf2-349f-4ccf-83a9-8501df022d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e4f85-7a89-4f12-bbf2-6fc835af5be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c65e84f-e5bc-43f9-a91a-1d58e3855e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0814bd9a-44d4-4fa5-86bf-ce4912146f85",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b165c4-a11f-4620-8fc5-5b8a0707082c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4008dd9-c111-45d1-af80-8b4bcf003a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c486e064-d2eb-4758-b5eb-0eb04cd13a89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f555ee4d-8bd9-4482-b921-fb71d440b989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92dcb3d-d398-4d94-bf53-dcdaa7bf730d",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21f2872-7160-4af7-bcd9-0fe8cbe3f070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95675ad3-3699-422a-b266-28c2d2b912fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078d208d-4740-45ab-8e9c-9bb0b25eec9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6b7dd3-7561-4237-bbc6-9fb511baa0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb891111-4534-4c84-a409-aaee4361ec88",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f9afed-7390-457a-9d87-cf273d6297bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cd7b0a-20eb-4f52-8117-814ff08d4744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786e8837-5ba1-45a1-ac3b-62c204f65987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cd06cf4-3b4e-47b8-8b37-e6550feaa6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107672f4-9907-442b-ba28-96813434d8ce",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65de5795-24aa-46a1-a2c5-d1ddadd80327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93aba05a-a45c-481e-97e3-21a287268384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8bb01f-c047-47f6-a5a1-d82398456c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ccb50c4-543d-46c4-9df6-eb8df9103f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4702458e-5802-42a5-a052-d983b6401ae5",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c706034-b29e-4094-9936-a3c5b9f7056e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50469de7-8e68-4d18-a85e-0b0a3d9dd8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15c6dbd-9194-413f-9369-36e3ef073f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b04009-22ad-479e-8ff5-d9e09f2d6a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c628082a-c0aa-4e7e-a6f8-b3d7ee841097",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ee265c-084d-4834-a093-fcbc036fb314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92fb5ba-13fb-42f5-8183-e746db95c18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04543b93-d01c-4697-bc45-3f243d6851ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d6ecff-6192-48f4-82d7-ec550f8f8666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3445bff7-80f4-4d9b-9f48-ea1b6fabc4c0",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce070ac2-6a25-42be-a8cc-1ac0e717a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0183f7ae-7f5b-4be1-8195-61d7b62fe29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f734c8-71ce-4c40-97d5-af27d982ba78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52c9add-7045-408b-aaa7-837af81ad23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6373c5a-6e6c-4446-a21e-6b9e5e2e4ad0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5357f3f-cf9f-4641-9e30-ac36b1b6772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee8a540-b03e-4bc9-a460-ecfce3f951b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c26dfa-e2c6-43d6-b4eb-f43d5c02d22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f57349c-78e5-4c32-989a-ec77d831d126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca1afe4-cfe2-45ab-83bf-20c81dd2e186",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6301f547-a150-46b0-b309-7f01b9defaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7311e326-8445-48d5-966b-6e5bb135229d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af55c4a4-d344-4f54-a5ee-83e37048c29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ed5dd8-5856-4edf-815a-c52b270ff695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c122734-469b-47c4-8b09-acbecfb55ba6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b4d696-302e-45bc-915d-df3bfe91f147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b6b8dc-dbe7-4666-b92d-5fa30896a284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c672b5df-e9d1-40d5-ba50-9cdd6ebf7841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must contain \"type\" when present",
                            "rawBody.options.credentialStatus = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db7589a-7452-40da-aaf7-f99ddf8900b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2093ba1-4604-46cc-abe1-5c03eb43e3f7",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957a7933-9889-4273-b251-4013eee5d2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94ee0ef-0cb8-4cd2-a6cb-ef34ff1ab8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9b81d0-6e87-4c88-a7e4-f110325ad46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f349e6ae-9d0a-4f5d-97d9-2c8df53db9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c367066-e5b7-4b01-ae83-3b22ceb07e9d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7569e66-af6e-462f-a7e2-7074fb2b88a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "31accaa0-be5e-4bb0-b86b-04a847c4819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8416914c-5df4-45a1-b904-d5865b99f8fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c792f4-7135-48b1-805c-b227df00f93e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84841c0b-b3ef-4020-9be7-0cbbe08df55b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97a2a0be-e2d8-416d-8374-c30bd10a9a17",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e147f5-86ae-45dc-af6c-ca8604e3a7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13638f86-33e7-4023-8e4d-cb04b4a945c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18696ac1-3c4f-491a-b149-713d1c668739",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "6468b27f-f0da-419c-b5b9-0538e6ded835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d91a18-e7bb-4700-8cc2-24c80778ef7b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228c021f-b5d8-4862-903e-854fb93b5377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bea24983-2bf7-4260-8f92-72bafd3b70b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f169f8e-5b70-486a-994b-a0feeaca7cfc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "dca4a2f4-79ed-40b7-af37-64f6a1ad422f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93886535-d4a3-4728-a9f2-21d30fc6d2b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d027d70-708f-4af9-85aa-b47b03ecf860"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a173b7c-7242-4fee-83be-de87055e4e98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6b3e865-6af5-463f-a902-067b9998571b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80f3f1c0-de0b-464d-885d-df104ec60500",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c97c5d06-d36d-4a47-b2ce-1a83bf8133b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f519b84b-f3f6-47c1-b1f6-10557a2e5f7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69238c2a-ff8a-45c2-a840-9ac0b7333f13"
                }
              }
            ]
          },
          {
            "id": "85d9779f-44b3-4bc6-8d41-c1f26f5af424",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a0799f83-42e1-4c05-9cec-0891917cd56f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f4cc369-8790-40a8-85ac-031d4c967b9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ddce843-31d0-4ce9-9b60-d70f5d438402"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a94d3eb-c472-4aa3-b461-e36ed6edb634",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "462fd71b-211f-43aa-8af4-0d942c0a9caa"
                    }
                  }
                ]
              },
              {
                "id": "ee4683f1-21c2-49d2-af70-0d8ad249500c",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afbd110c-e3ca-43a8-897f-1f2d9cd0ab30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2d54b2b-169c-4a80-877d-bdd15d368480"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65ed269a-36d8-44fb-bc56-f2d9d16a3fda",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "7da3c8b7-1808-49a4-9cdd-f40e644383ba"
                    }
                  }
                ]
              },
              {
                "id": "6bf80843-d847-44d6-a9b7-83d7471a8fe3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ff7f752-9608-4e91-ba09-8ef828e4e399",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7db569ee-1968-4b8c-aba0-bf71ca427444"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5887805-0075-4677-bdc3-b76ad38e4830",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "67e64bc9-a847-4f33-93b2-253b91fd1dd7"
                    }
                  }
                ]
              },
              {
                "id": "55d68228-78e1-4105-992a-3fcbe62be56b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1abca9c4-0bdd-41cf-94d5-a8c561eae5db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68384f93-a4c7-4dc0-9b35-a9d8c4d7219e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2bd9494-4908-40c6-a7a7-13f766907cb1",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "b7b3961c-4801-4721-98d6-19a66a90927a"
                    }
                  }
                ]
              },
              {
                "id": "92f7f87b-e03c-4a52-b2a3-430daee3fa25",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3344b7e8-097d-4f19-ba97-a1cf54a1bfab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d48f866-fe69-48b0-b567-61bd19ee9588"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19600965-1471-4545-a4d9-a6fb57ae6322",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d0f5b498-ce5b-49f8-b6d0-21f4d72ae360"
                    }
                  }
                ]
              },
              {
                "id": "0fad13f7-a103-4b21-a765-2fbbd5ff0593",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67d199ec-d4d9-4c39-ad56-638bdc7d7e03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5039b99c-f257-4f61-914d-8b7741e00a31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a8d020d-e25f-4c08-8a91-535cb0d61811",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f1021533-bf19-4946-b6c3-b48b4c50f545"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce3b6ef3-d558-4d77-9a3f-06ef995c860d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b94de283-7fa1-4519-b1df-dd7afe58addc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51321f0c-5da0-4464-bbd9-36b0272e4778",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "448937a2-fdd9-4961-84ad-f9ce11aacce4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89801e04-4959-4b2c-be1b-e4e419f76c31",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{ORGANIZATION_DID_WEB}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "c34527d7-5d02-4c66-930e-6746b45dc723"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "269d6629-7fff-4ce1-8f79-0cea76628ab7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9433bc0b-87bc-4c1a-b57b-9746c87deee5"
            }
          }
        ]
      },
      {
        "id": "853d836c-de68-49fd-a540-1001bb44ed76",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9bc08ef0-ef6a-4d82-b4d2-9d9953e20d7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3314a316-9e77-4dac-968b-5c2a83a3d1b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2546ae3-d2be-4ee5-9363-2a29b06a04c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8bdbc0-1402-4095-b21c-5cad6b2aadeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5988a244-8af2-4ef9-bc4e-09b7518a5a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29eafac-27a6-460c-897f-905195a8ef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9844577-d872-4c9a-99f8-67a2e210913f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5bafbe-6b49-4dff-83d7-4c25dff7200b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dca8a2-514a-4a91-9cf9-cf1bdd218533",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "98346bcc-35d9-4ae7-8706-a98683b04622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7dd813-20f1-4e68-8844-bf352103716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b36e1e83-504a-481c-a2ef-db71e4f0f0ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "569b604f-a7a6-429b-bb9d-f6040f18fa4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91ef0c9e-39d5-4175-84de-8c7fb1bb598c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fc00c89-14b6-4814-a096-26d74a6f62f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbb371a5-ebe0-4ab8-8000-10d8cac7ecfd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cd5264b-f306-4c27-9029-fa8342a046e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "dc76ae77-0ed0-45f4-a157-d212df36aa7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a6baf47-8154-4a91-9926-a05b9a717614",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96de9267-3dc0-4f3b-9674-7c0849fc9078"
            }
          }
        ]
      },
      {
        "id": "49aa8ea8-4402-4b01-8244-c5e1722bd9e5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "93ae6679-df67-443d-992b-86e104485a3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f873061b-d8ab-4ae5-a6e8-413cd1ea874e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd1d66d0-72e3-4543-9055-77a51fd110de",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd1cfe0-f74e-4912-a233-b39149c5cdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48285018-2b82-4440-862f-11765cd0a49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fceb79-f1aa-4bdd-91a7-266e6cf4f9ac",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045d7713-ecf5-4657-a266-19d7f62200cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0cf5d8-5d5b-4376-9dcc-c9e061cdba78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045b08e6-70f8-462b-b3fa-292b74801162",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4f20cc-26ea-4fb2-b1b5-5641b2130a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7089d976-c990-4cdd-9b07-27baf4bc0045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cb8307-3855-4c4b-8826-a1e8e8392ac7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226e5dda-0f88-42f0-a3c8-a12eb7f1a6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e455ed9b-9b48-499a-83af-4a42c1999e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c74c18-d430-4912-bfbb-93d01554bcab",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfba069-b847-48e8-8488-a22ec940b4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67836a67-17e4-4788-9a89-a53245fe1f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba529ca1-4cec-493b-8b74-0442348c2f9f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a7c31d-4e3d-43ca-ad47-0a9256a9d5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f05bea1-9a25-4620-b891-f2e44253bb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f33278-f84b-459c-a618-05e6d42c3458",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abad2efb-398d-4975-8010-976a29731373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d18ee5-2f16-4011-9cab-76617e3e09e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df0fbae-11b7-498b-a6f1-74f72bbdc8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207d0933-4561-4bc1-944c-1da331e1ee9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fff9a7-84fd-41fe-ad79-c7872ce9b02f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae34dce-f83d-427e-8b74-8400bd15189e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d999aa-f647-4280-a994-ce4d8a1d1449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19ef5c9-fdfb-4371-9d23-4cce289c5609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae899d2-5375-47b9-9cf9-a3448dbb63f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c3f5c3-22bc-42c0-96cb-6a347680cd78",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf20bcba-39ef-45fe-ac88-120eb8d9708e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715adb27-494d-4d29-a5a6-0fc389f5df6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f715137-c860-4fb1-bd9f-372635d8dcae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292151cd-b071-49b3-8d2f-7b0ed2ebbb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4b58e7-15a7-43e7-a65f-3c133a80a4e2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ad7934-fbf3-485b-8596-2922e8ecfc4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de529e48-7572-493e-a678-042b4d826e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3de40c5-00f1-44a1-a09a-a2ab8e9f54f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97df554d-f6c4-436a-8f9d-5c5b4b6a8aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f47705c-116d-4ef7-b6d0-3df5225f7827",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87a0836-068b-492c-b920-5394d2a56fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94546fc-77e1-4092-bb0d-46065a93de37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6110ee9-f0bd-4e41-abb7-bd355448b5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35907f48-3f88-4100-8245-bf20299abbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90cc3da-3bfa-4f1f-b102-1e33fe50d1d2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779a76ad-39a1-4cb6-a2d5-18b0213eb0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634f3892-1fd6-4417-90db-079a6dc4aa56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7a35f8-c53e-4cbe-bf7b-f2943164f1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a06d61-bca0-4813-bb6e-65a4cb0442c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03db2027-2093-4dc2-b545-30099f9a7ad8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904fadc1-c920-46ec-818b-6007791a5e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2d1751-d738-4c40-8abe-a468d244622e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1dcbf4-ee53-4e05-b0c9-71581dfaae16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0cf4e4-bc07-43d6-86e6-a1ba089cb06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866a3f02-c10c-49b9-8acc-310155b96bc9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c228612-bd25-4859-aef8-1db4ca089dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcce4566-60a0-4931-b91c-277a2ad0e696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a62d9-8668-45fb-a312-14c1691ed61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c43b80-ad39-4142-a8c4-3c81d404fc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2481b16-4f9a-44cb-b8a3-9574c8c1109c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc9320e-7be0-4649-bbf0-1dc3e5b96974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be90fc5-8d85-4e4c-aa98-313f2d493778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c13a4b-5841-4213-9d5e-e224650d2d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c880848-464b-4670-8304-438bc29cdd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ee16be-1067-475e-b155-e9b73a5a1cae",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef03431-4204-4a3d-8834-20911b264755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb3f0327-897d-44ad-abd4-0ee549ec8ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33568b44-776b-40a5-94da-e7aeb6548002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10be9393-960a-4e57-af11-73c4344845aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e4ebac-567a-42c7-be93-ccb797e30cff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb9bfb2-b68f-4252-b9e6-0c6617aaf5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a870e9-b33f-408e-b471-3d8d746fee36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df1ffd7-90d2-458d-a5e9-6b419e2c66fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78c43cf-43e4-443b-9339-d086f65ac367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba9c2ad-1f2f-4cc1-b0d2-04a3e04f3096",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9a1308-8e88-4b0b-b49c-d3916f16c4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b088378-73aa-4dca-8198-2ebe500446d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680b4dda-5447-4887-ac17-88781cef77d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8879c7bd-0deb-4240-94d1-a8abb225eb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2734db2-ed7a-40f5-9028-f7ded42414b5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157943e3-8098-4c71-a1d6-ed1e5be31f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8b32be-4c49-40c4-bda9-a7f5a136ffd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35613740-d79f-47de-b4e7-8d1ad7bbf55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90cfc2e-2a18-47c8-b4ca-8537b23aaff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cb5276-c91e-4844-ac90-5c94b087919d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2b3800-c7cb-496e-99a8-d38563ecb868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4599f1db-86fe-4ab2-b3e0-b36a3bcb3213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbbdcc1-951c-4556-b1fb-dd955f261a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419b6834-8f8e-4ccb-96b7-a88bc1a6efe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83abbd0a-25e8-4ccc-b4b3-c4ee24feb762",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65945435-98bc-42df-85c9-830c19548891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519238c7-0d21-4e1f-9140-0dcf7e588d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b9f363-7cf8-4c44-a836-cc74b282c594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237f8680-2203-41d0-99fa-7e40501ca2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a824c6-3c9d-44a1-986a-ca65bc196468",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9777468f-39a1-4fc6-8cb6-d1ef552fe0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d0619b-01e5-4bf9-8acb-6f79c0a780c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a8857e-08de-4a9f-a1c3-e31eb36b3e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a9ce60-9cd7-408e-88f8-661ee9be98f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467e8bfe-93d4-4d30-9793-4c81f4b0a069",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42cb77c-fe89-4f76-bc3b-c82b7b64f877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b860aa1e-9293-484d-afc3-279325430b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4212682d-02a7-4193-9c23-18329dd5ad73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f6893c-52c0-4359-9e36-a6ca1a3f8cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55138540-c011-47c5-908d-8e12193f7667",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623560e5-2f95-4060-a54f-2f1391685944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d351122e-c3a7-499c-9688-81782cc4d9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0532b9c9-edc5-4b78-beca-2b89c823bc67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7771596-bbae-4321-9a98-3eeeb48d3e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7fa67a-50e4-4517-af64-7464dcf6eee5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9d6deb-4601-45db-9f20-484510a9dd88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3040fed4-0822-4554-b3ab-4cdc64a27541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95672511-4f7e-487f-b1cc-7db18a4a716d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b28259-e832-4899-b0a1-68da5c9c0fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e7f1c6-c14f-4b67-825a-819717fc994f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9b6e0b-1769-4ecf-a81f-735e10982331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304c06b8-15f4-4f71-9ed9-93cac5314bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a82e779-1334-4f19-a569-f550b417ede1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c686c7-3494-4ebd-9cb8-b68d6a5c9a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888f66d4-98ea-4f81-a58f-098c4464b5db",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46977308-6aef-448c-86e6-a0254796e9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946fd549-12ad-4486-8d5a-d005e227f886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acb9dbb-8fca-42dd-bca9-880666a8cbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3991e79c-8ef5-43d0-ba69-c1883093d2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49a9805-b3de-4bbf-95e9-29ed9a161bee",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bbbce6-e3c6-4c1f-9b6f-4cc902f6f33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20ed5ed-de90-4f9a-a4de-1f8cc9676707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751d90c6-8800-4965-bd50-383a69d666ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965549c1-5dd7-4048-b1e9-731610cf03d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ba6134-24f4-4f3b-ad83-279d2c5d6721",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d5269f-bd32-49ea-be23-2759ae22f50a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58fddad5-7dc9-4b13-bbcf-2263dffad41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516e8d9d-81dc-4f6b-ac33-317277428458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c25b43-7383-4d90-9b44-e325d15d233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3e45c1-f0df-4e56-9cef-ff14dd6ead6b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2c729c-fc2a-4408-9456-7110c25af1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "476c1951-3ba8-4cf9-a966-42384ee148f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8d87d0-32d4-4ba3-878a-06ac46060e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4a4be5-62ef-4ca3-806e-5cc6a451fee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60002910-a254-44ee-8413-06bc900f528e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967b6bab-e790-4ac4-aff7-907aee6f1a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1087ad2-8e86-4f33-812d-11d5b6a1e975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0a7c92-c37a-4798-9937-42440d4cfd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5dac27-19c5-47b4-b1ab-968ba06dffaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9718e1d9-0643-4e2c-823e-0d7feb76b9e6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9591d6-69fd-4395-a263-d8422f3f564a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac18013-2464-4141-8fdb-8a5c8c7f436f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c45201-6bc4-4542-bdc6-6c86584c0945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f70e8d-c1b0-49a6-8956-2d6a814195e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41001607-9172-467c-91f3-67225914e383",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fff87c-b2fc-4e6d-94ed-3553f97d4b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25cbe517-4e0c-4608-9339-0dc78f2afe6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b4efd8-d6f2-4e81-be87-74a32c177ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d3bc4e-95ec-4223-ac3f-b3fc9c4c464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e32026-3af0-4c56-8605-809d5d053a54",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a18016-5596-4a69-9ff0-538c9676c591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a0328a-180f-4870-878f-857c51ce3f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91678cff-15ba-4a27-83f8-7df143b65259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcab9d8-2530-4ae2-a5ca-4e4c6bc8ded6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56c2f95-2af5-499b-aa6d-acfff5eb595f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee4e2b0-da6b-4dc8-9ce8-687d08c7f2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86205790-5d45-414b-b007-0bdd229fd7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776bdb45-a4cd-47a4-853f-97d75d95b047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316c825f-ef9d-4e43-9fe1-e5a4e3a52528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7c7648-f570-4c15-a74e-86547ba6088b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d318e0b-e069-4436-ad0d-1a1bed324158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfae454-1a78-4ce3-a20e-5e6108c14ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e984004a-2066-4c28-9091-5c6690afa439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574e876e-874a-47cd-8100-d965d2219c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7127c8-a5ba-46d6-aa6b-81eea7f5cac8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe2b307-aec5-4958-888b-2eedf2937446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a60f8d-9632-4a58-bf8d-dda98833ec9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ed07fb-007c-4d13-a4a1-e785d2715a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c31acc-7f98-4e63-b873-464048e25900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f67b90-8e63-4651-94a0-faee0ebac1cf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d087512d-2abf-4078-afc7-9b27f15e9a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94758e6-7c3f-429f-a75c-74e9987c70a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ccec65-4ee8-47c7-acd5-c897241355d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55809fa3-2e66-460c-83e5-673e78c5bcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaa0a17-64b2-4039-972e-2a2eb682044f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555a2b86-7389-4418-8920-dfdde00485af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7680adaf-64b4-4b19-94a3-63d20835141e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff72e4b3-2dde-429a-8d01-ed8c66233e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2120d878-f793-48e8-8799-86a6986414fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06323406-0381-4a7d-8228-377b6c1eb21b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9455637c-066a-433a-9b1c-531f95b08644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ba1b08-e1b6-461e-bbda-1879c8184dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48704e75-bcb2-41d7-b103-c12896433b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e20d22-ef25-47bb-a79e-58d2ec46a8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82064ae-8f6e-4dd5-89d7-1450d87189ae",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca9d012-25ed-45f2-af32-40fa9c4fecec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbf1eb5-e174-417a-8f40-03e79178b4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26adeacb-71f7-4466-a67a-d6181a1ae85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccdfd2f-8ba4-4ced-b132-ab4de918f0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc66479-6e9e-413c-a6f8-c849576ddef4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112bd67b-5b0a-4ae2-bb80-8f3c5d085d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2926d0-2955-4ccb-a29b-7588cebd82b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4587ecf-fc52-4964-b6d9-6d4042647257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2803dc30-afe8-4356-b4a5-39148989394e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e8c676-b423-4f0e-b7b0-8cb0480ccf79",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1211400-ee60-422f-bc50-898b99a33ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071b7b5d-6abd-4a73-91fa-47a3ffaf6732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c807be2-0e20-4c33-b02c-62ac066ee549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0da534-3cff-4bad-8ddd-4ecade8b3772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5521c35d-fb28-4c01-8b52-fbe83170251d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe2e922-30d2-4f4b-8f5d-972aaec71a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ee02f5-d9d9-4d30-bce9-62050fa9bebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f31465b-fdf1-4d62-9537-ee743fa2003a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e51597-c0da-40cb-9157-35e77dbd088d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bc22b0-d8b4-48af-8c82-28e9113eb363",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f497b9aa-5198-4343-8813-ceb09c48ee70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356e39b5-e4cb-47fd-b0e2-732a00c176e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0eb253-d70b-45c2-9037-1b1742d5eddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59ff50b-98a7-4e6a-9b19-97468bdc4857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301657ca-d77b-453b-8be9-9b7efa85b689",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ec7b59-4bd8-4eca-b3a7-14641476a7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c21e16-852a-4db0-a3aa-7108ea4a360a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ae6d26-6405-491e-a492-eb1cf0cf9f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e4aa21-d656-40dc-b9d3-8006ad84a087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2606b34-02bb-4ef5-b335-3771b75cc5ef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a778e14-f7de-465c-aaba-51d242576b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20881304-a8e1-43cf-9d89-6caa372cc497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cb9db9-9e40-4ebe-9267-4b0fad134c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a6292c-8e63-4103-83cd-c435d1ff763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9692e0ee-a48f-44c2-a5df-d69f52161613",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e6a8a7-5c93-4eca-851d-c5f1b089c65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89d418d-7c56-4c42-a35a-9f5b0bd84e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825cce9d-9cf1-403a-b62a-e38f242dc63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6401c9f-feac-4930-843b-1d7b31ab21c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cc95fa-4cef-47a5-a749-a817ca003f1f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7871a5b-f765-4699-b754-b381847c8e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba65bc4a-7e99-40e0-9c4e-e931ccb070fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3b6a33-1d4b-4a45-8ee3-fa78bbf29a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6b19f0-1dd7-4921-9aa3-12bd43a9d2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a561437-1e25-44bd-95fe-8b18a8579422",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26257775-b960-4165-95e7-221c80fba9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e566929c-e7ac-4968-9621-184769b69598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f81754-b653-40cc-a769-4a940af37d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0136c1c-398c-4ccc-8ab9-f66e32c28f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55b6a49-a090-4043-8887-cf2b6840263f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb090c3b-c5fa-464e-bb11-65c1b50337cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d83ed5-7ffb-420a-8ed8-be62dde3415e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff657856-7192-4db8-ac44-36bbbab3b3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa53482-e445-406b-8a04-0d5e4a1aa29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abea821-1bd2-4ae1-bd71-3a7fadb19e81",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d58988-a777-4ca7-83af-e84b612a3728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6b0f76-ca96-421e-8df7-fdafd6a0b1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c28e82-ca96-425d-9fd8-d509b666a115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18183b3-aeae-4768-b2fa-c10d15fd5e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101bab00-3e5f-4016-87f7-aed5ef8a1608",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a010b7af-a9c4-4f50-9bdc-a6edbac5142b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a16caa8-34fe-44ff-8e27-206eed20e3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a22a24-aa4e-41e3-94f9-ba531ebe3742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06132fbf-71e1-4227-a7c6-3d3ebfd90ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12c1837-ed2e-4bd9-9d51-dab971468c2c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b466dbb8-92f8-4bc6-b6c9-89b78f08e5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dad44e-8ce5-420f-8860-867ef59dc583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0140f369-07e6-4f34-ae65-bd1e78ee410e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca4921a-1d02-42cb-8a65-b126c34dfe51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4bded5-0e9d-4ccf-9aa5-cce495f00d68",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7441c5-52cf-4c07-974d-87e7638d7d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60da2de9-a3fc-4e2c-b9f7-0337d5aabc4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3d0fee-227c-442b-b1a1-9f5f979590f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809d3dac-88da-4c60-a2b4-0a6e97331946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014bb7b7-ab53-4ba6-afdf-2ec8953f02f8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1066fa49-ed93-4c7a-a411-a6749d633513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7788917-72f8-4f4f-af01-6939e4cc7317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdc4b10-08b5-42d9-b34c-768a506b5dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457ff769-3a62-4df4-9ac2-a64c5aad4606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f5db53-38c3-415a-b725-65f0ea02b93a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e7c3b1-674c-4a52-b038-1629e490cb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02074b3-fe63-4889-b54b-196004dd3ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebb44f8-dc08-4ccb-8ec5-d2507f4a1741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56769258-ffdf-48b0-bc21-04aa43236b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d1024c-886d-4162-b6c4-8001d701a500",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab2c4f6-20d6-470a-98cc-f9f2281e4075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3f9914-90a0-46ed-ab31-367bf7fa1416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd8bff1-3fae-453c-8a92-3bce06fa1306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf2551e-1955-4c50-a687-ea0ed4f4ff27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ed11a6-b5d6-4f01-a3c8-4393eaa70ee5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6a3cdf-a69c-4c59-90e4-66de6e9de5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2087d1ec-fccb-4eb3-9621-c68746d6fe16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad75b587-7bf9-4948-8b59-962daf8ecef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845c3364-af2f-4025-87e4-30f35dc3db8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0a2fab-5130-4510-b9ec-4dbfbc5c54db",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af1f5fb-6773-4ab5-9119-8d7549801caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f506f4-070f-4743-87a0-9da71eaf8669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb2bba7-8462-45d9-8502-dec3714dd67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2f145c-121a-4f6b-84c2-2ea161db0f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4483b4c-8742-4b77-81da-24d22f8e848c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f20940-2038-4dab-817f-a14face5c03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008d2c1d-9d00-4f2f-a608-3450de66e64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bff450f-8d65-44eb-9b4c-46a84d509a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007a4209-6907-4952-954c-379aa5e16b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03cc968-05d4-4b0a-aee3-7480b3c3d6fc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c3db42-419f-4e4d-afbf-a44b70963d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18a6f2d-2618-486f-97c9-6d0133fa2667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfc21bc-62b6-46e6-9572-a62e23b3087c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5201e66-9132-4022-85fd-c1d6a6002b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93e0d8e-c1ef-4593-84e6-9f5de092a525",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644ab11b-984f-4a4d-931c-cbf413233261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f661895-bc1a-4e51-9b6f-0d90eb01c416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6158e8-e776-4311-9307-8f8243cce65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f45cf4c-2c0b-4e67-b803-8e5f1c4d5193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4217962b-4756-48e0-ac1c-efd91ac01092",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de250930-afb7-4452-9cb6-fddbe8d9ada1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1a7a0c-e96a-4ea1-9be7-e71ab7755005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12b1e25-a81b-4c92-8553-7e26e4962f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f7b37f-274c-4d21-9037-cb750e310cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861ca975-add4-4692-857f-007a5d6f7b08",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab52c332-bfed-4641-aa6b-e7e66d24bdcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "728b10a9-f3d6-4f3f-a3cc-fa1eb5dd7546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7107505d-2822-4392-a79c-bc5221f13cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cee6a17-f38f-4f45-96c4-c799affc90a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c718c48e-75a3-4a3b-ba59-a86dd0be7034",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886281b8-4e0e-4578-b7f0-68d35f555be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e094e18-288b-4584-a88a-bd1db0841b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c86ff14-6741-4840-8c6c-1b2c9f95e286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bae2731-f722-49b6-b712-26481b18ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb1c25c-fc1e-4af7-a2f9-b94a3d9ef43f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06324261-f944-4b50-9a2e-c1e92dee934a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064060f7-d2a1-4941-912d-24472ac405e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13559010-4f2c-4501-bd07-b97d0aeb053a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73bb305-cf77-4f40-ac24-74ed7b4f15cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1348432-660d-4f31-a10e-f0bcf8ac8f45",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24814f0-dc6c-4e03-9a95-700848f5cff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d2357ed-68c5-4fd3-90c3-7eba53d565df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f20a57-4700-4c1b-a188-90e59562153c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4475aecf-288a-4237-913c-b7010ec9eb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034804f1-9462-4ce3-a191-4269b8c8e46f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99790470-7732-423f-b4e4-a9f2ae4d3d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ad1bdd-6666-43a1-b49e-a15f2fd02024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e389462-16d7-46e9-9961-758d371d52c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc067bc-fee9-4056-8e1e-19c138665833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b523c4-8ad8-49f1-9749-7a0b0a8edea6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf4d98a-2d88-4230-b51e-d3d6627b4f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95bf867-4709-47ba-b465-a81576967ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c614f8-75d7-4067-a088-3c7d30ee34c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84296339-eae9-4f7b-bdc8-135f37451b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df640b4f-ac75-4c5a-b26b-aac0d9cebd36",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bae1a3-e641-450d-a02b-fc1003852fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11109e0d-a12d-4fff-b626-e69c3803b4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26084aa-c4b4-43fa-b020-d1289519b8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb3894f-1e39-488c-9583-fb98e7093f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45601a98-2952-4df7-b625-b25ad8439201",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f3d2d6-0f4e-4ea5-9f85-690c6eab5350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30ea0e6-3360-4f28-886a-f051245fde51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26bdb7b-5bd1-4822-a092-d3954216f36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5975c83-58a9-494b-9ec7-5a1d744642cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada7b059-a4ab-4526-a946-54e0188ad245",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114965a6-651e-41fa-9eba-59491ee0380a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d2b9e0-4096-4b94-93c4-f4b35c39f048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673d09e9-4a56-465f-90cb-8642580658ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbed0b31-124b-41ed-82b5-370e8ad79881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8abf64-92d4-439f-a20d-957283a49a29",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efc0f45-6822-4258-a60d-0a4abf45285b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9240bf1b-bebb-4083-a513-aed57100bb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5963576-3a39-4240-9606-4fc209a25638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbd3ac9-18a7-4a76-b964-06238931dcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a017c473-cea0-4d47-a7ce-0d1b4dc0a3ed",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb0c61d-2a27-4741-99ee-17bb449e5cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf807aea-d8b9-487c-9aeb-637498cc1940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab00cf5-7181-45c9-bb57-f685d6fbd120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e96a526-b73f-4a43-b08d-88f3a1536b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62953ab9-4dc0-4505-a6ff-240e6c602a20",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62124be3-4fc6-48ed-9427-b1cb0e13acad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e5e5b7-a9d2-43f3-b06e-e74019261473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f54092e-9ba4-487c-bcb1-9780cb147b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f970e344-b95e-4c31-84f7-324d9d22ebc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72216f7d-632e-40f9-b6bc-2a1b2e1fa196",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add00819-5d2d-4d41-be33-8099f102e7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96dbc2d-5883-40bb-8d0d-b217a1bd9e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317c81c2-a442-4cde-95a1-50a1d96126f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20088e1a-ca90-41d3-a056-1afda28f42fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113e00c4-15d1-402b-a76d-b2d5daa4e891",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8b2bd9-cd0a-4455-8889-9a4b97b81973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a15c05-5b1f-4c63-8651-c6f2388cb3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175d26dd-162a-4ce3-a780-f917c56726d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99874d3d-a301-44ae-a5cb-7df19141d0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22c35cf-2c47-4719-90c2-acb356ec43cd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf6cdc3-d4cf-4cd8-b36e-5e7b7994ea22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71391326-cbc0-42ca-a798-43935bba1bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e0cb7a-2f86-483b-9cac-54d865bab377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3507290-612c-4451-8bbc-a0ce12bc0dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401e3c73-6431-4761-9d53-f2fc63fd0155",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e714ecfc-672d-4a5e-acdf-b0bcecbb5158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ffdf58-6950-45e0-bf06-31f2e3cad2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbc5115-57fa-4f68-ba2c-ad5046f8a0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22c6d5e-e63d-4993-b1d1-e267ce2841a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463c4c42-3d77-41d4-9d53-060f60bdcf60",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adfb339-32ac-4106-b087-b33c764e44f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999ce854-9745-43a4-bab4-c2a65a321ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c7594a-9a61-4e42-b6d0-4cc81e13862f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bab2777-ee7f-4695-af21-c0a0717aa7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd276252-8944-4780-b628-83318ef880df",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8162a7-d316-4d89-b808-260f37c48089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe38c60b-6a0d-4cf9-9e49-b731f5324ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4198977c-29f8-45be-ad94-36099d2e1092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9093ce9b-0154-4a59-83f0-c36a2de912a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58458d8-528e-4e0f-8db8-f54d9330dcc0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6ae7d6-88cc-449a-87d3-d921057dd95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f3e7bb-f876-4be6-890b-0693f8dcdaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9e84fc-3d2e-4775-a8c6-58d0aeb4f37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486fe0e6-57df-4ddf-80bc-1949a83f0f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5964cbb-d8fc-447b-a4a1-50d50502ab37",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba4e958-16c1-43d3-8267-ef03343c273a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9157a7b-c200-4527-9d85-7c0246ee8d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edc16f5-8e53-477f-849a-f252042e6c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1d4a57-1bd3-4dbb-9d54-65ec741dd090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658533c7-2a6f-44f0-af48-efca94c79840",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e25d3a-a596-4472-b392-593d0b8f14f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319b9224-5887-4b65-866a-12b0beeefe4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad69f46-d12c-41ed-a15a-68327eea674b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b4dfcd-5b16-43c1-92fc-48e980fe4bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14a91f1-e3c8-4dbf-9eac-ae1809a081d1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0574e46d-1a42-4915-bfc7-18c5d776e575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a49d7c-8cbf-4ae5-be26-6c4e8cc22a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c150f0-ac30-4318-8065-0fa0aac582e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905abf2e-db7f-4493-9ef2-ab48e85a26d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906a238d-2590-458a-a479-ca6650589925",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cf1606-aa00-40f1-8ab5-ac24c339a9cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a6cc9e-b391-4414-93e2-e65a392885d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e5b330-e371-4ab3-9525-b5a7ddc1c43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9e970e-5195-4e14-96be-a43c03f053df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76516b9f-0c74-4fc0-99fd-8039de7e072c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e741639-3de2-45c4-8b1b-2a555c9813b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aab5443-090f-4024-b54b-28b9a46458a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6834333-1229-4073-b7c6-f71deeed605d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d72669e-0c8d-471a-aaf5-90f2ff405a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5dbdf2-3ba0-451f-a61b-26646a326038",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0cb9b2-1c9c-41ed-a677-a3a4f1cf44fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31a1742-718f-4e67-8990-452fb1828445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b787a5-9686-41b0-bec2-9d2d9b3cbdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f6883e-80c8-4ad4-9218-3ea3b17d84e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92df5f48-acf8-4d31-bcfc-3b09957876b1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818e1cd1-c142-4fd2-ae27-95be5e0b1fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9acb43fb-e5b3-452e-88c1-2bd33d9e92a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9464000e-f477-45e9-9441-6a7380732288",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34aa9cd-0ba8-4e62-8d89-edde37f4bf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42759a2f-8632-4e1b-acd2-6c7664d2d42c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e2536c-0143-47b8-82aa-370fa92e306a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a843b9-1d78-4b0d-8406-09799a101a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934994b1-0fa9-49d9-942e-27af3389389f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5671e03b-faab-470b-b6e4-b01235465fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22997dee-35b6-45c7-9fbd-f1622bd9581c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17a45da-a994-4c57-8477-1b468fd1ba05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb85773c-3c98-4b1b-ae01-2e209df1fcd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2c6930-f25c-4076-ad37-06ca33c2d28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e3bba6-42b0-49fd-8832-60ecec602350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7036f0dc-8f91-4988-a97d-448fd53ff293",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe4610a-d702-496f-ae09-a5c5f4e5b7aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e5753d-b443-442d-9a5c-ecd6ed8c4aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c1f02e-8d44-4a85-a1ba-240c062dffdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b282b1-8284-4531-b4f5-b21fb681c336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144ff0aa-30ba-4c3e-9963-8e330f7ae6c9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4a3cae-23b2-4ae9-8ef3-3ba77c24d51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e0954d-0b58-4c66-a3ec-2aeacb0622d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c9ef71-dd42-41c1-a467-7694d975cc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570bf2bf-9692-4115-9810-75b91d005911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b71ff5f-20d8-4cce-837e-b727536d9192",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55cb92b-acb5-45b9-8331-32b745a83af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24180d92-8085-4477-a552-2cb174bf428d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ddc809-0131-45dc-97c2-58453f55a84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71ed7cc-06a5-4f61-a1cc-df7313d51e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4f096a-ba15-4904-9d21-38346b55e6c5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d58343-0e4b-4422-b15a-7c3a093655c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1c5b60-529f-45b7-9f51-4105ec1f8265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df29a8fa-f858-48f0-884d-a9c5ee78d23a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ec3aac-0107-432b-9d8e-2b6369a28fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3b8e3f-e8b6-4d73-8621-c8b37fd19a01",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4feb53d-6458-487b-808a-5fd6d2f7e45e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c43346e7-007d-4700-902f-d91c2c13757d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaec1e7-89a9-4ff4-a2d4-0b5e47df95f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e096d5-b5a8-4132-9174-a7af588a7cc4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23d04549-9125-404c-aac3-3f233846624d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a4b9e77-777a-4c7a-bc00-7c3c1356dcbe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3af7fff3-1bb0-43b6-9873-0de4186e871c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7ded2f5-1780-4e0b-a91d-71c599c86c7a"
                    }
                  }
                ]
              },
              {
                "id": "be81f8a7-d527-4066-8cd0-663c1270426d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50380e10-afc2-452f-99d4-206ec1c8c28e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d77bc2e-ec76-492e-aacd-758bb4dc528a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e0a30728-907e-4bae-9750-d087c84d6cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc04dd2-9e61-419d-afc0-6ccbfe478e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c2257f3-5ef7-4c3f-9ca8-fbaf03802d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08f2f76-431a-4518-9503-f3ce1085f79c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede96e6b-00dc-4956-a829-717bd996a39b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ebd87f8b-1af2-4eb5-a2ea-e29003af6c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d6c847-0b4f-402f-bc04-4b8eb08c6a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e5944bc-77d8-4e58-b106-cb113350e46c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6ec1f7b-345e-49da-8dc0-41f83a38e0ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb7e7bd0-3740-43ef-85b8-66896e72cfd0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "811577cf-8197-42bc-973b-eafaca46846e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d7cdd30-0edd-4137-a440-a224db8b2359"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "bdfe1594-1fa4-43aa-bb03-58f29f625ba5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14f71d68-45ae-4ff6-9e26-74539de2339c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8ec61ef-61c8-4e02-b652-3df64188906e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a2121a5-0eaa-4486-89a8-e05c58f2b0b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2b97fff-b0cd-4b04-a0c3-2cef020ff4cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a82f501-b546-477b-956c-e11b502f70d7"
                    }
                  }
                ]
              },
              {
                "id": "f3c5967d-6ade-48f9-8471-e5e68a7ff95c",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4223ea44-1bdd-4c7a-a733-50dd8bee31c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d83eaf6-c676-4ebe-9537-5319e765d297"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a02fc18-a50e-4851-bf40-9fd06319da13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05924b02-f068-4bb3-ae9d-45c824e65c43"
                    }
                  }
                ]
              },
              {
                "id": "205897ad-4485-4b36-bffc-c1a3baac3092",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b08ea49b-76d4-4369-b3db-626b5481c8ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c1a7cd7-f31d-48df-b544-0eeaa85dda7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bbff582-9820-4054-9735-0b4e52c0ea82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "987a54eb-c738-4f36-85d5-55518b7352b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb8cc381-1dee-41c8-a505-e79d401ac75e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5cf381d6-4bf2-42fa-9400-34e31f0b6eb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22a2acf4-93ba-4c72-bf3d-76000c71c224",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "005d33b8-63db-47a7-9c2a-3b2076869886"
            }
          }
        ]
      },
      {
        "id": "1063cfbe-74fc-4a81-9827-f5332170dc00",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8822a886-720d-4f7b-bd10-c61f4fbf7a4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "200fdb56-c34e-49a4-98d6-14d78f58e17c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5829575-e9d7-4435-b4b4-75d9ba8bbcc4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dd75b6-5c64-4aef-b045-c48f763c73c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b169f70d-538b-4468-993c-e7a827d75063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dccbb82-b62e-43c8-8d56-cf9ff5d6e641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "770816b3-625a-48a4-833a-017e602d5875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd241fd3-b450-4096-9dbc-2d6a4e635ab3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a570b153-cfc3-4965-8a49-d5b66745c5ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6ae1d7d7-21d3-4a35-95be-493f502c8ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e822f99b-1775-4fbb-9be0-a8e231b46f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c64a5d83-21be-44a5-8e28-1275102297f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31653598-2518-42a5-a043-d2710d0b26b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7588ab24-33c8-480e-8a05-b4d6ab8fe184"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67b5417c-c590-4913-8725-b702bac2c3f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cdefda0-8de2-420c-8abb-84440c947909"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b536c935-dedf-4af6-8d53-3035d00e3d7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5019c35d-fe0a-4a8e-8d80-86fba7594b38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b62b879a-b011-4a48-aca6-9f4a391557e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0674e812-b34a-437a-8577-537d84f2c60f"
            }
          }
        ]
      },
      {
        "id": "4fb7fd46-7c53-48af-a056-5d5bcdf66c30",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b8c43807-86a8-4df4-81c5-ebde623bbda9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9c4de6f-e00d-4671-a00d-db39814f2b59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27a524af-6464-44af-8e21-629960193181",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30423199-6cb5-490f-b296-69ce34dae1ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a74fb0f8-8b95-431c-aaca-11b5eb5ee00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da1cd44-0797-45a7-afca-bfeb7fd3f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c6d3e7d-2914-42af-bc75-1ecd27727b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64a8b59-8154-45ff-b798-f83336cda478",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6dd46f-c468-4526-b5bf-a014d63780ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dfbe4450-d77d-43b5-b10d-a15b04b9ce53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5d1c20-25a8-49f4-92ae-89ed66ea83e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "191e8bae-eaf5-45ee-be80-16a759fbd53e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7eef424-06bb-428d-8278-b4ed3e54114e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13137783-451f-4201-b752-4fdd7f18e66d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be038483-ab1a-480b-b5aa-915365d59cb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5dcd923-4b1c-446a-960b-a3ed468284a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef20b010-1b4f-4e59-9b48-e2f883107260",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c7581890-3382-4457-808e-7c5f5f142e20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40833048-e3be-47cf-9d8a-e142d51a0778",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b76e5af5-1879-4e6a-b90e-0d5ba7f841a7"
            }
          }
        ]
      },
      {
        "id": "8600a349-fdb1-4d1c-b598-2a54c427f306",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f1236fec-fb2e-4af6-a73f-5ccef5bada3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "faeeed56-e3a8-47ce-a810-2a0c47f53ebb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2c23b98-b898-4be5-9852-7349db154036",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b53e0c6-1365-4b38-adef-d0a5cc00f47a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f0ac303b-5538-464c-918e-91a44328c637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e075db7-6c2d-4a62-991c-ac6e57ef87cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "368e111c-d571-4c3e-a92b-ec64b80bef9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2406d20b-d7d6-41ab-94af-b18a22aaef10",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb86080-5767-4d28-b2fd-31ddc863b287",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8825eb88-51c8-4a0b-8c34-d3618c5786b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe7a04a-9933-4b34-bb36-657086e25db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "504da32e-2e48-4b9b-a96d-48becb59824a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ad75cde-399f-4fc6-9b39-5e995e016957",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f84e88c-ca1c-47a8-95cf-700544a9c782"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de4bf0d8-a963-4b7c-b5e8-2a74c17d160b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de2c93cd-42d4-43e9-8b3c-4fb445e0adca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b10c033a-c4e0-489a-8f0b-2f4bdc8f2972",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8fefb3c5-c6ca-441a-9bc0-36750d0ff115"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bfa3c9e-d64f-4564-b85f-eeec7e144155",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2af6cb6-74ad-47d0-93d5-53b563460d52"
            }
          }
        ]
      },
      {
        "id": "b10130fd-b9ea-4cc2-bc18-012f4a187555",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08adc539-c8f8-413f-a4d4-608077e83cd7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c0280ae-cf19-4964-9067-62c90bb32d52",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c59f1d91-66b0-462e-948f-f9215f8a2801",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "957301d2-89eb-49db-8e60-52ee59df516b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d63d265c-ae77-433e-ba24-5c7a8b2128df",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1231,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 166,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 320,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 621,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 610,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 157.84337349397592,
      "responseMin": 4,
      "responseMax": 1303,
      "responseSd": 236.48028940139284,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1665190294012,
      "completed": 1665190327301
    },
    "executions": [
      {
        "id": "e0ce5fb2-421d-46a1-b258-6d803a650a9c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 157,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d9e6ae18-ce5f-4d7d-a39b-da8c848ec6cd",
          "httpRequestId": "9f5ceddb-4509-45d7-b5a1-760e9724c16e"
        },
        "item": {
          "id": "e0ce5fb2-421d-46a1-b258-6d803a650a9c",
          "name": "did_json"
        },
        "response": {
          "id": "e2d2ced9-30fe-4bb8-9c98-99bcaa2c7d79",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de948917-6c4e-4ece-9c89-a656e1c00768",
        "cursor": {
          "ref": "8fe4d5d7-ba49-427b-8e92-c005645cc8fa",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9f871ea2-531b-48d5-a123-66cef6840393"
        },
        "item": {
          "id": "de948917-6c4e-4ece-9c89-a656e1c00768",
          "name": "did:invalid"
        },
        "response": {
          "id": "85536029-276f-41f1-9290-fb3fe79e14ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de948917-6c4e-4ece-9c89-a656e1c00768",
        "cursor": {
          "ref": "8fe4d5d7-ba49-427b-8e92-c005645cc8fa",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9f871ea2-531b-48d5-a123-66cef6840393"
        },
        "item": {
          "id": "de948917-6c4e-4ece-9c89-a656e1c00768",
          "name": "did:invalid"
        },
        "response": {
          "id": "85536029-276f-41f1-9290-fb3fe79e14ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d48102-18cb-40da-8b95-a2deb04237db",
        "cursor": {
          "ref": "9628c6a5-92dc-4db5-8c7d-6ea273212554",
          "length": 157,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9dfd8916-af77-4e01-bcb1-6ef350888d69"
        },
        "item": {
          "id": "69d48102-18cb-40da-8b95-a2deb04237db",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b1361879-8126-4126-84ed-c13a8bfd7eec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e28b91-de10-4cca-b847-b94257360518",
        "cursor": {
          "ref": "aef65ba5-b9ae-43f6-8681-5b9c0508802c",
          "length": 157,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "215726fd-2672-4916-9783-707ead39ba76"
        },
        "item": {
          "id": "39e28b91-de10-4cca-b847-b94257360518",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d0c97030-b94a-4e68-aeee-ef8542a8df7a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a1d281-b8f6-464d-9e13-c19a2c08d1a2",
        "cursor": {
          "ref": "1347dbdf-d9de-4002-b720-1afb874f058e",
          "length": 157,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c9a5ae29-75af-4a31-ac7b-644ce83bfd4a"
        },
        "item": {
          "id": "c0a1d281-b8f6-464d-9e13-c19a2c08d1a2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3cae2171-25ab-4119-9066-dec1e4309e84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb4e83b-e0f1-4644-ac05-d768502e6b01",
        "cursor": {
          "ref": "3d7afd84-5c34-4ad6-a5e5-f5cbfa1e22e4",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e45438dd-57d1-4ff9-a825-eb77d03dc0e0"
        },
        "item": {
          "id": "6cb4e83b-e0f1-4644-ac05-d768502e6b01",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5432c947-924b-4b4d-b334-31ba8942b0f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb4e83b-e0f1-4644-ac05-d768502e6b01",
        "cursor": {
          "ref": "3d7afd84-5c34-4ad6-a5e5-f5cbfa1e22e4",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e45438dd-57d1-4ff9-a825-eb77d03dc0e0"
        },
        "item": {
          "id": "6cb4e83b-e0f1-4644-ac05-d768502e6b01",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5432c947-924b-4b4d-b334-31ba8942b0f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2ddd98-b384-4416-9d7c-c0a0e3caa971",
        "cursor": {
          "ref": "a5268ac4-41a3-4494-9487-0a18a1cf3a9b",
          "length": 157,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "294ef184-59f6-42d6-9771-e6e5a1bc7fd7"
        },
        "item": {
          "id": "8d2ddd98-b384-4416-9d7c-c0a0e3caa971",
          "name": "identifiers"
        },
        "response": {
          "id": "6e4ca6af-ec82-410b-a43c-a1f54da1e6e5",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e8a377-8873-4fdc-b85c-00d3da5e6e64",
        "cursor": {
          "ref": "e9831b35-b7e4-4eaf-8c5b-c67d8d1ff6ab",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1ce30a5d-47f6-48e5-897e-82f5119218e1"
        },
        "item": {
          "id": "b9e8a377-8873-4fdc-b85c-00d3da5e6e64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e2c85c6f-0ea1-43df-8538-8940e09c09d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e8a377-8873-4fdc-b85c-00d3da5e6e64",
        "cursor": {
          "ref": "e9831b35-b7e4-4eaf-8c5b-c67d8d1ff6ab",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1ce30a5d-47f6-48e5-897e-82f5119218e1"
        },
        "item": {
          "id": "b9e8a377-8873-4fdc-b85c-00d3da5e6e64",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e2c85c6f-0ea1-43df-8538-8940e09c09d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e5f637-3d8f-4e72-8dc8-04a129942d50",
        "cursor": {
          "ref": "de55b3a2-86f3-4b3b-be04-a30113dde7ce",
          "length": 157,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fbc719f2-ff31-4118-814f-733aaf904a8d"
        },
        "item": {
          "id": "39e5f637-3d8f-4e72-8dc8-04a129942d50",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6ef9b054-975c-459a-8b83-fa5b1f3c2ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a37415d-abd9-4c22-bb35-b30af2d13cfb",
        "cursor": {
          "ref": "40e58039-3612-459e-8561-98dd2b573d01",
          "length": 157,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "404dd0ec-13b0-4365-b75f-88aa352d1fe2"
        },
        "item": {
          "id": "5a37415d-abd9-4c22-bb35-b30af2d13cfb",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "d465cb8a-a538-439e-9ef1-a161ef01a95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb6db7d-7a0f-454d-8d38-7f53a08ebd94",
        "cursor": {
          "ref": "aa184029-55c0-478e-a26e-3a31150ca607",
          "length": 157,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dff4b8c8-eb3e-4ac9-8aca-56996a9600e5"
        },
        "item": {
          "id": "bcb6db7d-7a0f-454d-8d38-7f53a08ebd94",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "05e4efc3-4563-416c-9a86-cfbb2a4f8d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f76f41-b404-40c5-82af-46319a6de6bb",
        "cursor": {
          "ref": "f9603745-44b7-430a-bf48-5f7aac8b6b09",
          "length": 157,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8b832ae6-fd60-4132-a1e8-7cae629872ef"
        },
        "item": {
          "id": "e6f76f41-b404-40c5-82af-46319a6de6bb",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "4068e562-2423-4dc7-a4f2-472ec16f21d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189f72c0-e59d-422e-a1c1-e7078435a52c",
        "cursor": {
          "ref": "f57aca3c-568d-4707-a489-e32140d05f2b",
          "length": 157,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3ea6e1e7-8167-42ac-a1c7-2308d44dd300"
        },
        "item": {
          "id": "189f72c0-e59d-422e-a1c1-e7078435a52c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9bf5aad1-a970-4a1a-b030-7b4798f9e746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a590986-4e8e-4503-b6e4-0fc7a79f84f4",
        "cursor": {
          "ref": "f5aceddc-083b-4f57-8e2d-a2314f37662c",
          "length": 157,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3eed2a43-fd93-47f9-b71b-68bef763e4c8"
        },
        "item": {
          "id": "1a590986-4e8e-4503-b6e4-0fc7a79f84f4",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "bdcbd04f-771f-458a-b464-9b0d2236985d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d264fe96-0eaa-4d66-ad3d-7a59c2a09dc1",
        "cursor": {
          "ref": "a0fd104f-93eb-4a74-a750-f74b68ba1f60",
          "length": 157,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cec290b4-4d5b-4840-bc9d-1ec24d5092de"
        },
        "item": {
          "id": "d264fe96-0eaa-4d66-ad3d-7a59c2a09dc1",
          "name": "credentials_issue:credential.type.members:missing"
        },
        "response": {
          "id": "2522c32c-a238-4b7f-9b96-ac170ecb7907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e899cc-7092-4455-9e2e-c046f49192b9",
        "cursor": {
          "ref": "97063417-eaf3-4650-ad5b-2c0d48ee6040",
          "length": 157,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c0b784a4-7bee-4745-90c2-bae91318c099"
        },
        "item": {
          "id": "97e899cc-7092-4455-9e2e-c046f49192b9",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "465c0fac-ea9e-4ae1-9ddb-d1afb0faf1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec54ca9-017a-4766-812b-5509d2c34a3b",
        "cursor": {
          "ref": "2f08db5c-7f63-48e4-8cef-49c84ffb5c4f",
          "length": 157,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5bf3d697-c313-4d13-b144-fe2c127ceda2"
        },
        "item": {
          "id": "9ec54ca9-017a-4766-812b-5509d2c34a3b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3df540d1-bcd8-42e5-be99-60d38303d49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f638786-cf17-4533-add2-1c4ec6b86a2c",
        "cursor": {
          "ref": "a2f91381-4339-455b-b266-600cdba60c64",
          "length": 157,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f4a1cd57-6d27-4cf6-8ef0-cc1b7b75e3a4"
        },
        "item": {
          "id": "7f638786-cf17-4533-add2-1c4ec6b86a2c",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "d32b8fcb-d345-4b36-827b-d65ff0ec204b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c493633-1bcd-4ce8-af92-75211000a475",
        "cursor": {
          "ref": "3f2d8c48-d478-40bb-a6c1-7ffcaa286be0",
          "length": 157,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5717dd15-a8bc-41a6-bafc-15c5835fba44"
        },
        "item": {
          "id": "8c493633-1bcd-4ce8-af92-75211000a475",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "6cd40430-5418-46df-b5a2-b188bf4e36e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a961d1-1aea-4271-826b-a3dd1d881d2a",
        "cursor": {
          "ref": "45aad782-0930-401b-8391-3ba0783ee8f6",
          "length": 157,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b576ce5c-f6fb-492a-b6bd-f60295fe936d"
        },
        "item": {
          "id": "49a961d1-1aea-4271-826b-a3dd1d881d2a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a785235c-6f47-4729-9118-e9b2404d3901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19042abb-f202-4e02-8c70-cfe4e5c9ee08",
        "cursor": {
          "ref": "e1c7da0c-93c8-42d5-a5bf-b91e772bbe62",
          "length": 157,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "25954e2b-0a79-48fc-a18b-2b8f85e1cb0c"
        },
        "item": {
          "id": "19042abb-f202-4e02-8c70-cfe4e5c9ee08",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0948e3e8-8817-4ba5-b3c2-5df10ba60a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0c158d-bdd4-41c8-bff9-d17e8a9eb806",
        "cursor": {
          "ref": "68a714f3-8535-49c0-916c-9ee075cb72d8",
          "length": 157,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e616c011-9999-4f23-8451-3a7f482574ff"
        },
        "item": {
          "id": "5a0c158d-bdd4-41c8-bff9-d17e8a9eb806",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "01c7460e-7b0d-485a-8c44-38ffc15edc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ddf7c3-be66-43c9-8dfd-6877c77689dc",
        "cursor": {
          "ref": "a03f326a-b68b-4439-9fb9-e3fa8de284dd",
          "length": 157,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "16718186-b493-430d-a4b6-510752d0853c"
        },
        "item": {
          "id": "b9ddf7c3-be66-43c9-8dfd-6877c77689dc",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "b94cc0f5-0d2a-4312-b028-94afeaacd2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5bb20c-c4b8-452c-b607-e50bb4b7accf",
        "cursor": {
          "ref": "8ec8b267-bb73-426c-82fd-0c665d9377f3",
          "length": 157,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c4735b00-18b4-479e-b141-0e8d90cabb17"
        },
        "item": {
          "id": "da5bb20c-c4b8-452c-b607-e50bb4b7accf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4ef50773-c0c8-4b30-b766-3d92c6ae9691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccd1a81-8678-4b76-8813-6804cfff01ad",
        "cursor": {
          "ref": "f8f0d5f4-6429-4013-a6aa-be02c55d6b80",
          "length": 157,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "59e3e440-be23-4759-a54c-0f8b7bee897c"
        },
        "item": {
          "id": "dccd1a81-8678-4b76-8813-6804cfff01ad",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fd616ec9-16a5-4d77-a59c-61c701adaa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153064e2-a29b-4c83-ad14-ee2c124f0aef",
        "cursor": {
          "ref": "c490b1a8-3bf8-43f6-990e-b2f36d3c18ab",
          "length": 157,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3d20ab03-57fa-4059-80db-f927c9247c7e"
        },
        "item": {
          "id": "153064e2-a29b-4c83-ad14-ee2c124f0aef",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "94ee2c6b-94f5-4f63-8c6d-c5311fc83ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bf51ab-2648-4617-b0c3-bdc439848fa4",
        "cursor": {
          "ref": "e701dc01-9b67-4bb8-bdbb-9841e4d05dd7",
          "length": 157,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7fcd1e18-0528-44f1-b66d-d7fecd698cdb"
        },
        "item": {
          "id": "c7bf51ab-2648-4617-b0c3-bdc439848fa4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d54e6217-52fb-4070-9281-d070044fe5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0814bd9a-44d4-4fa5-86bf-ce4912146f85",
        "cursor": {
          "ref": "ddccf23e-881b-4434-84d6-b450fd092f9e",
          "length": 157,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e3192f53-6790-4ecc-8b30-01f3802da8e1"
        },
        "item": {
          "id": "0814bd9a-44d4-4fa5-86bf-ce4912146f85",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "06bfb80e-d604-4df4-984d-372a2065399c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92dcb3d-d398-4d94-bf53-dcdaa7bf730d",
        "cursor": {
          "ref": "b8c2f4f7-e2df-4d55-a388-cfa898529a56",
          "length": 157,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "28a4d524-eb8c-476c-b43b-4cac8f15c2fd"
        },
        "item": {
          "id": "d92dcb3d-d398-4d94-bf53-dcdaa7bf730d",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "acee4ee6-4308-40ab-b94a-a1b47ae59f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb891111-4534-4c84-a409-aaee4361ec88",
        "cursor": {
          "ref": "deea8d9c-7319-4e14-8b12-050e236e3e2b",
          "length": 157,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bb249201-2823-4464-ac75-ef282c3e4c8c"
        },
        "item": {
          "id": "fb891111-4534-4c84-a409-aaee4361ec88",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "e68cd886-46a1-43c7-ac4f-58248639410d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107672f4-9907-442b-ba28-96813434d8ce",
        "cursor": {
          "ref": "c709ed00-80fb-40ff-a9dc-83ce23a274d0",
          "length": 157,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "97d918f5-10f5-4218-8a21-6f3289fbeb09"
        },
        "item": {
          "id": "107672f4-9907-442b-ba28-96813434d8ce",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1a1e6175-b313-4fd5-b590-218c7489d7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4702458e-5802-42a5-a052-d983b6401ae5",
        "cursor": {
          "ref": "f07a3c13-50b1-433a-aaf8-cbf68c868616",
          "length": 157,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "42c951ce-269d-45cb-a276-ec0a95edf030"
        },
        "item": {
          "id": "4702458e-5802-42a5-a052-d983b6401ae5",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "760519d9-e34b-458c-8d45-e01acf5391ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c628082a-c0aa-4e7e-a6f8-b3d7ee841097",
        "cursor": {
          "ref": "3038a1d5-8dbe-4433-8138-ae5b21d221b4",
          "length": 157,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "69a35c54-1e98-4673-bbab-69fc12179a27"
        },
        "item": {
          "id": "c628082a-c0aa-4e7e-a6f8-b3d7ee841097",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "31499701-a692-4d27-9c0f-844de88f94a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3445bff7-80f4-4d9b-9f48-ea1b6fabc4c0",
        "cursor": {
          "ref": "d870ffdc-ead8-4b35-b904-21888ef0f2cb",
          "length": 157,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "feeb87da-2406-4ae9-99b3-371247f537cc"
        },
        "item": {
          "id": "3445bff7-80f4-4d9b-9f48-ea1b6fabc4c0",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "e0341d56-a723-499e-8c90-747a677ded4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6373c5a-6e6c-4446-a21e-6b9e5e2e4ad0",
        "cursor": {
          "ref": "dcbca01c-50e5-4e5a-85cb-f6ab137c7f4b",
          "length": 157,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f3ffe76-8b04-42ca-b6b8-49c4f31618b3"
        },
        "item": {
          "id": "f6373c5a-6e6c-4446-a21e-6b9e5e2e4ad0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "aae054bf-749f-4d7c-b8c5-d9148f58ab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1153,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca1afe4-cfe2-45ab-83bf-20c81dd2e186",
        "cursor": {
          "ref": "d7d7acf0-d8ed-413f-ab26-21806f585d09",
          "length": 157,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "236eb59a-4a92-498c-bf5e-e6bf10f607f5"
        },
        "item": {
          "id": "5ca1afe4-cfe2-45ab-83bf-20c81dd2e186",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "18a8fd63-26e5-433d-ad5d-1a741e7ebcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c122734-469b-47c4-8b09-acbecfb55ba6",
        "cursor": {
          "ref": "170abc2f-e3b5-46d5-8444-ff9c478cac06",
          "length": 157,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ec77fbb7-ee30-4ed8-b2cf-bdb891e5e06f"
        },
        "item": {
          "id": "0c122734-469b-47c4-8b09-acbecfb55ba6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3e767923-9224-4ed9-bb68-1f696ad9317d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2093ba1-4604-46cc-abe1-5c03eb43e3f7",
        "cursor": {
          "ref": "a7aaa08b-c72a-4bdf-885c-c2d823b42ed8",
          "length": 157,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0f3fd2b4-7bd4-441b-ab78-d321bf4b89b6"
        },
        "item": {
          "id": "c2093ba1-4604-46cc-abe1-5c03eb43e3f7",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "01186b89-8140-41d3-b80e-3fac866addb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c367066-e5b7-4b01-ae83-3b22ceb07e9d",
        "cursor": {
          "ref": "8917c92c-a490-4d5b-810c-26fb10f335a4",
          "length": 157,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b69e624c-20a2-40fd-b5d3-c6847576dc01"
        },
        "item": {
          "id": "7c367066-e5b7-4b01-ae83-3b22ceb07e9d",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "88121e3e-e563-4709-93b7-1dd03cc2bc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a2a0be-e2d8-416d-8374-c30bd10a9a17",
        "cursor": {
          "ref": "a424e153-35ee-4175-8a72-cc93cfd9240d",
          "length": 157,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "feb85e11-9ac6-4995-84e8-4b643508fbe3"
        },
        "item": {
          "id": "97a2a0be-e2d8-416d-8374-c30bd10a9a17",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b2bfd832-0938-46c0-a088-4081de4ecb6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d91a18-e7bb-4700-8cc2-24c80778ef7b",
        "cursor": {
          "ref": "bc572be1-ecbe-42ab-ab8e-6fe79250bab8",
          "length": 157,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "104239eb-3e52-4663-8c4f-38288ca06e4b"
        },
        "item": {
          "id": "c4d91a18-e7bb-4700-8cc2-24c80778ef7b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "61cb49c2-fd53-4f2b-8212-353846a5e326",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 37,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0799f83-42e1-4c05-9cec-0891917cd56f",
        "cursor": {
          "ref": "3c526c79-b23b-437a-b20b-174320e44802",
          "length": 157,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5dccc431-3f2e-40fd-a7ae-66ca57c61eb2"
        },
        "item": {
          "id": "a0799f83-42e1-4c05-9cec-0891917cd56f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "695bce36-8c5d-461b-ac79-d088fbbd09c9",
          "status": "Created",
          "code": 201,
          "responseTime": 628,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined",
              "stack": "AssertionError: expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined\n   at Object.eval sandbox-script.js:3:42)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4683f1-21c2-49d2-af70-0d8ad249500c",
        "cursor": {
          "ref": "f87e50bb-8d4f-403c-9231-997507d36e72",
          "length": 157,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f842bcd1-5130-42af-8266-e1efe05ca610"
        },
        "item": {
          "id": "ee4683f1-21c2-49d2-af70-0d8ad249500c",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "08c44efe-1fce-4429-89f6-0947919100fa",
          "status": "Created",
          "code": 201,
          "responseTime": 489,
          "responseSize": 591
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf80843-d847-44d6-a9b7-83d7471a8fe3",
        "cursor": {
          "ref": "4d3749a8-3e3b-45f4-9683-d9c5078c5ec9",
          "length": 157,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5ef1b3b3-c800-47ea-b8c1-0555db68236f"
        },
        "item": {
          "id": "6bf80843-d847-44d6-a9b7-83d7471a8fe3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4b73387d-1baa-4dd9-b4a5-33a068ad4798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:44)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:44)"
            }
          }
        ]
      },
      {
        "id": "55d68228-78e1-4105-992a-3fcbe62be56b",
        "cursor": {
          "ref": "5ec9ea98-47ce-49cd-9fc0-8e1a4c4679f3",
          "length": 157,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "45944368-fc37-42dd-a453-9474166178b4"
        },
        "item": {
          "id": "55d68228-78e1-4105-992a-3fcbe62be56b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1cecfd63-215c-4962-8b3a-21321ab41401",
          "status": "Created",
          "code": 201,
          "responseTime": 405,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f7f87b-e03c-4a52-b2a3-430daee3fa25",
        "cursor": {
          "ref": "7e9edc1f-c99c-4011-a5ad-7374bef4e407",
          "length": 157,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "698c0ff5-91e5-4b62-ae58-2013d88e74fa"
        },
        "item": {
          "id": "92f7f87b-e03c-4a52-b2a3-430daee3fa25",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a4e1c116-1b9f-493d-a333-b366abae20a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "0fad13f7-a103-4b21-a765-2fbbd5ff0593",
        "cursor": {
          "ref": "606037a5-3f93-4d68-a39e-6b43eb0bea3d",
          "length": 157,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "79320c73-8293-4e11-b15c-648625379d09"
        },
        "item": {
          "id": "0fad13f7-a103-4b21-a765-2fbbd5ff0593",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "15ec3f64-61c1-440f-86b9-50130331cb29",
          "status": "Created",
          "code": 201,
          "responseTime": 607,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2546ae3-d2be-4ee5-9363-2a29b06a04c2",
        "cursor": {
          "ref": "195692c0-f965-42eb-8fdb-37fa64b85d15",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c250d459-2471-4044-9440-bbb66aeada28"
        },
        "item": {
          "id": "c2546ae3-d2be-4ee5-9363-2a29b06a04c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "05dff754-0584-41e3-bdda-4721b78ac816",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2546ae3-d2be-4ee5-9363-2a29b06a04c2",
        "cursor": {
          "ref": "195692c0-f965-42eb-8fdb-37fa64b85d15",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c250d459-2471-4044-9440-bbb66aeada28"
        },
        "item": {
          "id": "c2546ae3-d2be-4ee5-9363-2a29b06a04c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "05dff754-0584-41e3-bdda-4721b78ac816",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5bafbe-6b49-4dff-83d7-4c25dff7200b",
        "cursor": {
          "ref": "5dd72077-196f-4d2f-a242-01bb6a160a47",
          "length": 157,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "af6eeef5-e21b-4e91-85ba-3c8e9810df6a"
        },
        "item": {
          "id": "4c5bafbe-6b49-4dff-83d7-4c25dff7200b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2f2805c3-4cb7-4cfc-8939-ac78807d4547",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1d66d0-72e3-4543-9055-77a51fd110de",
        "cursor": {
          "ref": "d31745d0-fc59-40d1-b268-ba2019a8707c",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8bdcb309-2351-4c7d-bde7-7c3cd5fdfa79"
        },
        "item": {
          "id": "cd1d66d0-72e3-4543-9055-77a51fd110de",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba4cb6b6-c3bf-4704-9fd1-1229287ebbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1d66d0-72e3-4543-9055-77a51fd110de",
        "cursor": {
          "ref": "d31745d0-fc59-40d1-b268-ba2019a8707c",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8bdcb309-2351-4c7d-bde7-7c3cd5fdfa79"
        },
        "item": {
          "id": "cd1d66d0-72e3-4543-9055-77a51fd110de",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba4cb6b6-c3bf-4704-9fd1-1229287ebbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fceb79-f1aa-4bdd-91a7-266e6cf4f9ac",
        "cursor": {
          "ref": "0bf888eb-496b-4197-b2f7-83828359ea6b",
          "length": 157,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6ca3d361-3783-44fb-9b6b-8b9d0716c78f"
        },
        "item": {
          "id": "21fceb79-f1aa-4bdd-91a7-266e6cf4f9ac",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f76436f7-c339-4e08-8cbf-6997322c5fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045b08e6-70f8-462b-b3fa-292b74801162",
        "cursor": {
          "ref": "d29406f6-2ba0-49c8-a275-a23da1dadaa2",
          "length": 157,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a8a7ae72-af69-4a0e-9143-bdb69f72d284"
        },
        "item": {
          "id": "045b08e6-70f8-462b-b3fa-292b74801162",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1a90b4b0-97b5-4a43-8f0e-c0ea4eafb3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cb8307-3855-4c4b-8826-a1e8e8392ac7",
        "cursor": {
          "ref": "667236fc-ba93-4fb1-b6e8-1e460aec4e52",
          "length": 157,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d77e85a7-430d-4ff3-9573-99002dfd4a04"
        },
        "item": {
          "id": "87cb8307-3855-4c4b-8826-a1e8e8392ac7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "04a3f4e6-f5d7-49e8-b464-2e6c5c9645f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c74c18-d430-4912-bfbb-93d01554bcab",
        "cursor": {
          "ref": "ed0d92c4-7422-4e02-b64d-f73eef1cef52",
          "length": 157,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "00cb3a88-cbf5-44b2-854b-32e4f192bf46"
        },
        "item": {
          "id": "13c74c18-d430-4912-bfbb-93d01554bcab",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bcaa2305-e9b6-4995-b8c7-ea7b2f42130a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba529ca1-4cec-493b-8b74-0442348c2f9f",
        "cursor": {
          "ref": "3ead2eb3-2494-4776-a332-225a74fc6a12",
          "length": 157,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c170cbf3-3858-43d0-8a45-69af97392de8"
        },
        "item": {
          "id": "ba529ca1-4cec-493b-8b74-0442348c2f9f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fea59c6d-2462-4e2b-a721-e7a45e32e32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f33278-f84b-459c-a618-05e6d42c3458",
        "cursor": {
          "ref": "2d6fd14f-de47-4e0e-94d6-6733bb444f4e",
          "length": 157,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "746d9be1-7fb8-40d4-8ab8-ecdbf1d35efa"
        },
        "item": {
          "id": "e5f33278-f84b-459c-a618-05e6d42c3458",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b9246f5b-4d18-4962-9715-87dc74aeb8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fff9a7-84fd-41fe-ad79-c7872ce9b02f",
        "cursor": {
          "ref": "bab4631f-7ac1-467f-a766-c75fe1d1827a",
          "length": 157,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4455c0ff-e0b6-4ab5-b0bb-9490a8dd2035"
        },
        "item": {
          "id": "07fff9a7-84fd-41fe-ad79-c7872ce9b02f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cb76563b-6999-457b-b25b-6a6e0147177c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c3f5c3-22bc-42c0-96cb-6a347680cd78",
        "cursor": {
          "ref": "96602121-03dc-4b26-afa6-8aeb0a30703d",
          "length": 157,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "471b5624-e688-4b78-8bea-7a02e20c8171"
        },
        "item": {
          "id": "95c3f5c3-22bc-42c0-96cb-6a347680cd78",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "527d099b-7208-4589-ae75-a0177e05aae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4b58e7-15a7-43e7-a65f-3c133a80a4e2",
        "cursor": {
          "ref": "edf56e98-df56-4182-88d0-d8b43d69df34",
          "length": 157,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9bb63512-20e9-42d1-896b-677848d89869"
        },
        "item": {
          "id": "3e4b58e7-15a7-43e7-a65f-3c133a80a4e2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2547bf1e-6947-461e-a003-305bd99e049d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f47705c-116d-4ef7-b6d0-3df5225f7827",
        "cursor": {
          "ref": "875071dc-20f6-48e4-8fc5-e9531382ad5a",
          "length": 157,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3f69d401-917e-4015-bcf0-7c6a782da81a"
        },
        "item": {
          "id": "5f47705c-116d-4ef7-b6d0-3df5225f7827",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "34d2c7d2-7311-478a-a46d-421403e80bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90cc3da-3bfa-4f1f-b102-1e33fe50d1d2",
        "cursor": {
          "ref": "4fcf7cd1-23c9-4447-80dc-74e8bdb16bc3",
          "length": 157,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "65100c90-4501-4843-bc0b-e89fef28ec8d"
        },
        "item": {
          "id": "d90cc3da-3bfa-4f1f-b102-1e33fe50d1d2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "44c56529-234c-493d-b2ae-b41b742e82a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03db2027-2093-4dc2-b545-30099f9a7ad8",
        "cursor": {
          "ref": "544a1281-0bbc-4f45-a449-0ade2e286bf3",
          "length": 157,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "31224fdc-5ce9-40c9-8438-76d8dc2d34ba"
        },
        "item": {
          "id": "03db2027-2093-4dc2-b545-30099f9a7ad8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "61dd040b-5278-4f70-82e9-719215fff55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866a3f02-c10c-49b9-8acc-310155b96bc9",
        "cursor": {
          "ref": "aa2226f2-5841-4cca-9bd5-64d206bac0e5",
          "length": 157,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e7cb5575-63b2-4d4d-81f2-f3387ba81527"
        },
        "item": {
          "id": "866a3f02-c10c-49b9-8acc-310155b96bc9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4463399e-2976-4156-a1d9-a8c3b91ddf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2481b16-4f9a-44cb-b8a3-9574c8c1109c",
        "cursor": {
          "ref": "4574f1d5-c30a-4718-86af-9b692a3d9063",
          "length": 157,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a13fd6c4-e3f4-4be5-b49f-1d7c6476ac7d"
        },
        "item": {
          "id": "e2481b16-4f9a-44cb-b8a3-9574c8c1109c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c576f407-d0e0-4989-b711-b135635b8746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ee16be-1067-475e-b155-e9b73a5a1cae",
        "cursor": {
          "ref": "4e2304f6-fbe1-4d87-9526-2cac2de7dbbe",
          "length": 157,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4a6d9645-7127-459c-9f1a-70fc5c577b24"
        },
        "item": {
          "id": "86ee16be-1067-475e-b155-e9b73a5a1cae",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6e5ea165-0bfe-41fe-b140-a59e531e860a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e4ebac-567a-42c7-be93-ccb797e30cff",
        "cursor": {
          "ref": "6fe2b4ce-e35b-415e-9414-0e5a57f0fc89",
          "length": 157,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0c7c4d5c-ac86-49ed-a75d-261fc8479bfc"
        },
        "item": {
          "id": "32e4ebac-567a-42c7-be93-ccb797e30cff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d8ca5031-e427-4881-8237-47fffee479cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba9c2ad-1f2f-4cc1-b0d2-04a3e04f3096",
        "cursor": {
          "ref": "3bb995e2-7c44-4c07-9b94-a9f3558e4d8d",
          "length": 157,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2ff8936f-5239-456d-9bd2-d34660544888"
        },
        "item": {
          "id": "bba9c2ad-1f2f-4cc1-b0d2-04a3e04f3096",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6b96ca05-5af3-4ba0-b077-248a5a3f086a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2734db2-ed7a-40f5-9028-f7ded42414b5",
        "cursor": {
          "ref": "3bba445b-b9f7-4e05-9c60-3efd2eda5b40",
          "length": 157,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ed061c58-75fd-4964-8a3c-74e0021e0ac8"
        },
        "item": {
          "id": "f2734db2-ed7a-40f5-9028-f7ded42414b5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ba8046d0-e798-42cc-adb6-f8c1ac3a1bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1303,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cb5276-c91e-4844-ac90-5c94b087919d",
        "cursor": {
          "ref": "167b94d8-bc5e-43ef-8bd9-f9b5e9c2ef1b",
          "length": 157,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "612e50a9-bb0e-4ab4-8dae-1c7b73dbfb66"
        },
        "item": {
          "id": "44cb5276-c91e-4844-ac90-5c94b087919d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7d6a70a3-4bae-4e24-bee7-762bad79996c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83abbd0a-25e8-4ccc-b4b3-c4ee24feb762",
        "cursor": {
          "ref": "c5676761-c901-495c-9ba2-eda4ca3862ea",
          "length": 157,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b1fca584-ce99-46c7-90f2-04d3f49f677a"
        },
        "item": {
          "id": "83abbd0a-25e8-4ccc-b4b3-c4ee24feb762",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9f153d2a-cf0e-409f-98a1-ab2eb4de7731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 939,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a824c6-3c9d-44a1-986a-ca65bc196468",
        "cursor": {
          "ref": "fc52c5b2-283e-4dd7-89bc-49b643d9b5c6",
          "length": 157,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2481e6bf-47c4-47ff-a240-335b3a6e4110"
        },
        "item": {
          "id": "b2a824c6-3c9d-44a1-986a-ca65bc196468",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6af22b5e-f85b-4563-be41-80cd5faeb548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467e8bfe-93d4-4d30-9793-4c81f4b0a069",
        "cursor": {
          "ref": "1a719022-d834-4182-ab46-6e1ea0dd5cbc",
          "length": 157,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9d99370c-8aa7-4aeb-b37d-64b11f9232f5"
        },
        "item": {
          "id": "467e8bfe-93d4-4d30-9793-4c81f4b0a069",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "afd2c174-d63e-4ed2-aac0-830ffe26e4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55138540-c011-47c5-908d-8e12193f7667",
        "cursor": {
          "ref": "cde55bd3-60bd-450c-b4ec-315694cb66c6",
          "length": 157,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4998a490-8409-4326-8088-87906f98e180"
        },
        "item": {
          "id": "55138540-c011-47c5-908d-8e12193f7667",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "76d9695f-fb5c-411a-bc99-f7636d5b3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7fa67a-50e4-4517-af64-7464dcf6eee5",
        "cursor": {
          "ref": "9fdbacf2-619e-4d00-8f13-9feec97e8740",
          "length": 157,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a62fb661-2977-43f5-b0cb-89e5855fbb27"
        },
        "item": {
          "id": "3b7fa67a-50e4-4517-af64-7464dcf6eee5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8ad2fcca-b97c-42af-9450-9eb3859cbd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e7f1c6-c14f-4b67-825a-819717fc994f",
        "cursor": {
          "ref": "ed1d0b8f-5291-4f39-86e0-5a53465feb35",
          "length": 157,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d31814a3-1001-40eb-9c07-9ea1631a37c2"
        },
        "item": {
          "id": "55e7f1c6-c14f-4b67-825a-819717fc994f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "39c90404-e87d-4277-a40a-93bb37026116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888f66d4-98ea-4f81-a58f-098c4464b5db",
        "cursor": {
          "ref": "b88f8d29-b85e-45e9-9d0d-839022bb37c8",
          "length": 157,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c4ca0e2d-44e8-4d5c-a09e-56b06b8ae532"
        },
        "item": {
          "id": "888f66d4-98ea-4f81-a58f-098c4464b5db",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b760d6a4-1d6f-4866-b983-475878cc2706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49a9805-b3de-4bbf-95e9-29ed9a161bee",
        "cursor": {
          "ref": "2246f7cb-cade-44a0-b183-72aa7c9dad28",
          "length": 157,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c6cfc60a-a724-4a9b-a56e-0ae2e13aa598"
        },
        "item": {
          "id": "e49a9805-b3de-4bbf-95e9-29ed9a161bee",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2688a840-ad9a-4f30-912e-0971a05e32a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ba6134-24f4-4f3b-ad83-279d2c5d6721",
        "cursor": {
          "ref": "f5b06676-9c31-4ee2-bf18-6d58efe7d81e",
          "length": 157,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "329d34c3-2fbc-40cf-bced-5baaecfc12a1"
        },
        "item": {
          "id": "66ba6134-24f4-4f3b-ad83-279d2c5d6721",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e5bef3e2-0520-49a2-a346-69b540e5052b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3e45c1-f0df-4e56-9cef-ff14dd6ead6b",
        "cursor": {
          "ref": "99dbfb26-052c-473f-8d68-a0b2313cc5cc",
          "length": 157,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4e854681-348b-4322-aeea-e187f9666468"
        },
        "item": {
          "id": "eb3e45c1-f0df-4e56-9cef-ff14dd6ead6b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3e36a39a-12b8-4b27-b789-509a5a433c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60002910-a254-44ee-8413-06bc900f528e",
        "cursor": {
          "ref": "58e85b69-b1ab-4c9d-896b-70d534259423",
          "length": 157,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2128d65c-3ef0-4594-9027-1cb80d50be9e"
        },
        "item": {
          "id": "60002910-a254-44ee-8413-06bc900f528e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b5224c07-f3e1-4805-9279-033bdf511ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9718e1d9-0643-4e2c-823e-0d7feb76b9e6",
        "cursor": {
          "ref": "83734865-a791-48c8-98e8-2ef44feaa0fb",
          "length": 157,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e2105163-b1ea-45b1-aa35-0e98235451ee"
        },
        "item": {
          "id": "9718e1d9-0643-4e2c-823e-0d7feb76b9e6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "36d2362b-8d8e-416c-a73a-171d96719234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41001607-9172-467c-91f3-67225914e383",
        "cursor": {
          "ref": "11a548dd-e226-4acb-8a10-00337f5f128c",
          "length": 157,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a44918ea-aa06-4192-9460-8e14ad0b4e64"
        },
        "item": {
          "id": "41001607-9172-467c-91f3-67225914e383",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e4ec630b-d0c1-44ca-a5bc-e8fff4a29643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e32026-3af0-4c56-8605-809d5d053a54",
        "cursor": {
          "ref": "54c45125-e641-48f7-8036-118785f4240b",
          "length": 157,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5c56c718-2820-429b-ae10-8efe6c74c7cc"
        },
        "item": {
          "id": "94e32026-3af0-4c56-8605-809d5d053a54",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ede9ddc7-7189-4e9d-ba2f-8c94ce37fb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56c2f95-2af5-499b-aa6d-acfff5eb595f",
        "cursor": {
          "ref": "b8b85245-71db-458e-b1ee-b4bdd4339301",
          "length": 157,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7ae2e934-ce88-48ea-a8dd-c43bafee0432"
        },
        "item": {
          "id": "c56c2f95-2af5-499b-aa6d-acfff5eb595f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9c526a6f-8705-44c4-ad1a-914827e76103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7c7648-f570-4c15-a74e-86547ba6088b",
        "cursor": {
          "ref": "a4dab8f0-b245-4661-88b9-e065fd8167a1",
          "length": 157,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "49bb1c18-db2a-4d75-a35a-62203a2c5f2b"
        },
        "item": {
          "id": "5d7c7648-f570-4c15-a74e-86547ba6088b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3fae289a-7a5d-4d42-b7f9-38dc88d191bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7127c8-a5ba-46d6-aa6b-81eea7f5cac8",
        "cursor": {
          "ref": "818b9319-eb5e-4925-b932-209587a1b00f",
          "length": 157,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "950ddc74-96c3-40f5-9eec-f9ada19a4fdc"
        },
        "item": {
          "id": "db7127c8-a5ba-46d6-aa6b-81eea7f5cac8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "340f02cc-033e-497c-bb32-0c6fc9602fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f67b90-8e63-4651-94a0-faee0ebac1cf",
        "cursor": {
          "ref": "324121da-6e22-45a9-9807-9585b77f5dcc",
          "length": 157,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5ca9b261-67ea-403a-8118-8d0cbe41ceeb"
        },
        "item": {
          "id": "74f67b90-8e63-4651-94a0-faee0ebac1cf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "121cd3df-e440-4287-af2d-b03b6658c766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaa0a17-64b2-4039-972e-2a2eb682044f",
        "cursor": {
          "ref": "d4798a40-e887-47d9-a0a5-4657c3e2b912",
          "length": 157,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4774ad49-5181-4a6e-b45f-820d08054c1a"
        },
        "item": {
          "id": "9eaa0a17-64b2-4039-972e-2a2eb682044f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ad1135bf-4174-447f-b9da-8f74ae429c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06323406-0381-4a7d-8228-377b6c1eb21b",
        "cursor": {
          "ref": "4acf2b98-37a7-478d-a482-f95a0d225f23",
          "length": 157,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fd3da3f5-5a3e-415a-94eb-cdcdff055619"
        },
        "item": {
          "id": "06323406-0381-4a7d-8228-377b6c1eb21b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3ef784e7-c5cc-4118-9616-2fbc2895d63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82064ae-8f6e-4dd5-89d7-1450d87189ae",
        "cursor": {
          "ref": "ab488252-915e-4311-b479-b3b994463dcb",
          "length": 157,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f3911734-3bef-411f-92d6-ecb00da8f8cf"
        },
        "item": {
          "id": "b82064ae-8f6e-4dd5-89d7-1450d87189ae",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ddfe6bf9-3589-4a27-8f6b-6729d23c31e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc66479-6e9e-413c-a6f8-c849576ddef4",
        "cursor": {
          "ref": "a6a5f453-d707-4a31-a4a3-2885b0199847",
          "length": 157,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0adb83a6-f182-46d1-8f8a-441365f97d2e"
        },
        "item": {
          "id": "ecc66479-6e9e-413c-a6f8-c849576ddef4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "75410ebe-2c29-449d-9edf-6c005ebdd8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e8c676-b423-4f0e-b7b0-8cb0480ccf79",
        "cursor": {
          "ref": "bbd7d5ad-e4da-4989-9440-fbfcdf049f7e",
          "length": 157,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2b135930-5d26-448e-9efb-3c76e0aa1834"
        },
        "item": {
          "id": "f4e8c676-b423-4f0e-b7b0-8cb0480ccf79",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1b8a8cf3-e9b7-4aba-98fd-e3ccf6311961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5521c35d-fb28-4c01-8b52-fbe83170251d",
        "cursor": {
          "ref": "3fa7b568-ba66-49f6-b16c-cddbddd215e2",
          "length": 157,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "48bf9d3c-0745-4c04-9bb1-866b54a2c948"
        },
        "item": {
          "id": "5521c35d-fb28-4c01-8b52-fbe83170251d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2ad4b82c-b966-4343-9219-09f857fc2806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bc22b0-d8b4-48af-8c82-28e9113eb363",
        "cursor": {
          "ref": "7f927b63-260a-450b-8061-c48ea362b65a",
          "length": 157,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4fc5d98c-4bba-4119-b7a2-d52f7165262e"
        },
        "item": {
          "id": "b4bc22b0-d8b4-48af-8c82-28e9113eb363",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "159642fd-3893-42a3-9305-4da8ab30729c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301657ca-d77b-453b-8be9-9b7efa85b689",
        "cursor": {
          "ref": "89ed01b2-aad3-4e35-ab44-2cc2f0d62cdc",
          "length": 157,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "894682fe-8478-4a8b-9311-979fdda17bb5"
        },
        "item": {
          "id": "301657ca-d77b-453b-8be9-9b7efa85b689",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "adf2717a-cf15-4562-bc23-94c0298cf620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2606b34-02bb-4ef5-b335-3771b75cc5ef",
        "cursor": {
          "ref": "d51b183b-6233-4770-a554-7ceb92d0caf1",
          "length": 157,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e741258d-8880-4807-8654-398977578f84"
        },
        "item": {
          "id": "c2606b34-02bb-4ef5-b335-3771b75cc5ef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ec49698b-cb5e-4df0-a9c5-f608d70023ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9692e0ee-a48f-44c2-a5df-d69f52161613",
        "cursor": {
          "ref": "672038b1-8551-400c-9070-6afe15f2d786",
          "length": 157,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9616a0a8-2e1a-464a-995e-3e7a8ba09eea"
        },
        "item": {
          "id": "9692e0ee-a48f-44c2-a5df-d69f52161613",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5367cb6a-ec4c-4d8d-8f16-d0aa5cde937b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cc95fa-4cef-47a5-a749-a817ca003f1f",
        "cursor": {
          "ref": "221fb56e-d1b3-46c0-a410-d41d46e0465b",
          "length": 157,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "66cd1e2c-1b7f-40e8-84a3-2fd25c0a4e65"
        },
        "item": {
          "id": "c2cc95fa-4cef-47a5-a749-a817ca003f1f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d16bfa5-98be-4f67-a6c4-039f7944c7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a561437-1e25-44bd-95fe-8b18a8579422",
        "cursor": {
          "ref": "6e403562-594f-4c93-8406-6b2bce9f7e7b",
          "length": 157,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "62a73005-4732-41e2-9b42-302fa8c16a4d"
        },
        "item": {
          "id": "2a561437-1e25-44bd-95fe-8b18a8579422",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ce0c0809-6205-452e-b464-a3ceebd7403a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55b6a49-a090-4043-8887-cf2b6840263f",
        "cursor": {
          "ref": "b19fcaf4-8861-4edf-8a81-336a888e565c",
          "length": 157,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "60ad2122-1a0c-4c77-88cf-5b19d71223cf"
        },
        "item": {
          "id": "e55b6a49-a090-4043-8887-cf2b6840263f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "50dd72e3-eed4-4bee-99cb-7768192efe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abea821-1bd2-4ae1-bd71-3a7fadb19e81",
        "cursor": {
          "ref": "e60dda09-2b7a-4944-aa4e-679a5d7644e7",
          "length": 157,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1c371de7-f88f-4cc5-b091-7ce68511d5b8"
        },
        "item": {
          "id": "2abea821-1bd2-4ae1-bd71-3a7fadb19e81",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "03cd20f5-f9b7-418f-a2e7-318e57a73223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101bab00-3e5f-4016-87f7-aed5ef8a1608",
        "cursor": {
          "ref": "f30679e1-64e0-46cd-9afd-cb3e51f9be0f",
          "length": 157,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ad08d7c1-d103-43db-b134-2698f838c554"
        },
        "item": {
          "id": "101bab00-3e5f-4016-87f7-aed5ef8a1608",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0e5877f7-7fa0-4676-bcfd-d3def488eb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12c1837-ed2e-4bd9-9d51-dab971468c2c",
        "cursor": {
          "ref": "ef435a99-7a93-462e-953d-9a6bed4cec6a",
          "length": 157,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bee797aa-743a-4467-a60b-ed166d261d31"
        },
        "item": {
          "id": "c12c1837-ed2e-4bd9-9d51-dab971468c2c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "417bdec6-8ac2-4e63-aa7e-813f69f46e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4bded5-0e9d-4ccf-9aa5-cce495f00d68",
        "cursor": {
          "ref": "763495eb-af95-4235-925b-7a445f143af5",
          "length": 157,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4b1b7e58-9893-41b6-b049-f72309b062a0"
        },
        "item": {
          "id": "ff4bded5-0e9d-4ccf-9aa5-cce495f00d68",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0dccacd1-4f3d-4436-9275-37d6dbde179d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014bb7b7-ab53-4ba6-afdf-2ec8953f02f8",
        "cursor": {
          "ref": "81b74148-8404-4405-9d3e-dbb9762a95e1",
          "length": 157,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "72b4e7c7-63e9-4785-96a7-0651cd2eaaa5"
        },
        "item": {
          "id": "014bb7b7-ab53-4ba6-afdf-2ec8953f02f8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2f8741fd-68c5-4f9d-a86f-bfe20a48efdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f5db53-38c3-415a-b725-65f0ea02b93a",
        "cursor": {
          "ref": "f6a6e554-202f-4322-9315-29d6d6d57c93",
          "length": 157,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "98a549fd-1e6b-4d8f-83d7-3e8511d33775"
        },
        "item": {
          "id": "31f5db53-38c3-415a-b725-65f0ea02b93a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a3742b6c-424c-41e9-a986-953517811357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d1024c-886d-4162-b6c4-8001d701a500",
        "cursor": {
          "ref": "67fd5bc0-fb7e-48ce-85b1-4b55d516c572",
          "length": 157,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ebe5fbfa-41fc-481a-bc45-858e66755c8d"
        },
        "item": {
          "id": "c6d1024c-886d-4162-b6c4-8001d701a500",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "85e87574-d907-4a11-aed3-c4d41a5cfeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ed11a6-b5d6-4f01-a3c8-4393eaa70ee5",
        "cursor": {
          "ref": "2a85ba77-bf1e-4790-87d2-29af31148a21",
          "length": 157,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7b9e331b-e66b-4336-a7f9-96317ceb5ec6"
        },
        "item": {
          "id": "12ed11a6-b5d6-4f01-a3c8-4393eaa70ee5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cf96cebf-2eff-4891-b1c9-8e79064b7a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0a2fab-5130-4510-b9ec-4dbfbc5c54db",
        "cursor": {
          "ref": "918fc1ba-885f-45a0-bbd4-406823975f32",
          "length": 157,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "083eba89-19fb-4d48-87c1-ef6c7d7fbbd3"
        },
        "item": {
          "id": "dd0a2fab-5130-4510-b9ec-4dbfbc5c54db",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "83efa365-e2b2-41c7-8b6b-bd776e1ab1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4483b4c-8742-4b77-81da-24d22f8e848c",
        "cursor": {
          "ref": "59fa6eea-e049-4801-b7f4-7a1639cb6d13",
          "length": 157,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "28c23763-35c7-42c2-a72a-8225e8a2ce4e"
        },
        "item": {
          "id": "a4483b4c-8742-4b77-81da-24d22f8e848c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "67e1720f-86b9-4bdb-a3d2-59e28f908c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03cc968-05d4-4b0a-aee3-7480b3c3d6fc",
        "cursor": {
          "ref": "cfd7d51c-b9f4-40cc-8b93-3546cf06fb70",
          "length": 157,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "17d76bfb-0f37-414d-b1fa-c644a716d558"
        },
        "item": {
          "id": "c03cc968-05d4-4b0a-aee3-7480b3c3d6fc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "37d259c5-81a9-4fad-a06e-8c48847297dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93e0d8e-c1ef-4593-84e6-9f5de092a525",
        "cursor": {
          "ref": "fecfd262-6e78-4ebc-8934-e485ace79857",
          "length": 157,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "19530220-1ca0-42f4-85c7-f1dedaf77282"
        },
        "item": {
          "id": "a93e0d8e-c1ef-4593-84e6-9f5de092a525",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4d918883-217c-411f-97b1-70ea9c7927d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4217962b-4756-48e0-ac1c-efd91ac01092",
        "cursor": {
          "ref": "4f38c979-2e30-4c32-a3f7-fbb0f254e743",
          "length": 157,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2783af8c-06d7-4cb4-85f4-9704cb40f242"
        },
        "item": {
          "id": "4217962b-4756-48e0-ac1c-efd91ac01092",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "73c65086-a5b7-49e1-b3a1-84dc1b821335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861ca975-add4-4692-857f-007a5d6f7b08",
        "cursor": {
          "ref": "f6fa6198-8e1f-4551-a5d5-93c44a5b5307",
          "length": 157,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4ccb579b-59d8-4777-b105-f604a14b4708"
        },
        "item": {
          "id": "861ca975-add4-4692-857f-007a5d6f7b08",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c816121f-3003-4095-8c1d-e085c3443125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c718c48e-75a3-4a3b-ba59-a86dd0be7034",
        "cursor": {
          "ref": "17d877ed-39e9-4951-9f7e-b8e1587cc5d2",
          "length": 157,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8fc683e0-0aef-49fc-a4d6-80d6f52b680b"
        },
        "item": {
          "id": "c718c48e-75a3-4a3b-ba59-a86dd0be7034",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "170ab9c1-7214-47a8-8fe4-ccfd3d6002c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb1c25c-fc1e-4af7-a2f9-b94a3d9ef43f",
        "cursor": {
          "ref": "0ddb8345-31d0-4609-a1f4-9e0179dda6d8",
          "length": 157,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a515ee20-4232-45a2-a660-f63ec14adcd8"
        },
        "item": {
          "id": "bfb1c25c-fc1e-4af7-a2f9-b94a3d9ef43f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d627dbdc-b0d0-4e2d-9fb6-4ed21cec8563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1348432-660d-4f31-a10e-f0bcf8ac8f45",
        "cursor": {
          "ref": "b61e6018-b3b3-42b1-ac8a-badc093974e2",
          "length": 157,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ece549f1-1120-4241-a262-2a2d97da0359"
        },
        "item": {
          "id": "e1348432-660d-4f31-a10e-f0bcf8ac8f45",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c486de4c-b57f-4d09-ae24-c17bddf64bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034804f1-9462-4ce3-a191-4269b8c8e46f",
        "cursor": {
          "ref": "8533d2cd-a810-4856-abed-bd18a9d038a9",
          "length": 157,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "98a4d219-4207-4643-a2a5-b3c07d399dc3"
        },
        "item": {
          "id": "034804f1-9462-4ce3-a191-4269b8c8e46f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9c0e917c-1367-4a54-a1fd-72032906da14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b523c4-8ad8-49f1-9749-7a0b0a8edea6",
        "cursor": {
          "ref": "2363ffc0-147c-47c4-8dc8-07c6c822a868",
          "length": 157,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d8915cd2-c807-4c8e-922e-1ab8ca29dd6a"
        },
        "item": {
          "id": "96b523c4-8ad8-49f1-9749-7a0b0a8edea6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c43d3dca-bc80-4772-90c4-a2f5a86cafe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df640b4f-ac75-4c5a-b26b-aac0d9cebd36",
        "cursor": {
          "ref": "8db3ce81-2713-49b7-bc1f-2cd5bc38d228",
          "length": 157,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "80716b4a-d3d0-440e-8cc8-16da24bb3a2d"
        },
        "item": {
          "id": "df640b4f-ac75-4c5a-b26b-aac0d9cebd36",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c4aa3244-51ec-4dc9-9e63-e838689cfee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45601a98-2952-4df7-b625-b25ad8439201",
        "cursor": {
          "ref": "ba633781-2030-47f6-a7b7-a79557258c28",
          "length": 157,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c99bb1d8-2a9c-437d-b67d-7426cbc31251"
        },
        "item": {
          "id": "45601a98-2952-4df7-b625-b25ad8439201",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "761b7e0d-fe2b-4030-80c6-9bead7fbdf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada7b059-a4ab-4526-a946-54e0188ad245",
        "cursor": {
          "ref": "3bbe880b-abd8-426a-9e75-c92135d1dcba",
          "length": 157,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8826448c-3a9b-4f9e-9b0d-6cd6c32de07f"
        },
        "item": {
          "id": "ada7b059-a4ab-4526-a946-54e0188ad245",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eb2f5c95-c3b7-4e02-bf85-b49d5c3d5545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8abf64-92d4-439f-a20d-957283a49a29",
        "cursor": {
          "ref": "f0b5a663-0bef-4cbf-a488-be15c800d8ba",
          "length": 157,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "37e825a0-97a9-47cc-872b-0fa9669e9ee5"
        },
        "item": {
          "id": "db8abf64-92d4-439f-a20d-957283a49a29",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c635716c-f7d9-4a0a-90ab-d754ea0c8876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a017c473-cea0-4d47-a7ce-0d1b4dc0a3ed",
        "cursor": {
          "ref": "8b96251c-cce9-41ad-b40e-97258768b83c",
          "length": 157,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "575d532e-8879-4965-99d5-edd9410cd58e"
        },
        "item": {
          "id": "a017c473-cea0-4d47-a7ce-0d1b4dc0a3ed",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ea0bd1e4-81b0-4706-a0de-1357c5b6f102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62953ab9-4dc0-4505-a6ff-240e6c602a20",
        "cursor": {
          "ref": "25eba7dc-1011-4a76-9dee-80aed5071cee",
          "length": 157,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "08b6fa20-4dc4-4f52-8bc2-20ab654c86ac"
        },
        "item": {
          "id": "62953ab9-4dc0-4505-a6ff-240e6c602a20",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bc3d4045-faf1-4df1-8098-3d8d33e8fe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72216f7d-632e-40f9-b6bc-2a1b2e1fa196",
        "cursor": {
          "ref": "cf30fc09-3812-4032-a580-064d6f5e5351",
          "length": 157,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8e3a3de7-2875-472e-859e-979deef1ddb6"
        },
        "item": {
          "id": "72216f7d-632e-40f9-b6bc-2a1b2e1fa196",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "380b0c58-03c7-49ac-80b0-9042a5d7bdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113e00c4-15d1-402b-a76d-b2d5daa4e891",
        "cursor": {
          "ref": "166c4a43-da8c-4d5d-b795-80419af226e0",
          "length": 157,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b40ac3d5-2a54-4284-bb02-12acb648fd10"
        },
        "item": {
          "id": "113e00c4-15d1-402b-a76d-b2d5daa4e891",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "008f854b-292e-4b7c-8edd-1c7ba4ab2401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22c35cf-2c47-4719-90c2-acb356ec43cd",
        "cursor": {
          "ref": "2954c13c-43d3-47ba-8e71-09f607c261b0",
          "length": 157,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9d9d8b2b-58d4-4b1a-a771-d8faa4cdc0d2"
        },
        "item": {
          "id": "d22c35cf-2c47-4719-90c2-acb356ec43cd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5e08184a-e0d3-4c85-b5a0-f7fc623232c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401e3c73-6431-4761-9d53-f2fc63fd0155",
        "cursor": {
          "ref": "3ee2e596-1979-4f4b-a92d-afff19473d6c",
          "length": 157,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "939fab4b-f14a-464b-a5f0-9eb1cbebce63"
        },
        "item": {
          "id": "401e3c73-6431-4761-9d53-f2fc63fd0155",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "67480ec4-1b3d-45a6-a82b-744b92e9c815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463c4c42-3d77-41d4-9d53-060f60bdcf60",
        "cursor": {
          "ref": "a3b55539-3052-4e7c-83d7-a60a35f43c5d",
          "length": 157,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "db227bf1-e78b-46c2-818d-f51ca5b4293b"
        },
        "item": {
          "id": "463c4c42-3d77-41d4-9d53-060f60bdcf60",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "37505259-1c38-45c7-85af-008922d25f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd276252-8944-4780-b628-83318ef880df",
        "cursor": {
          "ref": "1d8d8467-bc55-4cf3-aaff-b3b75b7f6731",
          "length": 157,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0254cd2c-8e03-4a03-9854-4b81b7a4b44a"
        },
        "item": {
          "id": "bd276252-8944-4780-b628-83318ef880df",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0ed2519d-3d74-4462-a014-2406026c557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58458d8-528e-4e0f-8db8-f54d9330dcc0",
        "cursor": {
          "ref": "df5e136e-797e-4540-bf4b-9244524697f3",
          "length": 157,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bfcd48b6-0ecf-4221-8bb1-8bf97b5861ba"
        },
        "item": {
          "id": "d58458d8-528e-4e0f-8db8-f54d9330dcc0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f84346c1-e40b-472c-8047-bd55755fd8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5964cbb-d8fc-447b-a4a1-50d50502ab37",
        "cursor": {
          "ref": "ca62b139-a1df-49bd-9b4e-d6b22303958d",
          "length": 157,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "537bf8a3-1d21-4a2a-be2a-3d49b5b2d883"
        },
        "item": {
          "id": "d5964cbb-d8fc-447b-a4a1-50d50502ab37",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "774b9019-3353-424f-bc65-026d560da320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658533c7-2a6f-44f0-af48-efca94c79840",
        "cursor": {
          "ref": "5e739c16-0fbc-4aaf-93af-e4c638aefcef",
          "length": 157,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "277582cd-abc3-43c3-aa5b-b0e1699f2005"
        },
        "item": {
          "id": "658533c7-2a6f-44f0-af48-efca94c79840",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b301914e-0b93-4661-8080-65babea788ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14a91f1-e3c8-4dbf-9eac-ae1809a081d1",
        "cursor": {
          "ref": "9f5096a2-cf2f-4202-b6c5-48322e515152",
          "length": 157,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7f6e4c1b-810a-4fe5-94d5-19dd3b51e21e"
        },
        "item": {
          "id": "b14a91f1-e3c8-4dbf-9eac-ae1809a081d1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7cb52d06-f421-4314-a720-602f91675de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906a238d-2590-458a-a479-ca6650589925",
        "cursor": {
          "ref": "cdc00845-31b9-4059-8b36-cafaf0780690",
          "length": 157,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a50df9bc-faae-474b-9724-87f0702b1984"
        },
        "item": {
          "id": "906a238d-2590-458a-a479-ca6650589925",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7e05c227-f097-4a05-8599-3ffb08d71b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76516b9f-0c74-4fc0-99fd-8039de7e072c",
        "cursor": {
          "ref": "a2096586-bc31-49e9-91c2-de1dca0dc1fa",
          "length": 157,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6c440794-3705-4765-89c8-ae24c015d02c"
        },
        "item": {
          "id": "76516b9f-0c74-4fc0-99fd-8039de7e072c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "464cce3b-7caa-4528-834f-e46352eeb20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5dbdf2-3ba0-451f-a61b-26646a326038",
        "cursor": {
          "ref": "92bf7b96-e91e-466b-8b99-2b94ccf152fc",
          "length": 157,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f66a3906-4713-49db-9cbb-e79df4d2635e"
        },
        "item": {
          "id": "bd5dbdf2-3ba0-451f-a61b-26646a326038",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f1ae21cd-e550-4b5c-aa3c-b5c40aed7eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92df5f48-acf8-4d31-bcfc-3b09957876b1",
        "cursor": {
          "ref": "1ff9db6f-010e-42cd-b8a7-84da2d49f6ed",
          "length": 157,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c1e623f9-0390-436a-8902-717856fcd327"
        },
        "item": {
          "id": "92df5f48-acf8-4d31-bcfc-3b09957876b1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "509ea3cc-7318-4a3c-bfd7-9040364a84a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42759a2f-8632-4e1b-acd2-6c7664d2d42c",
        "cursor": {
          "ref": "03976705-028c-4055-8c51-9875ff70f675",
          "length": 157,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "88bdd39a-91f2-472c-a099-c4f6826a6fb6"
        },
        "item": {
          "id": "42759a2f-8632-4e1b-acd2-6c7664d2d42c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70c97626-033c-46f2-968e-eefa85e81e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22997dee-35b6-45c7-9fbd-f1622bd9581c",
        "cursor": {
          "ref": "5a71377d-ef2c-4526-babe-119c36c37bf4",
          "length": 157,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cb1fadb4-32d2-405a-ab94-f80001611ff5"
        },
        "item": {
          "id": "22997dee-35b6-45c7-9fbd-f1622bd9581c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "049687a8-132e-4157-bf9f-6659a855c2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7036f0dc-8f91-4988-a97d-448fd53ff293",
        "cursor": {
          "ref": "2d461073-154a-4a58-a155-6b4e78dfe0d0",
          "length": 157,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fe0feac1-40ba-4a2b-a61f-8cfb56b3d7fd"
        },
        "item": {
          "id": "7036f0dc-8f91-4988-a97d-448fd53ff293",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "02168603-45b0-4003-a68f-0ff65053c697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144ff0aa-30ba-4c3e-9963-8e330f7ae6c9",
        "cursor": {
          "ref": "5cb7891f-12d8-4306-a564-267b5ce4a134",
          "length": 157,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4db064dc-9452-4a75-b596-d1af4711777c"
        },
        "item": {
          "id": "144ff0aa-30ba-4c3e-9963-8e330f7ae6c9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "27748f01-fea9-4775-a3d7-366e9762605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b71ff5f-20d8-4cce-837e-b727536d9192",
        "cursor": {
          "ref": "afb60057-ea95-428f-b027-a40549a98673",
          "length": 157,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7dad1e79-09e2-450c-bc06-5396cc13d2f4"
        },
        "item": {
          "id": "1b71ff5f-20d8-4cce-837e-b727536d9192",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3ea7915b-a0b8-4f16-a4b1-6966e4dee4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4f096a-ba15-4904-9d21-38346b55e6c5",
        "cursor": {
          "ref": "77a9131e-978c-4c8d-b368-b356a3bed309",
          "length": 157,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "27274d2b-b13f-433a-b15c-9e95c67f5604"
        },
        "item": {
          "id": "ae4f096a-ba15-4904-9d21-38346b55e6c5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bd19019b-b5b2-484d-8b1d-8ec9a86d0875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3b8e3f-e8b6-4d73-8621-c8b37fd19a01",
        "cursor": {
          "ref": "f4224bee-9d16-41c5-801e-264f908246af",
          "length": 157,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "52abcdcf-6dee-49ff-acf3-3a231fe3b7b9"
        },
        "item": {
          "id": "0c3b8e3f-e8b6-4d73-8621-c8b37fd19a01",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e8488d45-bf32-465c-b2c9-ad38efa43142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50380e10-afc2-452f-99d4-206ec1c8c28e",
        "cursor": {
          "ref": "cc821b74-90a8-40d2-8e96-00238499d0da",
          "length": 157,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "afde2bf6-f190-45b1-a198-dd0da3ef254b"
        },
        "item": {
          "id": "50380e10-afc2-452f-99d4-206ec1c8c28e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7d1b7b0e-8f65-4e1c-896f-3da5b72d0b9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 16,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08f2f76-431a-4518-9503-f3ce1085f79c",
        "cursor": {
          "ref": "5a30a7da-baff-48d8-8075-92e260bcdee8",
          "length": 157,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "83151d48-7cb2-4f50-9918-63c188326148"
        },
        "item": {
          "id": "c08f2f76-431a-4518-9503-f3ce1085f79c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "3c57c2ec-c25f-48a3-847b-83cebc8ef003",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 12,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f71d68-45ae-4ff6-9e26-74539de2339c",
        "cursor": {
          "ref": "56c2c135-e5bd-4f27-9154-40d1c5125cf5",
          "length": 157,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "97aa59f6-0f3e-41c5-86e2-0071b4b12c38"
        },
        "item": {
          "id": "14f71d68-45ae-4ff6-9e26-74539de2339c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "952320c1-3932-4c62-b506-909940edab43",
          "status": "OK",
          "code": 200,
          "responseTime": 747,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c5967d-6ade-48f9-8471-e5e68a7ff95c",
        "cursor": {
          "ref": "eb70c55f-686f-4589-9f64-85dc8717b0d4",
          "length": 157,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "61eb6f44-4a2d-4a0f-bc92-c4d60a5cd9b9"
        },
        "item": {
          "id": "f3c5967d-6ade-48f9-8471-e5e68a7ff95c",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "e7a4985a-991b-4e3a-9f83-7531a1188ffc",
          "status": "OK",
          "code": 200,
          "responseTime": 533,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205897ad-4485-4b36-bffc-c1a3baac3092",
        "cursor": {
          "ref": "adc720c7-795a-4b50-8d0a-42ff762c6a90",
          "length": 157,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ca15a2f3-38dd-42d6-b979-9f86a8a95dfc"
        },
        "item": {
          "id": "205897ad-4485-4b36-bffc-c1a3baac3092",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9dfb9dc1-3936-4f38-9af3-06064fec4452",
          "status": "OK",
          "code": 200,
          "responseTime": 1167,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5829575-e9d7-4435-b4b4-75d9ba8bbcc4",
        "cursor": {
          "ref": "47ace43b-539d-4fe6-82f5-2e94306ef509",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c8762f6d-698d-404a-a78f-c15cc5bf6539"
        },
        "item": {
          "id": "f5829575-e9d7-4435-b4b4-75d9ba8bbcc4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "18f4e5df-48e5-44cf-b1c9-7406ebd35490",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5829575-e9d7-4435-b4b4-75d9ba8bbcc4",
        "cursor": {
          "ref": "47ace43b-539d-4fe6-82f5-2e94306ef509",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c8762f6d-698d-404a-a78f-c15cc5bf6539"
        },
        "item": {
          "id": "f5829575-e9d7-4435-b4b4-75d9ba8bbcc4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "18f4e5df-48e5-44cf-b1c9-7406ebd35490",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5829575-e9d7-4435-b4b4-75d9ba8bbcc4",
        "cursor": {
          "ref": "47ace43b-539d-4fe6-82f5-2e94306ef509",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c8762f6d-698d-404a-a78f-c15cc5bf6539"
        },
        "item": {
          "id": "f5829575-e9d7-4435-b4b4-75d9ba8bbcc4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "18f4e5df-48e5-44cf-b1c9-7406ebd35490",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd241fd3-b450-4096-9dbc-2d6a4e635ab3",
        "cursor": {
          "ref": "17bab175-bde6-4be8-b128-8c46792cfee4",
          "length": 157,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4c01e839-0ac8-4e2b-acd6-5cd8b6b27fc4"
        },
        "item": {
          "id": "fd241fd3-b450-4096-9dbc-2d6a4e635ab3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "94e36ef1-eaf3-421d-a6d8-fdaf21827fd9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a524af-6464-44af-8e21-629960193181",
        "cursor": {
          "ref": "89c9bd49-de84-4906-ad8e-754c77a5e95a",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4beb5050-ddcb-4483-8ffc-750408491e67"
        },
        "item": {
          "id": "27a524af-6464-44af-8e21-629960193181",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "74715413-ec02-461c-bb87-e3db2df99ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "27a524af-6464-44af-8e21-629960193181",
        "cursor": {
          "ref": "89c9bd49-de84-4906-ad8e-754c77a5e95a",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4beb5050-ddcb-4483-8ffc-750408491e67"
        },
        "item": {
          "id": "27a524af-6464-44af-8e21-629960193181",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "74715413-ec02-461c-bb87-e3db2df99ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "d64a8b59-8154-45ff-b798-f83336cda478",
        "cursor": {
          "ref": "1df6223f-0180-4bfd-ae19-cd3a59749cf6",
          "length": 157,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4a00e47d-865e-46b0-a6ff-69373f2d20d3"
        },
        "item": {
          "id": "d64a8b59-8154-45ff-b798-f83336cda478",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "10753ef6-5a57-453a-b65f-13b3eddd717b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "b2c23b98-b898-4be5-9852-7349db154036",
        "cursor": {
          "ref": "59ebc246-a93f-4146-bc71-983fba21ba81",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "96026b65-bfea-4ddd-88dd-d090362a59b6"
        },
        "item": {
          "id": "b2c23b98-b898-4be5-9852-7349db154036",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "363031bc-6291-4788-b2e1-4f707a2c60ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c23b98-b898-4be5-9852-7349db154036",
        "cursor": {
          "ref": "59ebc246-a93f-4146-bc71-983fba21ba81",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "96026b65-bfea-4ddd-88dd-d090362a59b6"
        },
        "item": {
          "id": "b2c23b98-b898-4be5-9852-7349db154036",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "363031bc-6291-4788-b2e1-4f707a2c60ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2406d20b-d7d6-41ab-94af-b18a22aaef10",
        "cursor": {
          "ref": "f90a9bd6-aa6b-4eb9-9429-00dd85054070",
          "length": 157,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "82296029-9fc4-45c9-9ffe-7b3d350d0012"
        },
        "item": {
          "id": "2406d20b-d7d6-41ab-94af-b18a22aaef10",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3707636c-40d6-41d8-8c04-2fa3003376b6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}