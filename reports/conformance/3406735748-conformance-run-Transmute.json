{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cdf56b69-f016-40b9-8f28-feb50c9a7557",
        "name": "Clear Cache",
        "item": [
          {
            "id": "606dae39-3d7c-4ac0-8ce6-aeab93608b87",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "183321ef-008f-4ef1-ad2a-728cbc971e7e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "044ad4d4-f2dd-46d7-88f0-189361329e01"
                }
              }
            ]
          },
          {
            "id": "a5ac2c7f-3952-4bb9-9933-22df9600ed26",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75256eda-9a8a-4aeb-bf76-7c1e9a7390c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "30b65da4-ece4-4d57-b065-d2b2728ad96e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e299f817-8a22-4530-bd93-68cdb2039ed8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6289317a-b94c-4c68-a247-3bb777f3ab6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fef7a45-0f43-4a93-bdc7-5c45d5c4f12d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b47eb09-4e32-402f-846a-425a73891e17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d845ec8d-3887-4824-8dbc-1af53f5bb301"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1537af7f-27c4-4de9-82ba-c5d0f8ad7c47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4c46bb2-1ca9-490b-ad1c-fd887e74b9b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a713df50-970b-4cf9-b1d0-e0a8047e4f97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83121fd6-f630-4c31-ae55-0dd1852a45af"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18414582-d74c-406c-98b3-b9f58f5bca66",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "08133ece-6b85-4e82-a41b-073dd2790fcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c560a56-70da-40be-8462-ae4abd540f4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da218dad-d9f5-4062-8a2e-21f30af2b7d1"
            }
          }
        ]
      },
      {
        "id": "84660a67-d0b5-47b1-923b-f4614529d91f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "90d3b5d0-5eba-4fa2-93a2-39de864f7dab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "651eae5e-e023-47cc-ae54-597930c9ee65",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6aa780c-b176-4b83-9a41-d98e8f2be5de",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3028efb6-9c95-4e5f-8502-92fcec6a76cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4bc9312-1351-4e4c-b429-8bb755672af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4444ca-460b-4b0c-bd87-8e4813cb42e8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27075d4e-13d4-4c59-b426-9eed7f7c4025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44ede929-2745-4016-a7b1-3a1c2a9b6c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d980e53-f854-4ef0-bd61-a949c646b2b7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21104a38-16c9-4781-8ca4-093bba3f07ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46f7c096-0c29-42bc-9a4a-c2927ecbf746"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c977cb34-6689-4cf4-9152-56d16e82b82d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "886ffb8a-888a-4ca2-9ab6-474926a620f0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ab0726-3078-4912-b89e-5e3edce68dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5692509b-d949-4ff2-9998-7a3d3774bc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ce297a-b882-4774-9c23-c3ba84e88293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d47789d-3edf-4a28-bcb5-247f61da4426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ed1993-0cbd-480c-8715-541d41122d00",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d0129a-b488-42fd-8118-555d9dd16b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d842384b-f938-437c-a041-8051e04a81ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2b3e1a-f3cb-40e7-adae-b3de20b77477",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "0650c07d-5577-4d30-bcd2-1af987fc20a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a251d5df-6470-4af7-a555-dd95e9f668dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a654f36c-b3a1-430d-846a-7a967216e3f9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81687731-968d-4a4f-83af-b41ae5b318bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0353c149-ad0e-4c53-9d32-1bd65eb309c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70920442-2106-4fdc-8870-0b315d7072f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "cd4f3998-90ca-4b95-9e0b-258d6c981d4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41ca8f0a-b633-4851-8489-e545535f3231",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fb1e8ea-b9ab-4d1b-9d18-2f11a78a2d6c"
            }
          }
        ]
      },
      {
        "id": "924f9cdd-eae0-42cf-a64f-aac3a68e8e64",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9217a138-6afc-4849-bee4-5417391bbbe0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2927f638-bf4f-4825-8465-53f8cabb27c9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c8de39e1-2c1f-42c3-9a45-56c63b7353c1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2f1cab-5e05-4018-bf6e-5aa452164589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07facb9-719e-4795-84a0-9b75ae8574c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fb8887-4df0-4262-b02d-d249efd4ef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be64ed9e-197b-4040-b42f-61869ca8c109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0a8ab7-6480-4ce0-8f8f-cd324caff23b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523b2f23-6f4b-49a9-b01b-dda2b817bae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f4297c-5671-48f5-b590-854be61c954e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1507a83-b716-4952-a114-3830a2ff8f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e62cd3a-7ddc-472b-aaa8-b08abf3d2bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20afc33-8290-42ca-974a-dfa020248446",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7693c5e0-0e4f-4f49-80d5-00381fb24126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c866d8ed-3c45-4a41-943d-da818eb617db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6848300c-2381-47c6-9d1f-eda337661653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3b4e6b6-f6fe-484b-a418-3fbd2304c428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd345dd6-af0d-4797-abf8-848008ed276a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af905d40-1d91-45a8-a81e-edecc224e8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13981d7a-6d88-417e-9d20-c43768d6a201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2950c3e8-c85b-4f15-99ec-1c1d06c7a9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba67c052-d188-4b0f-823b-8ae4a764eb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222ae61a-a047-4680-adad-e46dffac9200",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8138faf5-d67b-42e8-a45b-2213d833d3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b8fbc4-9d56-42c6-90b0-86d2a8e762f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cf549d-fdb5-4f61-b15d-f1756ccd175e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d5b845-9e99-4024-99bd-7da9f35c327e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9fb98f-7522-48b0-a642-a157b57df31f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb76ead6-6857-4ec4-82c7-253acbe23126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31183179-4d24-4ff5-84c7-80da48dd054d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8850fb81-e4a7-46b0-b265-27120fe136b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbf89893-0894-421f-a021-ec6e6d3b44c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2effa197-bcdd-41c5-ad12-873b88e45458",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdea01f-467f-4ec1-8f08-b63f6465a494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f616011-8ab2-4afd-baad-4df5fd314039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bd465b-8c0c-4648-aee1-2765547cfc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a1a4c6d-b0fd-4b08-8e73-327107e89f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2e1c1e-abb9-4a59-b27a-99900aea656f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4b733d-584c-4512-bc0b-a13c32e2423e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04627a5e-3eec-437a-8cb8-cabfc25cec62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24356eae-1217-404c-ac15-077722cc8e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65d4fa5b-b9f9-4847-ac62-4a9d1f2f3c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8092a9db-19e1-4e8a-ba04-23aaa5ec1759",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f3ef68-dbc0-44a6-8dbe-63f430035005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bfaf96-17bd-437a-909c-824501fcf948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0adba1-1d0c-493f-8514-e6953504a319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cc7b560-ae39-4e63-abfc-6d40b71a8e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd1bc05-9f40-45b1-a6fe-dc06a5871ef5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8530ec0d-daf4-4694-a2f2-8b094e49794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0c3577-04d6-46ae-a8f5-00f656e0a43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae15bb21-68a5-4a64-91c4-727c5dc749d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "455e1202-a942-4cfd-a750-48b316349a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313843c9-e302-458f-a918-a72f07a5e526",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f42e99-01e4-4ecb-88ad-fc666ba0c1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2304438-eb3c-4596-b689-9deff923f2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04ec860-4884-471b-92e2-cbc54bee3273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7605e794-236d-4dc5-bd89-514faa7ad06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280bd1cc-3a96-4ec7-af5a-1eaf0010c280",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f947f8c-82ac-4b77-aae4-294667d7833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b541eb6-4243-4563-bcdc-9dc2c2fadccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535136c7-4762-4e04-8067-31bf16d121ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fd3625c-9375-4b6b-bbc4-832d7e787b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34854a36-cfa1-499a-b160-056893e3f50f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d5c1f3-0e6c-45ef-bd9a-ce3e5e01076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69efba54-7ef1-4109-88e0-a91d8fd01f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3e466c-0699-433a-9205-2b4ad13f04fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8dc7040-1c12-4fdf-b0a7-e4001d699ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a1b984-746c-431c-8938-0be83bc2f056",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e82a35-a82d-4b38-a81a-3ca56061f4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e325556c-7f20-4f93-b389-8af5c63da29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac697c34-54b0-4036-909e-5207fe3eb57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e58bed9-ffb7-4ed2-afee-9eb9680bed87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7ee8ef-a5f0-4fec-a3b6-7c38a24f6f04",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90db1f14-e45f-41ee-8f94-f6b58ebff11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e63055f-2372-4c0b-accb-ec1fd5534085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cb6c16-91e2-4cfa-b4a9-d689e9dcb798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32853cdb-b70d-441c-8fe0-f9081731cdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180bccb5-3f3b-4510-b08f-caee7f20f0ae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c73cb4-7746-4382-ad19-6e954fb7cf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de510b95-48eb-4347-996a-530b5c645852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711c78f2-c50f-4cfe-8d2b-033a62de0cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3627fad-0c87-4fd5-9169-5b79b7924278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a51cbf-745b-452f-bb5b-e649a725560f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32e8163-d5ac-4941-abb2-70dd32527f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be22876-2acd-4435-8762-50773126de1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cfb64e-3b8d-429e-944b-ebee0ffaa5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b8be434-50c7-416d-b8e5-9b382369869a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f087ed7-86b2-44eb-b09f-7c88a08e0f57",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7602faed-f231-46c5-9fb1-d9135bf038e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450017ab-c4c3-4b88-842f-1efaa97d9597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3542084c-beea-44a2-a4bc-31694c312fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "095cc0da-004d-4b12-b655-51be3741c7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe1b513-ea31-44f4-90e8-d477f79ea8a8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3380cb6-ec13-48f7-8f33-26f56222d767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e154659-bcd2-4f50-8cc0-f0796c21aadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf09cab-0f58-4df1-a0bc-6091d4d6c02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38de9581-86ed-4089-8a92-cc5c9b78bde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d06ea8-b204-4a16-81c6-4f73b3a4c420",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950f888b-33b7-4830-88b8-d8dbb5781cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7341096-fd0a-49dc-b21a-16137d6c074d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d8d28f-1047-4e6d-b8ff-915da6d907c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a9b8e8-7393-46a5-b057-2821e9ce7507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcd92cb-735f-4acd-a1ab-42bac684568e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770d1517-433f-4eaf-8051-76c0ef3e7534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286ca507-2674-4c47-af79-08274ea6123f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40d9533-13da-4f0f-b68b-0fdfb45b0628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4032d704-5d49-44ae-9c74-e92ef9496b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a88d5eb-ad4a-4fb9-8560-98b34aea8161",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16cfbae-07f3-4247-8405-9f2e7f3ec218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a3186f-142f-482e-b0c3-a1f5cde080b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6594a6ee-d55c-4c5b-853a-e22649a4ab53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d988b099-1950-4f75-abef-806a07a56107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d71150-046a-4175-b1f9-5333665791c4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfa690b-74ff-461f-966c-3ce9653ad636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87198da-7fa9-4802-8592-e845f07a6e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92cc976-6153-423c-b5a6-fb98d44c910a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33e9f8b5-1b0e-4cf2-a78c-2d35e3c3b605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23ac9e4-87f4-459a-a622-cc24291dfe00",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa39c9d-e61b-4a70-9aa5-91ae5661302f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0f352f-e2f5-4347-8b8e-5b3f87c0972d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d499992e-c3b4-4b14-9b16-c74020cbc399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a01bb59-a7b1-49d6-8966-16ffe4ae4a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a37b27b-7924-459c-a845-d6f598a3fca5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ccd5e4-42ba-4235-b91b-ae211cb454cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f515a38-1c03-4b58-b841-85b267b52145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35899ebd-03a7-4397-a0c7-cbda3f17fb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a41ba5-1313-486e-bdc8-a32d6dfd75de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7ea4ee-7845-4d5c-842a-a7dd018a0353",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d588ef0e-1e29-49aa-a991-c4f0d0e1d51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b37d4e-87f9-4435-a5ba-3689866073d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c093530b-2c0c-415c-97b9-7f8012a705cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1958cab-30c0-472a-93f1-b93fd5f975b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c1e409-6efe-4938-871f-8b87b0357e62",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f696cad8-30b2-4606-9d82-4fd7a16247f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403e8119-efa4-441c-8c71-8ecda24eeb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cb2ed9-8ed2-4b59-b21f-810304805fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae57647-54e1-4a95-b0a5-2a16b999e4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5b0cce-d885-4129-aa6f-eef8162652cc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7abcc35-751b-4b53-ab30-9fa6d46d70de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a29db5-390b-4a38-b07b-942bc48641c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b3eabf-98ef-4b18-be0b-30519bc0b0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7373e39c-cd53-4404-8fee-41db9a1d99cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb1b899-1a3b-4b3a-8af4-bcc6199ded09",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f68690-013b-4ed6-b3dd-266f57ed3682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534d99e1-5e70-4589-93a7-2103db785f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2068ff8f-cca2-48af-9e78-310d50d16687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "671f0ca9-a67f-4d0c-9627-2940709fea5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e1c669-df33-4d42-badb-769e92f2bcec",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6dccf6-cac3-47ab-a500-d655145117d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfb2f88-bb64-4b38-aa71-9561cfc2b51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425427f5-d481-4757-9b7f-968321bf575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e22e6943-d048-4ca6-b66c-be7629b486ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aa1c4f-8d44-4298-ade1-682bbead095c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cec09bf-d0c8-41bb-b36c-a5c097dfa750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2bea7b-d05b-46ea-b495-7994808deea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce97ba0-bb22-4436-bfec-64327b240995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "833043f9-dcb6-4e24-89a6-22136882e6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d7aad0-2f6f-4c8c-b18c-939aed99ca78",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f52e881-6ce5-419b-990c-5d8e0615124b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1cab6b-c40c-41bd-bd5c-5f3c85e4118f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e34f4-6ca2-4f49-8ea4-88f1dc8490ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efeacc24-d402-4944-b8f6-c3d7bd510e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69801314-be9f-41f4-973d-340061602384",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41075569-2b9f-4219-b1e5-d2744ed42c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d476e2b8-7902-4e6a-9b43-36a42f58bcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8da63ae-c52a-4819-be6d-272a5b020dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab2d2c7-d67f-48d9-b2a7-6d04816089eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39f23df-5c59-4470-a7ac-8fac456241f4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2280a2d-7d03-405b-831e-d299c9ff65cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca9dee6-9c48-40bc-8fc4-5d31288c0a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c1c5c3-db7a-4e29-90bf-57e098a08d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58355070-aa8f-4cee-8dd5-4f81f716dfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32919ef0-37fe-46ea-9a79-70cf10feae74",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab9e573-4116-484b-b5ee-ced1f3ba362c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44e38de-4b36-4715-9678-689c15bc8591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f6c4bd-6d0c-4e8e-93ed-2de67d39b356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "58074f46-12fd-4a65-94d8-d4c005d015fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a921055-34ea-4243-94f0-13ca0f283d85",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab494fb8-901f-47b8-9513-ee7c73dfaaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf441ab2-7e48-47ee-bb44-51b57c37966d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedd6b98-e77e-4102-adf9-61fefc3994f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9c3283-e84c-495c-89f7-897eedc7c026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c5f173-225f-4cc8-9a22-5e9afdce4a5e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bf4d47-4abe-4cf2-b2b4-10e7864a9ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0385620b-3526-40ef-8111-a83772d2b2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788766ce-4850-4e42-9bb4-b255724246c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f52786c2-367a-4406-9e78-3db81e69335e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b355c573-129f-428a-a3b6-685426508270",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaa8c4e-0746-4744-a9f9-f59099fea74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf13d862-fbbb-4168-a858-a560ba340861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31324e1a-307f-4df7-903a-eb9d93f04d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e9b697-4b25-4516-8497-fd3557c12655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47c2403-39b6-4957-bb76-ac21648ab1c1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7ba88a-9102-4344-a4c0-ee3874c0cd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6f4221-ce4e-44b2-89e1-d2effa6e6066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5603afce-f9fa-432a-be8e-27a5fdc85591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8abdf631-d02c-4c39-b772-9f565a30ab2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcb5f34-86b6-475c-9c26-0bb308b795e4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d04baa-c2d8-4d30-b327-428d25f53334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5ab657-390b-4ed5-9ac7-520b260448c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b066291f-f1ad-4b8e-aa29-c52aa29aa357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56c16a1a-52be-4955-b57f-32b6bcb29e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381eff1e-fa91-4f5b-b35d-57e2bfc10783",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363dc0fc-1c03-4151-9fa9-f8858a0fd974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295554d7-fb28-41de-8ee6-79540d62a63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523dd8b5-5acc-4fd3-bb22-2c7c95615683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02549d3e-ceaf-499d-bcd4-906457938d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a840a9c8-e607-4a70-95fb-e742d7da9d06",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3efee22-160a-4834-ab18-5925ae184305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c290c0d0-7cde-4195-85cf-74b0ac1b00f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57942210-ec7c-452b-b391-7bb92ae022a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e1371338-5197-41a1-ac24-195cc38d0b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ef6598-fba5-4039-a151-0fd942f29903",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827c64d4-4b12-4db5-99a0-3f5d7c541083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361a3346-1ada-453b-9161-61d6b18d0ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7292ef40-a8e6-479d-9ce7-1f4d438abfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a20eb0d0-1e48-44c3-9ba1-fc036f4c5166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddc6a28-1568-4154-a9d9-ab805e734de8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bd4c02-c8fe-48a1-b5c7-52e571a5bee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454c9b89-21dc-4e01-8f61-286449b53a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73edf0ca-591c-47b0-b3f8-d2cf5b098568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff9dbfe-15b1-4be1-8181-aaf5f5d60c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3dc5cd-e49e-48c5-9b65-8c7b57d8c303",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059cb044-b842-4305-924a-3aefb4a573fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6e2b19-afe1-4828-9444-0ee93796946d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f166bec2-94ee-4207-930a-1fbab73955d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8039b79a-8e45-4a70-8ea2-a04c6124a0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dae7d8-43cb-4840-8771-3cf0d793774e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a506f308-4c42-41a0-9b20-1d6793ed661b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf9bce2-f1da-47e8-8fd2-31840e6f6f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f008337-5095-4ee6-8419-01b67d674b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "460210f7-d9c5-40dc-ba5f-b10b041ebdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b34a848-80a4-49e8-9168-fddeba3a65b9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da962337-17aa-492d-b863-046af4825164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d26f72-cbe8-46ec-bd40-9d7393a82750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c303ddb2-7aee-4a91-a108-80041c34beb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8ddcf6-4be0-413f-82ab-ef31e99ac077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67209002-9fe9-49c2-82cd-1bb32ce040c7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c28bf65-9fff-4548-808d-1c6f4c7ce4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1c6cd0-7162-484d-9941-73e241c1d86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92bca46-d4a5-4da3-b724-719fb9919420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1ab98a-5a6f-46a0-b445-a24a57781d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2669ddc-5ad6-47c3-9ed1-7bca684e3ca2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e259e50-2283-42d8-9852-d8d107c0c883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401828e1-de62-4b60-8bcc-3a55e7e4618b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cd5a77-5092-415c-a307-cf0fc4f1c16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b57846-a314-4aca-9b74-0c4c29c641d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdba6ac-5c6b-4c24-8b76-461f3831036f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99414ae7-2b22-44ab-a2c9-c4290ee1a6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb404b6-4a0a-4835-96e0-35b0db37fd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcf5afe-7a1f-4d77-abfc-58566f42a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b66e096-d2a2-4c77-999d-0e31c3cdc222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804084c4-f178-4de1-9491-8434139e227f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd70d0-eb71-4406-9e9c-4e16e8ab1d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d0f7a3-cb03-41f1-a4be-bf097a495bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e03ce46-39ea-45f1-aa5c-b7e3910a0b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "de943c37-5f55-4d17-a83e-f4c1ee4af46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbf48ba-b33a-4324-9917-9bd675f18e43",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c54d61-9b75-4135-b07e-605db81c079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2afed09-d0c0-45af-8f76-8390a6e7e17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c849da-225d-4c0b-8c3b-588de34a5428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e377411d-40d8-44c4-a61e-160a404acc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f96ae2-0a1c-454a-9e53-38c8f8607172",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14f1e62-c3a5-47c5-98c4-66ef025d1348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7238cd-6d05-489a-aa42-3914441a9c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4fcc14-3505-421b-b26c-c0d87860ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d07226a-951e-4e51-a496-812ff8375b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d8f922-ed2e-4991-a14b-9a390d9f8edd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920528a0-26a1-41cc-b1fd-b3ac75da5d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7ca06c-cad0-417c-99e8-fdc6336f94ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20f54f8-40cd-4126-8b65-243d6d46235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d87b145-8211-4a9e-9b30-310273f71756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af3f571-91e4-488b-89bd-b082c6de46c9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec831e0-cdd1-4dea-9c47-4a9327cfc4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b86a16-8fd9-45e0-bc9c-13bc4e9cbfe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fa1cca-883d-49dd-9a85-49243c33548d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fe8a38-39d2-489e-9a45-0d28f3b8abfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a234202-d6ac-4a9d-be07-cfafd85f93e1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201e3e04-b3ac-4fca-97ab-69416a7201dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e8943a-36b8-48bd-ab14-1161bcd91945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93c0d5d-de1d-4de8-ada3-91606589f29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "72ab0e25-a171-421b-9d22-d33e04c3fbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b87338c-0c11-48a9-ae4f-8ec4a15cc93e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dc01a5-d5fc-42f4-a53c-512ed1e5f365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5097e3-9ad9-4e93-bb4e-2e5df52a33a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df731a68-ada7-45f3-a75d-89fb978afe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3224c4f0-7a32-4017-ae3c-cbe38c9ff508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285223e4-5e98-4c9d-8328-02e48cdb3003",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18a15c8-85e6-40e1-88ca-1530575fc5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508ec2b5-ae60-4ddc-901a-377b5412accb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c025585d-8588-43ab-8dd0-016c70e4ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "49084331-dfa7-4492-8003-51767d6199f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c87d938-a4a6-456b-a4f4-94f64b6c3a7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b03e48f-1808-484b-9b73-4a3b5e0428b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6674bbf2-1db0-4aac-8934-1d031863e99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567a3e74-1dd2-4a29-b5ac-fc962f5d2901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7390f6ba-6605-4b9b-84cd-17246c44ab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b27dde-e3ba-4275-aab3-00e4a564850e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9aa3d5-9113-4cc5-9e6a-6d0329fb26de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bc8810-9feb-4edd-be34-3be3525670ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b28fc57-7040-446c-90f4-30d480e7b657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04465bb0-db6f-4f60-99c3-d78f3950a901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bae23d-6c30-4b37-a618-50f41f6e976a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8135bbf-bf58-40ed-9942-723bd6dbe3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b16734-c6e6-452c-a675-68ce5591351f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcaeca6-e56e-4d51-9070-0745ca475753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e35e5f32-57b4-43dc-8fbe-6c06d965fa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17303dc2-2c36-4a73-ba39-a8152957f7bf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e7c694-e07d-461e-8058-a9ec293d50dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7bcc3e-3cee-4513-b224-58097c3c6fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825d39b4-f58c-4668-8379-e681367c63db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3111ce91-e316-44eb-a5a0-b90250652ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e99dd95-007e-4fa1-89af-6b7c5219390a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c00095-6b7c-43f9-bcb3-b4b24fd40d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9a8588-f46a-4fad-8a5d-3d9063f29ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0f6b04-b61e-411a-9e9d-83508c19b408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6edb6b0-1c3f-481f-8351-8ece1b430b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c399092-20f3-4623-bda2-2d46504d35d8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a60c7f-cc2c-46f6-a981-338bf78e34ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19af399c-2634-4d42-af10-df732e6bcb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756fd3a9-4ba9-4fed-9a2d-a44a7f437e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a2cd23-7485-4632-9102-a6de31bd2165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1b128e-b4d3-4519-a4c4-5aecd55a145b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c062ecd-d9f1-4d85-9b20-abb7915e1cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e2e326-05c8-4d40-aa4d-030c1b00a32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53efbe64-e12f-4c24-a888-1db44ac7c5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d93efd-1b31-4c86-a31b-b278be992f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d7549b-0e89-4d8c-93d3-1bf9d2e1d115",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8854e912-d9d1-4013-96c3-585d5f6d3c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cc7c5e-16fd-425d-bb51-2af023aa5ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc15c90-676a-4fa8-b7aa-9700fbe6d0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ff4166-723e-4b0f-9c5d-b9ed6b0d7722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42670788-0202-4a39-b29b-824af37d671d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fc5d44-4bba-452e-bb89-74dfc1e74e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b26ee5-0268-4e41-8260-0390f90a3727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf09b6d-40a2-43f0-b3e9-f6dd890456ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2de14a1-b143-4094-84f2-1ab93126148a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4842662-2025-430b-bdc2-2fbc8d3a5264",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113199d8-25a9-4be1-bd71-5166aa633dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d1f7ca-3e6e-4435-915a-4452cb8b67eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be5f1c8-4304-4be3-b58b-4e1200ba987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab796c2e-d471-41ce-a104-f63690967950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379ccd2c-6d2e-4e15-ae5e-d7dafde78ccd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1249ce-8a88-4edb-82ec-13cb4a647116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec97bb1-ff97-4db3-af50-1eaba0f8e09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6685d7-d659-4320-8942-59c5ce464445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc79a31e-1565-4f98-9ccc-ca4819055d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ec4395-ffe7-4956-b5c7-3ab919ddf73e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb69fb3-3197-400f-9109-b0bc99f020a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57a23cf-f218-42df-9a54-884bf4e1e0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a483d3-22c9-43e3-bc39-9762a2c711f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e762ba-f974-4f4b-9d4b-e31aecd223c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28c25bc-6504-4800-8bfb-78f4f3159e13",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fde7c1a-9973-47a9-b99a-733bf31a1632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed1137f-57a8-403e-8bb8-dbdceb1a9aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305de18f-9851-4223-a1a9-9f5e2728c024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b06b36-fbf8-46bc-bf4b-cc3a5a5c5c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c6fa6d-258c-4549-89b6-9aaad6af7853",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508bc032-dd61-45b2-b059-f3c3cde1c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166fe5ce-816b-4520-946f-43c548cd98a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa922072-893b-469c-bb3f-87d0d65d75ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d25b75-1e02-4f2b-abbf-d25d5932b903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f46c62c-5d8e-4c76-b65c-85bf0e43bac0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbade47-3284-404d-9d65-75fb02a41f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46891da-3362-4782-9f5f-02a9c4626691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a22668-54f7-4ede-9f65-d2dec725d461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1816c891-fa0c-4c39-b9e7-2bb81edd0532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94605a9c-6c79-4564-8328-22f4c44cbaec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7513d296-ffdf-4e98-99ef-e3f2f25cff2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2eeeb72-43ad-4830-8f5d-2e1923ccf4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e497de-c317-4264-a361-ec3918ce2cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb28ac9-3c5a-4d00-a4e5-37f68a9aa5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bdb62b-9dab-4ede-8afa-ea8f503ee1f4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3bcae0-697b-4661-802c-534088465e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cceac5-cc90-4f60-834a-42f1d2df11c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e37833-e216-4877-a36d-c40300eb888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa16858-a0fe-4abd-b8c7-6b570f90c8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e12c8e6-1b76-4eea-b28d-21869b84faeb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9507aeff-1091-4b91-a2cb-c93039bbc170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793c695c-1c1e-4a3c-b998-2df4fc63f4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c570f27-81f7-4b93-9ac7-e4dec9a58867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7896efa5-8186-4a08-8736-909104b282de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1667aa-dfa1-445d-ad22-226bd9c6d38f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6001d6f9-08ac-405e-a7ec-a7a0ccd82062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978613f1-2e48-4b7d-9e18-e9e6ef83f3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ca2597-1808-4034-9f1a-502c2cacf65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e47f0a23-24cc-4857-94b5-2284352fca62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db978a7-dc1a-4bcb-90e5-2f34a30578ad",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8a08f8-bca9-45d5-bc2c-1c467cf348dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db81d915-8afd-4f59-ac66-62d26a168c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d9f33d-d193-4e7c-ad09-4d7a6b37a4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ba8288-b5e8-492a-afde-272f5cf100f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212170a6-a1e2-4736-8923-a6da0024d156",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d744ef2-36c4-4584-b280-746103ebb749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8abf5d9-edeb-4335-bbf8-fcf762ec6bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11007c9c-0b49-4409-8c9c-1a7a99fee847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3373fe3-54f5-48bc-b6a2-2d0c618d76c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14ff35e-e06e-4ae6-9add-cceb213620a4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09029014-000a-4e82-ab4d-6e797f518fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b8c58b-a3e5-4197-9e24-ba023fa3bee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d26d6b-bb0e-44dc-8dd5-8e649a222308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "292ec613-b363-485e-9611-5da4722bd096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903a97b9-14c9-4bd5-8dbd-d26b63c06b14",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4529a5d1-38f3-42b9-9c0d-a9967cce3e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e8f0d5-d70b-4ae3-9145-cb50e29c9e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85416dc9-5441-44a2-b4a1-c09e8272e77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7441f5-7d12-4a3b-8e25-d38beb5b002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2ce2c8-705b-48ac-840b-704a00a95213",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49111fa-7462-42fc-984a-cdadf6bbabbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d800c60-8d6c-4b73-a5df-17fa35e77b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62aab58c-7a76-426f-8836-797978850876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "308e3446-ad92-456f-86d9-12b077639213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c2d0c2-6ece-4988-9bfe-1c26542e0f25",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7135894-c8cb-439a-a7ec-7a42c90d59ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5d5e79-bfbf-49db-97cc-1b6d809c5454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d8ea39-e76e-4824-a0b8-57940af39e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f92f6933-12ce-4d9a-adf9-ddde06213a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c29df9-aed6-41ef-8914-b9682376cc79",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6197599a-808a-4986-a75e-a0523773c9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1722af7-cffb-43ec-bb40-7b5d393d60d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4cef7e-5bd3-443c-bfaa-80df17cff55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e678919d-0f0e-4c01-89da-213e86fc4687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071b57a2-390e-49bb-a1c2-146c73ae0707",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd49519e-45a7-44af-863f-f7013144ae6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb7cd6a-95b3-484c-86bc-9d8809a5d72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ca1374-9e99-4526-9d1b-6e22c5e35023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44417784-104c-474f-ab51-756a22b803fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38575c6-69a2-4092-959e-5e69a8030646",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c753616-f234-4e6c-8a99-b48b3ffc706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a124e52a-f89a-45d9-87f7-91857020c4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df0d50d-cf68-4269-97a5-9cea109ec1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b128fe44-118e-4a3a-a8f0-6fd8ea5b4c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cdd2a8-c55d-4455-b880-32533c0d81a0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde35ef6-f935-4132-9fa8-152d0716c73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a24c3f0-3ec0-4698-ba42-5d98822a83c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4d1fed-4a8f-4554-9d65-eb201333a5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76281917-ff9e-4dcd-9b2d-aafb19420053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f147f9-3ca9-43c8-9b70-d5a489916bec",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cfc15f-06cd-47dc-8fd7-4b2bd09b5af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64380842-1820-40ee-bdd9-1dfa913bf356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ac1867-9d45-42d0-aac5-7b6854205894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c81c98-67e0-46df-8f56-fe9746bcd9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dc7730-cbf4-4bfc-9e42-976d364dc9b8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de0936f-80bf-4288-8f2d-eeda8f20b4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531fe0c5-6bf9-44e4-b7f2-e7b7fd8767f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b43c932-28d6-4876-86b4-ebc82a68fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3536d0-853a-4e8f-9be0-8e3971506ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1d0eb6-fb5b-4a54-bc9e-a38ccc46efba",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39beaa47-929a-409a-b963-10914e457fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7f5699-a380-4518-b147-d222970d000e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11716a7-f4a9-4449-a8ca-d82fff86a3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83eb88cb-dac4-4843-8e64-d57434b42c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7fabd2-cc5c-41a0-8895-622a6bb4b5c0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdb0f10-5b66-4da6-8fab-ebbe60238139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930ed18c-f17f-473d-b85c-82384d8681e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8718a64-ab19-4faf-aeff-ba172785a40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "523881af-76e0-4b86-895e-4c27bd6f0466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5948f1-ca07-4c19-a8b1-511f0a6e66de",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc878c84-4c69-492d-afce-fb2db283ba30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "50b24261-b5f8-4cb2-8b1b-3d6f8e722f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5ca551-a575-4192-857c-ccb8dbcc41ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "53f15d67-1f31-4fb5-9466-c2ad6acf1045"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58ecab8b-927b-43d3-800b-6f672454ded3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4bd37b8-960c-4fef-93fe-b6490ccd8070",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afb16b3-4a25-48d6-b297-c5ab87c25f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fa9711d-f998-4a1a-a326-b68cd4ea2771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f63c24-87cd-481f-b72d-275c4d4722ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a5f6b6bc-7d11-4f95-99c6-48a0801505fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a70915-638f-40ee-a1af-fdfe1f0d003d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc05ac3-2fac-438f-b301-6cba66c71ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "074e6bd4-2292-4528-9841-bafde0b935c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85032ee9-a164-4f45-8783-9dde6511ee8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "500b7927-faec-4650-93d8-4793e9f6f4f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f045345-61b5-4a2f-aacb-3863e3bdfa4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c0777ce-75e7-4241-95f8-f51356110226"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1b6b26e-6379-4bbb-b4de-a3a066bd92f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45788143-b4f2-4c24-990a-1944a963a0e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30045322-3662-4229-bd98-c9c7b471db63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c65db91-66b0-432d-8d8a-d192825186be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0132714c-190d-4c29-9e07-ea8a8fc2c6b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "182c1127-2fcc-4ac7-9deb-7e50249e61a0"
                }
              }
            ]
          },
          {
            "id": "74a4b941-eae4-4ccf-a5de-4c99a6d699f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6837c81c-1b70-4bf9-8536-5a424203c194",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "107036c0-3b4a-4c11-bcec-33c62f1783de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a0e52a6-3bdf-4dea-b01e-6af57ac8f583"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a71deb00-7a2e-415a-8249-b71173516192",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5ddc38d-a61d-4dd7-80ad-7fb73cdba3b7"
                    }
                  }
                ]
              },
              {
                "id": "7e35018b-60d4-4abc-9b5b-f55176fa710b",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "119bfc36-da2e-42a9-a303-385a84860e64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adb8e700-4546-4c0b-82ce-91808f58586b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94c2f6e1-5f04-4027-9237-e86a4fa33873",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ff076b9-d087-4730-8f9a-5a1702c4b8a5"
                    }
                  }
                ]
              },
              {
                "id": "155b515f-7ab2-4f36-8d2a-eb4c99ffe17f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74280bbd-69cd-420c-bb46-e28b749a16f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2a3d7df-cdf6-4bc5-bd51-940217bb5214"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef11354b-52f5-47ca-9665-eebb32326c42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47db2ff6-721d-4eec-af48-a9e314e08d95"
                    }
                  }
                ]
              },
              {
                "id": "b1cd9688-8397-4847-b74b-ee6aa6526f8f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21969a8e-3f8c-4e6d-afe2-b5111bd74220",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea19592d-af64-4e6f-88c6-6e82e5e898b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06a638b6-0afe-4727-ace7-fd613ffb4a52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dd607e7d-31a9-4f48-a138-58b98a246766"
                    }
                  }
                ]
              },
              {
                "id": "c8650d7e-9155-4f78-81ab-1a7e343dce5a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c97c2188-a4e8-476c-abbd-a08873e09cce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f2780b2-8b79-4807-97dc-fe2b9c3c69a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a243fc9-f282-42bc-92bd-e918549172f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cc437b8b-13e6-49fc-b799-faa61e85c167"
                    }
                  }
                ]
              },
              {
                "id": "c0314b82-f293-41d1-9114-ad67330ad008",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8e47f91-4771-4ac9-8c67-ef82247605df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6039a73d-4757-4022-956a-f192914d3f34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef74d26-b98b-4d67-ba80-88898be5a93f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1be06d85-6aae-45b5-973a-21c1c6015a58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94f99fb0-75a1-45ca-b68f-aabe38330015",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb848f7f-5f0c-4394-95ef-a783e272fec4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "532d488f-b940-4bab-9f90-d3726aec0246",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4555ae7a-0741-40ba-aa89-0aff3b07aaaf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07e95fb3-1dd3-484e-a1af-1d974c3bd51b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b053e799-1078-4f11-8500-a4dccbea4a5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9061192e-0669-4be5-9f87-583a0c669c77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d151d07-e11d-4132-83de-c76a03fcc99b"
            }
          }
        ]
      },
      {
        "id": "0c19412f-bb0f-498c-a36b-f28e54aa715e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cdf5f9df-0456-47d4-87d1-49429de1ee25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06186125-5d3d-4374-8a2e-c6e21450ef4c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b4dfd216-bc1e-4d84-ae8e-655941848238",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd0891a-bc2e-49a0-85b5-3b6bb6b85c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b56c74e-4876-432f-a1a3-060816ac9cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba0487d-326b-457d-ba2c-999432809744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "057ab6b4-20fe-4295-bb5c-1a69b97c59c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed689afc-744e-4b3f-9cef-c2d6e30a420c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62834f9f-fcbf-4230-a71a-5b0d1196ce51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28e9a77-9dae-429a-a856-4201f333d440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352e98f1-1ec0-4d91-a329-8babb8c8d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8351f941-022c-4e0e-8413-b8a5cc217a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11c63d7-9777-4114-9d74-6da2de42df88",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54c5a9e-27fb-4496-9ce6-44eaadd37d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50802348-3f30-424d-8fb6-50bc2de1e266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac09d6d-39ab-4d5c-902b-6d97021afc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f96e519-ba6b-448d-96b4-c9cfcf67931f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997575ff-1493-49f4-90d9-637b0e359740",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446119e1-fa22-4609-906d-be0c437ea96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f170b9bd-217f-4e3b-8d0c-f1ef6e06fb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5057b5-b77a-44cf-a93f-6a7ac0bd2cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2cccc7-1595-49a6-922e-52ad011e2b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73c0e4e-2e0d-490b-8c79-b301c7f144b3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c5220f-cfe0-407d-bf28-8b41771e44c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eaaa0d0-b04e-4bb3-8bef-bc4be77c22ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e34bc0-6c85-43fa-aa2d-0970281e0ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d3c5ff-78f1-4648-8bfc-3741b2f8617e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2be051-ba38-40b9-bfa2-910e1d77dc14",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1026f2cb-8af1-401a-8122-954ba63382da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e96cfd-a540-4c17-97b7-6ed256cdc261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efad2d0-26dd-44a0-9d6c-d9760057b9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "654fe9cb-b149-42b6-95ab-698d3937105b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494f7c78-2a07-44ba-85e7-1eea6194a4f5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cf7102-d4b7-45e2-b349-c1c0beab4233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dae69a-11ec-46e8-a9fd-03d638fc0f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec3bef8-d958-4af7-b7fd-6e83551a7305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd4d7d8-9f04-44f9-b8d0-8297788ec35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837851e4-d0f0-48e1-be81-e9320944df45",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25665616-1631-40a1-9e1e-10bf4b6aecbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6024bff9-58b0-4410-8bd7-e37816aa634b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742dd34f-bd92-4c99-a5cc-d2221094f11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a9e5d0-16ef-4004-b902-4161edbc8b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b18d48-ad33-4e4a-abcb-153cadc68ca4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208ca2d8-9276-4227-a2f8-2ba08af053eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753791c6-0ec8-46b7-ab3f-8d608cafa96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1166b05-a094-4f76-8e6f-3af91b5f9794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73817eb-478a-49f6-81f3-d6205bf4f75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1e6f02-5923-422e-b3f3-2b61a3d59cc3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c240cfc3-5e5d-44c8-a90c-e29fa7d7377c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa0f286-39d5-4d64-89f7-5464c568d216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661b23f9-c475-42d3-9e2d-bbf598a3a214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "029c8223-d6a5-4191-95ca-cda3c9fe5b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc97d7cf-db24-4a16-8c30-77855b400dfa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2063e4-2e04-4ad5-889e-da88a8d6fce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e14895-ab07-452c-92b4-027bc1403a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28141231-ed60-4b80-9bcd-e0dbafedeefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d041ce8c-fa4a-4c6a-a5a9-93d6b8ad3995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54a201e-8a82-4210-8822-e4289f9f4d53",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9974791a-fb2a-4230-a098-a3d8943cdb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e9f5f3-3222-45e4-94c1-1c9c3fea0a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec540f57-4580-43ed-8eb7-34ffc269386f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "499afd3e-36c1-4f7e-af32-304e669cb32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37be570b-d740-4b10-8b41-458bbfb552c1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835cffdf-d576-47fa-b2de-824451d0e4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2724fe07-9fb3-4949-9472-a007aae9417e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e02c850-63e0-4785-92e5-07f123a03a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53a00b7-7f46-41f5-8ca1-fa095f2d6d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ab30a9-c573-4e48-aded-efe679b3aed8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55a2982-e181-4e1c-bfbb-5943a3e36525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2346b631-a53b-4787-8a55-c80b5b2b633d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e37e17-3bd5-4473-80d4-16bc0f892972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6625be1-1ac3-4926-acbb-a172d49c8cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a236012b-0eb0-415f-8916-3d6f7489d0b1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf81133-cdfc-4791-b8d0-1f5ffc6b8c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2ca8fb-24cf-4aa8-bce8-c76b0cd03bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33375460-f34d-4ea9-af93-a6ecfe9e2b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a865d36-1bad-45b4-8c3b-584a1854b3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6df3c6a-d58e-4aec-8ed9-ea5cfa069ab9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b043bf-5bb8-4a21-ad6e-f24d092db9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c228afa7-8bc1-4ee0-9495-e0f103142441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee974082-ed8d-4be0-b694-ae543a6ebb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37025c1-e0c3-4ff9-a706-88be3222b758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4178e744-ff2c-406a-9aaa-ceb09983b81f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4491b4-24b2-41d4-bcf3-9040967c4f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3173b3da-c464-49de-82c3-784ea57da743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671e0bed-6e7a-48c5-8861-8f885cd9c4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fed93d1-7ab9-4d9e-8709-69a3b8232d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d85cd7-77ef-4059-8bf4-f56b90c046d1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a33dc2-7a9b-49e8-ac6e-34952a7f8fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11f912f-855f-4efb-9f46-2a46217ce4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d599ca3-6a5a-4910-a43d-d3804b641a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a5a045-7af1-43a6-ae2c-449be27b6f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741d5647-2bb8-4c46-8f24-e68b7b40f238",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1103702e-2f00-4d73-8014-b6c46bbbd075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0260871f-9ca9-4c9e-8c6b-f2c980c918c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a11ac74-275f-437a-9f97-4e7ecff6eb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54453b6c-7f0b-4942-88c9-81be00428397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d8ff63-cb7f-49c5-807b-381a1708ff5b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ead98a-725d-4019-b41d-a944efa499d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec80e8c-2494-4dcd-a8cc-90d1b632ff8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4baa58-d51a-460b-bd48-31ce4712ad94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ef3a4e-c3f2-4734-a01b-0748ca601442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bf128e-474d-46a2-a835-b23c5ad9a2d9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4984bbed-b64f-4392-b5ae-e4601e6efd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ea167e-a788-44f9-a1a7-e64ccc6a4267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dfe544-dc0c-4ecf-b134-9172d0c7685d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d77ea73b-1e66-407c-a1b8-0dbce9cc89ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a429b5a3-0d5f-4b73-bd64-e413b82a3409",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4a5854-e07a-40c7-9b36-339ea40fae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925b9dc7-c956-44ae-8f18-7d9645e67184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe1a31b-ca79-4b73-9318-837a0d1452b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97686fd-4a7d-4019-88f9-c070eff5710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80cc79f-ab6c-417b-a04f-946eef9c2abb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c786294-5370-4f55-8a52-cb87567ea84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d1f239-835d-4487-999a-e5d79fc274f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ee7f0e-5d35-4134-98dc-08c24e770887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e4ab83-36c1-4ee1-baba-f21602afe21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a18ed7-d23d-4484-a98d-88dc19614df6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9f2937-8f5d-4468-9760-943c3f73eab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23e8a25-800c-4f1f-9d6c-3328a5408be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc94a68-423e-4879-9a39-ec67dc9103bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6df284-4cff-4ec0-b237-a476da695d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a64c12-e187-439c-aab2-0481f1528775",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db90404f-58cc-4fce-8f93-62edb2d27b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0815ac-a3a4-479f-8e65-fe61f380a4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe7c77d-1954-40bb-9985-bca932e3c4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6539719-8e5c-4a6d-86ec-1e30d23d16a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec27035c-b5c6-485e-9cb4-8cde72faae76",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1ae9e9-a615-49cd-ba2f-3fa11443aef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5d83ea-3c6b-4380-b034-88585b872def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2f77f1-84ac-4dae-a15e-c4e19a9b6798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "384adb23-acee-425a-8f87-bb92d331902e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59269491-fa7e-4d17-8d34-fbf92577d923",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f640c149-da47-43de-93ed-ae837bd3297c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92373a0-8740-42ca-925e-dc2a86b356e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e769413b-58c4-44ff-90fe-28200e78dc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4f896d-e805-487c-a670-27ad0da7e1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dacf8bf-3213-4a87-8792-37030cbf36d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495e2c54-122c-4e7e-a462-cc748af57e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508bb0d2-75e9-4659-9c26-b7c9018d2639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d54401c-46ac-4696-b08f-27552cc06987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c859556-895a-4844-8f4c-e059689e67ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17776bc3-ac60-463e-af62-a652bfd775f7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d04404-78d8-40f8-a88b-db867f8eeca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8880eca2-253d-40cf-a6ef-d57521d91e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0aa3abe-28c6-4ab4-a352-52a4733d9e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "407f264f-2353-45ed-aa81-c52c7d983f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5512d097-18eb-4dfb-9daf-124146160ea7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c39644-e12c-45d2-a229-019308fc7042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082ea45b-409c-4e1b-88f0-c0a2ce3a2eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2737178-3249-462a-b502-b0aa0fe1b6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7e79b5-9fb9-4730-99fc-82b8999cd95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6d1897-8abc-45a2-9723-c6388b6c5380",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c141f2e7-264f-411f-a347-5ee5530c285c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71536442-3d1c-4f98-b9fe-2fe8cba0b9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954156cc-97a7-414e-9add-e1a87f7dbce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45394b71-9a38-40fe-a843-9800dc52a4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3eedfc-a216-45f0-976b-9f04351518ce",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd92893a-c6a3-4c3a-80c2-89296e1aae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f959ba35-a0a2-401d-b08e-fcc34eb03b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e7202b-f9e4-433c-8395-1754e02d7a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a76ed81-8442-4c29-a0fe-67814b402744"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "422f5af6-c8c9-4f10-9713-fcf59a3c58be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "786f95b8-2527-4b8b-8d5e-67f6f4e726ab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d0cf57-0789-4f7e-bfcd-366ff00554c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf64d135-941b-4d67-bc9a-ddd7c9971ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bc1a3a-56a5-44d9-81f8-1e23d76b70d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "662731cc-2143-4d70-a48e-87833585277a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89ee1c7-6279-435d-af9e-ae60134793c1",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c47a01-55f2-482e-ada5-a81a6e3efc7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ebbb74ce-85ce-4e16-a8ed-67a256d724af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a24801-b4c5-4310-9661-42f9f43c94e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d40c6b23-7a61-440a-b8da-58e5b5b9c8fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f83226b4-9a0b-4cc2-a9e6-b0e191787e53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ad824fb-82fc-4aee-a754-6e9da3fbffb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdc45c18-12be-46c7-b2f4-5106a3fb329c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef798f87-1a42-4ab9-a687-7da44b042e8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebcbc96b-9cc1-4e1d-be5e-8e097745b61e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "900dce4d-d1f2-45e4-9e97-9fd9d295c100"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e323543c-5bfb-4d70-80ce-f3f3c3a7e6bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39684bfe-2bc9-4ae2-a9c8-5b265767a2bf"
            }
          }
        ]
      },
      {
        "id": "19002bd0-6951-4c66-9729-0832da00ec36",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4906e749-ebdc-4864-86f8-f705d5272692",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1d83367-c47d-421a-b6da-1b7a8ad572e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14f2ad4e-e4ec-4a7a-9a2e-da113a887529",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7616878-a97c-40bc-b155-f79a49d04d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99d95bd-7a5f-4d1a-af93-c00b89f3989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ccbfb8-f1f4-4d7e-b482-b9b4ad466d41",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beb8afa-75d2-4e52-9c0b-0010acdd29c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539a938d-8a05-4e14-801f-3095822c727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c206d27c-8009-42e0-b266-67896740b0ee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f23052-a553-4270-953d-af979c81f5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2b3e34-e18e-48f1-b7a7-f4e13bea96f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99df475-ec4c-4b78-b689-91eead54a669",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aba5e7-c7d0-4956-b896-4bd946324313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cae6a5-b8e6-42dd-8507-f59602d4870e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903b4be7-56a2-4b9d-9598-23773b5fe3a4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9474bf-294c-4d6c-8bdb-d4c385b6e9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28da8d0-bcd0-4059-88e9-d06658defbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc75080a-6dfe-4e9d-a2c2-6ba9ff919bfc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99738cb0-c987-4e1d-9df5-8315aa3e9c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ed5802-f5e0-4c11-83b4-b1699db7bf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6391973-1a90-48ac-a11e-ebad01c7390b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f93f695-e821-41b7-bd6f-bcbc1a234370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbe9820-2510-4265-b8ed-e9a3e3469d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46223fb-f176-4111-9634-a52362abe6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcfb2e5-b210-4c5a-8cd0-7b54a319eb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171285b0-2f01-4001-815f-1894513b49f6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880e6168-158e-4c72-b8ac-2dc171183389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e594f19c-4d3c-47c9-8a9e-4ca72b3fdcfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccb7ed0-af85-4589-9761-cb44530e0270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9728145f-1fc5-4950-82f3-73ec86a1f586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb9efaa-71fb-4074-966b-dbca211c6639",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a588b543-053c-4bfe-b9c3-102f728a1f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5efb9348-26ef-4ef2-aeb1-c1b85b02e24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e5a4c5-80e7-43dd-bbf7-62aae30fb401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb58ea5-0800-45cd-99c4-7015569a3390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ea1efe-5ca3-4d45-a329-f62eb93f4f73",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaf3e60-6f93-4efb-8ec2-eb91f67e1912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420059c3-3301-4200-b48f-943794069262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e925a14-217e-44a9-93a7-0745cef68400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fb9656-5a53-44fd-8a7a-976d4eecf858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12d92f3-935c-4939-afe7-d1525ec5d7d0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8ddf1c-b2ce-45cb-9d7d-ef00e04f814f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054794d0-b3d5-41f0-82d6-73a0f51422d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf1db40-208b-4957-b562-11d9d179b7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5869115a-fdcc-4631-924d-b6b4a4f565f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d712611-693c-4f41-ada8-6565c8ba07c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb41bfc9-334a-4997-b058-d3951456962b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da8c11a-3f91-4921-9745-efc4e38ed3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4162221-08d3-49d0-8714-4e2afeb2dd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf89459-246e-4456-9d6e-9a24b8840433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7198ba-c24b-4da1-a3a3-095035b72dfb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a12b42c-3640-461b-8f16-df976f01a56f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6148a25-94fa-4bd8-a8fd-56be2c30ad5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e876a6b8-4f23-4d78-b639-d08ca3a688c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14005c74-ccc7-43bb-8fc0-a9b782254c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fc5921-1ed1-4cf7-9d36-50ff6bd9aad5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565d58ef-f99a-4792-a620-8163e0869995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4210c58-9840-4495-a0d8-ca0fe707c40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7aa445-fbec-4c34-9b6c-d9ba281bd11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66c5b2a-35dc-4fd7-8c5d-a2bb9e03e2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed789ead-dd3d-420f-81ba-a97d0abec873",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631481c4-1f44-490c-a02f-360d51019313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c536f1-447f-4732-8428-f49af1840b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a66453-19e5-4f0b-b231-3a543711c257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd197f5-3f3b-4a29-b4b7-b0398009b0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2362b48b-8487-4476-b5ba-e50c4f7bf26a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4af21af-b17c-413b-9398-982fc3b21179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53530b0-f3db-4c55-80f6-924ba7af13ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5675ba7-22f7-45f7-9339-e643ec95e421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ec3ace-58eb-434d-85df-c419f35a9c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dd7317-4f44-473f-aacd-d78283b80df2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b0b4d7-9a32-4148-9a89-a7c21a74f5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13939f8d-645f-46b9-86b7-e24118e3a067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7520593a-5899-4b72-a6dd-529accc34c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be543f61-c3cd-4b3d-b40c-107c82b86530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48f1beb-96d3-4d2b-9d4e-791202960009",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc022c0-1275-4ade-ac16-101bd4cc33d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852a18a7-ff4d-4005-b29e-e64b85046e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7100f317-3eeb-4796-a109-93edac062985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ddb439-e7f7-4f30-8bff-40b35b022fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6a628d-eceb-4ab9-ae41-809d1612994f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94c5ee4-f9cd-4ddc-a2aa-511df06ed8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50390a74-77a1-48b1-8723-3a0d86f074f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37c15d9-4ced-4e94-bad7-f7092b45c20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083ddac3-252a-4efa-b3dc-29bae8d60639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83055d1a-0ed8-4f72-9748-8d34acf777be",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e391085a-496d-4bc8-b21e-9896e1f627cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82c6fda-b3ea-4ce4-92fa-6117aeaafbdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68879cab-bdda-481e-99f1-aa3603501d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057725fc-1b1f-445d-8c24-a4c058368e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f7b344-70a5-4b96-bb60-0c8828dfb822",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed09a95f-a1de-4be1-a580-fef62fe994d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5405d0ef-a9dc-4e29-9dd1-ed454f00b077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b0494d-61f1-4571-9bd9-77babef5abba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee54152-6dab-43e6-b0d0-6e25a2261abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30de8683-92ea-4abd-a142-097d7d9e3f64",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c15571c-d198-4844-8f9d-0ede87858b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5503b07-1401-4907-8bae-82c7233b9ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032c7909-e108-4afa-bd94-d363b907b5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514b557e-4afc-4ab4-9600-ec39292f5950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e156e7da-545e-4605-8dda-c4268347d937",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d37d61-f877-4d52-b09c-5a7eba825a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bec33a-bd12-424b-9ce6-547a41dcbe19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9808528-9e04-455a-b2c8-7d8963abbff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f80a28c-a308-4c0a-98f2-8b048c5c1b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c36a5a-9c7c-4f3e-b79c-a2f99205d3eb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1c4baf-e720-4113-b331-5a464f3598bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9effd92f-f8fe-4e8a-8621-26e5584dac39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3615fc-c531-488b-ad2f-ac4bfd20975d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbcdafc-f07b-4f13-92f4-fc75e8a66e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847e5f63-c7a7-4e72-9676-6cb23ba4b317",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8e70c4-cc32-423d-8967-547b138d6d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7161edc8-1539-4020-9e79-7091e57088df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201329cd-756c-4ad0-b502-163bdac83981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a48f62-178a-4dbe-a019-b9696d3af285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ffa7b5-f8d8-445d-891c-0b5cdfc8ecc9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a18c25a-406c-46ff-84db-b8baa282913d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c468ae-bbb5-4487-adc0-8f2da61b7c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88789824-707f-469d-980f-17836740e251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dc5bc1-de3b-4be0-adb6-18d31199acc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6525c44a-bbf7-41b0-bcd8-a6d341faaa42",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c661b7-f4ba-49a2-805a-5841024be48c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac4adbe-654b-42ec-aa51-911726f26355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64be2b6e-48b5-45c5-ab5c-731df57eae47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d420f7e-9120-4eb5-b688-1af8f31a593e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1169e499-c6e7-4d87-88f9-c871d9ccaed9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d533849-3022-476e-8903-d1ad146b84c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efae8bc0-2acc-4b5a-a7d9-f59742068b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0f3910-68fb-4bad-a4bd-1ca8e309a477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd2602e-23ea-45e8-ac83-17b5d70b597b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37693222-58e3-4599-ace9-4811131dcba1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476c9475-4c32-4028-bad5-6651d20ce1ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "094c8950-8048-4be6-9197-2d32bb93b74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1867ba2f-3641-447f-a8e6-ec61c508fd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451912bb-c3a4-4760-91c1-50e17f56a8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff91ace-ab64-4ba3-baeb-503025d974d2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6029c520-052c-421e-95a5-e06e76e4eff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b3224b-4052-4a92-a3ae-4ee13109e06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac7ea9d-cab4-4a47-8f20-6e621c8ebd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8f8b6e-5949-42f2-8227-360728ffe4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee4e5a1-c128-45f0-a625-6050203e0f5d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c69d357-60c6-4eec-9fad-dc86a48cafc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8594f8-92d6-41e8-a3e8-161c129adc56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b1457d-738e-4beb-ad1b-d0e410e84130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7637f3cf-3625-4a92-83b4-c0e65c46b15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312c9198-8939-416f-8416-c41a1bb3894f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4aab9c-5a61-4548-b45e-b0ff274ed82b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e75d6a-0ee3-46c4-b6bc-78e88fa72049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14924a3-a585-474c-b98f-405948ff9b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3c4a2c-b742-4769-88d5-438049cbccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edf57be-b708-4a7e-afdc-f0c44761b4c4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128a946b-e271-4d81-93d1-9e3970b705fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6113fbc-f81c-4f83-b0b6-1db6a1042acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca09b62-1e01-45df-ac62-f7205d75d5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af32cc96-83d3-44af-bfc8-2dd6b384563a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e19817-9418-4f78-98a1-b679157c5086",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087cc6ca-e521-40c8-b10a-18b32622a0eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b7788a-22dd-4a38-9891-295e20560132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebb9a61-7669-49ce-b8ba-c1f553d30be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c2d64d-5a27-4673-90a5-2df923e8c05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee31881-1382-472d-942f-aa9966123091",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162b6b1e-32fb-4f8c-928b-9b8a03c5414f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5309cd-3add-496e-bd7f-d6999800219b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7f64b6-ca86-430b-9ac6-3b66d2f81a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b1b3db-fd32-4350-8a2e-fe7a014c4367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c434329-6b8f-4ff3-87f1-d0997d5a5504",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dd81fd-6652-42b6-bd28-22be2c5d4097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889de38e-ee2d-497f-b59b-ae9dca66de07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb90045-69f2-4032-9cff-d4f796edf04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15acbe97-20e4-4e01-936a-224a11960df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438d166e-2940-4c21-8868-3758942ea867",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db77097-aab6-4421-ba06-93b4c43367ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1456cac-8184-4c7f-b0a1-6593dd41aabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f169c7-6148-40a4-917e-1c48b12a07b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8d43d6-3ba9-45a8-a3f4-bfa40444d501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49404f04-92ad-41ed-b9ae-daff467585c3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3ed143-9d56-49fb-90da-70d41aced03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3929d17d-4856-4448-986f-4f316a3ce162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5847acff-534c-478e-9ad5-9c0ff55a6314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336f785c-cdfb-4536-a28a-011b6f2f7a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdda27ea-1023-4054-beb8-44e8171d957f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74954f2-2af2-4131-8064-2d9530269422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede3c559-d3e4-4dc9-8735-30a436fe4717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e7c9ad-0808-4756-a0e6-e8318a8666d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd06c0bb-df47-4ae3-844b-90c354b99032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a46d24-88b0-426f-8046-ad3b0c8f627f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48061567-9dcc-4224-8edc-ad03d57d756e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de39091c-a690-4ab6-a711-888b58ce41a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987562ba-2f28-4990-a0b4-bcebe7076453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4840c07a-4f13-41f1-8fe1-91965b9727ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816579dc-6a99-42d7-922b-79cb1b888725",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0ec329-b820-4f41-91bb-49bb28f02fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9d7cf6-5ed6-45ae-8809-8bfa2164ec2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e811647d-53e3-416a-9d7d-9e6ad113bd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8392c8-63ed-497c-b61d-c72be68cf6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c15ec8-179f-4b7d-9ae2-2ab7a91d06d9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e8fbab-f3b3-4dc7-b14c-943781f043cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6cdb32-05c7-4ba4-8ae1-97d681397e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636f03a7-2530-494d-b774-cfc6fd3a59e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7c40c3-5d8c-4e0e-b654-85a93da3d919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5fefd1-6abf-4a6d-86b3-e97f5a6cfa50",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0c060f-59c0-4188-8c64-4c8305e94d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44da1ec6-4972-4d95-9c09-c5b85f1cee3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c4dc70-fb7f-4fe4-89e2-a5933a121b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c030ce-c8b3-49f2-bf8e-2a99e2b36809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5b571b-19fd-4017-bd82-fdd8acaedfa4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e52cb60-b718-4d65-8681-cd6ec14ea1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be74d123-f14e-4c5e-a358-dd9797d4667d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38cf217-f6a8-4da7-8a38-6f1c3a16e27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fe115d-881d-4b4f-9029-c0b1c6628d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66350a5-fefa-4b99-bd11-9558e567c580",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476dce87-5c3e-4ca0-a626-990c2c9b1385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2f8f57-847d-4f50-984e-4b3290a08fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb997f6a-1d4e-4bba-893f-a64beacde958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94db3d44-0677-455e-954e-d2fb0f5b647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2088ffdc-8b3c-4442-a7c6-f0dcb2cc3ecf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a79bb7d-c6b7-4bc4-acbd-084ccb451779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ad4745-051b-41eb-aef8-ac2fdbb36b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5a4ff6-b98a-4117-b718-79024a92a452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f8e867-4bbc-4e43-a3d3-6b43fc001e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323503ab-6674-4189-871a-10fe23f54072",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f75cc60-335e-403d-8b6c-8e18163a6f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3599e34a-f580-40af-993f-583871bed52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46891d48-16a7-49cf-a06c-1610507a0503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d315d3f-1be2-4486-89fd-27fdf0c888e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c566225-0fa9-49f1-81f1-be9ba5c1658c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11d8f3f-5b22-4448-83c9-6e3dcb064db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2082662c-0f32-4098-9f05-28c4329d806e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d795930c-6221-446b-8cd8-f439b95a8116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25fef07-cce5-4f49-97a0-f2f0a9c5a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017fe6ac-de39-4d10-bb86-bd2a810a530e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a77fd1-ae55-4866-9537-ef44f6e04622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a96b17-3e20-4fa4-ba43-e1d52d7bd3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b654796-967a-4b68-bb7d-4c7d2cfd93ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378469e3-5903-49d9-832e-ea2efc604e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60feef4-80fa-4e8b-9675-4f0675781c28",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c712ea5c-455f-499f-81fc-3a770d6798f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46b13fc-d6e9-412a-89d0-ca2c3167f20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8885be-db3f-490c-a672-c6ad10bcdd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b8b41d-a7f5-4c93-8bd4-d5a80f542ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07ec537-3f3d-480c-b960-15980612bb0f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaf7176-32c0-46b2-93df-0cbc6a415e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a99b58d-d6b1-4bfa-a181-3b9c52ed52b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d12cd34-d106-4ebf-9cd4-1b167eb750a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9a9017-d639-4b73-a8bf-729d4b98d950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d90f518-6bb1-4219-a4e1-3a7139b4af65",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247ff9c9-efc8-406a-afc9-1a691c765585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b1b381-5262-4cb8-97bb-4676b3f2689f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b2d298-cf44-46d1-9449-ecb3a0aae7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8811276-e4b3-4ac2-854d-11a98721cf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8067258b-caae-4ac2-b5bf-3457a58e7970",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89c771d-1992-43e9-93f5-275a4253a437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bff62b3-b1de-4c2d-b57e-723399483fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e02fd3-5f6b-4690-b410-8f3351d5e7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0deb9f3-2bd0-4efc-a4fb-c78229bc7675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dbe9c4-b06f-41c3-b359-c9fe50d1fdc1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e36c9b8-1640-4d5e-b7d2-fa0ecaa16bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170a7cb2-2d64-4689-bd13-d042b473c9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a648629f-6b6c-4d49-b5bf-5aa246011259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3be8ad3-8263-4887-8247-30c08b8ba62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37e8c54-e1ca-4cac-815a-e76f2f4a44b1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d2a14f-364a-40c4-b6f2-56a9a99ab58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2eb9135-ac7c-4d2c-ba0d-23e8a3ff746e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684be2a7-1655-4992-a895-834810713d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fb4a59-956b-46aa-9b79-a7bd909b8882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444006c9-bd24-4338-88b5-bbfcb2beaa5b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc09a02c-0a14-4fe9-8cd9-51e1c0d2d95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e82b79-6ba5-4d71-8458-5d6d68a635bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b29261-00b0-45d8-a12d-253d73253a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8948ebb2-077f-4163-81d2-9ce40edcd450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe204518-d2ac-4451-b2a6-90f27637c3a8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4844ce92-4552-4e49-8327-12f55b7c1e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f771b0-a640-45a6-bd7e-c111edb7b87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9604ef06-0465-43d3-a080-cc243e5ccd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5ee138-f7a7-4315-b8de-7438dff59c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e4c2c8-20b3-4d1f-bae0-14699b93fd2e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61efc6f6-7f0f-483f-8632-b216e1823df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89ac951-db4d-402d-82d1-9e7f0ee04b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19a894f-6d4a-4382-bf38-786c5b1e718c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4364881b-2bc1-47bd-9602-6f6b7f63949b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630ea1fb-a7dc-4932-91dc-b5aa7cd2c14c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b891ec6-5663-40ad-a276-4cb5ef670410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f71988c-2ce2-4c29-80b3-2823f2f94ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00124913-acd4-4c9d-9e0c-77facb907a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591c03ea-9362-41b2-bcf6-75bf49af61aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2392e25e-79ff-4dfb-84ce-23ac597a249a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcad6035-6e87-4a37-8993-90a82e9000d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bf5805-0838-497a-8f47-af7fce53d7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e81093b-31ad-467e-890e-2563fcb84b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b4ebbe-824e-4764-8101-6971032b5fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64960be9-ad7e-4af2-9ae9-280b40a4292e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1df1d6-004f-446d-bdc0-8aa8f8245dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbcb087-fe90-47d9-a119-3a3dd6a4a760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaa0bc6-6688-4149-bbaa-fb894deee5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add88e30-146c-4d2b-bdcb-1c874055b718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23b143f-6f90-4f1e-ba88-6acc25f2bf66",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab34ddf-92a9-4dba-99e9-42086ba61a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f82814a-7636-4611-a23a-ba88717373d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08ac2e3-26b0-4499-a493-852d632d8cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6578e8-979c-4f74-a559-877ce0c008fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edde75cb-d02b-461d-aeb0-8f8da858b65c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea034523-082d-4c72-88dd-06a0b25d9664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221842ac-c89d-478b-a5a6-d18a5efd9c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fa7b81-bccd-4ea7-88e3-523bdd607dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3784802c-6796-41a9-92d0-cc5223857605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e579047-48c7-4ade-9e44-204a27515fad",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c16194-31ab-45fc-a9cd-97a0d39a1a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d41465-1a61-4e74-83c1-f435e60eab57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1448c2-a988-401c-9acf-fbe6ebd9cb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fde6b7-98cc-4a4d-8c65-a7e38407d97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685624b6-73de-449a-9c0a-9de234072538",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96357c3b-6cf7-448b-b6e5-ddf1e4313f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77f2806-f0bf-4158-822a-22a270261ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a6101e-e31e-4c8a-b117-04d398795aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3108eb9-6b10-4ae4-a188-ea1acfad059c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cdb8e4-2bec-4f26-b2f6-73d1c8c9e32a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482473d8-a58a-41ed-9b79-754f2b663762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ffb27a1-0047-4215-ab2d-ae47483d1994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcc59f9-d008-42d2-9a0e-fa7e8d10b9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09a493a-7548-43ec-9ba3-20a3c670ad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec672944-f543-4b85-ba4c-693c34d36d6a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d46849-3891-481a-8c4c-627f80d55431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe51b52-39b0-4552-bd9c-48eef64214c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e397fc-6127-41e5-976f-535c288de831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f6c9e5-5524-4fc9-ab2f-e817a38c3d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba62897-8692-42df-8170-081e3b332f09",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaab192-5ffd-489c-b015-b58973450e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4c09ee-b521-4135-958a-5e29c1b7986b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d3532d-7cf8-4476-b415-2b0ba6d65f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41382b2-8967-43ab-842e-0adbcb4ea2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648772ad-55c1-4632-b8f0-b25aeda47db1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ec1bd7-5c48-426c-af98-bd3c55a3bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3bd399e-4c42-48dd-8cc0-d61b933677fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b617098-11eb-4012-a6f3-5d0123c19479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c7ffa6-73df-49b1-addc-835cf8a08600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb18243-caba-45e0-b4ff-8d7204829c78",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5983b19c-f546-4eb4-a3d6-26971720aa83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e004de05-d2f2-4517-b024-9a42200b7b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9a9d91-a6fc-45c8-b518-d07da93c80ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e531372f-1b0c-4278-a964-2b7a9d9bb767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8addf729-30b2-4637-84b4-5ae1404db395",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0e5aa5-c4a5-463e-9078-130ab1ce71af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f64cacce-0ac8-4251-bdcc-8e5af6190218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0448ce29-5708-4724-9fee-ebe3eb48522b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4ec499-17f6-46ba-ba14-25b771689f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d07a3f-07b4-4582-9375-6468713a6436",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d45990b-9a57-44eb-8f76-a3d64392d67a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61d3438-13da-412e-9e39-3055173ac1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b291090-e079-4daf-9339-d108db974599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa41ae4-fadf-4b8c-b00c-e3297b7497e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48bf6da-cd85-4907-9407-d7f0a0f2869c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4229791-2c5b-48e3-8e58-58948d08f876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "073911a8-119d-4bb8-aec2-93dc6752f474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488838b0-7461-4d2b-b0c6-f5dd2038468c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30102f4-970b-4712-a5c5-55401347edbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3823b466-3ae4-43fd-9263-eb7ad2be8cfa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3070354-23f8-4494-be45-3eebbd323e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ef0eae-edb9-475b-938c-0908daabb30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218364f2-d0f9-4bc6-82ec-8a0047a046d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7ef4b9-d064-48fc-97ef-ae1f6e35fb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b16be3d-a361-40b6-b218-e134bc45f5e7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e9e7e3-1d60-4dbd-ba52-d5298bb041f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa78f80-0bbc-4e42-a46d-ac1fb3e7dd59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01107c22-5bff-4099-b403-e0137f9a9feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b284e363-5fce-4cad-b88c-f04f02ff15f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125eac6b-78fd-4282-844e-3a1dd73af3d0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ec52b9-0704-462f-bece-b02c091c043e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b04aab3-5f8d-4b89-a9c2-d69d3a762d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed400fc-7834-4093-ac46-bfa52a3825c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68adde08-04a2-41e8-a9b3-666535fd44a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf5af08-69e5-4aa9-a36c-d0c6a64eaa3b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279dd34c-cf1c-48d1-b45b-af9324c297a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a895762d-1021-45d6-b1bf-1d6c77f0d977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27367d3-86f6-4939-8585-fb82fe207959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e8cf08-3e71-41ba-9ffe-48a44cd1323d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b7ee1b-da12-425f-904a-9af9c4947127",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c669ee88-8c1f-4342-b7c5-290aa28f3e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbdd35f6-8a82-4715-afa0-f06383bf4bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2547319-d017-4c70-b86f-ca6c05be59a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655cbdec-e892-4693-b2f6-37e95b2b84d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f675d1-aa39-46b9-ac1c-e560c54c9236",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2154ae3-4b4b-4192-aaeb-310bd3b7d288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1450c77-2989-411f-b97a-b492bb55eede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29926901-ed30-4742-ad17-db0f71cc521a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bc90c1-683e-45bb-93dd-a716f70b471e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc36480-e5e1-4600-a8ea-1d610000b0db",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b5a24d-b810-4365-9f72-acfb09c87b7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aee35d96-305e-4f98-a71c-26549f04d09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb1362b-2981-4173-8bd1-c4fe6bdccf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df138f99-35cd-4484-969e-1ff94c10b6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6d45c4-22e3-47c3-8626-226ef82efcae",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff361932-43e9-4fcc-a2f5-aa41acca97ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b9321a-9259-4848-8e36-a4ad5b55d2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2666f90-f777-44e9-b6d8-2966ee959bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82188ea1-5f69-421f-b1b4-ac3f3a040e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6497d9db-1e51-4d78-a769-3f26370d7ef6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c77edee-f236-4bcd-9711-ca9475dec5f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946312e8-ada1-4c82-bf5e-deed423ca617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d107881d-5968-415b-ba3c-4cab3c5613ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0c1287-7ea3-4c75-beb3-d24a4c647666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93286429-3ab2-4e3a-b0cc-6464cfa47ff6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a923ce83-4b2a-45d0-a5c2-76b54eef6b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7980da63-18da-4bcc-adc4-a732b2a40935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c33486-08e7-4632-af9b-1a13f6273550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813657a9-938b-4a8a-aef4-a0035cd911de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54969ed2-dd02-4caf-ab77-25f6b572f8ab",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f67e2c-0d92-4943-8ff7-965126af2a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ecfd5e-d002-4be3-9f29-525aa9914295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9149e6-eb1b-411d-b3f8-02e053ac9ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369aef08-2ec8-46cc-9c32-cfbcdf94efba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83077962-2581-4a4e-bbc4-f026afb6f411",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef7bbe5-fbc4-4d29-b861-facef0826392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5ca2c2f-b66f-4850-8389-82797eb86a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd7b439-ac70-4ac8-a3d8-d1b67be5a98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c804ca-2df6-4804-8667-0dfdfb44487d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd0b76e-6fde-4da6-b511-db37bc021e2e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92e1e56-068f-4341-bfbb-cacdcf7581bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c1f276-13e0-4668-8246-6d773407bcf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e3347-295c-4855-80e3-0eaeb77ec8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573f0eb7-22d2-41fe-b5aa-3a853fd44b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249dc301-c8fb-4270-8583-8f5b3a8517da",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8f954c-d102-4def-996e-77e0c91a8623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f497c2-463e-46a0-9622-5381c0ec5e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc184594-df37-4966-96a6-343044f2ca0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ca2de6-e6b7-4b58-9398-0eba893904c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e87efa-40fb-4092-9bfe-8dddbd251330",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3898b2-1881-4787-b468-9f777027ce98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ac6103-fd67-49f5-8cf1-3d1eb1b5d6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924d5867-9e6e-44a9-baed-61256ed96dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cca4d44-89f3-49de-aa86-70438826b7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f05f046-5aeb-4e11-b588-f9a1d6e2b540",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fa1d90-1beb-428e-8edf-2d25d56e3dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c541a5e-ee44-4e6b-a76e-f32cf2866e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17139f8b-f14d-419f-b8e0-bf43647811c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffda3214-38dd-4b8f-84ff-c531b89ed4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb43d83-5264-4c61-8e32-a50d9eb298e6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac899c8-2a36-4ed6-b356-33327d0de3c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be689ff-9f07-4cd1-a2ab-dd8bbbe3825b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f370303-3ab4-4fcf-96e6-44ca71f9cebf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee00008-d6b8-4d05-885c-7b7bffa5b179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6803dff0-7de8-47ea-8128-1e2fb1c755cc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1e9ff2-1c22-45c4-8d1c-02a9f0e69c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf754de3-38c9-407e-b098-a72082ba8205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8851d3da-b4de-4287-825d-3f76a121df6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ed8a5e-ea49-450d-9a16-09a0a5cd723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cf45e8-4ca0-4939-8049-1644c9743a50",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf2c990-149e-4cd8-b244-0e318ad2a55b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11a73b8-9b4b-4704-9673-8e17e9eef591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899c601b-1d4e-4783-9dae-b6cc41add340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1cb47f-d7fb-468b-adb6-ccfa23d691e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe0d5e0-b773-4b50-84c5-9776d8cd604c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ad189c-d610-44f9-b74b-4f0b2c505813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a04ca0-7b8e-4ec3-b39c-dcb614acc0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2745506c-75f5-4cc6-8b1f-8329d3caa3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8450de-308f-4f0a-924a-01a4fa94e867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8634f5-bb82-4137-842d-f208c30e0198",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ff739b-093e-4fac-9d64-0123467dab4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa357b6b-dc96-478e-acef-4b5dca49e282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300ab350-2e05-4559-84b5-53797ec9d1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73327a36-f787-4612-93b6-1508aeec3c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b516ca1-f6e7-44bd-864e-725d078fe230",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7754de6-2149-44f4-83e9-09673c03b47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6ec207-b762-4343-942f-fe460605066a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783398b7-7b5e-4790-9a12-bad016eef998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17038307-7c59-4a67-a7ea-b838d8615ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb40b764-10e4-468f-8ccf-ca52eb2ad774",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee9fe38-b425-4513-9c6d-a686373ae26c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fec08d1-a6b8-472f-a2a9-9af2023596d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0027ce93-9855-48e1-8892-9859c00646e4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cae9be-4ebe-4bfa-8929-2a5738948fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2561a02a-878f-492b-8a29-44f97383bae2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6237d3b0-71ea-4622-8aea-18a7521ec4c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "effc7361-8fdd-475e-b98f-638d3f3ffb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04a83db-019c-4a86-bd46-edabcb637005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e04c02-4566-46a6-adb3-6e6d096680aa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a328533c-8fa3-4a92-85fb-4865d2da3426",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b7cc533-7f0a-485f-9099-96001ec28354"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d454da2d-af90-4eb1-8627-e7589938a1d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b1d6b07-5678-4d90-ad85-946aa801c615"
                    }
                  }
                ]
              },
              {
                "id": "5cf8b1c0-df98-493c-8f7a-2c09c1ad46d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f5609b6-33d3-416d-bc0f-24a74e366f96",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efb9e92-f5de-4c63-a241-68a6785074c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "55c9bb9f-8164-4b0a-b1ee-b12cbce9ec29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685a2260-b9de-4572-a249-c14d076cb4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0738de4-6127-4d89-9d68-31625cf99ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17b93b0-061e-4137-9eac-4be62243e592",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eb913c-055c-4041-a5a6-8f3067d9608f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d593afaf-1b6d-4c1b-a0b5-000197c230c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acd1d42-83d4-4949-b27e-c12dc0c1a418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df8cd1e8-f7f6-417c-845e-d1ea6f0c1431"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20422122-4545-4480-bf2a-2bbfd4f04dd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77703a20-1d30-465a-8ac9-6b3201c1d343"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5073761-077c-45a3-89ef-e96f4d1368d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b02f809-7587-4d78-a91d-91600fcf8364"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "0b98ab1e-28f8-4db5-9df0-f0de734aa4fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad0e55a6-8992-431e-aa17-54184ca67ae2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "650ef120-05ce-47e8-bde3-84bb672513b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72eb4399-b779-4147-9969-c4411d597f1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9b47e7a-f656-4738-b028-31350a61c474",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d1695a8-deaa-4d74-a432-b8a937014d72"
                    }
                  }
                ]
              },
              {
                "id": "81758f51-fb86-4442-b6fc-926cbfca10d0",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e0c92b-4632-4ac0-be44-0a8a43824d45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3913091a-dfbe-4ba7-940e-12325b626c96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82521a68-b725-4584-bef2-9601528a5e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50123d21-5ea7-499a-a22b-4d537c1661b5"
                    }
                  }
                ]
              },
              {
                "id": "58fc08ff-a73a-4587-9a37-29f7a05bd4a1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23ee8bb7-3b16-4f93-a389-156a6d08c9b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d83ed1b-543a-41a4-96f9-fb65316d61e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2054a7e-be0b-421a-86cc-f7de1d5b1484",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d18fa2d0-ce9c-46e7-9583-bcbae77bf437"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc5e76af-7752-4d0a-90ed-e1e94c09196c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3a711e07-426a-42c3-b8bf-6457b4467641"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08b44f77-d9bd-4e3e-ab65-44c62b1f2075",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e504e306-07f7-431d-a5e4-a40127ff37b2"
            }
          }
        ]
      },
      {
        "id": "1e9ee47c-6b32-4835-b313-44d25ce135d1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "53e626e0-89ee-4bc0-be6d-a8965a8cadb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f889429-a509-41cb-bf6b-109d0cb2e382",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f449339-2a73-44cd-ae9d-df2ce9a8d5a7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d676a9-bf01-451c-9123-c7ce8bbe278e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6eac9fee-903f-4b68-8fab-02a4db952554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8ddaf6-4167-426a-aa21-71ccd44248ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f3b551c-0e07-4387-8f75-6f0c189118df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b171624-a46d-47a4-a832-f9cde360e44d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d086c6b-0e77-4f3c-a549-ca6529e04c12",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b55345a-944e-4936-bea8-1f2d8455fc63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9cee1b-3b06-41a8-9d45-aa061a7be4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af1de8e4-cf58-43ab-8e37-8c14e4ff4bd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b6dece9-9915-4fc9-8bad-004769bc4a72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9c79121-8b9e-47b8-82f0-49b52fcf2265"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14d49d18-057b-4c5d-a593-c85f201badd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c1a10e3-05ea-4cbd-a48c-92aa7ecf04bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97bce845-4eea-4127-82a5-c314fb4b831d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a1c78d15-5b3c-4bfa-9d0b-dfb258e0f746"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5dfa8329-a7c3-415a-8e42-3bbd4ee68a74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a73d4d1-9f1c-4945-b7ad-9455d3565547"
            }
          }
        ]
      },
      {
        "id": "cd45ba44-6c72-4b5f-a3e7-4fdcc51a1c8b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "74b47d17-9a45-46c7-b25b-2fce8fb8f975",
            "name": "Negative Testing",
            "item": [
              {
                "id": "558aa8c0-26d3-4b3b-94f4-47f0dc6489a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6eb08c1a-6098-4eb2-8291-760f6885a3e2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94212e56-c14e-437e-b984-6dd867d61a94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ccd994d5-d40f-4136-b318-aed8d84fe90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3991b523-b7a3-4d57-b817-2629ee426301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9f6fbe0-f4e2-48c9-8a74-f62389db7a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcd77e5-f04f-49ce-a778-08ae15a32a08",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75609fd0-ff67-4cbb-b35d-6d7298e2faed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd23b7ee-485c-4cbc-b75d-ef5d6c1c63dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eda5cf-bfce-43ba-9828-d0245af5f542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e28f644-1c2b-492c-ac95-a96c769c31fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "799b22dc-af51-4e18-8aab-361b2652b69d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6047503-1c23-4967-8349-0f8432bb35bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5c5e766-9d4f-4aa6-b606-1c0081ce9315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b1a3371-bd0e-4dfa-bf70-50ea5af518b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65d4aae8-d005-463a-916c-ca7d7ed00a66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7097f99f-39a9-43f6-9ddb-25fbfc1d833c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ee25b07-4ca0-4814-b6ba-e3e6bded6fa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82f2c785-614f-4617-941b-22f7aea063f7"
            }
          }
        ]
      },
      {
        "id": "785eada4-81bd-4301-93b4-90260bdbf1f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2687a32c-69bf-40a2-8b29-b700a8dece83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46829903-2b46-4e4e-b68a-ce496afe52d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5be5087-705c-445b-9181-6bd9fbb0d17c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b4325d-f6cb-453f-b83a-a68227d1b6b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "30f070fd-d12a-4667-8ef4-1c10412a9725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c31527-d157-4310-849e-85381b060221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5675b15b-4441-42ff-a503-7af6589d8008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067c2d7a-33ab-4159-a5a1-994cde3f57c9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dc5efd-5ed2-4bb2-abd6-5fae59d11f53",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "170f94e9-56b8-4528-ab06-4fda9a990f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4f29aa-ad31-4b0c-b49c-39bc8e57695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f06decb2-4831-4e08-b974-107df9622459"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "276fe035-79ac-4ace-b5af-717fbd5d13ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d4c29f5-314d-4170-8f46-9c4658bf8f39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c926675-6f0c-4eda-ac14-9e8c1eb39137",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95d4e7b2-85f3-4c05-b088-9fa57752e6d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d1cf6d5-0ca2-4c6e-8ba0-7df7ac28c69e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fc0f79c8-a958-49df-bb3e-8bbb245b6654"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdb28d1c-4694-4ddc-a8f6-470d22d03755",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dc17699-3adc-4e95-a619-a1ffde0547e5"
            }
          }
        ]
      },
      {
        "id": "ed9637be-a23a-4ec4-a36a-cca7535ae2a0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcb1946a-48c2-47a7-8c8c-4caea297e1f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5018832-c88a-44e6-9628-6280d4a730a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "250c1d64-a723-44e8-9fce-d098aaf9b619",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ac5b3f1-b9de-428a-a7ee-382a6193da74",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e075d5c-11e9-47ae-9826-70f4ac4d273f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 437.52692307692314,
      "responseMin": 7,
      "responseMax": 3783,
      "responseSd": 414.7847486789823,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667781982112,
      "completed": 1667782106924
    },
    "executions": [
      {
        "id": "606dae39-3d7c-4ac0-8ce6-aeab93608b87",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7a1d16a5-f33d-4a7b-b20f-639748c4105e",
          "httpRequestId": "409fd9eb-65b2-4940-aa34-e29296a30d5f"
        },
        "item": {
          "id": "606dae39-3d7c-4ac0-8ce6-aeab93608b87",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9b28630a-ecb6-4ee2-b4eb-f2df2867d1f3",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "a5ac2c7f-3952-4bb9-9933-22df9600ed26",
        "cursor": {
          "ref": "9c2ac6b1-202e-4613-8bcc-5c647315df7f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dd5648d1-32e1-4fb7-a975-47b04b11db37"
        },
        "item": {
          "id": "a5ac2c7f-3952-4bb9-9933-22df9600ed26",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bafce2c8-9ba8-4e68-b077-e2e38ce81bb2",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "9fef7a45-0f43-4a93-bdc7-5c45d5c4f12d",
        "cursor": {
          "ref": "acbb4185-f682-48e5-b4ed-4080a7055b9a",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c2caab5c-ae51-4b89-8561-9ef319f477f0"
        },
        "item": {
          "id": "9fef7a45-0f43-4a93-bdc7-5c45d5c4f12d",
          "name": "did_json"
        },
        "response": {
          "id": "861d5ba7-7537-48f1-ba7c-574f56376fe7",
          "status": "OK",
          "code": 200,
          "responseTime": 513,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aa780c-b176-4b83-9a41-d98e8f2be5de",
        "cursor": {
          "ref": "c0490d22-6da6-431d-b78a-86b1e5d4b447",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5dc99e80-6971-4253-b393-d0499528ca53"
        },
        "item": {
          "id": "d6aa780c-b176-4b83-9a41-d98e8f2be5de",
          "name": "did:invalid"
        },
        "response": {
          "id": "20d60805-35d2-4efa-8bbe-6af8f85311bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aa780c-b176-4b83-9a41-d98e8f2be5de",
        "cursor": {
          "ref": "c0490d22-6da6-431d-b78a-86b1e5d4b447",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5dc99e80-6971-4253-b393-d0499528ca53"
        },
        "item": {
          "id": "d6aa780c-b176-4b83-9a41-d98e8f2be5de",
          "name": "did:invalid"
        },
        "response": {
          "id": "20d60805-35d2-4efa-8bbe-6af8f85311bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4444ca-460b-4b0c-bd87-8e4813cb42e8",
        "cursor": {
          "ref": "5f5253b9-d865-4d04-bfc9-4b8511feecc7",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3a0684a4-88ae-44f6-8e60-c1d2330491b7"
        },
        "item": {
          "id": "9d4444ca-460b-4b0c-bd87-8e4813cb42e8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ce0813ed-1e8e-43ab-b676-8e162e0b1999",
          "status": "Not Found",
          "code": 404,
          "responseTime": 596,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d980e53-f854-4ef0-bd61-a949c646b2b7",
        "cursor": {
          "ref": "75aa833b-58b2-4e07-9ed3-71089965f989",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f8884bb8-8566-4dea-856d-8accb97729ce"
        },
        "item": {
          "id": "8d980e53-f854-4ef0-bd61-a949c646b2b7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "665aec08-4b74-45b8-914a-130b0431e4ce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 402,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886ffb8a-888a-4ca2-9ab6-474926a620f0",
        "cursor": {
          "ref": "7ae454f7-cd57-4a88-bf58-dd05ce9adad3",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d442e124-f173-43bd-a708-d583e12ce115"
        },
        "item": {
          "id": "886ffb8a-888a-4ca2-9ab6-474926a620f0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "db9e2763-be0b-4b55-8604-e3b4c37e8cda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ed1993-0cbd-480c-8715-541d41122d00",
        "cursor": {
          "ref": "23ce6a8e-f5f2-4664-8f18-e23dfc89c0dd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "21a481f9-2c2d-4762-96ee-c6dc949a8757"
        },
        "item": {
          "id": "c4ed1993-0cbd-480c-8715-541d41122d00",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cf340bda-e6b7-41a3-a037-d888710a4a13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 406,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ed1993-0cbd-480c-8715-541d41122d00",
        "cursor": {
          "ref": "23ce6a8e-f5f2-4664-8f18-e23dfc89c0dd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "21a481f9-2c2d-4762-96ee-c6dc949a8757"
        },
        "item": {
          "id": "c4ed1993-0cbd-480c-8715-541d41122d00",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cf340bda-e6b7-41a3-a037-d888710a4a13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 406,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a654f36c-b3a1-430d-846a-7a967216e3f9",
        "cursor": {
          "ref": "33dd9628-b15d-428a-9146-5457b442ec88",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "676670cd-e03f-471b-89a8-b97ca5e344fe"
        },
        "item": {
          "id": "a654f36c-b3a1-430d-846a-7a967216e3f9",
          "name": "identifiers"
        },
        "response": {
          "id": "4e0d9a96-9ce4-4c27-ab6c-86e21a68e80a",
          "status": "OK",
          "code": 200,
          "responseTime": 593,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8de39e1-2c1f-42c3-9a45-56c63b7353c1",
        "cursor": {
          "ref": "30bf1196-2d00-408c-ae67-eddb2b8b7076",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9ecdf542-e77d-4ad4-a79b-6968dae9543e"
        },
        "item": {
          "id": "c8de39e1-2c1f-42c3-9a45-56c63b7353c1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ad38e3ae-5189-4b8e-935e-5d9675b99362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8de39e1-2c1f-42c3-9a45-56c63b7353c1",
        "cursor": {
          "ref": "30bf1196-2d00-408c-ae67-eddb2b8b7076",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9ecdf542-e77d-4ad4-a79b-6968dae9543e"
        },
        "item": {
          "id": "c8de39e1-2c1f-42c3-9a45-56c63b7353c1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ad38e3ae-5189-4b8e-935e-5d9675b99362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0a8ab7-6480-4ce0-8f8f-cd324caff23b",
        "cursor": {
          "ref": "1869158d-8f23-4dcf-9343-0c8c30218893",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "faa601a3-8cb1-473c-b25e-534239fe7f89"
        },
        "item": {
          "id": "ae0a8ab7-6480-4ce0-8f8f-cd324caff23b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f7f60e0f-8578-4c09-839d-be4a6ecb844c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20afc33-8290-42ca-974a-dfa020248446",
        "cursor": {
          "ref": "dffab6da-144e-4b55-8ca9-532a317f1066",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e7127c0d-e7ed-49aa-9956-b2096dce4101"
        },
        "item": {
          "id": "d20afc33-8290-42ca-974a-dfa020248446",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9a34ec04-df48-41ff-8338-2f2fd24aff59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd345dd6-af0d-4797-abf8-848008ed276a",
        "cursor": {
          "ref": "a3477c46-32a0-4fe7-bddc-36eacb514c05",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e43b2818-5d62-48f4-bda2-aae418b99692"
        },
        "item": {
          "id": "bd345dd6-af0d-4797-abf8-848008ed276a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a8e51aaa-ac74-4fb8-b25e-6fcf3cb76e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222ae61a-a047-4680-adad-e46dffac9200",
        "cursor": {
          "ref": "b339cc25-ea65-490d-9479-15f7cb0c6e8f",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d09b3e77-c354-4e03-9040-31b6e14e413f"
        },
        "item": {
          "id": "222ae61a-a047-4680-adad-e46dffac9200",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5c19ddd3-864e-4580-998c-3e175d64bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9fb98f-7522-48b0-a642-a157b57df31f",
        "cursor": {
          "ref": "24d2e6c0-9401-4422-a580-594ad8c9b68d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a39dec8e-2a74-4a76-8996-1d652cab2aca"
        },
        "item": {
          "id": "ed9fb98f-7522-48b0-a642-a157b57df31f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a3050339-23a6-4b59-94a0-8a65da986e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2effa197-bcdd-41c5-ad12-873b88e45458",
        "cursor": {
          "ref": "b684df43-a84f-4429-9336-98e7bdcd4f7b",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "811478e2-ae56-42a5-8be1-2cf8c5ff5dcf"
        },
        "item": {
          "id": "2effa197-bcdd-41c5-ad12-873b88e45458",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "401c1513-c663-4acd-9007-f3dc9a354f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2e1c1e-abb9-4a59-b27a-99900aea656f",
        "cursor": {
          "ref": "a9ba891e-2035-4c0c-b895-5f694d1ea8c5",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "acc47130-66b7-4b39-803b-8e852a44b254"
        },
        "item": {
          "id": "9d2e1c1e-abb9-4a59-b27a-99900aea656f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0a74d3c2-692f-47f5-8d6f-c69c42a8fbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8092a9db-19e1-4e8a-ba04-23aaa5ec1759",
        "cursor": {
          "ref": "848018e2-686c-4605-bf6c-9b80ed699446",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6f44e628-72a5-47df-bad9-c43cfdf81fca"
        },
        "item": {
          "id": "8092a9db-19e1-4e8a-ba04-23aaa5ec1759",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cfdd14ba-31da-43ee-9d38-4b5ef9d2e733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd1bc05-9f40-45b1-a6fe-dc06a5871ef5",
        "cursor": {
          "ref": "fe10fd9d-7e92-4868-9184-15248a029a2c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e39d8203-90b4-448a-8a8b-30a3732eccf7"
        },
        "item": {
          "id": "6cd1bc05-9f40-45b1-a6fe-dc06a5871ef5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b2e975a9-8897-47a3-a0c0-79c5acff9be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313843c9-e302-458f-a918-a72f07a5e526",
        "cursor": {
          "ref": "76bd76c9-bbdb-4e94-9d62-bcbce9a9d57a",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8fa087b2-fece-4f5d-8293-33da7e508c91"
        },
        "item": {
          "id": "313843c9-e302-458f-a918-a72f07a5e526",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8842b254-61ac-4fe9-97fd-34420d2fecc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280bd1cc-3a96-4ec7-af5a-1eaf0010c280",
        "cursor": {
          "ref": "f021ee7a-28e1-4d40-91f4-e291e71338c1",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "08930981-b3ed-42b0-b6c2-ac615c1844ff"
        },
        "item": {
          "id": "280bd1cc-3a96-4ec7-af5a-1eaf0010c280",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c7e0b1f8-1444-4fd0-8178-a1988e787876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34854a36-cfa1-499a-b160-056893e3f50f",
        "cursor": {
          "ref": "5a3dfe1a-26ac-454e-bb50-24cd4fcb4f34",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "83da4250-ca0c-4afb-b7eb-368054908172"
        },
        "item": {
          "id": "34854a36-cfa1-499a-b160-056893e3f50f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3789992b-5e0d-4b31-b5d5-e5e86d2d9607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a1b984-746c-431c-8938-0be83bc2f056",
        "cursor": {
          "ref": "e26ba3a0-ba0d-4800-becc-c566869c70bb",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "67357e6d-6b63-4793-ae18-91baf2720e17"
        },
        "item": {
          "id": "c4a1b984-746c-431c-8938-0be83bc2f056",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bc8e6117-6195-4e83-b2de-006574e289d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7ee8ef-a5f0-4fec-a3b6-7c38a24f6f04",
        "cursor": {
          "ref": "ac60409c-7983-4237-8225-544817eeb78a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "427946ab-999b-4bae-9eeb-1bb23bdf1be8"
        },
        "item": {
          "id": "fe7ee8ef-a5f0-4fec-a3b6-7c38a24f6f04",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "64559978-a240-4ca4-85b5-f60961238fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180bccb5-3f3b-4510-b08f-caee7f20f0ae",
        "cursor": {
          "ref": "60ee9a4b-1103-4d7f-a946-a1d7a9283ae9",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1ca892f8-654c-4321-8cde-b1d5a71e8a56"
        },
        "item": {
          "id": "180bccb5-3f3b-4510-b08f-caee7f20f0ae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1a96e252-0d33-40d1-8d65-d4cde1502058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a51cbf-745b-452f-bb5b-e649a725560f",
        "cursor": {
          "ref": "d3090660-8957-4593-be54-a9788bd2761a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2f8b0975-6fce-4686-841e-af5bd973b603"
        },
        "item": {
          "id": "d2a51cbf-745b-452f-bb5b-e649a725560f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3398fc32-313f-4582-8809-47f55cad1a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f087ed7-86b2-44eb-b09f-7c88a08e0f57",
        "cursor": {
          "ref": "aad9478e-712c-4ab4-ba74-d9edbc176c90",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "18e9f46b-9675-49c1-90ab-599e875abdb7"
        },
        "item": {
          "id": "9f087ed7-86b2-44eb-b09f-7c88a08e0f57",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1691c8ba-6a6a-44b0-b31c-bc4bc167220c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe1b513-ea31-44f4-90e8-d477f79ea8a8",
        "cursor": {
          "ref": "20a31c0e-dc89-4dba-85c2-cecca8faa3a3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c147b0e4-b063-459c-82f5-e80a94d9c061"
        },
        "item": {
          "id": "dbe1b513-ea31-44f4-90e8-d477f79ea8a8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5cc4a410-98fa-482d-bf7b-582bfd2b1d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d06ea8-b204-4a16-81c6-4f73b3a4c420",
        "cursor": {
          "ref": "c965f22e-385a-4043-91f1-58dfa8e7247a",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d9d03657-7ad1-4bb1-bba2-3601e8ba351a"
        },
        "item": {
          "id": "e2d06ea8-b204-4a16-81c6-4f73b3a4c420",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "95745645-3e78-4270-9105-9baab766425a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcd92cb-735f-4acd-a1ab-42bac684568e",
        "cursor": {
          "ref": "7bd3b5b8-31af-445e-9157-860a2ebaf7ec",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "49e14ece-f805-43a5-bb7f-feb9ec8e121a"
        },
        "item": {
          "id": "abcd92cb-735f-4acd-a1ab-42bac684568e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "01129ead-952a-4514-8f60-2a880bd815c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a88d5eb-ad4a-4fb9-8560-98b34aea8161",
        "cursor": {
          "ref": "c5d23b58-9a8e-4d0e-82e6-b333a00160ec",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "778b261e-396f-4f6f-9fd6-e540a3d95f0e"
        },
        "item": {
          "id": "7a88d5eb-ad4a-4fb9-8560-98b34aea8161",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "086f8769-b9e9-4c6b-aa20-f23cf13e8219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d71150-046a-4175-b1f9-5333665791c4",
        "cursor": {
          "ref": "21d3f053-220d-468e-a9da-0dbe2c322666",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3456ec0c-85da-4b36-8322-cfa04353c782"
        },
        "item": {
          "id": "12d71150-046a-4175-b1f9-5333665791c4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "de60bc8f-28f0-4e29-b0ab-a983c8b4c679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23ac9e4-87f4-459a-a622-cc24291dfe00",
        "cursor": {
          "ref": "e3c34f35-d8c2-48cd-8cba-bec44cbaaea3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ae5041a3-aeb8-4f83-b2d6-f6782c3e62cf"
        },
        "item": {
          "id": "f23ac9e4-87f4-459a-a622-cc24291dfe00",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "94a17e87-f323-405d-84a3-b830d8e52e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a37b27b-7924-459c-a845-d6f598a3fca5",
        "cursor": {
          "ref": "e5699ba8-1ac7-4fdf-b7b1-9743489daa9d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5de17768-29c1-4e03-9803-f877d37ed2b3"
        },
        "item": {
          "id": "7a37b27b-7924-459c-a845-d6f598a3fca5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2ebc605c-210b-4d46-b78d-c200ba508fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7ea4ee-7845-4d5c-842a-a7dd018a0353",
        "cursor": {
          "ref": "00456a33-5787-4c99-8f87-1a4bed02e9fe",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "07e92e67-070d-42b6-b078-1c0f43390c63"
        },
        "item": {
          "id": "4b7ea4ee-7845-4d5c-842a-a7dd018a0353",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6eb4da6b-44bd-4f78-9e66-582c4588633f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c1e409-6efe-4938-871f-8b87b0357e62",
        "cursor": {
          "ref": "cb199b69-e500-4a22-94ad-762b11c04281",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "04cbc86c-e923-4c4d-bcf2-bb3898ab6b3f"
        },
        "item": {
          "id": "f4c1e409-6efe-4938-871f-8b87b0357e62",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c238c09e-9bd2-4ffd-9f35-8a20c42bd32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5b0cce-d885-4129-aa6f-eef8162652cc",
        "cursor": {
          "ref": "71e34cc8-9406-4f9d-ab13-84481a82af9c",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "214109cd-4893-4dc9-a399-9d059ef69222"
        },
        "item": {
          "id": "cd5b0cce-d885-4129-aa6f-eef8162652cc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cf5baccd-61dd-47f0-8153-e9bc2f61fd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb1b899-1a3b-4b3a-8af4-bcc6199ded09",
        "cursor": {
          "ref": "a158311d-02b9-4dc0-a6ef-8ac7648e8d6b",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "198a36fe-837f-42f0-8ce2-05cf144f6299"
        },
        "item": {
          "id": "bfb1b899-1a3b-4b3a-8af4-bcc6199ded09",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "905482d8-90c4-4611-a309-b549e098c5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e1c669-df33-4d42-badb-769e92f2bcec",
        "cursor": {
          "ref": "9cd86454-83b4-46f3-a291-f70df96ec206",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "20a7b6af-c1ba-477a-8065-04adea5e33b6"
        },
        "item": {
          "id": "c1e1c669-df33-4d42-badb-769e92f2bcec",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6705b3bd-58d3-449e-9d50-966b203f09a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aa1c4f-8d44-4298-ade1-682bbead095c",
        "cursor": {
          "ref": "4250f2b8-1ca5-449c-9016-0e84978db521",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4cd17d1f-c4e9-49df-a051-6e15f2eda7e6"
        },
        "item": {
          "id": "99aa1c4f-8d44-4298-ade1-682bbead095c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d3d3f9ee-0998-4388-a82c-e95d824d0034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d7aad0-2f6f-4c8c-b18c-939aed99ca78",
        "cursor": {
          "ref": "abef3774-fb47-4788-8d9a-4023bf2f0d8c",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1c0734bb-670d-4af1-bdb9-2c97a8e0e101"
        },
        "item": {
          "id": "13d7aad0-2f6f-4c8c-b18c-939aed99ca78",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "27d30046-6735-4b47-abc3-23d1879ad7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69801314-be9f-41f4-973d-340061602384",
        "cursor": {
          "ref": "54639dac-d0f5-43b4-9dd7-a939dd72a96a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9f6f11fb-7e4e-422a-8ba9-0047ae40d572"
        },
        "item": {
          "id": "69801314-be9f-41f4-973d-340061602384",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b76dfe1b-d8b3-453a-90d3-00c2fb517f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39f23df-5c59-4470-a7ac-8fac456241f4",
        "cursor": {
          "ref": "70398377-b6c1-48f6-822c-2754af9c1370",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d6c7623c-7ea2-4b86-ba56-f8ae765cf5d4"
        },
        "item": {
          "id": "b39f23df-5c59-4470-a7ac-8fac456241f4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b91082eb-8e1f-490c-9923-d6eefaa53d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32919ef0-37fe-46ea-9a79-70cf10feae74",
        "cursor": {
          "ref": "131eda2c-8856-4825-a14a-68b99085de5b",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "de53b88e-7fb9-45c7-b2e9-d641f34c6ba9"
        },
        "item": {
          "id": "32919ef0-37fe-46ea-9a79-70cf10feae74",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9040c436-b81d-4601-9208-1166248e73a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a921055-34ea-4243-94f0-13ca0f283d85",
        "cursor": {
          "ref": "1f0a51ba-3594-4d22-8958-456ba8058dd8",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7e3a1c2c-b549-4097-8ce4-f336be3bcff1"
        },
        "item": {
          "id": "6a921055-34ea-4243-94f0-13ca0f283d85",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "18698c3e-97a7-4080-8128-a7ac16041855",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 487,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c5f173-225f-4cc8-9a22-5e9afdce4a5e",
        "cursor": {
          "ref": "0ad53720-3cf5-40b7-97f6-e2c2733917bf",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9c459c08-9c27-4038-bff7-48463fc23b63"
        },
        "item": {
          "id": "15c5f173-225f-4cc8-9a22-5e9afdce4a5e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0be4c722-d1a3-4621-b3c1-9d4db54234ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b355c573-129f-428a-a3b6-685426508270",
        "cursor": {
          "ref": "73a41568-a2f6-4763-90ff-29fb113938cb",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ba88f682-2c51-4d97-804c-e76652f97274"
        },
        "item": {
          "id": "b355c573-129f-428a-a3b6-685426508270",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7909cc34-f663-4f87-9cab-e1ace8dfb77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47c2403-39b6-4957-bb76-ac21648ab1c1",
        "cursor": {
          "ref": "26df4025-7709-4e4a-9750-fbe9fdf280b7",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4397dbd3-a74b-4258-b385-f74ac974466a"
        },
        "item": {
          "id": "a47c2403-39b6-4957-bb76-ac21648ab1c1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4fc4ff49-c8ab-4673-ac49-f067467e873d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcb5f34-86b6-475c-9c26-0bb308b795e4",
        "cursor": {
          "ref": "9f40dfa7-13af-4cfe-89e6-3b70d95b6e54",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5775e961-3938-42c2-8e03-83bc2f7f6ae0"
        },
        "item": {
          "id": "3dcb5f34-86b6-475c-9c26-0bb308b795e4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ed6a78c8-9398-4192-810e-8b7161f9be49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381eff1e-fa91-4f5b-b35d-57e2bfc10783",
        "cursor": {
          "ref": "1bd52213-4228-410f-9b5f-e22dc90f878c",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0487c1ff-b2d2-4aa4-a389-cc1a451e5e2b"
        },
        "item": {
          "id": "381eff1e-fa91-4f5b-b35d-57e2bfc10783",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6a7a7694-75ac-46b1-9e59-ba363b631c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a840a9c8-e607-4a70-95fb-e742d7da9d06",
        "cursor": {
          "ref": "57f85e98-b885-453e-9577-11e1d39ccb51",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3e0f2018-e2c2-419a-9590-227a0d35d608"
        },
        "item": {
          "id": "a840a9c8-e607-4a70-95fb-e742d7da9d06",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9c81ebe8-359d-4386-bdee-0481d0cccb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ef6598-fba5-4039-a151-0fd942f29903",
        "cursor": {
          "ref": "88417985-fb29-44fc-b5c2-3da62be84ae9",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eb1e9a50-2573-4cf4-9fc0-a79609011a0c"
        },
        "item": {
          "id": "86ef6598-fba5-4039-a151-0fd942f29903",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cc7148a7-e0f9-4aec-87bc-1c781b4948db",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 469,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddc6a28-1568-4154-a9d9-ab805e734de8",
        "cursor": {
          "ref": "07d506b3-6cf0-4ead-8a45-8f742f58116c",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3922aa0e-d74c-4676-8ca4-ad0285250afd"
        },
        "item": {
          "id": "7ddc6a28-1568-4154-a9d9-ab805e734de8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3d4ba1a2-4b1e-41f4-9d6c-8d6fc2ebf6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3dc5cd-e49e-48c5-9b65-8c7b57d8c303",
        "cursor": {
          "ref": "de594a2b-585d-4e75-9e44-375e15b2fbb6",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bff279cf-fafd-480b-b113-055606fa5792"
        },
        "item": {
          "id": "1d3dc5cd-e49e-48c5-9b65-8c7b57d8c303",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "abdf459a-82bd-4591-922a-2709837dd062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dae7d8-43cb-4840-8771-3cf0d793774e",
        "cursor": {
          "ref": "61b3f1c5-2660-49d4-8cb2-bb0dc5f79c70",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9fb397ba-02a2-4219-863a-74c3cfd4c66c"
        },
        "item": {
          "id": "a5dae7d8-43cb-4840-8771-3cf0d793774e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d6bc55aa-7aa4-4134-8ffa-9f254d001b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b34a848-80a4-49e8-9168-fddeba3a65b9",
        "cursor": {
          "ref": "3b4840ac-7f0d-4209-92af-e743892eb9c9",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7ee41690-0f1d-4e0e-9e9b-6e2063a732dd"
        },
        "item": {
          "id": "0b34a848-80a4-49e8-9168-fddeba3a65b9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "da112167-3647-4521-857e-4edb5eefeae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67209002-9fe9-49c2-82cd-1bb32ce040c7",
        "cursor": {
          "ref": "345fe295-f858-48da-9808-71b4f636be5e",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c3967c29-c05d-4729-9a9d-4d8bdaaaa087"
        },
        "item": {
          "id": "67209002-9fe9-49c2-82cd-1bb32ce040c7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "991f8785-71a0-4c96-a076-7bed8d4d7415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2669ddc-5ad6-47c3-9ed1-7bca684e3ca2",
        "cursor": {
          "ref": "e8f352fa-4111-4a9f-ad82-78a53d0033e4",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "51f19718-94ff-44a2-b6aa-5b25c10f9049"
        },
        "item": {
          "id": "a2669ddc-5ad6-47c3-9ed1-7bca684e3ca2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1b2c4173-a6c1-49be-bec4-0d762a92754d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdba6ac-5c6b-4c24-8b76-461f3831036f",
        "cursor": {
          "ref": "fb1c3e35-b2e2-46ba-a584-ad6753eee7ad",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6614b396-7069-4c58-8648-b9be4da5ab01"
        },
        "item": {
          "id": "abdba6ac-5c6b-4c24-8b76-461f3831036f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7563082f-7db1-46a5-bf0d-afdfc5a57ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804084c4-f178-4de1-9491-8434139e227f",
        "cursor": {
          "ref": "0fcfaebf-57d9-44da-a985-2bf53ed0eb58",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "642ebd8d-ffd1-4f78-b1d4-51421402e30f"
        },
        "item": {
          "id": "804084c4-f178-4de1-9491-8434139e227f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ef642393-58fb-42b1-b701-eabd85d99e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbf48ba-b33a-4324-9917-9bd675f18e43",
        "cursor": {
          "ref": "a19709da-ece7-4326-b4ab-c7bff94139b2",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "935b6e5c-112f-4383-80d9-a4552d0537d0"
        },
        "item": {
          "id": "6cbf48ba-b33a-4324-9917-9bd675f18e43",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ce747e2b-e6f3-4a48-a41c-f8957936ecee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f96ae2-0a1c-454a-9e53-38c8f8607172",
        "cursor": {
          "ref": "6affaaf1-f86c-4175-bbb6-f126197dbe53",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f419e615-88b0-4ece-abc1-b5ef9a237725"
        },
        "item": {
          "id": "71f96ae2-0a1c-454a-9e53-38c8f8607172",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "be5b630c-ebf7-4545-9ca8-2147bcfb1967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d8f922-ed2e-4991-a14b-9a390d9f8edd",
        "cursor": {
          "ref": "c6c773fd-5751-40c6-96fb-ce415d88f0ee",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "67081f1d-f639-4e35-ad62-ff86e6529f77"
        },
        "item": {
          "id": "66d8f922-ed2e-4991-a14b-9a390d9f8edd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5d869fab-baca-4b5a-8422-21abf1f07d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af3f571-91e4-488b-89bd-b082c6de46c9",
        "cursor": {
          "ref": "67eecf8a-b107-4f70-a251-119a856fbc3a",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bc9f0373-2a39-480d-b14d-edef1efd83c9"
        },
        "item": {
          "id": "2af3f571-91e4-488b-89bd-b082c6de46c9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "42826b44-94f9-4325-86b3-02b1a244ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a234202-d6ac-4a9d-be07-cfafd85f93e1",
        "cursor": {
          "ref": "0253797c-9df0-4461-b314-14a8271ebc8b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c74ca2f4-e61f-45f9-881a-a461a30d352a"
        },
        "item": {
          "id": "3a234202-d6ac-4a9d-be07-cfafd85f93e1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0c1220e8-781c-4b14-9cb7-aa16f9bcc938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b87338c-0c11-48a9-ae4f-8ec4a15cc93e",
        "cursor": {
          "ref": "2f870b3d-e313-4750-8ed1-6a2fa77e84a6",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "43a83527-7e13-4648-a79e-f9c46b011293"
        },
        "item": {
          "id": "5b87338c-0c11-48a9-ae4f-8ec4a15cc93e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e699bc3e-827b-4770-88d6-d802cce91fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285223e4-5e98-4c9d-8328-02e48cdb3003",
        "cursor": {
          "ref": "c217fe2a-bb2c-4f95-8dcf-d698dc94ac79",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "07e00f63-d65e-46a6-8ae5-5af99336c420"
        },
        "item": {
          "id": "285223e4-5e98-4c9d-8328-02e48cdb3003",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7882a06a-2219-44a8-bc70-879efb0c62bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c87d938-a4a6-456b-a4f4-94f64b6c3a7f",
        "cursor": {
          "ref": "d7632671-7b94-430f-b3fd-728024ca9162",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "400a6df6-adb1-4519-a946-28d85b665175"
        },
        "item": {
          "id": "9c87d938-a4a6-456b-a4f4-94f64b6c3a7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a7f25a32-8601-487f-a3d3-03dad508c55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1117,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b27dde-e3ba-4275-aab3-00e4a564850e",
        "cursor": {
          "ref": "11f9c4c0-92d3-4ee3-8dcc-a08302868574",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ab26ab22-a9dc-4544-8315-31d486571ec6"
        },
        "item": {
          "id": "c1b27dde-e3ba-4275-aab3-00e4a564850e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6f801c0e-3e4a-424b-bd94-e7c0b288f9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1024,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bae23d-6c30-4b37-a618-50f41f6e976a",
        "cursor": {
          "ref": "05174447-9ef2-497c-b436-159b8bc851a1",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "90da7039-d89d-4b4c-beef-7e4d36423f62"
        },
        "item": {
          "id": "30bae23d-6c30-4b37-a618-50f41f6e976a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7809b597-eb78-45bb-ac15-70f78f111b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17303dc2-2c36-4a73-ba39-a8152957f7bf",
        "cursor": {
          "ref": "2afbd03a-f154-411b-a298-5f3cf2f90910",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "816db91e-8772-4240-8986-9fbdc70fdd15"
        },
        "item": {
          "id": "17303dc2-2c36-4a73-ba39-a8152957f7bf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7032be4f-45f4-476d-8171-af64e94c6d1b",
          "status": "Created",
          "code": 201,
          "responseTime": 3761,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "4e99dd95-007e-4fa1-89af-6b7c5219390a",
        "cursor": {
          "ref": "f4970e15-521d-43e6-9880-a357c3ff5aa0",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f7a374d3-6e14-4d70-8ffb-27fbd1591a3d"
        },
        "item": {
          "id": "4e99dd95-007e-4fa1-89af-6b7c5219390a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5f985062-21ea-4bfa-80b5-5e1384b8e824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c399092-20f3-4623-bda2-2d46504d35d8",
        "cursor": {
          "ref": "fd85da38-d48e-4ead-980f-3c339fb0964a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "02709700-d29d-4189-9921-0f2cd9710183"
        },
        "item": {
          "id": "8c399092-20f3-4623-bda2-2d46504d35d8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3052b834-cecd-4495-a180-c94ab3f1254e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1b128e-b4d3-4519-a4c4-5aecd55a145b",
        "cursor": {
          "ref": "cfcbeef1-3028-412d-bb88-9acb758b3432",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bbe25c48-9b7a-4091-a532-5a4eaddaa914"
        },
        "item": {
          "id": "ea1b128e-b4d3-4519-a4c4-5aecd55a145b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a61ef6a7-bd91-44df-804b-840757a99b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d7549b-0e89-4d8c-93d3-1bf9d2e1d115",
        "cursor": {
          "ref": "a5a561e6-bf89-451a-9d8a-2bebb8e52602",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cf1c6268-9631-4d0b-85dc-dc631c35f4f2"
        },
        "item": {
          "id": "83d7549b-0e89-4d8c-93d3-1bf9d2e1d115",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c39eac26-f38c-424e-9a02-abe5ab16afac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42670788-0202-4a39-b29b-824af37d671d",
        "cursor": {
          "ref": "432d03fd-3adb-48d5-ab81-d1a55b820338",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2c540d9f-25c9-41ab-b719-e6d5ec3fc101"
        },
        "item": {
          "id": "42670788-0202-4a39-b29b-824af37d671d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ac99cc68-2f1a-45be-a32b-d1be617b0cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4842662-2025-430b-bdc2-2fbc8d3a5264",
        "cursor": {
          "ref": "31b202ae-09a7-4015-a754-ea1d7c5c2bce",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "26da82ed-6ac9-4a35-98c1-040c09f41106"
        },
        "item": {
          "id": "c4842662-2025-430b-bdc2-2fbc8d3a5264",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d47265b2-8371-4274-8ede-8404502a537f",
          "status": "Created",
          "code": 201,
          "responseTime": 3783,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "379ccd2c-6d2e-4e15-ae5e-d7dafde78ccd",
        "cursor": {
          "ref": "7e73bd34-81de-4efe-a6c5-c8270061b2e6",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "164a1b3d-d125-46ae-8322-5dc5f9987c36"
        },
        "item": {
          "id": "379ccd2c-6d2e-4e15-ae5e-d7dafde78ccd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2afaaad4-6c89-4faf-b5da-5e783c25ab49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ec4395-ffe7-4956-b5c7-3ab919ddf73e",
        "cursor": {
          "ref": "3b3be23b-1583-4d47-b794-d1e995168b06",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8b391e83-26b1-4d39-9d99-e3c63b40b2ab"
        },
        "item": {
          "id": "32ec4395-ffe7-4956-b5c7-3ab919ddf73e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ed5a28b9-9fab-40be-8cfe-4a9de6f26d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28c25bc-6504-4800-8bfb-78f4f3159e13",
        "cursor": {
          "ref": "a8a5b1a8-6776-4b84-9e6d-368b359152ff",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f0ae8533-c524-47db-8253-9f2d815c2958"
        },
        "item": {
          "id": "c28c25bc-6504-4800-8bfb-78f4f3159e13",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "126c7e8e-3be3-4a15-92e0-a13e7d4c8474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c6fa6d-258c-4549-89b6-9aaad6af7853",
        "cursor": {
          "ref": "fcc9ddfe-2b95-4309-a467-41e824b8e145",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b71a5629-e618-42d9-a2dd-d1f2c417caa4"
        },
        "item": {
          "id": "14c6fa6d-258c-4549-89b6-9aaad6af7853",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "39380ed5-c240-405e-be65-2382c8fc773b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f46c62c-5d8e-4c76-b65c-85bf0e43bac0",
        "cursor": {
          "ref": "6f7cac24-6083-4e3a-8432-a4310e910cdc",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a312fa3d-3e44-4715-a3f1-d64d801fe332"
        },
        "item": {
          "id": "3f46c62c-5d8e-4c76-b65c-85bf0e43bac0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "676d7045-5521-4311-8303-2a8f3be34f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94605a9c-6c79-4564-8328-22f4c44cbaec",
        "cursor": {
          "ref": "acc8dd09-94ae-4f1e-a466-528d6c4b695d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "273e4937-dbdf-4b5c-90fe-7c30c633924f"
        },
        "item": {
          "id": "94605a9c-6c79-4564-8328-22f4c44cbaec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "979c07e4-a445-4e35-865a-7758bcb9f4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bdb62b-9dab-4ede-8afa-ea8f503ee1f4",
        "cursor": {
          "ref": "2af77b53-54ce-42ee-909f-67fafe77d28a",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1a279ed8-56fb-46bd-ac41-61ca32049f24"
        },
        "item": {
          "id": "c6bdb62b-9dab-4ede-8afa-ea8f503ee1f4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "899531e6-fe0e-4376-8c3d-36111cfaf9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e12c8e6-1b76-4eea-b28d-21869b84faeb",
        "cursor": {
          "ref": "c342d373-10c6-487d-bf74-af92fb49da25",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b0c89243-c3ed-4d6a-932d-aefdd6ff2b9d"
        },
        "item": {
          "id": "7e12c8e6-1b76-4eea-b28d-21869b84faeb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4274c0c1-ad64-4bd8-87aa-fdbdc18e450f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1667aa-dfa1-445d-ad22-226bd9c6d38f",
        "cursor": {
          "ref": "5c8794c3-f58f-4b27-8bac-0e33b94de318",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b3d271fe-419e-42a7-b58c-3b3f6d797d8d"
        },
        "item": {
          "id": "0b1667aa-dfa1-445d-ad22-226bd9c6d38f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1d384ca9-01f4-48d5-b810-3e15f30ba0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db978a7-dc1a-4bcb-90e5-2f34a30578ad",
        "cursor": {
          "ref": "b7f4bde7-b153-41a2-bff5-40a1078b7fc6",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2074fd95-d010-4fa5-98e3-c51180ff0e70"
        },
        "item": {
          "id": "9db978a7-dc1a-4bcb-90e5-2f34a30578ad",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "436680b4-6d5b-4900-89b0-b3ecda0a7972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212170a6-a1e2-4736-8923-a6da0024d156",
        "cursor": {
          "ref": "f6cd21a4-9fe0-466a-878f-fa187ae30090",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b09df8c4-4c18-4f6e-9ce0-d4cb56eca014"
        },
        "item": {
          "id": "212170a6-a1e2-4736-8923-a6da0024d156",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0fcae092-dc23-4bdb-8df8-0502051b6d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14ff35e-e06e-4ae6-9add-cceb213620a4",
        "cursor": {
          "ref": "4b08c766-28e7-4f32-adf0-e5b4014f3f29",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "08cf36a6-1509-4f30-9b10-ecb793f68b20"
        },
        "item": {
          "id": "c14ff35e-e06e-4ae6-9add-cceb213620a4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a5346616-1412-4291-9e5c-0cd4f85ce779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903a97b9-14c9-4bd5-8dbd-d26b63c06b14",
        "cursor": {
          "ref": "c999bd88-4d50-4e1d-8e43-b457046c4101",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "da9dde81-ddce-40fb-bfa7-cb08092a149d"
        },
        "item": {
          "id": "903a97b9-14c9-4bd5-8dbd-d26b63c06b14",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "37a8ad2c-cbb8-4469-b710-dd0a58462712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2ce2c8-705b-48ac-840b-704a00a95213",
        "cursor": {
          "ref": "11dfa705-2fd9-4270-8060-f05b30a928f0",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b86d563c-2093-42a0-ae59-334b95e95390"
        },
        "item": {
          "id": "bc2ce2c8-705b-48ac-840b-704a00a95213",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "93793ca7-c5c8-4b10-8e7f-2ac6cf7c567d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c2d0c2-6ece-4988-9bfe-1c26542e0f25",
        "cursor": {
          "ref": "b0f87f9d-58bc-4113-a5a3-32e3a897ae65",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "37cda670-abe8-411c-bc14-507cdb23d3f8"
        },
        "item": {
          "id": "21c2d0c2-6ece-4988-9bfe-1c26542e0f25",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bf02c90a-2e79-47c2-9deb-22e72b772197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c29df9-aed6-41ef-8914-b9682376cc79",
        "cursor": {
          "ref": "7b035e44-5a98-4d02-b232-0cef330838f2",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a54585f1-0e61-406d-9881-7cd01e1b2845"
        },
        "item": {
          "id": "09c29df9-aed6-41ef-8914-b9682376cc79",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9d595a71-6bc9-4d6b-9d14-28be3b1d3c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071b57a2-390e-49bb-a1c2-146c73ae0707",
        "cursor": {
          "ref": "0aed2808-411e-4dc1-adca-7e0dc57bff1d",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8ea9883d-13ba-40ca-9505-0928a5ab56f8"
        },
        "item": {
          "id": "071b57a2-390e-49bb-a1c2-146c73ae0707",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dda2fe1f-fcb2-4464-b9b8-1547cbd9d4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38575c6-69a2-4092-959e-5e69a8030646",
        "cursor": {
          "ref": "94625bef-0e48-4a7d-aae7-ef7d1fb31666",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a1c8de24-d835-4ca3-b575-daff8444297e"
        },
        "item": {
          "id": "b38575c6-69a2-4092-959e-5e69a8030646",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b56c07da-20c8-49be-bc97-b8694333b299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cdd2a8-c55d-4455-b880-32533c0d81a0",
        "cursor": {
          "ref": "12a10913-2a7e-4e0f-98fe-ea42994a701d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "10a5d6d5-d2c9-400c-abab-33f3ae0a1224"
        },
        "item": {
          "id": "a3cdd2a8-c55d-4455-b880-32533c0d81a0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "67082254-09be-442a-a495-14e87e00ffeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f147f9-3ca9-43c8-9b70-d5a489916bec",
        "cursor": {
          "ref": "00ffab50-f95c-4516-89d9-92dfdaf455ba",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b3f64c45-839b-4381-aa97-597032a9a322"
        },
        "item": {
          "id": "11f147f9-3ca9-43c8-9b70-d5a489916bec",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fe66a336-8a8e-4bb6-858f-7a6087d462cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dc7730-cbf4-4bfc-9e42-976d364dc9b8",
        "cursor": {
          "ref": "360f85ed-772f-45cd-a1e7-57db3922fa66",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f8817f2c-85a6-4a6d-8e6a-421e644fb058"
        },
        "item": {
          "id": "b4dc7730-cbf4-4bfc-9e42-976d364dc9b8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6e158db-1512-4763-9006-2077c5c56b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1d0eb6-fb5b-4a54-bc9e-a38ccc46efba",
        "cursor": {
          "ref": "b1a9525e-ecaa-453d-ba22-7476277d3b3e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e441de38-d567-4711-a187-d256fce59d6f"
        },
        "item": {
          "id": "0e1d0eb6-fb5b-4a54-bc9e-a38ccc46efba",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e16d8220-c6dc-44ea-a40d-9c81dc2f5969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7fabd2-cc5c-41a0-8895-622a6bb4b5c0",
        "cursor": {
          "ref": "2f9326c2-9579-46e5-944f-8ee74a0307f9",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5035ab4e-1b78-416b-9926-ccd363a3b40e"
        },
        "item": {
          "id": "8a7fabd2-cc5c-41a0-8895-622a6bb4b5c0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e925ef3f-1f20-4680-8f5d-a73d8cd1138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5948f1-ca07-4c19-a8b1-511f0a6e66de",
        "cursor": {
          "ref": "2b72384a-f820-4a86-963c-1faa7d30fd41",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "69904cda-4d4b-4a9e-abd2-abbd396aa5e6"
        },
        "item": {
          "id": "6c5948f1-ca07-4c19-a8b1-511f0a6e66de",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ad241c28-b5b5-452a-90f9-83cbcf9b55dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bd37b8-960c-4fef-93fe-b6490ccd8070",
        "cursor": {
          "ref": "f8653a69-d8fe-44a2-ab16-681e6ceb782d",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "92045eca-4e60-4325-81b2-998c45d52c9b"
        },
        "item": {
          "id": "d4bd37b8-960c-4fef-93fe-b6490ccd8070",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "46626f61-78e1-45b2-97d9-777f85177518",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a70915-638f-40ee-a1af-fdfe1f0d003d",
        "cursor": {
          "ref": "d96f57c2-425e-4c47-83b0-2f4f620c7ea7",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cb06151d-aaca-4bd8-a4df-079a2f4b634b"
        },
        "item": {
          "id": "59a70915-638f-40ee-a1af-fdfe1f0d003d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0a1c09f9-e848-44b4-a79e-b3f4ac7edcc2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 411,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6837c81c-1b70-4bf9-8536-5a424203c194",
        "cursor": {
          "ref": "dda7296d-539e-4d9e-a72c-06754ff5c1f6",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8f8e80de-767e-41ec-8da0-6624d40b855b"
        },
        "item": {
          "id": "6837c81c-1b70-4bf9-8536-5a424203c194",
          "name": "credentials_issue"
        },
        "response": {
          "id": "22a2a1a2-29bf-4397-aa9c-fe59275d2f25",
          "status": "Created",
          "code": 201,
          "responseTime": 1722,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e35018b-60d4-4abc-9b5b-f55176fa710b",
        "cursor": {
          "ref": "f62fa883-a8e6-4648-b942-ebdbe81af4aa",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6be3e5de-f177-4c17-b890-475a3194bb6e"
        },
        "item": {
          "id": "7e35018b-60d4-4abc-9b5b-f55176fa710b",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "201c0284-82af-4213-a20c-479d3f1a8393",
          "status": "Created",
          "code": 201,
          "responseTime": 1701,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155b515f-7ab2-4f36-8d2a-eb4c99ffe17f",
        "cursor": {
          "ref": "59b72a02-e8a9-45d5-b0db-60785c65104e",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4072c4a6-b184-470c-9db1-a0ee010270a7"
        },
        "item": {
          "id": "155b515f-7ab2-4f36-8d2a-eb4c99ffe17f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "99b566cf-1dc6-4f60-aa3e-697370192731",
          "status": "Created",
          "code": 201,
          "responseTime": 1633,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cd9688-8397-4847-b74b-ee6aa6526f8f",
        "cursor": {
          "ref": "f11bfd87-9d7c-47ee-954b-d5cd8c71e162",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8167aa96-a677-457b-8088-be3b2749e00d"
        },
        "item": {
          "id": "b1cd9688-8397-4847-b74b-ee6aa6526f8f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b7e25b88-faa5-4427-9a3b-a249569ad5ea",
          "status": "Created",
          "code": 201,
          "responseTime": 1599,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8650d7e-9155-4f78-81ab-1a7e343dce5a",
        "cursor": {
          "ref": "dbb7d198-1923-4217-a641-5fde5745d3e6",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "50c048f3-9482-4a79-8cf8-7b449d5f9b1d"
        },
        "item": {
          "id": "c8650d7e-9155-4f78-81ab-1a7e343dce5a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f665a13b-c2f4-4e0b-9683-34684cf7206c",
          "status": "Created",
          "code": 201,
          "responseTime": 1499,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0314b82-f293-41d1-9114-ad67330ad008",
        "cursor": {
          "ref": "e67ccbba-7433-4a57-ba1a-5588ad5292f6",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "795f3144-fb37-47ca-af33-41417f9e1c69"
        },
        "item": {
          "id": "c0314b82-f293-41d1-9114-ad67330ad008",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "030f4b34-7883-4bcc-8836-56920fc36a13",
          "status": "Created",
          "code": 201,
          "responseTime": 2200,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dfd216-bc1e-4d84-ae8e-655941848238",
        "cursor": {
          "ref": "af491932-424a-4f1b-bfb0-410b01e61f2e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ef8d1dec-2cb5-4496-abab-54a42f1724a4"
        },
        "item": {
          "id": "b4dfd216-bc1e-4d84-ae8e-655941848238",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7de72169-792d-474b-a5bb-a0936553b233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dfd216-bc1e-4d84-ae8e-655941848238",
        "cursor": {
          "ref": "af491932-424a-4f1b-bfb0-410b01e61f2e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ef8d1dec-2cb5-4496-abab-54a42f1724a4"
        },
        "item": {
          "id": "b4dfd216-bc1e-4d84-ae8e-655941848238",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7de72169-792d-474b-a5bb-a0936553b233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed689afc-744e-4b3f-9cef-c2d6e30a420c",
        "cursor": {
          "ref": "c288479e-da06-4295-91d7-8181031dede9",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "54f80654-218c-435b-8d5b-802610c73d6b"
        },
        "item": {
          "id": "ed689afc-744e-4b3f-9cef-c2d6e30a420c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9ad586b1-b73a-4c60-9962-b646e1bb8d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11c63d7-9777-4114-9d74-6da2de42df88",
        "cursor": {
          "ref": "1f463733-d87f-4c4d-b484-650ee1a773d6",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5ce4b65e-080e-48ef-953a-14fda05d8ea1"
        },
        "item": {
          "id": "c11c63d7-9777-4114-9d74-6da2de42df88",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "db624788-d65e-4ba8-af05-564144d16c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997575ff-1493-49f4-90d9-637b0e359740",
        "cursor": {
          "ref": "058d8f8b-9dec-411c-86d7-66c592b4c9f6",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f8b85c82-7897-4840-8c5d-c19192c3aad9"
        },
        "item": {
          "id": "997575ff-1493-49f4-90d9-637b0e359740",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d2344a94-d01a-46d6-b49d-61d6a70ce4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73c0e4e-2e0d-490b-8c79-b301c7f144b3",
        "cursor": {
          "ref": "63599588-fb65-4209-8f70-af8f52efc1f5",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c876090c-395f-4e98-a46e-f6a995a55c6e"
        },
        "item": {
          "id": "b73c0e4e-2e0d-490b-8c79-b301c7f144b3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5a887dc1-a522-4f12-88a4-b3d4561a749c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2be051-ba38-40b9-bfa2-910e1d77dc14",
        "cursor": {
          "ref": "4d2a3dd7-311a-4b10-be5f-417e14bc78e0",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8cc9161c-e552-41fa-8321-6c600e5a9f56"
        },
        "item": {
          "id": "7c2be051-ba38-40b9-bfa2-910e1d77dc14",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "03ef2438-f3c7-47df-a952-a680ba1bab5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494f7c78-2a07-44ba-85e7-1eea6194a4f5",
        "cursor": {
          "ref": "75bd8cd8-73cf-4552-bd26-758ad7dbf463",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "db4b43b9-9c02-48ec-bd40-bfc08501275c"
        },
        "item": {
          "id": "494f7c78-2a07-44ba-85e7-1eea6194a4f5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "afe2b427-db58-4d3c-94f1-2fe556cb6458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837851e4-d0f0-48e1-be81-e9320944df45",
        "cursor": {
          "ref": "cc5715bb-7cb8-4733-98d1-4c3a09372b79",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c79c8401-2c14-4b15-843e-957432e96eca"
        },
        "item": {
          "id": "837851e4-d0f0-48e1-be81-e9320944df45",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b324b849-344f-4fd9-a88c-f26dcb32831b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b18d48-ad33-4e4a-abcb-153cadc68ca4",
        "cursor": {
          "ref": "0e2f980a-43b2-4632-a477-a55cc41abb98",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6bd45ec2-484c-4bbb-b039-183ebfc4164d"
        },
        "item": {
          "id": "70b18d48-ad33-4e4a-abcb-153cadc68ca4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e3038a04-bb6a-42d5-aac4-91ebc57e9454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1e6f02-5923-422e-b3f3-2b61a3d59cc3",
        "cursor": {
          "ref": "cb1acc34-d3ad-4ada-97a1-4a6aaf8e652d",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "93d6cbe4-0ef3-4b23-a76c-e5b10b181140"
        },
        "item": {
          "id": "db1e6f02-5923-422e-b3f3-2b61a3d59cc3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0c8acbbe-705d-4619-b1a2-00a6533fc3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc97d7cf-db24-4a16-8c30-77855b400dfa",
        "cursor": {
          "ref": "1e04a861-5914-496c-b333-edbc0c72187c",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48f2c149-5296-415c-9082-9317bfd4d83a"
        },
        "item": {
          "id": "bc97d7cf-db24-4a16-8c30-77855b400dfa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9c0d31fe-9a2b-4f8c-a7cf-3a8084365857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54a201e-8a82-4210-8822-e4289f9f4d53",
        "cursor": {
          "ref": "f1fb83c3-8ec5-40b3-8802-7de5652087e1",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f02bb64b-d29b-41d3-bb35-3ef69e0b32bb"
        },
        "item": {
          "id": "f54a201e-8a82-4210-8822-e4289f9f4d53",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0bbda713-8888-4afd-9ac5-b84f0cb4e4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37be570b-d740-4b10-8b41-458bbfb552c1",
        "cursor": {
          "ref": "067a3fe3-9783-4f2b-b6bb-89ca329c8e3c",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "03446bf3-de9a-4e8d-9876-fa219b1e09d8"
        },
        "item": {
          "id": "37be570b-d740-4b10-8b41-458bbfb552c1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "048d39ab-96f7-4063-9f80-ac766a2e4431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ab30a9-c573-4e48-aded-efe679b3aed8",
        "cursor": {
          "ref": "50d3fb82-5cec-4d29-97dc-30548c165192",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7097657d-5970-417c-a85d-7d257ca18bf6"
        },
        "item": {
          "id": "f6ab30a9-c573-4e48-aded-efe679b3aed8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a8fbeec7-a2c9-470e-87cc-bf08af89837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a236012b-0eb0-415f-8916-3d6f7489d0b1",
        "cursor": {
          "ref": "d11452d3-0b9f-4209-9e9d-5145bd316179",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0f2e86de-7e1e-4154-a3d6-a3db039d99a2"
        },
        "item": {
          "id": "a236012b-0eb0-415f-8916-3d6f7489d0b1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ffabbb59-7988-47d9-9c41-76f96361f270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6df3c6a-d58e-4aec-8ed9-ea5cfa069ab9",
        "cursor": {
          "ref": "51c8110d-ef80-4425-80a5-b5ee814e7262",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ce7fe93f-4b1f-4a13-b9d8-d8e2ac209579"
        },
        "item": {
          "id": "c6df3c6a-d58e-4aec-8ed9-ea5cfa069ab9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3d966507-3599-4302-b739-d0e8b4b0426c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4178e744-ff2c-406a-9aaa-ceb09983b81f",
        "cursor": {
          "ref": "05250d91-80c2-4565-be70-f7a3b22e4074",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bfd76b6e-350e-4640-af2f-32b170403c9c"
        },
        "item": {
          "id": "4178e744-ff2c-406a-9aaa-ceb09983b81f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b24eed1a-9956-4b10-a156-32ba24e3f2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d85cd7-77ef-4059-8bf4-f56b90c046d1",
        "cursor": {
          "ref": "5845d07e-0a2a-4efe-827b-6548a9d94c62",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "463d84e5-151b-4092-b166-58550f6ffa22"
        },
        "item": {
          "id": "e7d85cd7-77ef-4059-8bf4-f56b90c046d1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d51bcbb-249e-49e9-a71a-2191f35479c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741d5647-2bb8-4c46-8f24-e68b7b40f238",
        "cursor": {
          "ref": "9e1aa257-3b9c-4fec-860b-bf7c674d8fbe",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dc62511a-02c6-4e12-b8d2-ff3bafd8bdd8"
        },
        "item": {
          "id": "741d5647-2bb8-4c46-8f24-e68b7b40f238",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "93ee091f-e9d9-408c-8d62-b5f7c25ee3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d8ff63-cb7f-49c5-807b-381a1708ff5b",
        "cursor": {
          "ref": "c6d20cab-46ce-4159-8327-74e60a2a60a9",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "078c390a-0b3b-417e-99d2-4793da91754c"
        },
        "item": {
          "id": "44d8ff63-cb7f-49c5-807b-381a1708ff5b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "420583ba-4c5e-407e-8c70-63fb2cb1ebab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bf128e-474d-46a2-a835-b23c5ad9a2d9",
        "cursor": {
          "ref": "e8d90a68-f51c-405d-beac-23239f57a2d1",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d50fc714-c8be-48f3-acf1-0395046f7490"
        },
        "item": {
          "id": "89bf128e-474d-46a2-a835-b23c5ad9a2d9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7ccfbbad-2c71-46d2-9074-d2d8d2e72bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a429b5a3-0d5f-4b73-bd64-e413b82a3409",
        "cursor": {
          "ref": "5ef455b4-ad27-42a8-a3c8-62327b4415f4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a3ef4a5e-d384-42ae-a025-c87f7f17f507"
        },
        "item": {
          "id": "a429b5a3-0d5f-4b73-bd64-e413b82a3409",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "345186e9-27ce-46d2-80a6-cdfb167b9629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80cc79f-ab6c-417b-a04f-946eef9c2abb",
        "cursor": {
          "ref": "a38eb756-5ef4-4cfd-b3b6-1e025d4cbd68",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7ce89b66-3945-421f-a476-c76bd7a28419"
        },
        "item": {
          "id": "d80cc79f-ab6c-417b-a04f-946eef9c2abb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7e44a2ba-c789-480a-a592-39731ca3c222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a18ed7-d23d-4484-a98d-88dc19614df6",
        "cursor": {
          "ref": "e9edc47f-c1fc-4999-8777-802558834f3c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ba46ca6c-a095-446e-b5b0-6ca2560b5f54"
        },
        "item": {
          "id": "b1a18ed7-d23d-4484-a98d-88dc19614df6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0e04e7a8-a35b-4d81-bb56-0686e2c415f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a64c12-e187-439c-aab2-0481f1528775",
        "cursor": {
          "ref": "48ab4a9a-9edb-41a0-8bf8-4456933fe2bd",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4a3d21b5-6921-4af2-91d8-033dbe2d321e"
        },
        "item": {
          "id": "30a64c12-e187-439c-aab2-0481f1528775",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0870b80e-bd3b-4f77-bd57-d8c86c9c54a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec27035c-b5c6-485e-9cb4-8cde72faae76",
        "cursor": {
          "ref": "43beea80-02f5-428e-907c-6bd3f4d1ed70",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f375701b-72a3-44df-98c7-962dbdc9d4e8"
        },
        "item": {
          "id": "ec27035c-b5c6-485e-9cb4-8cde72faae76",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c940aec8-0f9f-486a-9983-b361bc89078d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59269491-fa7e-4d17-8d34-fbf92577d923",
        "cursor": {
          "ref": "b8496b6c-2da5-4846-9704-2933e0d65103",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dbc17a2c-459c-4a32-b93b-e1d2b1db06a9"
        },
        "item": {
          "id": "59269491-fa7e-4d17-8d34-fbf92577d923",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0b45ef8e-c0fe-4566-b351-719183c56b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dacf8bf-3213-4a87-8792-37030cbf36d5",
        "cursor": {
          "ref": "7c3f282b-e7b8-4c45-8d4f-b9ecb1af08ef",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "338126f6-8e95-4326-aa10-6098cba28f7e"
        },
        "item": {
          "id": "4dacf8bf-3213-4a87-8792-37030cbf36d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5fde3746-ee87-4f15-b966-f388671914d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17776bc3-ac60-463e-af62-a652bfd775f7",
        "cursor": {
          "ref": "d7e598cd-4ed2-43eb-a241-6b5fb46dc106",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f050dfda-d844-4707-b947-2c14e6434426"
        },
        "item": {
          "id": "17776bc3-ac60-463e-af62-a652bfd775f7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3afacb49-ab62-41f9-884d-2ccb29727259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5512d097-18eb-4dfb-9daf-124146160ea7",
        "cursor": {
          "ref": "3c4d3a48-0349-48a9-bce0-342527f33e1b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "79bf0656-87e0-4779-88f7-cce99ca99fa8"
        },
        "item": {
          "id": "5512d097-18eb-4dfb-9daf-124146160ea7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "58b96146-5bc5-4a42-a320-67ba2f0cb026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6d1897-8abc-45a2-9723-c6388b6c5380",
        "cursor": {
          "ref": "4ef36a41-1db4-491b-8e56-e7524fd6b817",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ee0ee6f5-f3a2-4a09-9d61-8e0a963db69a"
        },
        "item": {
          "id": "ea6d1897-8abc-45a2-9723-c6388b6c5380",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9d6ab932-6ba0-4676-ba4f-e78dad968437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3eedfc-a216-45f0-976b-9f04351518ce",
        "cursor": {
          "ref": "9209e6bb-073a-4846-ad80-ea5b03c9eedc",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6b102941-6aa1-4c40-bb0d-5bd5647c2703"
        },
        "item": {
          "id": "5c3eedfc-a216-45f0-976b-9f04351518ce",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fe071342-853a-4294-a256-b52329f61697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786f95b8-2527-4b8b-8d5e-67f6f4e726ab",
        "cursor": {
          "ref": "ff9ad70d-4b09-4252-9f66-489d51d3b890",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6da58e05-d61f-40dc-be83-7a047ae5890a"
        },
        "item": {
          "id": "786f95b8-2527-4b8b-8d5e-67f6f4e726ab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cef6b8d6-36d8-4bf6-b38f-c90f75aa3444",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89ee1c7-6279-435d-af9e-ae60134793c1",
        "cursor": {
          "ref": "1b3d4823-d6b3-46b9-9093-f749d01e7401",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "667ec5e9-da91-4e9c-b49a-8cdca36632d6"
        },
        "item": {
          "id": "c89ee1c7-6279-435d-af9e-ae60134793c1",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3365f55d-0dd3-41d7-a5dc-e625384cab1c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 451,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f2ad4e-e4ec-4a7a-9a2e-da113a887529",
        "cursor": {
          "ref": "e21ab70b-ee49-4183-a303-e11d55d10674",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fb951166-074e-4e45-a39b-7f150aaa7a4a"
        },
        "item": {
          "id": "14f2ad4e-e4ec-4a7a-9a2e-da113a887529",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "044fda43-00d8-4076-a5c6-c23cda98a1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f2ad4e-e4ec-4a7a-9a2e-da113a887529",
        "cursor": {
          "ref": "e21ab70b-ee49-4183-a303-e11d55d10674",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fb951166-074e-4e45-a39b-7f150aaa7a4a"
        },
        "item": {
          "id": "14f2ad4e-e4ec-4a7a-9a2e-da113a887529",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "044fda43-00d8-4076-a5c6-c23cda98a1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ccbfb8-f1f4-4d7e-b482-b9b4ad466d41",
        "cursor": {
          "ref": "836f6564-880d-4fde-a986-82a60c8d9360",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6b8651a0-978e-4601-a403-ebfaa660bb63"
        },
        "item": {
          "id": "62ccbfb8-f1f4-4d7e-b482-b9b4ad466d41",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "75603f94-61fb-46fe-be5a-4bd8f2971138",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 203,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c206d27c-8009-42e0-b266-67896740b0ee",
        "cursor": {
          "ref": "9c1e29ae-40ed-478c-9507-00668948ae43",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b0e3f494-5f8f-4d36-8cea-203c1e2d8a9e"
        },
        "item": {
          "id": "c206d27c-8009-42e0-b266-67896740b0ee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dc2e5409-e35e-49a6-8c5b-0768881cab94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99df475-ec4c-4b78-b689-91eead54a669",
        "cursor": {
          "ref": "651ae1ac-1f3c-456c-b30e-1429d8411294",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cb2b12b7-eae4-49d9-a99f-92f9c0d6ef1b"
        },
        "item": {
          "id": "f99df475-ec4c-4b78-b689-91eead54a669",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "29b79344-dda2-41a0-b51f-2027397e0fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903b4be7-56a2-4b9d-9598-23773b5fe3a4",
        "cursor": {
          "ref": "ee0ba126-9e20-488c-8145-4d12b4f0ec96",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "44e68605-820f-4af4-ac13-0f4ba8d6fec4"
        },
        "item": {
          "id": "903b4be7-56a2-4b9d-9598-23773b5fe3a4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "530bd190-5f23-4ac2-a27f-fb7d4b364231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc75080a-6dfe-4e9d-a2c2-6ba9ff919bfc",
        "cursor": {
          "ref": "9d99897a-b674-40d7-a50e-0c50143f2a45",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5346ca77-cf7c-454d-b3ae-af5dcdf6c063"
        },
        "item": {
          "id": "bc75080a-6dfe-4e9d-a2c2-6ba9ff919bfc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0794407d-7120-4024-aafe-d9a9d7618677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6391973-1a90-48ac-a11e-ebad01c7390b",
        "cursor": {
          "ref": "12b4e326-5247-4e47-bc4a-82b42ae64825",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "99a8c321-88a0-422d-92bf-f507cf7d5c3f"
        },
        "item": {
          "id": "a6391973-1a90-48ac-a11e-ebad01c7390b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b4703d7f-a026-4f50-8188-73986609f6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171285b0-2f01-4001-815f-1894513b49f6",
        "cursor": {
          "ref": "91e36ab5-ef74-4343-9f86-a6a10b4208a7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "97591466-ba54-4066-bbf2-29d421251d00"
        },
        "item": {
          "id": "171285b0-2f01-4001-815f-1894513b49f6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0270d54f-3ff4-40a9-9b89-e160112a28a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb9efaa-71fb-4074-966b-dbca211c6639",
        "cursor": {
          "ref": "843f94f7-269b-4a24-b13e-200b7d1c165d",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f7bddf16-6cb1-49ac-af96-c03350648bed"
        },
        "item": {
          "id": "8cb9efaa-71fb-4074-966b-dbca211c6639",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bb8ffafd-c479-4136-b7d3-76e4b823b63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ea1efe-5ca3-4d45-a329-f62eb93f4f73",
        "cursor": {
          "ref": "cf0352df-bd38-4883-a986-f2ad3480a03b",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cf701eac-b314-4ace-884f-a3c493bb7d37"
        },
        "item": {
          "id": "63ea1efe-5ca3-4d45-a329-f62eb93f4f73",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "449c7c05-40d5-48c3-9ff8-5029348cbc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12d92f3-935c-4939-afe7-d1525ec5d7d0",
        "cursor": {
          "ref": "c3fd88bb-54c2-476f-bac1-37c43d90693e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a785cc27-76f9-4bb4-8332-7230b2fc7be2"
        },
        "item": {
          "id": "d12d92f3-935c-4939-afe7-d1525ec5d7d0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b3c1e92d-ee9f-4443-a701-afc7a17ff6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d712611-693c-4f41-ada8-6565c8ba07c6",
        "cursor": {
          "ref": "87dcdda7-4dc1-413e-91cd-cf6df02d2871",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b69e67c7-23a0-452e-8263-64ec1ec2df9b"
        },
        "item": {
          "id": "8d712611-693c-4f41-ada8-6565c8ba07c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5eb81480-7130-4d5f-a04a-8e51ce0fc5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7198ba-c24b-4da1-a3a3-095035b72dfb",
        "cursor": {
          "ref": "0ff5130a-1c1e-4fa1-b6c3-fc8f2edfac54",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "20c5396d-8cb4-44de-a9b0-4214c7e876b2"
        },
        "item": {
          "id": "dc7198ba-c24b-4da1-a3a3-095035b72dfb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6f22776c-ee8a-418b-a93c-2b62fb8d66e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fc5921-1ed1-4cf7-9d36-50ff6bd9aad5",
        "cursor": {
          "ref": "56c123b1-0731-4ea6-89b9-f13b95d19148",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "55f390f9-85ca-4947-ad04-90f7096a9264"
        },
        "item": {
          "id": "b3fc5921-1ed1-4cf7-9d36-50ff6bd9aad5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "85a9af3d-92a9-4e20-b551-09f9f36d5e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed789ead-dd3d-420f-81ba-a97d0abec873",
        "cursor": {
          "ref": "69f7f550-2569-454c-af42-329be2d32e71",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b9862499-5b4d-447e-97ae-d30c1ef3e3a7"
        },
        "item": {
          "id": "ed789ead-dd3d-420f-81ba-a97d0abec873",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ecff5911-bc73-42cf-aa10-65ebbc9e9fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2362b48b-8487-4476-b5ba-e50c4f7bf26a",
        "cursor": {
          "ref": "d8fbea3d-8099-4f04-80fc-766a091f828f",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "80fdb6d9-bf3b-4c65-957e-9fcc1cc833aa"
        },
        "item": {
          "id": "2362b48b-8487-4476-b5ba-e50c4f7bf26a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b0f5ae2f-dc5f-4c57-b982-f8bef5578072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd7317-4f44-473f-aacd-d78283b80df2",
        "cursor": {
          "ref": "b499d509-bfab-4ae7-bfb2-298106a8b8ce",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "37631a68-5be1-45ef-a355-0aebd7cce644"
        },
        "item": {
          "id": "53dd7317-4f44-473f-aacd-d78283b80df2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "498ec36f-6def-4e25-9a75-6cf42029dcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48f1beb-96d3-4d2b-9d4e-791202960009",
        "cursor": {
          "ref": "c18fbffe-c257-496a-b308-662d39605e8f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d64d4d1f-4ee0-40a2-9a34-38fe7bcec4b4"
        },
        "item": {
          "id": "e48f1beb-96d3-4d2b-9d4e-791202960009",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97d93759-14be-4542-9625-1cf50a72b3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6a628d-eceb-4ab9-ae41-809d1612994f",
        "cursor": {
          "ref": "5e04b970-f9a2-4666-ba84-612c08fd89d5",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e4f8983a-1437-40e6-85a6-facd5734a62c"
        },
        "item": {
          "id": "5d6a628d-eceb-4ab9-ae41-809d1612994f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5dd769a7-abd0-4a63-87d7-6e2d7fb61909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83055d1a-0ed8-4f72-9748-8d34acf777be",
        "cursor": {
          "ref": "db0f0289-5e9a-4240-8ee5-cf64a259e946",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1972ee0a-8525-4f89-8c90-bb12404e9b0d"
        },
        "item": {
          "id": "83055d1a-0ed8-4f72-9748-8d34acf777be",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "870bd6a2-d8d4-46cd-a6cf-f9a9f79bba9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f7b344-70a5-4b96-bb60-0c8828dfb822",
        "cursor": {
          "ref": "5e775eb3-52a8-4080-ab37-0ab8c04c3e98",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6235e53e-12e4-4bbb-88ec-6076051a70f4"
        },
        "item": {
          "id": "33f7b344-70a5-4b96-bb60-0c8828dfb822",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d2122107-7dd4-47df-a533-d701faef9a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30de8683-92ea-4abd-a142-097d7d9e3f64",
        "cursor": {
          "ref": "27ab9546-9651-4019-85cf-aef1c4362315",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e4448b5e-9627-4a4e-a963-06e93732a475"
        },
        "item": {
          "id": "30de8683-92ea-4abd-a142-097d7d9e3f64",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "84b01e42-9660-4ab6-93f6-f2a3388c0ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e156e7da-545e-4605-8dda-c4268347d937",
        "cursor": {
          "ref": "36e35067-5696-4bcc-9981-68c7a7c750f2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9a846382-c2dc-4e59-8d9f-852254ab217d"
        },
        "item": {
          "id": "e156e7da-545e-4605-8dda-c4268347d937",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "04033cc5-987a-4f0e-bff1-25699a4290e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c36a5a-9c7c-4f3e-b79c-a2f99205d3eb",
        "cursor": {
          "ref": "be2c774b-ec29-42dc-9193-5eafe6213676",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7c25a3e2-c24f-43be-9bf1-59e7d237c170"
        },
        "item": {
          "id": "40c36a5a-9c7c-4f3e-b79c-a2f99205d3eb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e8f6cce1-baad-4444-9315-36b0f3d83b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847e5f63-c7a7-4e72-9676-6cb23ba4b317",
        "cursor": {
          "ref": "fd4a6da0-04cc-4b53-b844-91bf58748ffa",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0eb0eebe-afa3-48d3-a358-41b3099fbd2a"
        },
        "item": {
          "id": "847e5f63-c7a7-4e72-9676-6cb23ba4b317",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f854c563-a4bb-46dc-af7b-f5f854f7d159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ffa7b5-f8d8-445d-891c-0b5cdfc8ecc9",
        "cursor": {
          "ref": "191b16ee-9a48-4342-81c6-3da0efce145d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0308e3db-248c-46f5-b3fb-0b26f755bd45"
        },
        "item": {
          "id": "03ffa7b5-f8d8-445d-891c-0b5cdfc8ecc9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e978da77-7596-4282-9243-32a07c726885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6525c44a-bbf7-41b0-bcd8-a6d341faaa42",
        "cursor": {
          "ref": "ad9a591a-3770-4c21-bd33-25a2fd88c12e",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6d3fb1cd-daf7-46ad-bd19-5e8afde1f8e6"
        },
        "item": {
          "id": "6525c44a-bbf7-41b0-bcd8-a6d341faaa42",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c13e6a01-4e06-43b8-9a3d-0f75191a2ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1169e499-c6e7-4d87-88f9-c871d9ccaed9",
        "cursor": {
          "ref": "5b26f9f5-bdc1-4ec3-aeab-fedb08e39457",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "187a3300-e6b1-4f74-97b4-e35bbb334ecf"
        },
        "item": {
          "id": "1169e499-c6e7-4d87-88f9-c871d9ccaed9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e0ab649d-9660-4e55-ae70-433b790db486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37693222-58e3-4599-ace9-4811131dcba1",
        "cursor": {
          "ref": "9245366a-bd04-4464-9bf2-e1c6c49e1396",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1738e1be-252d-4a72-b0e5-65f22c1217e4"
        },
        "item": {
          "id": "37693222-58e3-4599-ace9-4811131dcba1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "28be9fdf-a972-4f7e-af77-a7295f30e880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff91ace-ab64-4ba3-baeb-503025d974d2",
        "cursor": {
          "ref": "1b43edc9-a71c-4af4-9167-fed4acb9537a",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d9c3aa7f-7add-4809-b0e4-ce40ba337a60"
        },
        "item": {
          "id": "7ff91ace-ab64-4ba3-baeb-503025d974d2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1ebaa6d8-7f07-4e10-8419-8f23e74ced0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee4e5a1-c128-45f0-a625-6050203e0f5d",
        "cursor": {
          "ref": "ab5625ef-3da6-4d1a-bb2e-4454f4543e6d",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "24a5c732-acab-45e9-96f0-269389fd8ad4"
        },
        "item": {
          "id": "7ee4e5a1-c128-45f0-a625-6050203e0f5d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2f679295-7bf3-4876-8ca3-c14ce9b7b840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312c9198-8939-416f-8416-c41a1bb3894f",
        "cursor": {
          "ref": "16442d1c-c5d5-4749-a731-5df2f87d50f5",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "132f001b-7909-4f76-a7a6-103ab97842bf"
        },
        "item": {
          "id": "312c9198-8939-416f-8416-c41a1bb3894f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e4a2741e-0d99-4baf-8519-989fef5cec94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edf57be-b708-4a7e-afdc-f0c44761b4c4",
        "cursor": {
          "ref": "5c43dd14-66ad-4328-88f1-cb0e5c6ab4b9",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "53340393-e257-4741-b9e9-89511e3418ff"
        },
        "item": {
          "id": "6edf57be-b708-4a7e-afdc-f0c44761b4c4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31685416-55e6-455a-b82c-b156647be086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e19817-9418-4f78-98a1-b679157c5086",
        "cursor": {
          "ref": "8290e414-0128-4284-af82-2d9e00382d37",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "761036dc-7303-4e95-93ec-c6c5f4b6a353"
        },
        "item": {
          "id": "71e19817-9418-4f78-98a1-b679157c5086",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d14ac5c2-dcfe-4e1e-8732-cde6159e4e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee31881-1382-472d-942f-aa9966123091",
        "cursor": {
          "ref": "187d6dd6-fd8d-4ab6-9548-408e7f04f537",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7a5c2aca-f8c4-4965-ad52-71011a40fdbf"
        },
        "item": {
          "id": "2ee31881-1382-472d-942f-aa9966123091",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fe40afa0-9025-427d-9e43-b41fec7fbeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c434329-6b8f-4ff3-87f1-d0997d5a5504",
        "cursor": {
          "ref": "1639fc65-b88e-4919-bb62-ff4e4bf14a28",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b0c2d69f-b630-4151-88e9-51a54502dfd8"
        },
        "item": {
          "id": "9c434329-6b8f-4ff3-87f1-d0997d5a5504",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "25dcf474-1946-474f-857c-1b87ce9d4610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438d166e-2940-4c21-8868-3758942ea867",
        "cursor": {
          "ref": "d37590f7-043f-41b2-8bfa-0a5612d96c10",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bfb7dafe-3609-4d86-ab84-0bcc19ac7494"
        },
        "item": {
          "id": "438d166e-2940-4c21-8868-3758942ea867",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "15065ffd-3c49-4df2-b57a-c0e0d7067c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49404f04-92ad-41ed-b9ae-daff467585c3",
        "cursor": {
          "ref": "07296869-851a-4b9d-a300-40544c075a93",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0c717431-54f2-4560-b212-271faad9f666"
        },
        "item": {
          "id": "49404f04-92ad-41ed-b9ae-daff467585c3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "24589860-902a-415e-b788-9d6691cbcc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdda27ea-1023-4054-beb8-44e8171d957f",
        "cursor": {
          "ref": "88fd2a34-bc67-47d8-a2f1-4e81a1cd4366",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5aeb24ae-d532-42cc-a3d4-34f201fa1f4a"
        },
        "item": {
          "id": "fdda27ea-1023-4054-beb8-44e8171d957f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3ac1d63f-0428-4d5d-bd74-60ccb0cfec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a46d24-88b0-426f-8046-ad3b0c8f627f",
        "cursor": {
          "ref": "a92c877c-6c77-4ccc-a450-a24337be4cc2",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2bbd1c76-0a8a-4aef-a971-a02e72a0bb92"
        },
        "item": {
          "id": "10a46d24-88b0-426f-8046-ad3b0c8f627f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b0d7a5de-cd27-41d4-81c9-07600d9ff5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816579dc-6a99-42d7-922b-79cb1b888725",
        "cursor": {
          "ref": "a2dd264a-55a0-411c-b288-066906663b0b",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d0def6b5-cf21-4511-9f4c-0128cc953331"
        },
        "item": {
          "id": "816579dc-6a99-42d7-922b-79cb1b888725",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dcc593a9-bd2b-4f48-ab98-0be1b7d4e7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c15ec8-179f-4b7d-9ae2-2ab7a91d06d9",
        "cursor": {
          "ref": "6bf92e71-ce1d-4582-90ab-4db29b229cd8",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "104eb635-e512-458c-98e7-2068fad064d0"
        },
        "item": {
          "id": "b4c15ec8-179f-4b7d-9ae2-2ab7a91d06d9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e555bdfe-d258-49ab-b9bc-213e74d4eb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5fefd1-6abf-4a6d-86b3-e97f5a6cfa50",
        "cursor": {
          "ref": "3eb32d60-b148-49b4-883f-b704e9701fc0",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a8b90311-a9ec-4d0f-a619-3cd9dcae1c38"
        },
        "item": {
          "id": "ce5fefd1-6abf-4a6d-86b3-e97f5a6cfa50",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1851dd75-2545-4db0-87ee-b22c13872cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5b571b-19fd-4017-bd82-fdd8acaedfa4",
        "cursor": {
          "ref": "bb2d2bf9-e0ec-45ab-851b-e4cd2610e101",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b501cf68-85c0-450a-9243-c08468ffb249"
        },
        "item": {
          "id": "0c5b571b-19fd-4017-bd82-fdd8acaedfa4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "db71afd2-6b55-461b-9cfe-9d8d9444cdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66350a5-fefa-4b99-bd11-9558e567c580",
        "cursor": {
          "ref": "0b224259-1bba-4c5b-8f09-57d28e5eb9f8",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cecbe879-d94e-4baa-b5e9-28472cba487c"
        },
        "item": {
          "id": "f66350a5-fefa-4b99-bd11-9558e567c580",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "96046fea-17f6-4487-a713-29346a5d8fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2088ffdc-8b3c-4442-a7c6-f0dcb2cc3ecf",
        "cursor": {
          "ref": "c96298ed-fda9-49c4-9c4d-1c5c6b5dee50",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4b759779-721d-4b63-912e-f90590b93eb4"
        },
        "item": {
          "id": "2088ffdc-8b3c-4442-a7c6-f0dcb2cc3ecf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8a89d2bb-7828-4ad3-95a7-3949e351398a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323503ab-6674-4189-871a-10fe23f54072",
        "cursor": {
          "ref": "731c0a76-c525-4ea3-bd36-4c7543910bb8",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f8e2548b-b607-4e96-adfd-cdf29cdef055"
        },
        "item": {
          "id": "323503ab-6674-4189-871a-10fe23f54072",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7f120793-1414-4ae3-a35d-b2343aecaeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c566225-0fa9-49f1-81f1-be9ba5c1658c",
        "cursor": {
          "ref": "90284594-683a-422b-bc2c-665545f78a30",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "75979171-4afc-481f-bb5a-d3cd4cca4d6b"
        },
        "item": {
          "id": "8c566225-0fa9-49f1-81f1-be9ba5c1658c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d611868c-afbf-4efc-b163-85396e04ecac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017fe6ac-de39-4d10-bb86-bd2a810a530e",
        "cursor": {
          "ref": "d2132b60-dc39-4a80-942e-309c07fbaa9f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "716a4181-ae74-4f6d-ab43-c07b31b89b0a"
        },
        "item": {
          "id": "017fe6ac-de39-4d10-bb86-bd2a810a530e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6e878c87-2342-4f1c-aea2-8bc08df821aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60feef4-80fa-4e8b-9675-4f0675781c28",
        "cursor": {
          "ref": "816886b5-c90a-4053-a0ae-4f656839b856",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0248b01e-f7f5-4b7c-8a12-87f451f534ba"
        },
        "item": {
          "id": "d60feef4-80fa-4e8b-9675-4f0675781c28",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0ed0a234-5cfe-4412-a649-4622f5c4f9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07ec537-3f3d-480c-b960-15980612bb0f",
        "cursor": {
          "ref": "96198e86-fc2c-4e7f-909c-5d4240a9e8d4",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5f797450-8b5f-4365-905a-4075264bc7d9"
        },
        "item": {
          "id": "e07ec537-3f3d-480c-b960-15980612bb0f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8fe0a9c3-f592-4418-87de-ed1f44dd2e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d90f518-6bb1-4219-a4e1-3a7139b4af65",
        "cursor": {
          "ref": "7eda8707-ab35-446c-8b96-f19ee952b9e0",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "22fcf35a-81ac-4459-bc22-595f6444d425"
        },
        "item": {
          "id": "9d90f518-6bb1-4219-a4e1-3a7139b4af65",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3f633026-ca85-4ec0-ad7f-42849e354f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8067258b-caae-4ac2-b5bf-3457a58e7970",
        "cursor": {
          "ref": "87eae1f5-f4c9-4126-a42d-28d49b13253f",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "637b8c5f-c3cb-4546-be92-6b24bc48656c"
        },
        "item": {
          "id": "8067258b-caae-4ac2-b5bf-3457a58e7970",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d57da2fb-3d37-48d0-8fed-3e0fa846f67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dbe9c4-b06f-41c3-b359-c9fe50d1fdc1",
        "cursor": {
          "ref": "f44465ce-577c-4af4-84f9-37561a16ac2a",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b36ea35f-2d80-41f6-983c-bf905edcbe2a"
        },
        "item": {
          "id": "62dbe9c4-b06f-41c3-b359-c9fe50d1fdc1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f2a7c806-e0cf-4fc2-af08-672bb5919537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37e8c54-e1ca-4cac-815a-e76f2f4a44b1",
        "cursor": {
          "ref": "3bcb320a-8474-405b-9fe6-3679d3239c12",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "929db63d-68d2-49ff-883c-23d76c699bf5"
        },
        "item": {
          "id": "e37e8c54-e1ca-4cac-815a-e76f2f4a44b1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "62a058a9-4a4d-44bb-b67f-fc9782ebc331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444006c9-bd24-4338-88b5-bbfcb2beaa5b",
        "cursor": {
          "ref": "98374613-f867-4f0d-8bd9-cda901c18b9f",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3c7b213c-44bc-40b9-928f-637ff846f417"
        },
        "item": {
          "id": "444006c9-bd24-4338-88b5-bbfcb2beaa5b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "24ed98c9-fb04-4ebd-97d8-d26cb068bc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe204518-d2ac-4451-b2a6-90f27637c3a8",
        "cursor": {
          "ref": "3ceb3799-469b-4b1a-958b-b9e21996c263",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ff8b3812-9158-4430-a336-7124b293fe9c"
        },
        "item": {
          "id": "fe204518-d2ac-4451-b2a6-90f27637c3a8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "64c52a84-0810-4b02-9519-198bd5fa8e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e4c2c8-20b3-4d1f-bae0-14699b93fd2e",
        "cursor": {
          "ref": "fcd53c07-779e-4380-b806-8473317d8b03",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "52a677f5-b994-49ab-9009-daf3743abb04"
        },
        "item": {
          "id": "92e4c2c8-20b3-4d1f-bae0-14699b93fd2e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d684f6b4-1e26-4944-a9e3-71617b4d4a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630ea1fb-a7dc-4932-91dc-b5aa7cd2c14c",
        "cursor": {
          "ref": "96517c67-82b3-4e8f-92d3-8c6671f5085f",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9d45347b-f64e-4378-a7fc-c2003badbde2"
        },
        "item": {
          "id": "630ea1fb-a7dc-4932-91dc-b5aa7cd2c14c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "066a7d65-fdbf-40e5-9b56-145416bb8063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2392e25e-79ff-4dfb-84ce-23ac597a249a",
        "cursor": {
          "ref": "c490924d-0acd-4e30-9220-7f7206958512",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4605e22e-90b3-47b7-a36b-416a24c509f4"
        },
        "item": {
          "id": "2392e25e-79ff-4dfb-84ce-23ac597a249a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8f7438e4-a53c-4b55-9711-bd98036f3068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64960be9-ad7e-4af2-9ae9-280b40a4292e",
        "cursor": {
          "ref": "34123032-f67b-4b46-b935-0e406245bd14",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ecd3c01c-64d2-48d2-a45a-e63db903f7b0"
        },
        "item": {
          "id": "64960be9-ad7e-4af2-9ae9-280b40a4292e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dd48ad3f-e8b7-497b-8090-3ff0e0015826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23b143f-6f90-4f1e-ba88-6acc25f2bf66",
        "cursor": {
          "ref": "23bae2b9-ec47-4404-9fa4-846164013157",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cda277a9-65fb-4cc4-9ef2-cbc06f1f80c0"
        },
        "item": {
          "id": "c23b143f-6f90-4f1e-ba88-6acc25f2bf66",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e1571bf5-35d7-43c3-84f4-e8fa882b5b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edde75cb-d02b-461d-aeb0-8f8da858b65c",
        "cursor": {
          "ref": "5827a2cb-88c1-43d3-b75f-ed94ead20eb5",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9666879f-6c2a-48d4-86a4-a6d69cd6b9a9"
        },
        "item": {
          "id": "edde75cb-d02b-461d-aeb0-8f8da858b65c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1e400644-0063-4e18-ad73-4483a69b4705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e579047-48c7-4ade-9e44-204a27515fad",
        "cursor": {
          "ref": "ac77e417-9c29-4973-a3a0-13917d09d305",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2d0b793b-2337-4e37-90fc-5f649ff13ebc"
        },
        "item": {
          "id": "0e579047-48c7-4ade-9e44-204a27515fad",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7e95039f-ef90-44b8-a8b0-00bdc50a5551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685624b6-73de-449a-9c0a-9de234072538",
        "cursor": {
          "ref": "c73b0439-8690-46cc-8b21-7dcebf8234e5",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e6760eb8-7e4d-420a-b28f-5f7623990c70"
        },
        "item": {
          "id": "685624b6-73de-449a-9c0a-9de234072538",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "34121f1c-4647-45f8-8eaa-8523388b1028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cdb8e4-2bec-4f26-b2f6-73d1c8c9e32a",
        "cursor": {
          "ref": "0509c62f-579a-4a15-ac63-4b99e6762ff0",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a88f671d-4cae-4f1d-941b-a4a98e46c455"
        },
        "item": {
          "id": "29cdb8e4-2bec-4f26-b2f6-73d1c8c9e32a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9132d1de-3aa6-4975-b1df-3ad54832e1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec672944-f543-4b85-ba4c-693c34d36d6a",
        "cursor": {
          "ref": "0c72b534-ccf1-4dd5-8611-fa1f0d0495d0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1dc24f39-ba39-4dfc-a41b-078477d18cc8"
        },
        "item": {
          "id": "ec672944-f543-4b85-ba4c-693c34d36d6a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3e4dcf2a-ecd7-4d06-935f-de86c285a4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba62897-8692-42df-8170-081e3b332f09",
        "cursor": {
          "ref": "090bf566-d51b-452b-b935-ed643bef8457",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eab35986-0965-4408-8eeb-745e2aa8b7a1"
        },
        "item": {
          "id": "cba62897-8692-42df-8170-081e3b332f09",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3fc08888-2e31-4269-b523-0407f47f6d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648772ad-55c1-4632-b8f0-b25aeda47db1",
        "cursor": {
          "ref": "46e84c4a-4907-4cc0-b194-46b388f4912d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a69a260f-09b7-4948-acf7-c874bb224ec5"
        },
        "item": {
          "id": "648772ad-55c1-4632-b8f0-b25aeda47db1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "36213f52-11f4-48c4-b7c7-a76958b243c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb18243-caba-45e0-b4ff-8d7204829c78",
        "cursor": {
          "ref": "09fc6686-b82d-4182-94e2-59a97240f11f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "64ce617b-ad58-40f7-a091-b768d8a3f1da"
        },
        "item": {
          "id": "3eb18243-caba-45e0-b4ff-8d7204829c78",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8f608ace-ab01-41a5-9caf-46d76570c31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1488,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8addf729-30b2-4637-84b4-5ae1404db395",
        "cursor": {
          "ref": "497006ba-1b88-44c7-97cc-26ac1b7b727d",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "93e1c9ee-7973-4adb-9b17-49ee5389446d"
        },
        "item": {
          "id": "8addf729-30b2-4637-84b4-5ae1404db395",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "656fabb5-c835-4ed0-af53-9bfbfa4c60fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1567,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d07a3f-07b4-4582-9375-6468713a6436",
        "cursor": {
          "ref": "5b436602-63c7-4e16-8dfa-1765fc160572",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "07aab4b4-cc32-48e1-8c2e-5b960bc0d4ce"
        },
        "item": {
          "id": "57d07a3f-07b4-4582-9375-6468713a6436",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "29286250-e0b0-4584-a08b-c3c55cedadea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1145,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48bf6da-cd85-4907-9407-d7f0a0f2869c",
        "cursor": {
          "ref": "c5974964-3e12-4c10-990d-aaaa878f0532",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c0170e87-4c24-48cf-bba4-ed8c21ad2000"
        },
        "item": {
          "id": "f48bf6da-cd85-4907-9407-d7f0a0f2869c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bffec186-3b6c-477f-893c-d20f5b76592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1015,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3823b466-3ae4-43fd-9263-eb7ad2be8cfa",
        "cursor": {
          "ref": "b0ca5dfb-7c6e-4daa-ae4b-6831bdbbc856",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "88afe6d0-2f3c-46f0-ac80-07bb0f0de933"
        },
        "item": {
          "id": "3823b466-3ae4-43fd-9263-eb7ad2be8cfa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e613d3a0-686c-4688-888f-6473e0b9b6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1350,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b16be3d-a361-40b6-b218-e134bc45f5e7",
        "cursor": {
          "ref": "f5fdf309-4a09-4736-a243-387b0e93d895",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f01db0e0-991b-4044-a2b9-f2437bbd0fdc"
        },
        "item": {
          "id": "5b16be3d-a361-40b6-b218-e134bc45f5e7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "40534d2a-e348-41e3-8622-cd3bf0068ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125eac6b-78fd-4282-844e-3a1dd73af3d0",
        "cursor": {
          "ref": "a21a0dc6-0476-42fd-bc3e-a875d06ca3c3",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c6d34a6d-aae4-482b-a99c-b43d752a28c5"
        },
        "item": {
          "id": "125eac6b-78fd-4282-844e-3a1dd73af3d0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "39c9d165-5898-435c-9c53-4ee012e5e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf5af08-69e5-4aa9-a36c-d0c6a64eaa3b",
        "cursor": {
          "ref": "4f2800e9-1aef-46e5-9e52-f064e5a14ae2",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0d391f04-0dc0-43c1-8345-197b0f6fe61e"
        },
        "item": {
          "id": "2cf5af08-69e5-4aa9-a36c-d0c6a64eaa3b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b6b67977-4451-49d4-a19b-9afe64dd1f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b7ee1b-da12-425f-904a-9af9c4947127",
        "cursor": {
          "ref": "00f9a8a9-8b28-4f0a-ab3a-5aaa1c2ff2bd",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "30907b99-ee13-47b0-bbca-ae1857a7744b"
        },
        "item": {
          "id": "09b7ee1b-da12-425f-904a-9af9c4947127",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6d3a2509-b99d-44ab-8912-dd502f2a80a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f675d1-aa39-46b9-ac1c-e560c54c9236",
        "cursor": {
          "ref": "354c1e69-ca6c-4e1e-a6d0-826abbe7259e",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c037b426-baca-4d26-9380-ea4ab7cfc1e4"
        },
        "item": {
          "id": "26f675d1-aa39-46b9-ac1c-e560c54c9236",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f3c6fa94-cef2-40e6-bfd9-c6c9508f6e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc36480-e5e1-4600-a8ea-1d610000b0db",
        "cursor": {
          "ref": "ed1a6967-3955-4201-a9a7-f0146edb5e0d",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bc9a5d29-9248-4388-a3a3-45d5a3b69f89"
        },
        "item": {
          "id": "5cc36480-e5e1-4600-a8ea-1d610000b0db",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1489a052-5ca7-4190-a4ac-3d20056ae662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6d45c4-22e3-47c3-8626-226ef82efcae",
        "cursor": {
          "ref": "b7adf904-f23b-42a8-b6b9-23f5d086b5b1",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "66e6f3c1-de4f-434f-b8f0-0e9113167b3a"
        },
        "item": {
          "id": "ef6d45c4-22e3-47c3-8626-226ef82efcae",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c3939832-0b49-4b8a-b5af-11b3e1f5ba5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6497d9db-1e51-4d78-a769-3f26370d7ef6",
        "cursor": {
          "ref": "ad6e8bc8-49c5-4f50-b37f-6251b9a41a7f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fad50cea-44e7-4691-a994-c291ab4c729c"
        },
        "item": {
          "id": "6497d9db-1e51-4d78-a769-3f26370d7ef6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "27c15498-a050-482d-918c-01bc6a17038b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93286429-3ab2-4e3a-b0cc-6464cfa47ff6",
        "cursor": {
          "ref": "85eb4519-832d-4612-8d87-98c1a254c803",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "14a40282-acb3-4fb7-be32-e0617b1ba55d"
        },
        "item": {
          "id": "93286429-3ab2-4e3a-b0cc-6464cfa47ff6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "83c273ff-ef3e-4719-b411-5dc1d66fbff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54969ed2-dd02-4caf-ab77-25f6b572f8ab",
        "cursor": {
          "ref": "8f3c3f7b-9f2b-4859-971b-c5284c68fcdc",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1e539093-c026-409f-b86e-5f65f4e942e8"
        },
        "item": {
          "id": "54969ed2-dd02-4caf-ab77-25f6b572f8ab",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7580b6d2-f7a4-40a7-b46b-9375856e0733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83077962-2581-4a4e-bbc4-f026afb6f411",
        "cursor": {
          "ref": "e3be6470-3a31-414a-bccf-9499132a4a90",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dc66c4f5-edb1-49b5-bf2d-eb32b2539a71"
        },
        "item": {
          "id": "83077962-2581-4a4e-bbc4-f026afb6f411",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f86e8a1-6c2a-42b2-846e-0e297cdb2bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd0b76e-6fde-4da6-b511-db37bc021e2e",
        "cursor": {
          "ref": "96c19762-fed6-4647-91ee-f1be562259dd",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a5ac7973-f691-47f2-9ebd-2a46fa1a2147"
        },
        "item": {
          "id": "9cd0b76e-6fde-4da6-b511-db37bc021e2e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f44cb220-c9cf-464b-9679-96acb31a6225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249dc301-c8fb-4270-8583-8f5b3a8517da",
        "cursor": {
          "ref": "6cd54ffc-c57a-4363-8a0b-d325ec4fd845",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f58b54ec-4ea6-4730-bb47-001277ae31e4"
        },
        "item": {
          "id": "249dc301-c8fb-4270-8583-8f5b3a8517da",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "035bb37e-c431-4ec1-bc57-3382afda4d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e87efa-40fb-4092-9bfe-8dddbd251330",
        "cursor": {
          "ref": "3e287e65-577d-40f6-8973-65aa90451ddc",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ed66f5da-41f0-4026-964d-f3b6df82a7b9"
        },
        "item": {
          "id": "50e87efa-40fb-4092-9bfe-8dddbd251330",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b73e276d-8187-4352-98fd-80e6b09696ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f05f046-5aeb-4e11-b588-f9a1d6e2b540",
        "cursor": {
          "ref": "bd4da6fa-947b-421d-8714-27307d38d63e",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "54671172-1f6c-48c6-a253-76965b8a2607"
        },
        "item": {
          "id": "3f05f046-5aeb-4e11-b588-f9a1d6e2b540",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7b85dab2-52a9-4270-a1b3-fe9193739aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb43d83-5264-4c61-8e32-a50d9eb298e6",
        "cursor": {
          "ref": "c5d856d6-d03d-4d26-94c0-ca37818574e0",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "95367877-b67a-4295-a63f-39c294f1b790"
        },
        "item": {
          "id": "efb43d83-5264-4c61-8e32-a50d9eb298e6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f9c22787-aa86-4b0d-bc5c-7ea505a86004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6803dff0-7de8-47ea-8128-1e2fb1c755cc",
        "cursor": {
          "ref": "870c4913-76da-45ea-9d60-0ac9d77e8814",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d33e72cf-074b-46f0-9177-b87e5bb281ed"
        },
        "item": {
          "id": "6803dff0-7de8-47ea-8128-1e2fb1c755cc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0198722d-3e4c-4b88-8eb3-03132a2ad1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cf45e8-4ca0-4939-8049-1644c9743a50",
        "cursor": {
          "ref": "82e0a2e9-5bad-4e6b-94a0-9539736a6a1a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0909e808-8535-47fb-8c4f-8a93cb741680"
        },
        "item": {
          "id": "66cf45e8-4ca0-4939-8049-1644c9743a50",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0a9b07a4-f55f-4844-9668-90ef6b71f71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe0d5e0-b773-4b50-84c5-9776d8cd604c",
        "cursor": {
          "ref": "0096380f-e0ec-4dd9-b86e-0eab1f4c2ff1",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3641f07d-0ce5-4e22-a4f8-41d0f7c015e9"
        },
        "item": {
          "id": "5fe0d5e0-b773-4b50-84c5-9776d8cd604c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0f9f741e-532f-44d4-ae5a-6905869a2043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8634f5-bb82-4137-842d-f208c30e0198",
        "cursor": {
          "ref": "e77ef3b0-0fc5-4432-9d96-a0704dd878b0",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "32073b54-7816-43ff-88e9-4b65ddfe594c"
        },
        "item": {
          "id": "9b8634f5-bb82-4137-842d-f208c30e0198",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "27086f7d-a308-4117-9b73-c070cd7c8735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b516ca1-f6e7-44bd-864e-725d078fe230",
        "cursor": {
          "ref": "3f6bda37-2847-4d85-b18b-bbd49360a755",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "834dd0a9-76aa-40d2-a975-ccbf978cae3a"
        },
        "item": {
          "id": "0b516ca1-f6e7-44bd-864e-725d078fe230",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "35327cda-a4c1-4127-a07f-7257db31951c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb40b764-10e4-468f-8ccf-ca52eb2ad774",
        "cursor": {
          "ref": "987056bf-c27a-4b05-8458-99e06244294c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "17abe082-71c9-426c-8d7f-6ecef8e5bdb0"
        },
        "item": {
          "id": "fb40b764-10e4-468f-8ccf-ca52eb2ad774",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d4996230-b782-49e3-8be0-a0747fc2edba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2561a02a-878f-492b-8a29-44f97383bae2",
        "cursor": {
          "ref": "2bdaf452-91ad-4b83-911e-d1196ef3aa03",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5d2ada40-7f67-4258-9b9d-50af5486c46b"
        },
        "item": {
          "id": "2561a02a-878f-492b-8a29-44f97383bae2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "94e75406-68f3-4959-96ca-314e85d40895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5609b6-33d3-416d-bc0f-24a74e366f96",
        "cursor": {
          "ref": "63a34337-a55e-41ea-932c-f05bc6106ead",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "74ace108-98d9-4007-80e6-9fc4019564a8"
        },
        "item": {
          "id": "6f5609b6-33d3-416d-bc0f-24a74e366f96",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "21228982-af4a-4d38-bf22-f1c4c342ab02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17b93b0-061e-4137-9eac-4be62243e592",
        "cursor": {
          "ref": "fdbe8131-730d-4f91-8247-fc7b39442c52",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7b64b82b-6357-4fa4-b8a5-b65b7727acc0"
        },
        "item": {
          "id": "d17b93b0-061e-4137-9eac-4be62243e592",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "6f8b7216-c611-4baa-88f2-c6017d72a95a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 228,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0e55a6-8992-431e-aa17-54184ca67ae2",
        "cursor": {
          "ref": "fdcd941a-c763-4c28-a547-ed9c20bedb81",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "48791179-a9d7-44dd-942d-7743a71d07b8"
        },
        "item": {
          "id": "ad0e55a6-8992-431e-aa17-54184ca67ae2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8564f534-3378-4ea6-ac08-b7f97a77c626",
          "status": "OK",
          "code": 200,
          "responseTime": 308,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81758f51-fb86-4442-b6fc-926cbfca10d0",
        "cursor": {
          "ref": "3aded179-9281-4467-a194-09b096f38fe2",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "967b1307-b9b2-49f1-83b9-71fcc46b6da7"
        },
        "item": {
          "id": "81758f51-fb86-4442-b6fc-926cbfca10d0",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "db263b70-6379-4f75-bc42-494aa7b0f35f",
          "status": "OK",
          "code": 200,
          "responseTime": 271,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc08ff-a73a-4587-9a37-29f7a05bd4a1",
        "cursor": {
          "ref": "2e0a5cfa-2525-4236-beaa-4caaef459711",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "85d738f3-1e3f-4365-ba98-f0cf05d7124d"
        },
        "item": {
          "id": "58fc08ff-a73a-4587-9a37-29f7a05bd4a1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "89d75168-c90f-4016-9542-4d091f5dbc6d",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f449339-2a73-44cd-ae9d-df2ce9a8d5a7",
        "cursor": {
          "ref": "999f9dd6-018a-45af-bee3-e987943d6e5a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "be502abd-eae7-438d-8566-d0efe193f1ed"
        },
        "item": {
          "id": "7f449339-2a73-44cd-ae9d-df2ce9a8d5a7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "184872d2-9e9f-492f-9041-f71488caed27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f449339-2a73-44cd-ae9d-df2ce9a8d5a7",
        "cursor": {
          "ref": "999f9dd6-018a-45af-bee3-e987943d6e5a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "be502abd-eae7-438d-8566-d0efe193f1ed"
        },
        "item": {
          "id": "7f449339-2a73-44cd-ae9d-df2ce9a8d5a7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "184872d2-9e9f-492f-9041-f71488caed27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f449339-2a73-44cd-ae9d-df2ce9a8d5a7",
        "cursor": {
          "ref": "999f9dd6-018a-45af-bee3-e987943d6e5a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "be502abd-eae7-438d-8566-d0efe193f1ed"
        },
        "item": {
          "id": "7f449339-2a73-44cd-ae9d-df2ce9a8d5a7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "184872d2-9e9f-492f-9041-f71488caed27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b171624-a46d-47a4-a832-f9cde360e44d",
        "cursor": {
          "ref": "8cfafbe4-8c77-42b7-8970-6bdb1e026aff",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f4b5001e-987a-4551-bdc9-cf8058e41447"
        },
        "item": {
          "id": "6b171624-a46d-47a4-a832-f9cde360e44d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d2a8a2f7-7c83-4e15-8e85-1847fc66fdb2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 265,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb08c1a-6098-4eb2-8291-760f6885a3e2",
        "cursor": {
          "ref": "7ffb321f-9a86-4aaa-858e-207ddffab5b6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "707b9162-c18e-4b07-8f94-1e628003f58b"
        },
        "item": {
          "id": "6eb08c1a-6098-4eb2-8291-760f6885a3e2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5c8a22f2-fe00-41c6-ab6c-db7b323597fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb08c1a-6098-4eb2-8291-760f6885a3e2",
        "cursor": {
          "ref": "7ffb321f-9a86-4aaa-858e-207ddffab5b6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "707b9162-c18e-4b07-8f94-1e628003f58b"
        },
        "item": {
          "id": "6eb08c1a-6098-4eb2-8291-760f6885a3e2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5c8a22f2-fe00-41c6-ab6c-db7b323597fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcd77e5-f04f-49ce-a778-08ae15a32a08",
        "cursor": {
          "ref": "0de6e3d0-a5d7-4c19-80d5-65d4b0a00b85",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "10b392c5-0f67-4d14-8221-f7e59e10e82c"
        },
        "item": {
          "id": "ddcd77e5-f04f-49ce-a778-08ae15a32a08",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "848736f9-526f-434f-9d33-6ce88e15ff5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 422,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5be5087-705c-445b-9181-6bd9fbb0d17c",
        "cursor": {
          "ref": "c580e77e-4f87-4697-9f6e-f404000f0fb2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "162bf19a-f763-4dca-ab65-2aaecfd19e46"
        },
        "item": {
          "id": "a5be5087-705c-445b-9181-6bd9fbb0d17c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9ad9d706-2242-4986-856d-2ca950c644ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5be5087-705c-445b-9181-6bd9fbb0d17c",
        "cursor": {
          "ref": "c580e77e-4f87-4697-9f6e-f404000f0fb2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "162bf19a-f763-4dca-ab65-2aaecfd19e46"
        },
        "item": {
          "id": "a5be5087-705c-445b-9181-6bd9fbb0d17c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9ad9d706-2242-4986-856d-2ca950c644ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067c2d7a-33ab-4159-a5a1-994cde3f57c9",
        "cursor": {
          "ref": "94220d11-ba4a-43fd-b901-d34e177ea882",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "25f8d433-e57a-4b7d-8cdf-89ca8ff3590e"
        },
        "item": {
          "id": "067c2d7a-33ab-4159-a5a1-994cde3f57c9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "668295c7-9813-4b95-8ee9-ced2a7f17bdd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 442,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}