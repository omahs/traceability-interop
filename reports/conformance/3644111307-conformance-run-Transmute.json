{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a21988e6-ff16-434b-8b97-8ebc9351ce30",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c2c0e43d-8c7d-4c9b-834f-56f4127cad6d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c837719-f9fe-46c9-8cdd-b96937917f5f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "de403ed7-6ea6-4856-9cf0-5a6d64a23086"
                }
              }
            ]
          },
          {
            "id": "5d1d76e2-1ab6-4450-ae03-a0c88292896e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c33e1fcd-7c27-4f1f-b0c4-4c6e95c915ef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58f365db-0ef1-4710-a824-b3d18826cb07"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6caa844b-1d71-4c37-b01d-f19e1cf7c581",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9f002b3f-5723-42a8-8835-311468ef7be5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d757644-0f2d-4a54-8b64-9c703d7ac3e2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "589704d3-6fcc-435f-88f3-18787e41fbb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2cf2f3d5-3754-49b0-8bda-1b0cd0ffcd95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8a31a1d-aef0-40bd-9a1b-fe07a81c6ef5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ed60028-1df5-4178-bf18-0e8fe2ed29e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0846423b-50d9-4bf8-a32a-0a5caaa10356",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae609f0c-cd30-4be4-89b5-f02199e90326"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32c3199c-02f7-4775-aa8f-12dca85b2b16",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7c5aac12-013b-4d20-be05-1df940b55a3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b30a4ce-3310-44e1-aea0-267f31b7003b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a746bccc-9543-4c81-9274-5ddd115c8fa1"
            }
          }
        ]
      },
      {
        "id": "29b7aa58-d76c-403c-b6df-1f3f7fbbd1ba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4bc221d3-d601-47d1-ac2e-ce1b34322011",
            "name": "Negative Testing",
            "item": [
              {
                "id": "321a7cab-70bb-423c-b709-54df201cb7f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb30d92f-024a-4976-8695-f9acd53fd056",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4883d9-83a8-4272-b797-32c946a4a6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e909c5c3-baa4-437d-b667-2a45a0825d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da266e5-ba5b-4817-9dd9-a0f51464d1c3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab140e11-4ccd-44fd-b327-f25d6a9ac2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36a50690-a461-4322-a81c-53e6c707a33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38c006d-a343-46ea-b0a6-cbfd11f7b1cc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d845ecf-9760-4245-ab00-61135672ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86098789-b284-4e16-bd1f-0ef26f8c53b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da00bcad-5e07-422c-b4b0-e90e6261085c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb0a20c3-3e5d-4fd5-b7c0-0e009fce3497",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a33c50-dbd8-4770-8386-f3bbe769bb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6463eda8-7eae-4001-be10-a032d162b886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce52316-f772-4f9f-8535-46d4c1662f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8297ad48-bf60-4aa8-ad74-1a3f20df9cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e41993c-a205-4199-9a62-644d25738572",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f1f48e-211b-4398-89ad-1834464d2d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e39488b0-9697-467d-bab2-537c84a298c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108a2f70-d2f4-43b5-a068-b8353612f52c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a8c0fa96-7b06-4446-bb93-8e3d64d9717a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "48e2c638-5b96-4655-a7ad-e5ddf2174807",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f1010ad-5f0e-47ee-9f1d-04f51b317be8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca4a5ac-fbb5-4674-a13f-77a1225b641f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3d3e4c2b-9752-4889-ab97-cdbf983d4b56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "370c86a7-d4f8-4519-a7bf-e287c2a22300",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "00c8aca0-552d-4a97-999e-1538f9357d2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be04aa7e-cea4-4565-9c85-12f28497c8b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4521a67b-1a61-4363-9b8c-7ab72202a5db"
            }
          }
        ]
      },
      {
        "id": "aae8adf4-0344-4532-90dc-f69e6b6db825",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "81992409-8169-4d18-aea5-18e5b877b36e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d85d9932-293c-4fb5-8740-fea630442dc4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f3f18072-0087-40b2-97e1-2d7ef8d471f6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae132c5-064c-48a8-9857-2da6f0942664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c098b7a-8969-49f7-ba90-1f2e2382fd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b259671-204e-43ab-a914-f58e9e2a3876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05623f6f-3b66-4570-9f74-ca7e95ff50d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4456e877-e9b1-4d41-8124-ac69405b8e69",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e8099c-a930-43c6-ba27-7d49f524bed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95eafa8f-41db-49b0-95d1-90431033487a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db72571c-1101-4fe4-b341-bad1956feaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5edbf076-e148-41f5-a5d0-53529f3cb797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d474f535-fcd3-4948-9f82-da1cb4f9808d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ea09eb-5352-4dfd-80c8-4dcb1e7b2897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa59fb2d-d786-4bf5-b31f-5d38acd4de34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99f94a0-99a7-4009-9dfa-c8cda32ed4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e07129f4-c382-4900-9e59-c538225fd915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1756f5-4335-4ceb-b479-debf0547dd73",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d7fb1-9c72-46cf-b2bd-4972e9548d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d34b8b-3b65-4ce1-b988-04aa7b7d6613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da13956-a6d0-4c4e-bbcc-5f1febb4b0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ecf29d-eec0-4118-8b6b-14793064a24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994b48b5-65a4-4c0a-93c8-26e12f3f56c9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782ca9af-ecfb-4721-99c0-dde9116124c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea60336-4132-4bab-89f1-9df3b101eb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127480bc-07da-411a-9835-8316be37f139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8247b77-ca42-4cd8-b214-f93a55233e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21497da4-f403-4b96-b763-e6a874784163",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe344da-becd-4544-9355-1d254cf2fb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9ed78e-cc2c-4290-a779-45bac2fc49dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c13abe-c61b-4410-9403-016da388afb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54abaa8d-8cdd-4150-8186-a6d87b31bf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a189c1-41bb-445d-b036-d522b45b1c30",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf55f5e-b7be-400c-8985-3d0d80514c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3910e32-cd6c-4689-a25b-5208bf87ad39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f59c718-bf68-494d-8f11-627846bda239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11d375bc-7630-4346-88c9-13931a0bc48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf51a93-83ef-4760-b221-f230ab3ea938",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc3c4e9-a4bb-47f5-a5b9-e787eb6b2f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46783818-cc6b-4ab8-96ef-61ecdd6fd1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb551afd-161d-46fd-a478-1abe8dc5f3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0f30cda-04ab-4c1f-9f69-4aa93d932961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b8dac7-b71d-45ea-b829-67d705eebab2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cbb923-ef4f-4503-b309-3426f44eb88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de7ef9e-a32c-4077-a571-e0c0edf89b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af102072-c19e-4652-83de-725ab02a8088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb32fc44-fdb6-4dd5-885c-4853cb144d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7ad00e-189f-4d63-87e1-7ee651dd2ccb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9152933b-e733-450f-8303-28ca7305fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22334cbd-002b-43e0-b720-6c75a193227b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9f49b7-0a3d-4c96-ba15-3f8f1e53ccab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0701f87-7c4e-4114-8d8f-8a35a9e8d59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3a26a7-3860-43a1-a811-ef7e05208ce3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e40636-7f4b-4791-996f-97bdb8e894c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6311f595-1e6a-41ea-a418-f5c1a5fe53e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b029197-1bcd-473c-bf16-b442c2b20f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12047aa8-14d9-4df6-81c2-e1d4cb6cb2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85adc3f-680a-41d4-9b63-021972cb6026",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e044a840-0f6e-4069-a22c-dbdd6d32077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8529a609-16ee-40e7-bccd-140e67be025e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dafc4b7-8ffe-4af7-bed7-b91ca70d0296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "932ffd1f-6c65-4b06-a2a2-101552a5e611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a0c612-57ec-4514-aab3-31f10d19aee5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5bf731-c338-4fbd-98b9-e92d0716b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ea8114-0bd4-4845-9f7d-3daacbf94a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf31d1c4-0b45-46db-b9ad-86350f8ffed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f9fa58c-a655-4604-8597-80318cc03335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4b90dd-5d6b-4df4-9a20-1d861b736529",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e30c29-cb8e-487f-8d91-298db891a900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19013d77-cf3a-4ff8-88cf-1b196c9aa8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606945cb-44a5-4e83-a6dd-d3722b0bac39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c8bf267-ee29-48cf-aebf-715c9e8a4344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f6d3bd-dc85-4a41-b91c-680549d4cefd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c28c4b-3822-488c-994f-66721fe188eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b712532f-7a90-428a-89a9-1f0da7683f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1286a3c3-7427-486f-9e0f-a30cf9c1ba74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a4893a-7def-4192-8df6-bd2cf2d2b316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b8dbbf-961b-4f86-8e95-eeb8717ba437",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41d854a-dadf-4730-a31e-2cbe00ee5e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100048e8-f95c-4e0c-a9ff-f7ce85c13798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e88a5a7-6a9a-4a09-8c9c-35cb77d5a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a66e37-b46d-474e-9ad9-75f59edd4395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3226c2a4-eb4a-496e-9a3d-8f189edab5ab",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d950f5a-ed4d-4889-b83d-b423f6fc22d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26695461-5b6a-48aa-8836-e245ea9d7380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4598222-ca5a-41aa-812c-c2a334a8b2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13377a95-22c9-4552-af84-6196f7afbef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8725d1-01cf-4db9-a552-de7b4b034545",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec5863a-3a24-4525-bc6a-6f9c2ae252f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b31f3b4-c6e8-496d-8230-893329c6eba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276f7d15-d765-4631-91c3-da360a99ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "22594e0f-f008-4953-9282-1c786f2c04b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccec447b-a7b8-441e-a240-99842a665411",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58cfe72-0760-41dc-ae21-d81e8da442ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ee97f4-76e9-4ebc-9477-cad4e6e4b13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c2fb1f-2856-41ab-8e86-194596afa3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70514eaf-e68d-4ecc-aeda-729fdf554f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c426ba-c6ef-4be8-8b28-603c3279af7a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2e971b-3976-4c99-b1f4-a8b60b2f413d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9340652d-8d2c-4806-a62d-d75b077b71b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac58117b-173f-48ea-92c6-32fb70e089c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "666a62d4-b1b0-4b3c-b002-f6a99613c9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2370787-9c19-4731-bab4-a1491f574fb3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919dfb5e-8ae3-4305-b16a-5003463a4240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe06520-184d-48f8-938e-f7dbe6c913f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2993ec8-0390-4535-ae02-9b6f77ac3c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "424f34f9-857d-4336-a4c1-7bae223a87c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92913926-52d6-4481-ac3c-dc01f0e16d3b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa7b077-afcd-4731-80b0-0d3ce613813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b6a018-b047-4136-a926-ad3afd068fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f181e0f-da21-4cf0-8bcc-7060467a3681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c48fa94-efc5-4311-bdac-0f1940856b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b16c2cf-5a8e-4d09-b906-bad8a20cb9b3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ca87cc-ade0-4d57-b508-f710a78f4d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b167a2-4c8f-4f7c-80f0-c9ce487ff13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c643dd21-fb07-47fc-86ad-64706150278b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e298280b-d84a-4b18-a2d0-eae12ebcf94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fd20f9-f4c4-4c78-bfaa-7140c0713394",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9128ca1-f680-4140-830e-45fb1dd32b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6591a1-9a07-48a8-835c-fbd435d1f46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5189e92-8197-4447-9109-68d4a5e4249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f1234d-6645-4652-b9c8-917ba3ace8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e9c971-1c03-43fa-b1ba-9ca6ca7c9d67",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7996ba-2dd4-46e9-bb79-8456f53249c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c168e6f-553e-4436-a20f-aacb9f229934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f90082-6243-4b8f-836c-d0591098f076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff02a1f1-6684-4c21-a8af-5fb2fcde31cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9701eed2-bae1-49e8-a88e-ddbe939eb932",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5544de4e-021b-4dfa-9197-6a4b8450859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95445d2-6dc6-4fd6-9df0-041e1c214e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9987fc89-8bb4-40ee-93f6-fd8319b45f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4f91ac-79c6-4c26-8549-eb60d5c40c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d7b349-5090-493a-a53c-483461274a0e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e1fa07-148d-4630-9466-23ae2e11218a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c15a5d5-a5e8-4491-a1f6-44566091c087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6e283f-d22c-4821-b6bb-4f4ab3bef104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "158eb915-5091-40a8-8375-98a054246b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99afd8d2-2324-4d14-9dd5-819f985dd5dc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faf578b-e2c5-46a6-b76b-f8b77fdfea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ead5c94-f2c6-4a41-80e7-89b702d2f31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69edd514-2c78-4f12-9f54-d5f7253562d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "781f6807-1b03-48e7-883e-ce5a56fc4f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76629ab7-7dae-4ae0-a1dd-6c5b005cd0e3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff6103f-ad6c-41f3-a228-ddb837177d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fcd5be-141c-4c1b-9b1c-c75f0bc0a2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debfed1f-9557-447f-b959-7ed0ca76a25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fd9e2c-c7e8-47e6-be15-91b81ca51e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f8e36d-aacc-418e-8e7a-9a723eee988b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a11db7-9e43-450e-a5dd-ddb628c3183a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fcf32c-32bd-44bc-abf5-1c75647a8b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54dc99e-9732-4f51-a9b6-d6a1aa23e522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "522ec36b-f9a4-4b8c-b82a-5297d73ae86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c28fffa-5d24-428e-8feb-f51edf967b16",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a5ef5b-8964-49da-99fb-2f7182c36c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c608db60-2ded-430a-abb1-5fd4ad639fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10556543-c1a3-4645-a03a-69815d135bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91834397-760e-413b-99cc-55ee58a5f669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d33994-5546-43a8-8600-9bca650aba23",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240d2060-1d10-44b5-8e2b-2bb5cf3a1773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4b78e7-485f-4caf-a986-5e9d9f3dc8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09badeda-a9ec-40f6-8fb8-1f48cf11ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0456fe-043d-47e5-ae51-57048b4b0333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd813db0-fb8c-48f4-897a-efc4a27e0c7a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159717ac-8d02-41b8-a7d8-4526eea34626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f159b77b-2fec-4cec-9c48-1c86b1a99718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c6e214-08c6-439f-9979-64c9afe4fbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "201471c1-3838-4729-8a69-7beae1644801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9274192e-7c7d-492b-bb59-7b900217b0ca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529973d0-a85a-4fae-a0c1-4de3b0b50993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123ca2ab-edf9-4bf6-b519-01277076886e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d91be2-cf4a-4d1a-bc6c-cf0bec3cff29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa89d98-d4df-475c-a99c-385255da68e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51835c6-1722-44b5-811f-37bd2aadd25b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a36d028-0d4a-4f0c-a904-4ee49085eb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04a10cb-42ae-4817-92ca-cbc7b5f8a17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04922891-8e92-4a3e-83a4-1d263bf3072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ca593b63-13ff-4c9d-a718-65d25ebd0169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2a654c-2585-4d06-b54b-e04889248e8d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b92302-ca04-4829-aae9-fec42620e43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d980756-06f8-4fb3-9bfe-4553fd324eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c71e8ef-0eee-4ada-8ed4-39e164fd1408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78ade1c1-3de1-4f09-8734-08ccfc5e5f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfb6ac4-998e-4ab5-9003-06ecf1f3b1c2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11b1a2c-98fc-4042-92bc-9cc47f378f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a45a039-5db7-4ff8-a7dd-a8c4430d9725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf91000-9985-4def-b98a-fd44e675bc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a563bf-c1c6-4765-8174-046ede934bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cf8f6f-6c42-481b-9e58-e8cdb129b74d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735524ff-bedc-4e92-a315-5594471dde50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54df5241-9fae-4b4d-9a8e-47f510b8881b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fa6cb4-4749-4b43-8a21-43f89b80b582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1708602-9b60-4049-95af-e842f2cabf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf764965-3024-44f9-8ee8-98279cb63ce8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5031eae-ad19-4942-968c-0dbf7b57f526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32571550-a20d-429a-92be-228d5fb44db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6cc9ab-beb4-4632-817f-70ba7b6b560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd2153a-1548-410b-bb6b-c27fccea0be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61239bbd-236a-409e-9abd-62c98affad8e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7eb1a4-a4fc-42e1-be2f-dffa70711156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6434b27e-fa97-467c-a567-8a72e7947eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796ec799-89ef-4c3a-9ddc-112f03636e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc7e1dd-ba73-4f12-9e4c-446986e50683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bd969b-0ec9-41b7-805f-99e330d6203a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bb0d5c-a55e-47b0-9f6f-8c13cb6da538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20450335-ed4c-4087-90d2-5d6c17800e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c317fea-73f8-4e27-a08e-8b8a35a0db02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "75b8f680-f143-4837-9a54-2388ef8254f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1be5d1-5462-4a0f-a4ae-d7613cff4e82",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87304a1d-7795-488a-b9fd-b588823a23c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43841153-46f0-44af-8ebc-5789a80cd844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd37b09-f74c-4a62-b864-b60678d79cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8164ba-cc72-4be0-b672-34e30c68c787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621122cc-f3be-49f4-bf9c-eba340d940ef",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4524cc-6f38-4a84-b2e4-9d770907cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef55594-6df4-4d43-9d45-8dd7abc3a4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f418485-09f7-4398-bf00-0ba35d150608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a665c20-20f0-4af1-b61e-03fddafb0139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b059c07-2626-4605-b0a4-80756e68d27e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a2a5fc-31e9-421e-81a2-d5deccfa0195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb8c838-b954-4656-84ec-3f2308e562e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa21ff5-6d22-4ec8-90e4-f8a0d8977529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d77e84-ba88-47a0-98f4-eee0af645278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bf8f8e-db8f-4f42-908a-26b83e688ada",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32f6088-2ffb-4f13-b4ef-ce9c63e37b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e59db8-fd7b-467b-bb3b-5d323496baed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84de53e-f534-4d2a-b1b7-43cf1df2a443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf072d6-e8ce-4652-a777-0bf3e20717f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162655fe-b442-4212-b26f-8e2433406460",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c7399c-06ac-4d59-8025-3b98dbe97afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b212acd-ee95-4207-be84-0929094cfd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af358bb9-7845-4083-b9b2-57188edf94d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fedf93-af9b-4fc7-9edc-ff29491e5d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd39a2e-c2fc-4047-9d6e-a4600d35fe38",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1fe06b-5c7e-42b2-abd6-52e01aca3c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c1e04a-da55-4114-a978-a11a4e60ee28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45d6836-0eba-4a1e-a3e8-b274e0bbff3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b9b180-573f-4fb0-bccb-977d19526abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4068715-315c-445f-bbbc-562e7396fcf7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754feb87-caa8-4bdc-8e5a-2b008727f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c01c489-166e-4990-8612-011af404f778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082e8604-c7aa-460f-a509-523798ccb87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3869c6c3-3c69-4338-be8a-50dc686af3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159c2b3-b296-4805-8e13-bb47081058a4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0ff21e-56f5-4125-a9d5-e81138672258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2470fa1e-f592-4b35-9079-c39fc3b033a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353eac73-c5ea-43f5-8c57-d708481dd6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb9ef35-4cbe-415a-a081-283a3582e45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4805c5f5-81b8-4b9c-8388-c908c460e6a0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb96bbe-c391-44cd-b503-2a48b0996d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5185014f-96d9-48fd-8ea9-a7ff0d260e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4e928e-6343-4d29-9044-f0a0f142f173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd99565b-30ca-4e28-81ea-0ed032ab0dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5e3445-d99c-4903-84f1-f0bb0a0e0914",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3a27a2-1dd6-49c7-a5ff-9ad82d517345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c02890e-68b9-4a21-ac42-64c24ce03488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f0b641-ebe8-4e1c-a539-ca3a34e016a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb75f05-a291-4094-892b-95b76c39741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3ad958-b386-477f-a535-fe8e803d358e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530f24be-9cbf-4f79-8e79-f90ef8a6fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c6c78f-52bf-469e-bd7b-6aa3820c1485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6d48cc-dc3c-4c0a-a67a-3dc5592680fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c03d04-6846-4d90-ba1e-d195dcb43e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab933197-756e-42de-95a5-f0994599a713",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1524512-8c06-4404-bfa2-2e2661d1a0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a7db58-0970-407a-9a74-ecb5b502a3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b7b894-e894-45f0-93a0-01ebacfc081d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b18830-c6d5-4e54-aec7-34bfcbc883d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995ddfff-070e-4a22-a73f-4ed77f19f536",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de624ee6-f4bf-47e2-8ce5-9da627407fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db817868-a571-41c6-8061-f9eb5be019c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e6f0b8-694b-4f7b-b8a2-38485ac56208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d82b3808-ef20-4b41-9502-020cfbbd36da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff10582-0f9a-4f95-b2ef-7c336ba43346",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5078740c-e364-45c1-8137-2aef749dd71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4233869-3e21-4b96-94f2-ca73e73951f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653034f2-2fa2-48b4-936d-890644fe6b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75032ac2-04c9-4960-8405-5c6831614c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fbd01a-8d1e-4bb2-a064-afbbdc694fc1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5059b3c4-4ffd-43f9-a8a0-7477d2b159af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ebd367-04a8-4a8b-99c1-dff0ad16c016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4669a9a-7b1f-4e8a-85a6-a505f1d90d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "375aec77-1521-446c-9573-5e2fd4489eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126dc4e9-4bc4-43e0-8f3d-141ec89ddd7a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f6201b-3638-4c18-bd17-41d8a5c0e72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c415d5f2-de61-491c-98d2-cc81867873bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070b0ec6-e626-4b35-87d9-75f02042c9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c16668-07ae-4e45-91b9-1659fe625996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009bb52e-2357-4aaf-993e-a25f08ee1686",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5755e04-93ad-497f-90e5-6a52778e1175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8a22e3-5f16-40e9-bdbf-74f0ff559711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dce578d-0524-4438-9bd9-b3f6b485eeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "437c88c5-b5a2-4e38-9170-1f598801ccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcdb38c-13fe-4f5f-bdeb-0180621afcfd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147eb06e-5fa2-4382-9e2c-ea22adacb32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ea91f9-b421-4bc3-9aaa-30d03e574f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12620bc-4d7e-4108-8baf-b2b13887dfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8c9ea8-4af7-4131-8a29-618b46f19bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca3ea17-4003-480d-b986-c711ba712fd6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebafc79d-98bd-4ecf-a93e-7f863ed9e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5623a3-6d87-4241-82c1-f501bd85d303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87c9e2-0d98-4d01-88d0-7a61bf939f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c37ccd5b-09cd-4a72-925d-1ff028e9e9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd2b8e7-c1ea-4c11-ae43-d4d269e3c032",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b807aa-368e-47c9-938b-8e3386c5d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60698f6c-c113-4887-ba9e-1ce73caa94fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310e4aaf-739d-46d8-9cb9-75296d73f71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "199817f7-8c3a-4d6f-ad2d-4c4525902cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ad668c-bba1-4e9e-a4dd-7f4d0c2250f5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1a7523-8ebe-41a9-8482-e7a3fc20bdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd18cdb-81e7-46a0-8228-9cba525d3dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1efe45-6e3c-400a-83c7-90ef6c24df6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3a54ed-059a-49ce-a8f4-7e0e0bf723d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a72585-d1d7-4929-bc26-0eaba3640167",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803e0744-b3a1-48c7-b71a-1bba6a22dfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5af9a45-b726-43a5-8ced-0cc8d3d60cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85127eb-58da-4244-a999-d810c0410ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4abbdf-6c08-4cee-b621-95f7bbe49216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230dde23-dc53-492d-99e9-0f8a767987fd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f713bb37-ff3b-46dd-98f7-ff37202874c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea62370d-deaa-4917-80bd-ae6e2abc4aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5854903-f88f-4945-9157-6e184db72921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90bdb39-405c-49ee-8d4a-1da7e4e0e525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc90dd4-b628-4809-a68f-26b4df8945db",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfb6465-81d8-4ad2-96bc-ec60077fe6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f4f982-e8e0-4313-9a82-4c8fbf7dd7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c74cd3a-c11f-4035-b4b8-fe2ee1e4ecde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6489ba-0e82-4367-ae28-0859e29cb8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab93ec6-95ca-408f-ac55-c336c9072c81",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10f1c89-a339-4700-b220-f24583b990ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17e8ec1-e627-4156-b804-8336ef4c2709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fd7fda-b94f-4cc0-b37e-8dcf34060f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f5cea2-cdf9-4e98-9770-9fd7fe7c0c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c04949e-b7f1-4aab-bb81-1ce42fe414db",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a456f9cc-78a4-4435-ad8a-4849eb52d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038424fe-5db7-460c-90c7-067a26cb034c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0347360-6d22-4f7d-b03b-aad13d428207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02ec241b-3fee-4b54-923f-050dadbcf7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc8498f-73e0-40bc-baab-1f11e40a9c92",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced08a0b-6f8f-42b4-8549-9434384b201d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f3b793-5570-404d-8b27-51f065b285d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44951d3c-3624-40b0-811a-3151a0d978c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92463c87-488f-45f1-9864-f2c8d2c58990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a46f50-0a9c-4be3-8bbe-a5824c900642",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285c8db4-efb5-4046-a425-02f2610460bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a804a8c-4045-4cb7-b72b-eb23c728f6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e75852-beb7-4d30-86c6-51e85ace52b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8812ef4-417f-4bf7-a58c-f806e3aeb449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1340b460-ec44-4a4b-bca2-dd56bf97727d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b692939-d1b3-4c43-a910-fc3032d8c8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fd0da7-1a4c-48aa-b401-45ce68ad53f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df9db12-3bc1-444f-943f-9c6088f1fe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09494dfb-f0ec-4e0a-9271-cb2f30e6eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e84d11-ee84-4a15-85cb-6609ef5f121d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad3ba94-777d-42a2-9a7b-955957d7946d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135ef577-50a2-44db-8936-a00d2ae4c51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474cccd0-0a00-411f-8c16-3a441766cc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c646b642-16d7-4526-b75b-08655a898568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e444fa80-e7e6-4297-a4a6-f4ed1a8a2a03",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4b995d-8181-4ed6-8d29-524567d9ed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db8a54d-6c5b-4b8f-a850-e2c9c433f4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b331d86c-7949-4c7f-8c9d-480c6d79b28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf9109e-4a3b-4c38-a4aa-69a99c356994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab09885-9d37-4074-aa4c-b85d1a95b4fe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b739f6d7-2d70-48c4-bb55-b159967f425a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097645c7-1399-49cb-8f55-b6eb09f64070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfb24e8-4b15-411d-9eb9-43681e2f65fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "328f8070-0dfe-4b36-8c3c-36c7d6f75692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7afcd0c-171f-4a57-9b6b-a13b3c0ae134",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b92c54-9389-4093-bf5b-9015eeeced1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d863d9b8-ea5c-44cd-a47c-76611d36392c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a69f8f-2455-47c3-bd0e-2a16c4a7b7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83800e46-ade6-4a7b-89c9-8bdc5e00847b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b47a5b-3fbc-41be-a5d9-6e13edd5597f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0466852-eb85-403c-9c4f-9ca800703d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96f0754-ee07-491e-9baa-892ba4c3fbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57da9e17-0f12-4e61-9bea-d432311a5cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff05198-d482-4331-893b-587c3209df89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64365a9-339e-4131-a56c-0f57c33a7de3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670ef6d3-4b22-4ffe-bddc-6eafdd0fbd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84aaf226-e397-44a2-83eb-189fd2919e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441c5c72-26d9-49f4-93ee-cd9a15ca0dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e1ba2d-9444-4192-936d-005d6315a82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7d456a-32c0-470d-8e69-97d2e5a6dc6c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d68cccf-989f-4abf-a12b-eeedad193a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ef2e7a-f873-4dc3-a67a-6692d0671b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718268cd-a742-46c6-9ee8-f13a8b10bc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5f445d-6f24-4dcb-95c4-d274cf766ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd31609-3eb0-430e-b010-c284966109ae",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04f2f3d-8752-416c-9e8a-6dde73c7119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49444de9-bac9-472c-9fc7-61c2d4ba2a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e99a81-5a0e-4224-9773-e1c1fbd9e2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "422fa0a6-6aba-4ccd-82db-c05b29958892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a110e610-91e9-4b0a-ad9c-3231304fb318",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f89733-aca7-4e65-b1de-b2f0db4a6056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a402aa9-a848-49ce-952b-195dc6cbc04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87364311-e6f1-4a4e-a9ab-69bc999415c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8adcee-0bfc-43e1-9319-e6beede0caf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cb469a-88a2-49ba-8e2a-3e729292eb82",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06e82be-6c22-4b2f-bada-a65d69fa0d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0e7898-3be7-4b20-97b3-a592570203b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f58f05-e2d4-4c77-b0d7-975c0f033ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd6bd64-a564-4075-8658-3158b2eb465d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9864b8be-bac6-47b9-b0aa-695ca16974d5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f68f8fd-192e-44b9-99b6-e50cd2218892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f96d65-776c-4d06-a100-c4fea12bda29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d1add7-fe5c-4e0c-b77c-68fb69b7883a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbaa203-25a3-40bc-abec-e4e63a6c5921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0933fe-59b9-4e99-a277-8132fd91e133",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282fef2b-1fbf-4d62-940d-828ae78da8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7144b951-db9f-4e2c-8841-8a0f4b1575ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bd6f10-4576-4ad3-8f1f-595b015b95dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fde408-9db5-4bcd-a5b4-ea9a0309a405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd5b8d7-f039-4eaf-ae48-fd8e98e49be1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6270e469-639e-456c-bc39-a25821130263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a099d738-da06-4974-8668-1d27628ecc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b709600-b9c9-4169-b051-0f4c9d78ad92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5d6e66-025d-4608-9322-2f670ef1a37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303e7fa1-169a-4500-8833-21bb000c84ad",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583a9d23-4916-4012-bd3c-bcb8f766b717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fba140-2e02-4f90-80b2-8ae3222dfdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbb8440-3fdb-41f7-9fba-61cb7e1718ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fe549f-6a39-4f38-aad3-44d193a0c112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252411ae-9b22-4f3a-a225-7a5125da91a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51436b0f-b489-483a-b752-653456095c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca76817a-e42f-40d7-baa0-49ff8835587c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec00541-1008-4ee0-9f16-ed1d22febb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfffdf9-5605-48f1-a1e1-b03a72211fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32509fb6-6594-4e06-8793-19f990547b14",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25aff4f-9c10-401c-a96b-81ef09e1f887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2845dae3-156a-43a6-8a20-6df978f7a1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cac60bb-3115-4335-bac8-91364adf7b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42033a09-bf3f-411b-b219-c6e64f176e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b3fd2-51ac-483b-a162-ff39a2a3a9d0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76398151-e8ca-443f-843e-008e6e7da5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba40efbf-36d7-4bcf-a285-3f5a2ea67538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27f3ad2-a7ee-4b2e-ace0-1dc5cefa9532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83070e63-dd8c-4a08-b3a7-5f606de99d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cac2bb-2d73-4417-8f32-7e742006c3e3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7a9500-b9c4-4299-bb5b-deb86b0e08a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0f6ef6-c2f6-4409-9dc3-be5c748faa7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1012103a-7d4e-4484-a356-1b0e07df469d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f49d0ad-870b-484f-91ec-98336b8dd162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd25d08d-0a70-49fb-9adb-7a491957a86e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aafc61-90b4-4d61-a2fc-6c5044d6f29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0341c906-aaac-41fe-8705-c2b6da754694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bc9f25-8039-4df3-afc8-6b3f067c814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b86c5b-072c-46aa-ada2-0ed403508661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a86c73f-ae70-4e68-926a-33bb7fa8fdcf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe50566-0c0f-4e98-b52e-fa6cd9d065cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f8ea99-b9e4-478e-a69a-c5fa4f2575de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1623eed7-262e-40e1-a152-2cb6619b74c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb956250-7037-4d2a-bca8-9f582de2b992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad086ee9-4da4-4737-a03b-a21239b285e3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3c1f92-21ff-46aa-81e6-70e3e98adf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e736e5ff-156b-4555-b29f-16b27f0577fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bd1d7b-85ab-4ad3-8a21-1f88a059bab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1be75bb8-9f1a-4baf-a94b-2c6e09f43cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79875a73-46da-4fde-a6da-fc83338a2602",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6af27ca-613f-4a3e-b26a-1e2f12caf78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "20b11bdf-aea4-41b5-a75f-78a71efc76b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62032144-5edf-47df-aac2-a22d6dbc8533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "373c760b-a87c-4917-863f-2b17a9fa7b3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5853fbf-5136-4ea4-a6d5-f9869a62a2e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af442298-8ce8-4dcb-9764-e57a8a346830",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1a055d-c548-4075-a08d-ea9623dd9130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13856e64-f917-4a18-9fa5-ac3658f3eb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345c6d33-029b-4a5f-88da-7d8078ada56e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "7b7930c4-bdfc-4da9-8961-c8e259b154f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef3824a-d0fb-4ff8-b2ee-21d1456146f8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438aaeab-755e-4a8f-b336-8a5fb2f2330c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78785fed-d1ac-4d92-89dc-de93c4c74017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67af8633-47d0-4ba5-a49c-d799a3d93151",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "bae5f3cf-43ab-431b-b8e6-f6a56f455b95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97e98ef4-5949-435c-b892-d241141eabc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "badd4062-d4cf-4cbc-9c68-355b148f7273"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01a68c40-6dda-4ae3-af15-15a19ee782c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df770d66-252d-4183-bece-eb339ad8a265"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a8aed71-185a-422d-8718-b49c729762c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "881fb798-1104-4647-8926-b64da2d5f98b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c2ce36e4-2d7f-4dfd-b177-d9d8b8fcdbbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7d4df6b-a216-47d7-952e-d516cc782747"
                }
              }
            ]
          },
          {
            "id": "a483a958-2825-4ae6-b7a9-71334f9698d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0923c52c-c5ff-4f9a-b538-5fd470a8a36e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5da2564b-e448-49d2-b9e5-388860219b5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c51f7d51-0602-4f80-b45b-15456be7daaa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b0f03de-b2f5-4d73-a0a6-901955dff680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fae29f80-430e-459a-acbd-aba82077748a"
                    }
                  }
                ]
              },
              {
                "id": "afa38702-5a3c-4f4f-91dc-afcfc622931a",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43370178-eb9a-4784-ac38-25ed98b5cab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5e89e03-d6b3-4db2-b18d-46e9d060bdd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a864cc9d-5b76-4c7a-a407-6f8d0a61025f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c3c6863-b08f-45cb-8262-0b6e22c35ef8"
                    }
                  }
                ]
              },
              {
                "id": "415370a7-306a-4bc3-a8a3-3925cb1836ea",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f6092e9-d9c4-40a3-939e-0d4b18ba9e2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb1aec4c-fc37-4cc7-86da-5116f59f1c35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5c8a493-6bb1-4181-9157-106b1d671f29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f452eb5-4d38-4948-a6ab-9ab3b02a4da2"
                    }
                  }
                ]
              },
              {
                "id": "f6f298b1-5e17-4513-b6a7-75803a1c9d4b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1439c9d6-97c6-4516-8ff5-b8db983ce340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f328d77a-7406-4b42-9d4b-6b7cf55eaf2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b8cfdca-5cf3-4426-a8ac-b2e6a9fa73d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5f4c12be-8f15-46b4-8c2f-9102901e61dd"
                    }
                  }
                ]
              },
              {
                "id": "b559a8e6-cf52-4e81-86b1-7c25119d9d4d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9945f4b8-ab93-4249-a291-97ba3f35844e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88a6f93e-1021-4cc7-8b52-b463e5c07664"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26b8e48c-d4e0-4419-8611-afd6ee3f8c38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6157a688-e7b4-46df-8e88-32df3b82f3d2"
                    }
                  }
                ]
              },
              {
                "id": "b86fc97b-1ebe-41e6-bcc3-cbaa90bff607",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb9c5caa-7697-40d2-a681-4736ac4bceb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6673b797-e37e-4ca2-bcd2-014b5a11cbf9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a8376dd-beeb-46ae-b8cf-cfa1f235aeed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "374f548f-dc6d-4f7d-84b9-f7c3be197283"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72c58307-f355-463a-8da9-5cd4b304790a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1d53320-b8f5-44f3-a3dd-a5f641ce76be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11e822b9-0741-4934-a29b-98ce45a517f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbf558ec-95ba-4028-afe3-783a23792fc8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77267b4c-8f79-46f3-9883-ccd491afcda8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "63039467-c2eb-4356-ac7d-7ce177adcfb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df5c3aa9-938d-4d8d-ac4b-a7d4ae9d28d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08358ccb-5c80-42a8-bc89-6ab531517f39"
            }
          }
        ]
      },
      {
        "id": "08e11ff6-2b8f-44b5-b656-f1e2160c3a64",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c7af4526-c14e-4dc2-be78-60ea96a82d84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac6e8876-d83a-430c-80da-c5febb959618",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9033fca7-6272-447a-923f-e1406926f644",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386da5d0-b081-4263-9fce-a8e9106566f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284a9bf2-cd69-4043-96fe-54d18587b11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab71a24-2b92-4c2c-8fe6-4ee6c3718af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cadf2812-a3cb-4772-ac47-d72fb6e8bb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7190805-e6b1-4850-a686-e6f4b73fcae6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a8aa35-68ec-43d0-94dc-95b26b31807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db85da05-4a48-41d1-b36e-1f5f5a19672e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fc82a5-fd12-4533-b254-eb5b34dcac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ff2619-14a4-4899-8852-1a9f0db9c852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc150c1-a7af-48eb-a746-51b34e9371ba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13d58dd-3104-41f9-a61c-95b703c66c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cca9f7-ea45-4edc-91ce-8058d84c74fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b5ece3-09d5-4bbc-b16d-eefcf9497603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d076fe5-56bc-4848-a437-1f596db705c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070adf09-ab8a-4c61-bafa-04ab3ce0fc44",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6767b098-5f1b-4862-918f-a7f861d9ef87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc5d399-ee5c-4f41-89e7-46fc0f0e59b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da74312-b0cc-4d6b-b2df-ede119ea845f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03401572-8aee-4d01-a17f-0e594428bc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb45bb4-9313-4108-ab52-e695b3f0e7d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b760af-f109-402c-95e2-a47d435cfe5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c55752-9c96-4753-8b4e-9945108def75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f4d005-cb06-41a7-9929-200b218611b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c155618e-c5e2-48a6-9d9a-2a18535a622f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb0ba0f-b110-4cc9-a2cd-57fa692447e5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350f0094-07a5-499f-846b-55ca7b57e486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944fd8bf-aed9-48f9-8f47-0dbcf8afae85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3697642f-fd04-426e-8ffd-3562e310644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "749169f5-7a35-4576-9679-d9b1a68a0bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43259d86-f8d2-4437-9948-2de519a38b26",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08b9431-ccf6-418b-9fa4-130d14c07cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffea295-1d72-4d43-99d1-2b564a323e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d87d0bb-9832-4f79-aea9-3aa8ed2e0479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c1f142-e4cf-4a1e-8876-d722dcbbd1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db12152e-2862-4e02-838b-1fa781a7ce18",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952b602b-abd5-4fc0-a426-d904e4fd48b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3503236a-e6ff-45a6-a5f5-87262a7f96dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd1ab3e-a5fe-49d0-9676-56635161d549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64da7d14-201d-4d5a-85d4-b0ddf1b080a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92c27c5-f211-408a-821a-f30b6a26cfd1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c22fbc2-6aef-4d14-a38b-38fc261a9892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5133f100-0c93-4745-bfaf-ed4993e8ad9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea0169-23ba-4ee3-93de-584d78e229a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1719f92-cef2-472d-a78f-7fc0c32ae75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6de47b3-8312-4628-bbc2-a67cb2eef620",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17341f9c-7278-468f-8100-6619232e8d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b1318d-1ebc-419c-827a-98fbc5823ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f59fb2c-46b7-4e6d-a1be-84efb2a3c3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3ba500-ced2-4e43-a32f-ce1942c5d69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d18c52-0dfc-4695-80db-4736a170fc88",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1a1bbe-c456-4b9d-b8b3-f2228c386d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57207cf6-e292-41b2-885a-edd279b404b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e10eb6c-3836-4073-9b68-ce23781f6ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "afc5207b-1076-4638-9530-c69a0e5db420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9e3ba5-cd75-40f2-abd2-627e8081ec12",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284cdff8-f5a6-4085-81d5-a25ebee7a4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3a3762-c453-43cd-81b1-ace813dcbf00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3441e8-f148-4aee-becb-3a12c5c71bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bca01ee1-e0c3-48b1-8936-6536179c8c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40c5181-b10b-401c-a4ee-4fda1876b90c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501cb08e-855b-42a6-ae7d-7c3d352828e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6157abb6-099d-49b0-b6de-db658da081a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168bd12b-a0ab-4228-8c3e-062a429e8551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "928f1119-1ed9-4385-a91f-ead200f88352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2f8f6b-74d9-428a-86a8-a7d13a5cf3f3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495ced1d-28e6-4eb8-801e-8164e82f83af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4239b05-b085-491b-9454-371dcec2dbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95abbb41-bf61-4ded-8588-efcdeeb02510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf1d88a-3154-4a5a-9e65-6a0e4a43074d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3d94db-9944-428d-88b0-9b62bebcfe07",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c8f0ce-cc24-45b5-bce2-aae72ec8acfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4fb881-a343-4960-b508-749bc7b0d2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b2ddd6-7e49-48f4-b8f0-c79720fe68a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76c1ebd-c282-43ea-b28a-da23228f6228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2202e9a-8245-49a0-8050-b9462ee79ee3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45adfef-0d45-465e-82ea-8fe8fcce683b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33e2923-e695-4116-859f-055a9dd95f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ad665a-521b-4924-8120-8dc4be79fa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c8c844-bdf8-4337-8f5f-e63566eb0213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ceb4e3-9b2a-471e-bdb8-c72ef0c7f5e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ae91e2-335b-434c-8e63-ed8e0a769443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4f3a2e-c764-4b60-b012-d5bff976b0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e51aeb-4bea-422b-b66c-a255c3698397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85c6fd5-25d5-402d-9a9d-e0cba625c348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf31d0d9-91ad-4ffd-88cf-7c300686ebee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d5eaff-032c-4ca1-b566-1765c0b70265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e38bf0-83d9-4c27-9847-4b16903eff5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c155a502-0813-4291-bfa1-4b0a95087b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d2eb11-c126-4537-af2e-edd0b3b4d584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff2c35-9897-4eaa-b736-9c05d82c2ff2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dadeff-27ad-4ec6-9555-aee3ea4fcff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d48cb14-d37a-495c-a548-4266adcd0b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b236aac8-1724-41c1-8044-8d46a2b37317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632a248e-6ee3-4af7-923d-525f1a9c7bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9c1f89-f380-4e96-aa10-43b6210dba0c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8966a704-eb47-45b2-942a-5b6a05ef820f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4f1eb6-de94-412e-9f4c-044768c59bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5898efa4-97ef-426a-b9d1-882f2470647f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccea899-17ae-4ba5-81ff-c987d8a72c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91365c9-d63c-4892-a751-448d483c3784",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bb383b-51a8-4bbc-a017-38b8c0a066df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43b34ef-018a-415b-96fe-a176263d0746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fab4677-7a23-4cde-a364-3b0bcf12d090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67b76ead-8588-431e-8809-4b48b21cb70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20e8e6f-2631-4840-af59-a08deead997a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10646aa0-e933-48da-8044-861e99bf60b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea451833-4a25-4ec4-9c6d-c6e40ae5fbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf293ca2-53a9-46fb-ae9f-6a49ebc79a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "704bd991-f421-4207-9955-dac4a7062ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21efdbc6-45b5-4300-90ad-bb7a4c3508a3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e31a98-297f-48f4-b77b-d98074fe96d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e24cb9-75b7-4210-98fc-b177549bd66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47917b40-4074-47da-9cd0-5ff0b2e53af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea0338e-bdcd-4b5e-a21a-972fcc8c14aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24c26ff-4dbd-4516-a3c3-6c5bda7fb6bb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac1a366-ded1-44ea-8307-26f0fa1ab894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffad35f6-060b-4a3c-a1bd-8ea093344452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6728956-4c94-49e3-80bc-d5b13f18af31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a455ac-6194-4959-8888-e9297d94ce23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918ff691-e787-45b2-968d-c99e774a0a40",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061d5513-0641-4384-9997-bbdfb5b36d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494e4fdd-c050-459c-aafd-b4c62dc59ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe00cdf-e2ec-4b26-a56c-fbc37373d4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11389231-b6ad-4b15-a1fb-7e0681784fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0658d917-34ef-4a37-90b7-5072b29c4c36",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a6d80b-66ff-41c1-a403-0ac66b3f3ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112732b2-e3ba-4ac3-b912-186a0654e3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d25afc2-fe66-48d3-ab7a-c31d3cd58a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab80b565-c238-47b5-8365-f68908e25b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0bd520-57f3-43b9-9892-12dc7acbe547",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ace7fd-348c-42cd-b6cf-1a018e63faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8939c8b-ad8a-4905-b885-6da376201724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8725090d-89fd-4a6e-a1d4-bf930919587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b86184-e6bb-4067-b2b4-e36e106a3823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41167c2-dd6f-495a-9486-781ef1893952",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d1681c-b7e9-4b23-af25-57b51e35fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f88385-e20a-4119-9a84-f69f4ee05a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f811580-9459-4337-81e5-d25adb037874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad4c190-536d-46e3-8325-b718c15d4747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aab3bc-fd82-4356-a908-5300364480fd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7aa65b-074b-4662-937b-a0bdcf754f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f54174-1e25-42e0-ae0b-b3279ad84ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ac4bf9-0396-4b02-a810-c5c4f42b1397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "878b4afb-2fb9-4b02-9d46-c9f6f3842723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ee0c90-df32-4227-b2ed-d45272dde573",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fc34d5-d993-4280-b650-5a5d5305e5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b010a6ee-2281-4b6a-8277-759961ebbd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcf7807-70b8-499c-9c6a-f9048667e977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b091ff-fc37-4918-b28c-8377f542b7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9009147c-83dc-4654-9a7a-a132e2fb90b4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78e85a0-7e5a-4cef-bc02-577196d4fdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f30ecde-6ebf-47da-830e-d93cb1e7a905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e117130-bd4b-4bed-bdbb-0c364a6e2e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9d9410-b1f6-413e-9e03-5e7baec70995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b6ee49-5bbb-4252-986e-9305998a3b62",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d2d78a-fcb8-4e20-8052-7ee1910f651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32fff90-8bad-487e-8ba1-2aa74855f815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfa1f80-fd35-4301-aa89-c22b1c9a03f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5efe2ff0-1114-4acc-9b93-09c8dec004e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e64589bc-74c9-496f-bf5a-0121bfcdce95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb60fcb3-8210-4868-b467-44d1901b06c6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff642c1d-b061-4ed9-92be-1a1e1c277474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7506344a-11e6-4acc-98f8-8f58162ddb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "382ec68e-8d68-4454-bd6e-6e635a399d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d03d6188-e628-4f06-abb7-a4631126e9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b027f-f457-49ee-a163-d203485fe124",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5159cdd6-f1e7-4146-a310-bffd444a69b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "242f6cb3-0af8-4d89-bd5b-0cc37d7a04c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2e830c-7dc9-422c-ac27-94542530515e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef0ee472-8c62-4f72-b20a-c8697eda9b23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "461d933c-4de9-4d64-875c-819233f7ede2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b032dec4-78a9-4236-8169-38adf68e5a38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9617bbf4-dab2-4d7c-90c8-db4b616bc41f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31f926ee-9ac2-46cb-bacb-ee1f60406e1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03a82b09-6c46-4af7-8e73-35c13f764322",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1dfda41-454f-4dfa-ae0d-86f2ef11e576"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3c886cb-5016-414f-b26b-e0eeb221cb5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db2a62a4-7a83-402f-bd12-6042c9a5a792"
            }
          }
        ]
      },
      {
        "id": "8075d288-530f-4fd9-82a1-e5c0063eaee2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "76eae6bb-5bd9-4d7b-b31e-91755b6a47c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14f637f8-2c61-4b9e-aad4-349b4ef5a785",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56fc5d13-0eeb-4798-8f3d-4d0e887c1368",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07a9a5d-a5ba-4134-8785-8eb8fe4c53da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b15e95b-26f3-41eb-afa4-f3fd7bd47787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a459b7e8-72bf-4291-8717-708ce3aa700a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789eecda-2ea7-490a-823e-e49ad67c8f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9476d9-f10f-4031-9392-71feee5d09f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26478b53-67d0-4451-8981-ea3482d6c2e2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93af6dd-905d-42e8-9e43-64d264fd8b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d4e835-3034-4799-8508-d9b6385eac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f0f331-52e0-44b0-8f8d-a9b981001b39",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faf96d9-307c-4244-8847-73598a785869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52875ec-a594-4ea1-b124-6043cf379c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a5034a-27d5-4795-a6e8-e82fd82d723a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ed4400-bf27-444a-9193-29c1c754d9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dee66f0-6103-469b-8ff0-afc1e75b1819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164ecd47-3ee0-4382-a7b4-f8755be43421",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21b8aac-9205-4a6f-bcfd-cce821d1c6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4709b172-4c7e-49fb-af04-adae42512fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70a2359-ce0a-495d-ab1d-e0e1fdef9546",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f14718-22b1-4437-96d0-95b714f6a546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8e775c-1c69-4a9b-9a21-5a3785ffcf9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce47784-6312-418d-a3df-c047091abf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bd21e4-8d8e-49eb-9c53-a46977e32811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5441a0aa-cac6-4c0b-9813-4c54c1f5ff29",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8d6bfd-59d2-476f-8a50-7f4b3f5925a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc1b0af-f38d-44f9-a2ce-900afc466e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30fd035-3cde-42aa-9d2f-d7faf5ad1d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355f648a-d328-44c4-a61c-c1e3951fe4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2f493b-bf4b-48de-b597-fb4fb9f5decb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167f5165-c2cf-4268-8d74-af5b64d383ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff8605d-181d-4aad-b326-188dfa76b226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "babd9e3e-a09c-465f-9189-2eae175b85d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbb2072-0a2e-4d47-9fc8-e30a33c54912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814e764d-5fe9-4294-ae20-d6391f0afa89",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b09cc8-4487-4749-b11e-240a7760c205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd1ec443-8fce-4737-991b-91c48c900456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347ae339-25fd-4ddd-bc58-7f614a482724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9da485-fecb-4e7b-b405-204daa527eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8007211a-6483-4a36-bc1a-fdf958f42264",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd59540-6b7a-462d-9848-7d7eb078796f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef08c77-3e03-4654-971c-8b30012aa539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89db4acb-2358-4e42-9545-28700b98289d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a40c5a-bf4d-4eca-96b9-1b6604797294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eef1313-8623-4f98-afb8-d575f135e0dc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29af176-795a-45c6-818e-115646d56d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb84ca9-6cbb-4550-b2f3-91f2e8cf7328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e820873-b4e7-437d-9e53-272c2f28b87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174501b4-f9b5-405d-9f73-c5cb2a2f44c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909d8e21-8658-4521-bdb2-17e8fb4943f9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea768624-d8e0-4ef1-81fd-bd5d8a9c1a9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f75094-bbec-487e-a71b-b8e3e01ed9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b87137-4713-461f-886d-edcc8d80f974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b13b1b-bcf9-4cd0-ab78-2b3bee84471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e59fa2-7881-4a75-8edd-c9d8b7afa1a5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c8095f-840c-4090-9ef4-6cab45f917b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "313fd386-2d96-49f0-a045-61b30a66eade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f89f16-4007-42c7-9921-37f0b4cee182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5daa7a37-7485-46df-a797-b8fe16badc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40fe7fe-1c30-46b0-87f4-2f46fe5f3332",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5c0ef3-90b8-41f0-b8d8-090465720292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddeef1f8-daf4-4c8a-bd76-00244f2b9f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c8c9b2-1fa2-465f-89fa-4226a8e50ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1016833c-b8b2-4c61-90be-6621ef6e3cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad4e79e-3374-4277-8378-7a4254de7c62",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d855bd61-755d-45ad-847b-afac4115ae7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280c3186-e945-4713-b63b-a530f3a5202d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0665ddbc-a517-4640-8cec-ca4ee5ad631c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5301a0fe-f3b1-4449-9fbf-206d6b0538b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6bf375-d6ad-4a09-b4ae-0b5d028658d5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421c49b9-e6db-4fb8-9542-232e1770fbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3476b3-cdc3-4db1-a6c0-6bc4fade2bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58996870-cb81-48b4-aa8e-e6d3e7b5b121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7121a3fe-8ba9-4798-97d5-aadaeefc80d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa19bf8-b834-45be-ab9f-b2acdb88f7e1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0195bc41-5db7-4d81-b985-98fad6a0df3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e617a029-c6e5-497b-9b69-d9ab48533604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bf590e-d636-4cca-983b-71b4d5d59535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d93e1e7-3acd-4fe1-bfbd-58e4aed6ec9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7635c1f9-b612-449a-8bf4-49ff02a884df",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3df5ff-9f1c-4447-8a65-89d2483b7c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9d8156-af34-40e4-b9c5-8ca080250c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff25b17-9b5e-4d06-ac64-ccdead686965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73eb3f3-daed-469f-ade4-0482dcd12c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b6acfa-11bf-4e31-aa67-0e57952adf74",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38d9389-1320-4d1e-9111-1844e4f354ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1d7006-f639-4c8c-8b76-fd5516bf6207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0d3726-223e-4e8d-9c80-6cc17c34ea66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c69c61-2119-48fa-b985-0b1821c4ae23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d216e67c-8c75-4c0b-b60a-7e12f8880e0d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2d6020-d8d4-4921-95f4-153ef7024dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eb2412-c008-473b-8863-ece8a4aefe16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a1a515-9ff5-432a-865e-333cbb892034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57800307-c65e-43bf-8014-dd820279cfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d1ff52-0069-40a6-b35e-164c5e99c0d5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56208f54-8c1c-478c-b3eb-23e3a5632fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92153f83-a70d-42b9-8e89-167799f4be72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f68e238-b684-4a7f-a149-c3f1fe0a9841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c34b82-2652-4700-b5f3-2a1525f29733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1ce61f-e0d9-4a84-9610-c3ae2b726923",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb585dac-7eca-46b5-b940-03f3a64a4a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00df233f-37bd-4a49-8b8a-92c9496af44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeb9ca1-7a84-4f69-b707-19bbff153b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec956b6-215d-416c-b59b-f3515d329c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d543ea8-54eb-49df-a8a8-ecfea1ae3867",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3666195a-9a4b-4162-a829-1234b1e33ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1958b8a3-ca09-4ddb-9e00-338d744ad3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22822001-cfb1-46e8-b808-8a599c71545d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004c5a82-8983-40f6-92e9-abf922aff184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29f4f4f-dac6-4a40-9759-a3e1e8f7c203",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd352e8-18f2-4cda-8167-045f853f83de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5beadbaa-86d6-4d2a-b618-3bee66c2f1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aa01eb-e762-4093-a719-55b4d236623b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9de46f-4541-4653-8404-b94db3deb1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33273b7e-92ae-4aa4-9349-8b915be308c7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222c5cb1-6289-431e-9d5c-2c9f82617592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9ec7b0-cb2e-4ec9-abe2-5c0fe459cef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ca5e4b-62dd-43b6-ae1c-04a3b7db4418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46adaed9-74da-44ca-a006-05fa7f90ebbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fbc7dd-2814-482a-ad70-f1a894ba755f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b064c17-3634-4c07-94d4-7d3ad9166295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fdb3aed-72ae-4ea5-bb26-c4316e84dfc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f067f9db-efd5-4478-897e-2d8a89a18955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72fa6c4-5992-46dc-9ffe-3d5cb2678fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41cf2fa-0668-4bd0-ad5c-5cf0ab03b995",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7087a3d1-c025-4cd4-9342-01cccef30a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2497d960-2510-42b3-87d4-a24a38194be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf431cd-8780-4288-addf-dc157004c666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedaeb06-ae22-49be-95c3-31442d7946a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebfb662-4189-485e-815c-8b064459bbe2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad2d70c-1dae-437a-8110-bc9a309f7ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786c16eb-ae47-489c-a612-82f649c481ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fbfbdb-c025-4080-b550-641251ed4279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec74691-f550-4ecf-8ef9-51fdb62d5817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58909b28-97d4-4a29-a052-8f8eec45af47",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77673593-8ea6-4504-b549-6d3d05fc6125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b2893a-0f75-46a9-9ba1-690ae0b18d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e90e43f-bd3c-4c37-8fcf-85c8ca34ff08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0eac877-c421-4e39-bc2f-b37f96194e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df80634c-5899-4b9b-a529-6193c2b70faf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5201c78-c2d7-4af5-a60e-81bd6f758ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533f9350-63fd-47f6-a94c-b21939ad1f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68306c6f-658c-4cd6-a8a4-513cf50afe2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008f6aa1-2b56-4180-8c58-6d749858c665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e99f28b-bad4-490c-b99d-873e8a5978cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af9f5da-8783-41ec-895d-f805facbd9b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78ce216-ca31-4901-bf23-6b943519d841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa47e762-a4de-408b-b8c6-bcef25a41129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5cf161-c15c-4e7b-9cef-91f920406bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9bf728-10b9-49a8-8384-065f7ae4b1b4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc91ce40-d4f0-41d6-a718-90476526758a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7959c6c5-25ff-4532-a849-a03cd7b97a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751059a5-0f7c-45fc-aab1-ad0f374a020c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b562d5-f397-459f-858e-350f2f39f109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fcfe26-a60d-4ba8-a7ad-c27364227ed2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c0062f-fb4d-4da0-8792-f0a28c43fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477d5a64-dc6f-43e7-b392-5e21b6d888eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe930895-8b1d-4fbe-a506-e4b8545ffead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db79fe5-65aa-42d7-a8f6-0873f9da9eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bda64a-32fa-4348-abe6-027fb3dbb352",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd03536c-779f-4c26-9f47-031cc50eaf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344c8bfa-9f0a-45ca-ab17-49c97f368667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2780664b-34e7-4b6e-8c9c-ac92053846b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81caf0b0-021b-4760-aa14-476318dcc9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385fbe7a-ec3c-4a88-af6c-2c2da21701d7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f0fcf3-f86c-4354-bc0c-743c39062147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baab5d31-5855-4694-9e90-1c3b2c6a396a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e46208f-d566-4ef3-ba96-be18f3f52036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f356449-a0dc-42bb-b4f7-0a4538ba832f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792aa4f8-259c-4a59-8edb-ad7d8b2849e1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b28ccf-351e-42b5-8f4b-adf743d00222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfb20f1-18c0-4b2d-a436-d829d2681db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa294f5f-3189-474d-9e4f-89d5888f9c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a22b1df-900c-4c6b-adf4-041b9d96522b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc0d27b-371a-40be-baa9-ccbeb5105c0d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50b98f6-90b5-4929-b68a-48c2fb5d9e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3d70f7-2423-4099-a5d8-a65a4e6c9540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f86fe74-4cce-45b4-baf0-3d0081fc135c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881e5225-bea5-48fa-84b5-a1e25a6f8eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4482ae08-ea35-4e70-ad91-a2b1ef0a685f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5241d746-2546-43cc-9d8a-57539f70be45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49bf38b-4fe2-4f9d-8b59-f41b52998db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceff3de-2658-4088-b117-d5b7701facbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbe78a7-0639-483a-83d8-4a52b75ac4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aedb44-f01d-4d49-9d85-42849a62b098",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a304e837-830a-45a8-8cac-cc7e8ebf5778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88791b6-3ed3-452b-9a5c-78a2ab767f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08266c2-d59d-46f3-990b-ae5f940067df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743b62d9-9248-40e1-87b5-e6a657536dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b914880d-9d6a-422a-a6fd-d33649e5fdbe",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8828a98f-1441-4485-b742-0df928482bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f55ef0-2770-4253-85b5-e3fa9a85c60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e36e24-eccd-4a62-a72b-f382a364aec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85db40e2-b1bc-4a80-9496-7a71dd4f46ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cf0cee-c5cf-447b-ad4f-2ce7cfc41f87",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925c3b8e-58cd-45a6-a5d6-0fd2f412f981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2448ae88-4b39-4761-a421-1f311708a660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7884afe5-eed5-45f5-80f1-33ae6015e181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327f39d8-e392-49c1-bddb-2cc94fade387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1589220-c87e-44b3-a7e7-1e7cb66d3243",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69d11b7-12a9-4311-8964-588c00a82ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddc7c8b-3d3e-406b-85fd-3397f49cfa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f9ea9-c511-49e5-9734-2c8592524c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10549664-fe1d-4780-ba0f-4f907b458fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3bcf4b-5305-4316-b719-c422dba72cb5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e894aa6c-c3ae-466e-9be4-d38813965dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c3f4de-22d8-4863-bf50-fc2b98f32f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13c2f81-fdf6-40fd-877d-0aa6afda0206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f28272a-707b-406b-8a84-92b301a9c928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f62dd7e-f1d4-4f30-8d01-51d69c529417",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce6bba2-d566-41f3-9879-be9c7b0c3ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506b2219-1c19-40e6-88ae-2539b8e94cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77552169-6d40-4ce6-b88c-4210dd304513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f5949c-ae34-45cf-9786-4f0f8014a021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310671aa-712d-4e05-96b9-19adcbace646",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b45f658-eac0-4c7d-a391-60e96462da02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139959fa-02aa-4af2-933a-65f797e26f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c876dfc1-a38f-4b70-af58-99edf0667c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c08185-5635-4bd6-9b6c-372190f810f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df81cfd8-44d4-46ed-88c3-965e2209f667",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8087d6ff-85de-4790-8fda-a5653e176fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7779c690-d369-442f-9b91-8b3bcb356c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9eb6a3-8bb4-41de-a4de-a575a4c722be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27d68ae-0a40-4b1d-aa3e-d86978f92dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86ae298-1727-4c09-b43a-d956dc0f11cf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbf5c54-94c3-468b-a88c-0d1a89f7a7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad1f787-7902-4004-b176-36b79a859f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7704bad-f932-4425-97ec-2b018b412982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38419c46-a348-4b7a-975f-5d8e0419ae72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbcb090-483d-4066-b569-0ef9635de56d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6920af-23e8-4a62-ab1e-2d14f5e3da14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53e2690-48bd-4720-b2b7-f00f17481a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb546eea-84fe-4f4a-9699-47f807030663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a6ebc7-464c-4cc8-90e0-8caaefe7713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f0041e-6ded-4fe7-9bf8-5c6609d49dfd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7cebab-8470-4c80-8206-776abd041eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f6b4ef-cebd-4ccc-963c-20a47cab1089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a0b917-9e4f-4601-9b1b-ebc603b92db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df8e641-8b69-48f9-99f2-e8b3b35e0b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fba799-0865-40f8-8e42-2c8c6c451572",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e4a3b4-55ce-4ae7-a733-2640635e0944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0e3410-83c8-4293-bd87-2b47deb280d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be35c60b-fd60-4103-989c-f4d4a330fc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a91f803-85dd-4899-bdd3-f799dffe915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ad7809-fd5b-42bd-823b-ebf9113b96f0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506962dc-311f-4b0c-924d-db3edc2b2292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04335fc4-4b0d-4656-8b1b-04ab4cd84712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684149ac-ff63-4a7f-96d9-2c0044b4c0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7c18e5-51dc-4916-acf3-86e06ddc1087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5b9049-edc8-44c9-9212-65b792b420a0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2efae8-30bd-4ae3-8209-84251de4647c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc144bdd-409f-44c3-b96a-2c9eebc3b3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f937d17-c311-4721-920e-b4ebfb1b4427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0036b026-f5f9-4c68-8b01-fd643141daf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f52a3f-81fb-49df-bec8-a90ad046bd50",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b126b52-b1af-41bd-878b-8a21019677e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb01455-8931-4dee-aab3-6cf7958bf156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbcff49-33a8-4ca3-bf5c-330d6327665a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd94bee-7fc2-4953-821b-1768b0558070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5300ec78-e37b-4921-adfe-9525f4aade49",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e04a6a2-9d85-49fd-bb9b-31129c3e74ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62800d4-3ff8-4b3c-94d5-bd249b0491af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0434bb9-9e81-45e2-9533-8524ad593de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194363ed-7a91-4658-8160-a4a67ac62d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2992bcce-1aad-4797-8a6d-ab98eb6b11b1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b967db-595e-4253-8a60-b0407f961a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d47ede-3556-4079-a514-3726f9b2a700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b5994f-4246-4fd1-aced-17843c93408c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810bd1ec-3192-4a38-9065-d401b1fc3498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733776af-c8a0-486f-b1a3-a3419202056e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca3fea8-109b-40d1-864d-8e65d12f1b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad88b9a-4881-4f28-93ee-128af0450195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963fd5a7-4c9e-4203-99b0-53c08afb1fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e58f9a8-a131-4210-8774-f361f5e4bb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b974b3-a944-4462-9f86-34a2892f16e9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928f3ac1-9372-459d-804f-c498f75df455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331c2267-6d33-4fc5-bf76-14159b017bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b3d989-fc09-46cb-abe6-a9957dc94218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797df620-c81a-40b4-a606-6c17fd79e062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37631a1f-ba70-403f-8441-7bbccb3c75f2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e5f547-54de-48d6-9b99-364b3a05dc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c5c134-986e-4336-806e-035a9db69314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc4cb55-0650-4051-ac0a-2c07d3f3cea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9650934-7af9-4b3f-8dc6-72d922c27452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c200eaa-8eb4-4c34-a986-aa0dbefac884",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c85e34-959d-49a6-b25c-3415ab6a2cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac17ea68-05fe-4314-9bfa-0307bce590e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a7c2ae-0abf-4d4c-bdd5-8fa57e21e3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297a6622-3e6f-4d55-9447-1b1790c72985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc72c201-e321-4f75-973c-35299d737b44",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03928f2-6400-4b87-9481-a4b59ff07e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943e94a1-bf42-4e1d-9a05-c79a996f0407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdae74b-04dd-4e48-ba20-226843bd3e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e95e81-5304-4b4c-aadb-9013d41cb454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f028088-9ca2-4d06-b25a-ea50e5f3e8b2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b72edb-3cec-461d-9d21-408e71ba0978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1c92c6-b7a6-4871-ad20-1393657dcad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e322011-855d-429e-9240-1b423f242c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580ffa60-a38c-43c9-b11a-9d7a7b3db621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f93bf8-f991-4265-b0ca-10a706331f52",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2ea64a-d919-4e1b-ae69-5fb84f1c4b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d7a20d-f235-4b0a-9cf5-29a7057a4ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2357b75c-ed09-45d6-afce-875a5855a112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0912d3-db2b-454d-8a98-6a6e78aa837c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a63631-d35c-4f81-831f-8b75628db1c6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6fdc45-2ff8-42f7-8dca-12df4c6d3b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37ee970-b8bc-40a4-8fea-8f4d9664b019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d1c44d-625b-42f9-a42d-d8d3049d6181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5927b9fe-20b8-4e61-abcd-1b1ff68c3ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102fb4d4-d4e0-48eb-8339-1092f33d69d1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e38c77-a748-4a76-953f-43d99b86b121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425ef379-ef22-4328-9409-0aa06af2f513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a185780e-7ba2-4298-b208-4091b73f79aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c42f25-c405-4043-94fc-2836197dc14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe6a59f-023d-404e-830a-cd1ea9165697",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c06661d-c162-49c8-8853-e32444c2614f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d8a91e-6015-4d8f-a9ed-8b331364e969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a3688b-0c9a-4617-8053-984adf0a6326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f585ef87-a09d-4555-901b-5adbc9b9a388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68ec36a-0e16-4a71-b7e8-fc9a2d02779d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffce1f3-42c7-4b08-a3c7-013d9bfa17b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d3085e-0d90-4cde-8793-9790c5051e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6b2c96-9b88-4ac5-a45f-99d7aef36aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263481cb-740c-479c-85db-ad69a6425ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ef6432-4595-403d-8449-6be9043e67cc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162ed2f6-dbf2-4a6a-86ea-fb667c2629ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3bf22e-f951-4893-b0fc-32bedbc52340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c663362-3c3d-4e68-9ddc-98dd04396aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1882a01e-24e2-4690-8a8d-9e31535b62cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b8d7ff-47b6-43ca-827b-ec9911e7c981",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63688a62-059a-4976-891d-ee721a3388c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c762ffa-9492-4194-a679-d07bef2b67b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7c6f21-f8b1-4ebd-9607-9cc01dabf851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9e5b9b-d49a-494f-8804-8997a2bab205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1cdf24-5625-4e6b-8e3b-b6c8c0d8f12e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e6d417-b689-4dd4-9b04-8211dcc7241b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d7a702-b018-4484-a05f-17a49300f541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7b5d0f-c12f-4e2e-9503-4929fce74972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d430789-1c57-4234-b2db-c5d4c53d9f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4045d500-2854-4b0f-983c-d61d3e428862",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62e0a68-1739-4fce-9496-2ce070804b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651bbde2-665b-4dc8-8e52-6eaa2d09d1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc644a49-4c49-4516-850a-37ad21a02c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845b4864-1a6a-4115-aee7-6a6fe6ea81dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e2b8c1-7048-4db8-9674-0b92c07662d3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef29f35-f524-497d-9562-50f81cc95c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa518e8-ef0c-47dd-b88f-148becb6bc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d0165a-bb00-4f8d-a00a-7d072edb8eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bde094-a28a-432b-8155-e8c896ceb38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c077544b-a9fd-4d87-bdfb-1b1e55f84d65",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06baa66-440e-4dd0-8f26-37b6c4e23fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f053cf-7648-4d0e-9652-bac1adb77aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1d0b76-e15e-46af-8bb6-c7f545d1ec9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eaec3d5-f2b9-4574-ad4a-a33520aecf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7acd5ec-0930-4e07-9e35-556cd20192bb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c54f51-8581-4426-a374-ca8106d01fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d71c9a-706c-4b4a-8a4d-c99da340e86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdbcd65-4ee8-4802-9d23-1535edb2bb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f576ee-728f-4c02-839d-1c9156bad143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a54ce0-c125-4771-a4e3-e90bdf59432f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7446540b-85d6-4873-826d-c56bbb41937e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998e3cee-585a-4a3d-bf40-8732196771aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44df2942-bd94-45e8-a925-2042712415dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5a76ba-50b8-477c-9f85-280c149576c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20af720-bcd5-48ec-b85c-2a43d5fa56a2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4aaf7ab-4f86-49a2-8428-324d55b8ffc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a73120-410f-4bce-869a-56c1f2f23012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a85103-99f3-4d95-a46d-793690688757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad0bd21-5f4f-43aa-908a-11ccac1b4056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e287ad-616e-4685-afe7-7fb59f07c93f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3c3d02-8cca-4e86-91b0-5457748712ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef01aa9-64f6-499c-be5c-c439da187789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3b6978-05e8-4ab7-b83c-5208eba0f81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6cc66b-0c5b-448f-823c-835956fa871c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ac0ae3-3ffe-4fce-8520-d93caa2c2f5d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e767b41-9642-4b3b-b341-f0d4dcfa4411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ddbf3f1-621a-4e22-9b3d-bf59df0c17b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48900191-bfa0-41a4-adc2-9a23566d8987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e51a76-674e-4b54-9a4e-d84291604f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48201d20-7366-4be3-abc7-4b26ab715607",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998d9c90-de8c-4893-be3e-5e8d0215c7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708ae5c8-6d16-4b20-827e-c85bf53703fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587bfcac-3e86-45d6-8b03-9b5be2c66d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a11fe03-40ef-4e1d-b731-ee110dbe46a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cb8065-6aea-4b0a-a1c9-4085c8321749",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31497d9-9ca0-4da5-84e7-eee6f383086f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d983536-1482-4c4f-9615-93a84034f700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39989444-7b90-4bfa-b63d-cb22f451fa87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e83459-e21a-4c35-b255-74684786e85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e9049b-f06c-4a15-9b7b-be43e4622263",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74219bd7-1c7e-480a-9183-73269461b01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5a8430-7104-473e-8b7f-caa255b2e099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6148003-9b36-459e-9c5e-dfb4687fc639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1782b271-8185-481d-bc95-52ed943d89c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5a281e-6630-4785-b2e5-4cd9190a9336",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b288f4b1-5c52-4f9d-906b-874794291b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3936a656-3c0e-4fa1-9267-7d35512c210e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b305fc21-592a-480e-8dd5-6e81bf88194c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8963dc12-4bd8-45ed-8912-6c149beb353a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fa1554-13dd-4833-afb3-da4d045d6c26",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39bfc94-c596-44c3-a43f-cef2dafe67db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "489421bc-fca0-4640-ba45-c3e11fc30110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b051c52f-3017-4449-881a-52f5b72ad964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31edea10-8fe3-4a61-a3fb-4fa14267b28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc37a6f-0431-411b-8662-8910c5f59694",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1eb828-fe55-41ce-9bba-38e673891ac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2697c3b0-7e51-49b6-9819-7910ef85c53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a84820f-19fa-406b-bbe9-c234d08002c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acddef1-a14a-4cfc-baf3-1d6bc8af9189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ab65f6-5db8-4c34-a310-b9bc4bb41386",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e087089-75e7-4d90-bbcc-f636a2088a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061d02ab-6115-4202-8ec3-302990b17884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89baa8f7-4580-414f-a7a7-acaf1e197ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2ed277-178f-4917-90dd-3f26bf91fd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8053dbf8-2fb6-44fd-a9f3-02002a89bd56",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54ca9f3-c1ee-4301-9df4-6ede05d39803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58aaf30e-865a-4004-8558-ac62bc65b5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f1ce71-2215-4586-b461-5e7bc6dbe930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1935f621-1f8d-402c-aa23-933c30de2c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a5ca5e-dae7-43e9-9632-cbccffdb7869",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513afff5-0942-4cb5-a207-8f8f37a5cbd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d47325-1192-43f7-9abe-8e56d83a8fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8230996-3a3c-49a9-8c9e-f397fa1dbef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80805ac7-b43e-4019-9dbf-a1021a260897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497cff02-d5ab-4b67-a847-50f23fa5dac1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b66bedb-4769-4e2f-863a-359fb7e81805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de48e621-369a-427c-b348-8650166db86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deae7435-e3da-4e8f-a29b-c2b636580e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb7d60d-a39f-485f-89dc-6e63c71617fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c01e6a-702d-4893-87e6-d190fa4a214f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81186823-f60b-4288-b713-66e258b2e7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0af0db5-1b05-4e9f-8456-79aebe9bad50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8429a3a-d047-4dde-95db-0047d9796fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a05a76-edb4-473e-97bb-c7dd97079b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c324190-a8c9-441f-a57d-e563f8e8fe40",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c247e470-5f76-40e4-89d7-8896c66cd45b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01d5f98-7c71-4fc3-a573-f6f3fbb3a268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66e3aaf-74e5-461b-8df6-e98ee469bde2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09f5bec-cd6d-43e9-b235-2b5e8640ff90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b861961-d867-4c7d-8505-0485b175b2cc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f48e63a-b7f2-4b92-9f12-305818c0b3fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88272447-0d00-4951-b0ca-4ba346461bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd9fc1e-6874-44cd-b82e-cfced6a2b49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce9d672-282c-41ec-a14e-112eab3d2ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d2c172-f6b2-480f-a5fa-1ca93f45baa8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c955b2b3-e80f-4a96-bd6f-4f675f31967c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dafcec5-99ed-4c57-9922-640370b5ab32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459b5197-1da4-4535-9212-955e7dd94d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563e3ddc-6137-484e-8684-87653f9b6ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d356c62-af67-418b-85d2-49987c29a167",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1763b780-891e-4bf9-b677-3ac3063a22b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc457159-d37b-4a90-87dc-766f7193c666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e906b4d-1679-49ce-a534-80a4ab393455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c133b39-a2f3-4312-bea6-98a799f7b869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c364ee40-dccc-41a7-93e0-1e84eec287fb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027da444-fee1-4d8b-8204-27c0311896ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c2c7a10-fadf-4792-a3d3-0f63ffac4cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4e9203-645a-4bb9-8e8c-74a1234c7d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3fc609-0fa7-445b-8132-49f2b575df5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105ce638-10e1-4b95-ae6a-16c937446bf1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae64fd8d-9151-4a23-9d2c-1be828ce5105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c827f0-6c8a-4041-8b42-7846942289f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ffe265-d2e2-4244-a030-0039525ef835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfd6d77-27f9-4021-b6d7-00b2377c37af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0d0417-c33a-45e8-8352-9dd2d623a455",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3c1823-d69e-4885-a21e-6bee67f07efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de55e527-c6b0-48d6-bdbc-90dbc7ca91cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d92a42-1f57-4ad6-ae55-70ae08cbdc6d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c0f264-b700-42fa-bd3d-8efda878d075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7904270e-e464-445a-b360-18918a48ad79",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8331488c-5513-4c78-afab-51175d808d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75adec18-bddd-438d-af0a-935180746db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e262a8-5722-4900-8794-025c1a5b3aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0a2638-2520-4a7d-9d8c-59b2f7e68a83"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcb69c6a-ced2-451f-b3ec-ba3b67159247",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d7989f3-1fcc-4e27-8d22-c9804920687d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca910c13-e3de-4197-954e-9b5d566e63e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "242f0947-1930-424d-bd5f-ec29377b3adb"
                    }
                  }
                ]
              },
              {
                "id": "ded0fbb7-b888-4459-907b-b9a3ac27ce04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57d382af-fdaf-4ff8-966d-d0d0336b2e97",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48999554-08ef-437f-8515-4018c29430b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a18574ec-8b8b-4ee4-ad78-0f436f6222ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f9f345-5e8d-4b19-8cda-caa4d0beeb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72661b21-d1a9-41d2-94b7-af5f2722ff69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dc0653-1a34-4477-b160-583f8c17f208",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59300cc1-98a4-4dd6-8f77-a199b168880b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "39a06b33-6001-483e-b110-25e3683b0bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e1cfd7-a8a2-4e93-a259-1530f661ecab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6211de70-34c4-4995-852b-03f5de5c27aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "235516d5-5250-44e4-8237-f6afcb8e7105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98a994bd-cb2b-4cf8-b819-0db42f81fe7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "494bf72e-381a-49fe-89b8-2fd4d1c06caa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "454d2cbe-3262-4355-b0c9-892eb7415620"
                    }
                  }
                ]
              },
              {
                "id": "4ffdeb32-3fbc-48f8-a3f8-70de65adffc9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b126ac63-23e5-42c2-843e-fe80126d2edd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5fc3db-7cbd-4f5c-91a3-c85967a005a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "99feeec2-8f73-4062-b229-7e530db53a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fdb365-215c-4509-a6bb-e1293a79c279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912b5a7b-2a71-4310-8ac4-c7c4ba186d13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6e3191d5-ba75-404f-ad67-210b9c6e3b44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce9392af-4783-4f15-92b2-dde8a48d96a3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08d52678-a88e-404e-8842-93e1ab0771ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "94dd0eec-e468-4cff-9bfe-c4ee03fd7a70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b16ea0ca-99e7-4276-ad1a-c3b3c444a7ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e58fd1be-86c9-4da9-9bce-24d1d073b48c"
                    }
                  }
                ]
              },
              {
                "id": "5a5eef8a-d25d-410b-a3f0-61aaf17ecfcc",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14a6d862-5a81-4112-85d8-62c58473262b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b474e365-a6de-464c-8da6-4c11881b6c91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c61df4c-fa30-4ca1-9baa-946a05882d21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a5d9cd-9ae9-4673-888e-df7e03792174"
                    }
                  }
                ]
              },
              {
                "id": "f7a6b853-4634-4944-8bd7-ba32b436bdc0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b960e5c5-d099-474b-8351-e011239f0911",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b00ba02-239d-4a72-a496-d43a75bbe3b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33e34f1d-0f61-47be-9538-e8b99daa4d35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34e9712d-54be-4f13-b1f9-efc231c1706d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e5f632c-060c-4d9d-8c1d-c9484079add9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7d25bcc4-0185-468a-88a9-15a9c633963c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04076688-e29b-4b96-a735-812c0bbe8176",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b792fc3c-7651-4c37-9aed-51e435493046"
            }
          }
        ]
      },
      {
        "id": "49157088-b9af-4984-bda7-ed8469124ebe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "df16d35c-9406-451b-81ba-bf697ce77264",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f19a7cd0-a869-4cbc-89d0-7eb1a703bd22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe02e8f2-e264-450a-99b4-1b73afcc3d97",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dd15fc-204b-4542-8a46-3305872280d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ddf402d7-7f60-4ee8-a939-c2af266e7507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9f9141-6f0c-4393-9cab-3a5b64ab5889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faa41c95-336b-4efa-ac27-3f1f5bae863d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5efa0f-6c00-4dea-9343-7becd06b495c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da518e73-cd5a-4087-91a0-5cd894842366",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "08a444c8-330a-4c61-8180-454eeb0f0ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9218c48-494d-4876-bcbc-c6198e4ae8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45277de1-6846-49fb-9c80-a686a3ec5107"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f768058b-ad90-47f8-b07e-92b9a7d26eb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1871903a-83bb-4f1e-be46-e4c20bd3dae3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ec8409-ea61-4b06-87f2-d395ef13b50a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20b7e6e7-22c3-4073-86ad-a1f365a6ae23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "361e6814-ff39-46f4-a18e-fc31b299983e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4aee7fc6-cf37-4e7b-924c-a7179cf996ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5223527-381a-4e07-a648-7e85f3e79341",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "698dc160-9c8d-4747-98ff-c0dba0412bfa"
            }
          }
        ]
      },
      {
        "id": "27f2fdc3-a26d-41cb-83d8-40cb2ae5b87e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5f766758-2559-40f8-947a-ee11ff0d8373",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d95f245-ada8-4ef6-a68d-47cc12ddbaf1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "254830a0-7c2b-46fa-9ce8-d58e41b00618",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d795bd-9ef6-4216-9764-91c2cc4ae8d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dbf4d842-68db-48e9-aa5d-ef95438ea942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96109b84-443c-450a-a1b1-e0c73c66ba53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58f5ff16-c5b4-4346-9bd5-28269db92bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d9ffc3-8b86-4f79-b7f1-7735d151c5cb",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60ae586-e619-4b61-b55b-8dadc2ee259e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6cf99ec7-aa38-41b8-a0bc-4ecd0529f7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925aead8-06ce-46e4-835d-7014ecd1fa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d48da33-ec1c-4093-b6d7-27bc9da7d23f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc466bd5-d00e-43f1-ae18-e96fd6d773a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "617e955d-1f47-4756-b73c-52cc894e0558"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0107ce54-fb7d-47c0-be72-fd0376c95569",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f47c6c8-07f5-4438-855d-c6df00fd9002"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4548242-b264-4a72-875c-a0a9a4e878b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cd9d6410-1739-4f02-9936-704bcc24e295"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd3e863f-d24e-4e10-af02-c0daebd4dfa9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9d2862e-1ac1-455f-a071-71894faaf89f"
            }
          }
        ]
      },
      {
        "id": "639ed7ed-02c0-44d4-acb5-4c1c10cff8d4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "05e4c650-207a-4789-a08d-a699c7491f7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dffbd3b3-11da-4108-9be9-fe9fa334865b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a225630-3cab-430e-bf7c-f457086e13df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3308f42f-f505-4047-9a7b-0d333cbbfd17",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f41bcece-d11a-4edc-8502-955dec20d1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1995a009-1c2f-4091-8759-8899a8b602e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff8af1ec-b0a4-4e13-bdb0-1aec579305c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ee3d95-a75c-443c-af39-b1d00fca9479",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc49405-fd5e-4118-9b5b-40fa8e6c4868",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "14d47caa-878b-4017-9288-06dab5c861ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe210e3-450c-4aea-8761-81ada9c454d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d3c7b4f-9c7c-4edb-ad5b-7a5ca9498958"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04dd0e24-828b-435e-9cc6-6d48a90704b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d96ad0d-88d7-412d-a326-4d1c1273b82f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba7416b2-86e5-4787-93e2-b7a850d3ab81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "702b2ce4-3553-4c03-beff-6adea4f8f335"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e25a50f3-2add-477b-9a9a-ee3455460627",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d511de77-e94e-4070-b38e-4041bf3c3c40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "889db47e-94de-4607-bc79-7f232b2d7552",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f81e0e9d-51c9-4079-b1e9-b3b043c9d6d3"
            }
          }
        ]
      },
      {
        "id": "52eef33c-5609-49d7-89c9-8fdd7b5612dd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71f513b6-6888-41c3-ad4f-f8f02ad91e77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e568e577-0206-425e-82cc-a8ea90346c95",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f0c11edf-e37b-4959-b4ab-850f0de0d989",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d42799ee-fe46-4f66-9e04-8fd29ad319d6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cf8abb7-2de1-4044-b709-799a76be128c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 508.1724137931028,
      "responseMin": 27,
      "responseMax": 2834,
      "responseSd": 316.4854850186766,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670459858303,
      "completed": 1670460005006
    },
    "executions": [
      {
        "id": "c2c0e43d-8c7d-4c9b-834f-56f4127cad6d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b352aa9e-5de2-474f-8bca-891a87d21c06",
          "httpRequestId": "4afbf0e5-f506-42cf-9ea3-c94ea9366c53"
        },
        "item": {
          "id": "c2c0e43d-8c7d-4c9b-834f-56f4127cad6d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f6001759-38ae-41e6-a12f-df9b5425f10d",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 0
        }
      },
      {
        "id": "5d1d76e2-1ab6-4450-ae03-a0c88292896e",
        "cursor": {
          "ref": "230bd213-951d-459f-9998-928dfcf9cb0c",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "172ebd01-455a-4cef-afea-3d6bb0ddada6"
        },
        "item": {
          "id": "5d1d76e2-1ab6-4450-ae03-a0c88292896e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "160398a5-13a7-422a-889a-aae60c588ff3",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 0
        }
      },
      {
        "id": "9d757644-0f2d-4a54-8b64-9c703d7ac3e2",
        "cursor": {
          "ref": "e8e8844a-a235-45e8-8c24-21117414efda",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "88fab8ce-c507-4bee-bd58-50142fd1aae7"
        },
        "item": {
          "id": "9d757644-0f2d-4a54-8b64-9c703d7ac3e2",
          "name": "did_json"
        },
        "response": {
          "id": "2255ee76-ba6e-4090-9790-b20c2b78f8c3",
          "status": "OK",
          "code": 200,
          "responseTime": 1292,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb30d92f-024a-4976-8695-f9acd53fd056",
        "cursor": {
          "ref": "1a73d8f6-24cb-4505-a606-62ead4b8a07d",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d10bc7d6-b349-490b-8e2b-01b38d6078c9"
        },
        "item": {
          "id": "eb30d92f-024a-4976-8695-f9acd53fd056",
          "name": "did:invalid"
        },
        "response": {
          "id": "1902e038-6a41-42b1-ae86-9a3c3b295832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb30d92f-024a-4976-8695-f9acd53fd056",
        "cursor": {
          "ref": "1a73d8f6-24cb-4505-a606-62ead4b8a07d",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d10bc7d6-b349-490b-8e2b-01b38d6078c9"
        },
        "item": {
          "id": "eb30d92f-024a-4976-8695-f9acd53fd056",
          "name": "did:invalid"
        },
        "response": {
          "id": "1902e038-6a41-42b1-ae86-9a3c3b295832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da266e5-ba5b-4817-9dd9-a0f51464d1c3",
        "cursor": {
          "ref": "08b4a5d6-7ac4-4aca-899c-129f8011a1bc",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a9a77663-2aa8-4b30-8050-1681e16ba9fa"
        },
        "item": {
          "id": "3da266e5-ba5b-4817-9dd9-a0f51464d1c3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4c9db85c-6174-4faa-93a8-9c1703e3a186",
          "status": "Not Found",
          "code": 404,
          "responseTime": 605,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38c006d-a343-46ea-b0a6-cbfd11f7b1cc",
        "cursor": {
          "ref": "98a3d4e4-3506-4a14-ac5c-2891f93f35dd",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "31b90cca-3d47-48b6-9264-6881ceeb4146"
        },
        "item": {
          "id": "f38c006d-a343-46ea-b0a6-cbfd11f7b1cc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2f56b2b6-8135-4c63-bd49-7d7f2e9def9e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 527,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0a20c3-3e5d-4fd5-b7c0-0e009fce3497",
        "cursor": {
          "ref": "12cff790-3fbf-4f7e-9cd4-3efa9083ac92",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "39f33bcb-d1e6-48d0-97d2-ac64874021df"
        },
        "item": {
          "id": "bb0a20c3-3e5d-4fd5-b7c0-0e009fce3497",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "349b2ec9-05b4-46c5-985f-3989c2230f9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e41993c-a205-4199-9a62-644d25738572",
        "cursor": {
          "ref": "c2e38a2a-08bb-40b1-a7e9-0adb5ed3897d",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a78a84ac-2d65-4e79-a828-e5da9d758184"
        },
        "item": {
          "id": "6e41993c-a205-4199-9a62-644d25738572",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d5ac330a-7b73-42af-b879-d074afad8238",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e41993c-a205-4199-9a62-644d25738572",
        "cursor": {
          "ref": "c2e38a2a-08bb-40b1-a7e9-0adb5ed3897d",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a78a84ac-2d65-4e79-a828-e5da9d758184"
        },
        "item": {
          "id": "6e41993c-a205-4199-9a62-644d25738572",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d5ac330a-7b73-42af-b879-d074afad8238",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1010ad-5f0e-47ee-9f1d-04f51b317be8",
        "cursor": {
          "ref": "d63cabb2-9e06-46e5-bdf9-4567c17bf70a",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "819b6d46-d623-485d-87b8-c21926a81d1f"
        },
        "item": {
          "id": "5f1010ad-5f0e-47ee-9f1d-04f51b317be8",
          "name": "identifiers"
        },
        "response": {
          "id": "afaeb3c5-e5a4-4c19-8483-3c85d063e504",
          "status": "OK",
          "code": 200,
          "responseTime": 810,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f18072-0087-40b2-97e1-2d7ef8d471f6",
        "cursor": {
          "ref": "425fbb92-5561-4e78-8333-210cea07be78",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "828ba042-7361-4e33-8361-58c75720ea16"
        },
        "item": {
          "id": "f3f18072-0087-40b2-97e1-2d7ef8d471f6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7a28a8ba-9634-41ce-99ae-571e04e4dcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f18072-0087-40b2-97e1-2d7ef8d471f6",
        "cursor": {
          "ref": "425fbb92-5561-4e78-8333-210cea07be78",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "828ba042-7361-4e33-8361-58c75720ea16"
        },
        "item": {
          "id": "f3f18072-0087-40b2-97e1-2d7ef8d471f6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7a28a8ba-9634-41ce-99ae-571e04e4dcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4456e877-e9b1-4d41-8124-ac69405b8e69",
        "cursor": {
          "ref": "ee1f61e1-53ab-4ce9-847d-3715c35deeac",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7a1132d9-55d3-4faf-b2ae-2338052a51d4"
        },
        "item": {
          "id": "4456e877-e9b1-4d41-8124-ac69405b8e69",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "afab8ea6-adf1-4d35-81cb-bb8ed381c8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d474f535-fcd3-4948-9f82-da1cb4f9808d",
        "cursor": {
          "ref": "659def5e-8e92-49ca-b73c-13f6d7e74885",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5532e3a-7686-4fc8-839a-127252ae5f90"
        },
        "item": {
          "id": "d474f535-fcd3-4948-9f82-da1cb4f9808d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aec400c3-6111-496c-b728-56a8efe22917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1756f5-4335-4ceb-b479-debf0547dd73",
        "cursor": {
          "ref": "c1e543e5-a37c-4ba8-8f69-f5fe5ff18398",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bed333ea-2c84-4e7c-a2f6-c8be4f02d504"
        },
        "item": {
          "id": "bc1756f5-4335-4ceb-b479-debf0547dd73",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a92ff4e0-9c2e-45d5-b730-ce925a8cc096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994b48b5-65a4-4c0a-93c8-26e12f3f56c9",
        "cursor": {
          "ref": "b78a456b-b1e0-4912-821e-0b8a83e0cb9d",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7d163feb-8090-4a68-9360-80bab78a7c41"
        },
        "item": {
          "id": "994b48b5-65a4-4c0a-93c8-26e12f3f56c9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "66722d95-b6ea-439a-b5bd-0d027d50180a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21497da4-f403-4b96-b763-e6a874784163",
        "cursor": {
          "ref": "85c9dc16-6fac-4eea-92df-6f0bcf6296b3",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "38202b52-180c-4ee5-b62b-001d2394bc36"
        },
        "item": {
          "id": "21497da4-f403-4b96-b763-e6a874784163",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fb793529-62db-4ebd-a728-0dae6144b417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a189c1-41bb-445d-b036-d522b45b1c30",
        "cursor": {
          "ref": "de221f0a-2f8a-4a33-b47e-cd271e284029",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f522dad8-21ae-4928-8fe1-5b4933a27eaa"
        },
        "item": {
          "id": "06a189c1-41bb-445d-b036-d522b45b1c30",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1b4c288a-83d2-4771-b53e-13d1bc9445f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf51a93-83ef-4760-b221-f230ab3ea938",
        "cursor": {
          "ref": "6580f292-388a-474b-96e3-49fd69b55519",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f005731e-913c-4be6-9560-07f67335090c"
        },
        "item": {
          "id": "dcf51a93-83ef-4760-b221-f230ab3ea938",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7fe1dfb5-ebda-475a-8c8e-70967e12ebbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b8dac7-b71d-45ea-b829-67d705eebab2",
        "cursor": {
          "ref": "4843beb8-bbff-44d1-928a-2408776d03ae",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fecad613-2a5c-410d-8754-0451438b585c"
        },
        "item": {
          "id": "64b8dac7-b71d-45ea-b829-67d705eebab2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9b3f6814-5ae3-400a-a6c6-fa264484f387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7ad00e-189f-4d63-87e1-7ee651dd2ccb",
        "cursor": {
          "ref": "34a10b63-f64a-403c-85d9-f2db6b2302b6",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2b1d4e36-368a-4af6-a01c-b0bf1a361faf"
        },
        "item": {
          "id": "ff7ad00e-189f-4d63-87e1-7ee651dd2ccb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d5d3982a-7bbc-45ea-970d-d0925ddf03c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3a26a7-3860-43a1-a811-ef7e05208ce3",
        "cursor": {
          "ref": "53a939ad-ca1b-4b12-8abe-4cb3be0bc683",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e58701e9-71b4-4d28-b258-615c4123fc51"
        },
        "item": {
          "id": "5a3a26a7-3860-43a1-a811-ef7e05208ce3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6e776b38-7f9d-415b-ba01-af2181011721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85adc3f-680a-41d4-9b63-021972cb6026",
        "cursor": {
          "ref": "e1ed2992-246a-4c42-8bde-0ad084edef1a",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6f0fdbf2-1da6-4d2a-bd34-ab60345cdbc7"
        },
        "item": {
          "id": "c85adc3f-680a-41d4-9b63-021972cb6026",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "18b9c700-47ae-4dee-aeaf-e59929cf19cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a0c612-57ec-4514-aab3-31f10d19aee5",
        "cursor": {
          "ref": "0dc2979c-bbfc-461a-a91d-59aec84d8601",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4202886d-a9d2-4158-8a91-364433582680"
        },
        "item": {
          "id": "49a0c612-57ec-4514-aab3-31f10d19aee5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9470d386-a05a-4ba7-86e1-2c81456c83b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4b90dd-5d6b-4df4-9a20-1d861b736529",
        "cursor": {
          "ref": "7aabc702-ace1-4f79-86d3-5101f9ec5bd1",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "991aefe0-3e05-41cb-8d2c-b0f98428cde5"
        },
        "item": {
          "id": "ed4b90dd-5d6b-4df4-9a20-1d861b736529",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3773993f-9ca9-476b-87b4-3eecd1268bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f6d3bd-dc85-4a41-b91c-680549d4cefd",
        "cursor": {
          "ref": "7474d5a4-783e-453e-98e2-533bd79ff310",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "13b64869-e8e1-4f87-91ad-68f717001af9"
        },
        "item": {
          "id": "43f6d3bd-dc85-4a41-b91c-680549d4cefd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9201a293-f174-48ef-bd19-518f12e0405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b8dbbf-961b-4f86-8e95-eeb8717ba437",
        "cursor": {
          "ref": "fb70a5a4-eec3-459e-bccf-52194f7803d8",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "58dcd0ff-cc8d-4fbd-bd3c-645ec7b7ec79"
        },
        "item": {
          "id": "21b8dbbf-961b-4f86-8e95-eeb8717ba437",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0b13e855-6e6d-489e-b530-305aebf9a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3226c2a4-eb4a-496e-9a3d-8f189edab5ab",
        "cursor": {
          "ref": "9480aa20-943f-4cd7-9200-ed6110714c1d",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5f29ef2f-1279-420d-9658-783f7fdbd7ce"
        },
        "item": {
          "id": "3226c2a4-eb4a-496e-9a3d-8f189edab5ab",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cf2b024e-2dad-4f5d-aa11-b958cc5f4ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8725d1-01cf-4db9-a552-de7b4b034545",
        "cursor": {
          "ref": "edfbf99c-971d-438c-b2cd-f4f9eb76967e",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "96d69d1f-f835-46e6-a6b5-7a811c18333f"
        },
        "item": {
          "id": "7c8725d1-01cf-4db9-a552-de7b4b034545",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "face75b2-a6cf-4753-a0a7-7d9795df772f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccec447b-a7b8-441e-a240-99842a665411",
        "cursor": {
          "ref": "69bffc43-04a2-46a5-8688-d1947a7aefc7",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3fb34e62-ef7d-4641-b41f-78b8bc04e305"
        },
        "item": {
          "id": "ccec447b-a7b8-441e-a240-99842a665411",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a674923d-6a20-49f9-9b66-3d27e59a09e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c426ba-c6ef-4be8-8b28-603c3279af7a",
        "cursor": {
          "ref": "d6ffe451-ec1d-4f94-8424-7ea127114c45",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "be98f36a-36a2-4de4-aa0d-0245898cfaef"
        },
        "item": {
          "id": "b1c426ba-c6ef-4be8-8b28-603c3279af7a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "46bf5e3c-7c0d-47f4-8cb7-5f1201245e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2370787-9c19-4731-bab4-a1491f574fb3",
        "cursor": {
          "ref": "e5bc6706-3c21-4844-8853-0240c77f278b",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "272d024d-b497-4dd3-81a1-c03d65574475"
        },
        "item": {
          "id": "c2370787-9c19-4731-bab4-a1491f574fb3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dc0b2888-6384-4d5c-9484-c489a6b06e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92913926-52d6-4481-ac3c-dc01f0e16d3b",
        "cursor": {
          "ref": "7e2f82ba-b2f1-4c2c-97c8-d8a652b024d4",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bd806c93-bd39-473b-b7ea-e6c5ada8ee39"
        },
        "item": {
          "id": "92913926-52d6-4481-ac3c-dc01f0e16d3b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bd018a0a-0a26-45ca-b8ad-03045ca4498d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b16c2cf-5a8e-4d09-b906-bad8a20cb9b3",
        "cursor": {
          "ref": "93689e47-079e-470c-9783-c6684cc300cd",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e89cb147-8a5b-4766-a383-c6c621368543"
        },
        "item": {
          "id": "5b16c2cf-5a8e-4d09-b906-bad8a20cb9b3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "719931fe-be7d-4d01-a21a-fe0b7c621c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fd20f9-f4c4-4c78-bfaa-7140c0713394",
        "cursor": {
          "ref": "b9e95a1e-7ae3-440b-af73-8c96e34ee89e",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0ea38234-1d43-4a44-a70c-f960ec54c729"
        },
        "item": {
          "id": "d7fd20f9-f4c4-4c78-bfaa-7140c0713394",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3c894f18-d327-4ca2-903a-eb54df625f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e9c971-1c03-43fa-b1ba-9ca6ca7c9d67",
        "cursor": {
          "ref": "216cc63b-c694-4132-a3b9-e141fa259235",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b3b4abea-ef5d-4f4e-8645-ea580ad96cda"
        },
        "item": {
          "id": "30e9c971-1c03-43fa-b1ba-9ca6ca7c9d67",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b02bf3a5-10b7-42b3-8671-9162c1ae1af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9701eed2-bae1-49e8-a88e-ddbe939eb932",
        "cursor": {
          "ref": "8213b58a-e52e-4d45-9f32-e0501d67ee23",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "946d16ea-d4e7-42cb-bd86-e90afe57e0d7"
        },
        "item": {
          "id": "9701eed2-bae1-49e8-a88e-ddbe939eb932",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "658da074-72d8-4888-9837-12e453d05b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d7b349-5090-493a-a53c-483461274a0e",
        "cursor": {
          "ref": "5e09e55f-b446-48ac-86bc-5c2aedfdbec5",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b2547d0e-3e69-4501-86a8-2614fa00b3fb"
        },
        "item": {
          "id": "b9d7b349-5090-493a-a53c-483461274a0e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5145dab1-4eea-409d-b12f-7d17e4c9f2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99afd8d2-2324-4d14-9dd5-819f985dd5dc",
        "cursor": {
          "ref": "4784b755-4a4d-45fc-b0a9-da93fc618385",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9820052f-e687-4da5-ac7d-00cd28c75ead"
        },
        "item": {
          "id": "99afd8d2-2324-4d14-9dd5-819f985dd5dc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "260304f3-e464-4a1b-83e1-49f3bed32a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76629ab7-7dae-4ae0-a1dd-6c5b005cd0e3",
        "cursor": {
          "ref": "642c1f5f-59c4-47b4-8925-ae2c28c6f099",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4f08ac68-6766-4346-9087-504415cff11e"
        },
        "item": {
          "id": "76629ab7-7dae-4ae0-a1dd-6c5b005cd0e3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9f376f94-9e02-415a-975c-a5cee7a243aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f8e36d-aacc-418e-8e7a-9a723eee988b",
        "cursor": {
          "ref": "687fd6b4-1905-407f-9de9-1b6ff5648a70",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "04c6f5df-ce4c-4769-912f-f283c0b79a85"
        },
        "item": {
          "id": "a8f8e36d-aacc-418e-8e7a-9a723eee988b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7fb7c912-44b6-4e26-a6cd-5ec5aacc5e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c28fffa-5d24-428e-8feb-f51edf967b16",
        "cursor": {
          "ref": "6ce2c156-5250-45c4-ad76-ebb67611338c",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9e3212ea-a8c8-4130-b8e5-6669d2e85756"
        },
        "item": {
          "id": "5c28fffa-5d24-428e-8feb-f51edf967b16",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a89c7a25-4861-4a27-9b62-56635b10e6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d33994-5546-43a8-8600-9bca650aba23",
        "cursor": {
          "ref": "8893d59a-5ac5-4e88-8a86-6f433228a39a",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "04bbf02a-2635-48ff-8bf8-337ace2ae0f0"
        },
        "item": {
          "id": "d8d33994-5546-43a8-8600-9bca650aba23",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f6ae2f1d-60cd-420f-950f-7f435d930198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd813db0-fb8c-48f4-897a-efc4a27e0c7a",
        "cursor": {
          "ref": "8a841089-e8b7-41f9-a6c6-a45ee00b2f07",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "388beb15-c4e2-4cf4-85e0-6257f22f7511"
        },
        "item": {
          "id": "cd813db0-fb8c-48f4-897a-efc4a27e0c7a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e8746e6d-4c1a-4e62-8f6f-5c82c9a9fac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9274192e-7c7d-492b-bb59-7b900217b0ca",
        "cursor": {
          "ref": "bd1291eb-16ba-4269-bd67-853e7b985d4b",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ebc7d9a1-3aed-413d-8eae-471cf1eeb12a"
        },
        "item": {
          "id": "9274192e-7c7d-492b-bb59-7b900217b0ca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f7b25365-4451-4047-9ebd-be78be230ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51835c6-1722-44b5-811f-37bd2aadd25b",
        "cursor": {
          "ref": "da8bc67f-bbe1-4ead-a1fe-65c611589411",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1cbae37b-4ff0-47fc-b2bd-3eea1897a743"
        },
        "item": {
          "id": "d51835c6-1722-44b5-811f-37bd2aadd25b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dbcd5588-1dad-40eb-afe5-65e5193b0e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2a654c-2585-4d06-b54b-e04889248e8d",
        "cursor": {
          "ref": "a2811881-4bb5-45be-a13b-433d53055dda",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e12442a8-aa46-43e2-8b42-495e55244be8"
        },
        "item": {
          "id": "fc2a654c-2585-4d06-b54b-e04889248e8d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e417858d-8227-471c-bbe5-1861c18ff050",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1187,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfb6ac4-998e-4ab5-9003-06ecf1f3b1c2",
        "cursor": {
          "ref": "79afb148-e6a1-4fc7-b15b-ee535106a57d",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "32fd767c-9a00-4db0-91d8-27c5c445b7f5"
        },
        "item": {
          "id": "7dfb6ac4-998e-4ab5-9003-06ecf1f3b1c2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "af85172b-bc1e-444a-8437-d83f5fea49bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cf8f6f-6c42-481b-9e58-e8cdb129b74d",
        "cursor": {
          "ref": "02f5cefe-776c-4339-bc85-e7c2e03504b5",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "394bb713-4523-4fc6-8588-78be44b1613f"
        },
        "item": {
          "id": "20cf8f6f-6c42-481b-9e58-e8cdb129b74d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a46345f0-cf2b-4a8e-860d-17dc87c7a3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf764965-3024-44f9-8ee8-98279cb63ce8",
        "cursor": {
          "ref": "69e5b577-1e1b-4d72-8e0d-4857ca4f76f4",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ff170353-e501-42b9-9fec-029e9f11f911"
        },
        "item": {
          "id": "bf764965-3024-44f9-8ee8-98279cb63ce8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0134901f-b025-47b7-8be2-05a3aafd1217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61239bbd-236a-409e-9abd-62c98affad8e",
        "cursor": {
          "ref": "9ce3801b-17c4-4408-95ee-ff09e2ad891e",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5c995c34-20d9-4896-84fc-98f111c642a7"
        },
        "item": {
          "id": "61239bbd-236a-409e-9abd-62c98affad8e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cbcbdf52-7f69-44b2-bd7c-ab4c20ee2efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bd969b-0ec9-41b7-805f-99e330d6203a",
        "cursor": {
          "ref": "163f4a26-adcc-431e-bf6d-3932f1c089eb",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "66b69e56-3fc9-400f-8f8a-cbe14ca1e63c"
        },
        "item": {
          "id": "87bd969b-0ec9-41b7-805f-99e330d6203a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ecd1e10a-85a9-46b5-90e9-fcbc65d4693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1be5d1-5462-4a0f-a4ae-d7613cff4e82",
        "cursor": {
          "ref": "97c3a378-83b9-4161-97d8-2ab56df81161",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "477a8c16-d2e9-4fb6-8517-f4a452bfb7f0"
        },
        "item": {
          "id": "1b1be5d1-5462-4a0f-a4ae-d7613cff4e82",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0143b42d-655d-4075-8135-615c47b84682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621122cc-f3be-49f4-bf9c-eba340d940ef",
        "cursor": {
          "ref": "564c259c-30d6-4d9b-87c0-b02863e1faf7",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a60a02c3-cae3-483e-a9d0-9d089f02cd8f"
        },
        "item": {
          "id": "621122cc-f3be-49f4-bf9c-eba340d940ef",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0b352e7a-0f1b-430f-93b8-5a46a5f0a5ed",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 691,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b059c07-2626-4605-b0a4-80756e68d27e",
        "cursor": {
          "ref": "1cc10452-0a9d-4853-a971-bdd0355b3fb2",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3db3e05e-c4d6-4ba9-b125-cd205958cc89"
        },
        "item": {
          "id": "3b059c07-2626-4605-b0a4-80756e68d27e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "22824f3b-ee09-45f6-9833-4397361c787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bf8f8e-db8f-4f42-908a-26b83e688ada",
        "cursor": {
          "ref": "39525856-f755-43ea-906b-fdf8e50bda79",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "81947aa4-6007-4505-b4f3-fc08fc35d769"
        },
        "item": {
          "id": "25bf8f8e-db8f-4f42-908a-26b83e688ada",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "46c821af-f228-49b4-ab12-61ec661e9e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162655fe-b442-4212-b26f-8e2433406460",
        "cursor": {
          "ref": "11d1fc38-0b3c-4966-96f4-6899a49eda19",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "70c80d1e-4b21-44ac-acf1-60a70153ec45"
        },
        "item": {
          "id": "162655fe-b442-4212-b26f-8e2433406460",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b98a6de0-2120-47a7-9907-41968c9b34d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd39a2e-c2fc-4047-9d6e-a4600d35fe38",
        "cursor": {
          "ref": "704c00eb-b73e-423a-9a09-85dbf53d28e3",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4c9bf070-6b99-4806-a60f-fe4f58263949"
        },
        "item": {
          "id": "6bd39a2e-c2fc-4047-9d6e-a4600d35fe38",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a2566629-9b1a-482b-95b5-b9232b187347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4068715-315c-445f-bbbc-562e7396fcf7",
        "cursor": {
          "ref": "77c027f6-538f-41ee-a6f3-88fb149dbc3f",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0b3751b6-dfbd-42e2-b842-d1af946a87ff"
        },
        "item": {
          "id": "e4068715-315c-445f-bbbc-562e7396fcf7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8575957a-45a2-4dbb-b283-38e99bc2e1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159c2b3-b296-4805-8e13-bb47081058a4",
        "cursor": {
          "ref": "340fb659-c8b6-4964-8084-261e87eb85c9",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f7ea5d0f-6e6c-40a3-94ab-c3206ff7941f"
        },
        "item": {
          "id": "8159c2b3-b296-4805-8e13-bb47081058a4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a60a48c7-083d-4e6d-b9c6-303b46056b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4805c5f5-81b8-4b9c-8388-c908c460e6a0",
        "cursor": {
          "ref": "9cf25dbb-628c-4abf-bf3f-b4ae20121f4a",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4c2c748f-a716-40c6-93e4-edba3bbe339c"
        },
        "item": {
          "id": "4805c5f5-81b8-4b9c-8388-c908c460e6a0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4d3b8127-7b20-4892-9bba-30b08e77b45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5e3445-d99c-4903-84f1-f0bb0a0e0914",
        "cursor": {
          "ref": "c8b44602-efd7-4e25-befa-e34a2b6be3e2",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "49392a56-ada9-459a-85a0-50936f5ccb04"
        },
        "item": {
          "id": "8a5e3445-d99c-4903-84f1-f0bb0a0e0914",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fc4fe1cc-b7f1-4e27-85d3-76e20dd483cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3ad958-b386-477f-a535-fe8e803d358e",
        "cursor": {
          "ref": "22e8dbb9-121b-462d-8c37-19a384208add",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f7b767fc-d351-4ee1-aa87-a109545c7335"
        },
        "item": {
          "id": "3b3ad958-b386-477f-a535-fe8e803d358e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f0926880-16c0-4075-9655-a539d9583219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab933197-756e-42de-95a5-f0994599a713",
        "cursor": {
          "ref": "5fbdb835-b6a3-4121-a955-b996e9b20328",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7a83766d-25a5-46b4-b280-cddd748cec95"
        },
        "item": {
          "id": "ab933197-756e-42de-95a5-f0994599a713",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0320c4ec-9743-4f1c-bb1b-efb48e3d5594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995ddfff-070e-4a22-a73f-4ed77f19f536",
        "cursor": {
          "ref": "4b1f11aa-d2cb-4fa8-b830-c73d446d85a8",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2aea8fe0-f97d-4f88-a4de-e71719950ef0"
        },
        "item": {
          "id": "995ddfff-070e-4a22-a73f-4ed77f19f536",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0623b6d9-140a-4fb5-969b-aaa4fc454579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff10582-0f9a-4f95-b2ef-7c336ba43346",
        "cursor": {
          "ref": "8d3c4f64-1945-48af-adad-f9c7b544c01c",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "81ed4e4a-6419-4c9c-850b-2f02f06043f2"
        },
        "item": {
          "id": "dff10582-0f9a-4f95-b2ef-7c336ba43346",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3bed2c10-e924-465d-ae9e-1394ea419cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fbd01a-8d1e-4bb2-a064-afbbdc694fc1",
        "cursor": {
          "ref": "5ce6ef20-1a77-4481-8f7e-51f4a49afa3d",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cf5bad21-e072-40f4-8feb-1bed6ad21c50"
        },
        "item": {
          "id": "93fbd01a-8d1e-4bb2-a064-afbbdc694fc1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "03ee6c70-0be9-4ac8-afce-c1de0123f040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126dc4e9-4bc4-43e0-8f3d-141ec89ddd7a",
        "cursor": {
          "ref": "ab3694cb-c1bf-4230-bf94-de9ce28752ca",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4e11f8ce-976c-4672-8b22-eace38e70e47"
        },
        "item": {
          "id": "126dc4e9-4bc4-43e0-8f3d-141ec89ddd7a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fa1c644c-6b06-46d5-9cce-c698190ac3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009bb52e-2357-4aaf-993e-a25f08ee1686",
        "cursor": {
          "ref": "ef4f8b87-5681-4f52-a9e9-6cf8efef9911",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "16fa5cdd-3534-4ddc-9b35-12b65f60ddc5"
        },
        "item": {
          "id": "009bb52e-2357-4aaf-993e-a25f08ee1686",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6f8b0a83-cec3-48e8-a58b-fc54e8c1afc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcdb38c-13fe-4f5f-bdeb-0180621afcfd",
        "cursor": {
          "ref": "c93f07dd-b667-4419-acb8-c2c2a040ad20",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "13c1e466-20ae-4119-9b2d-334e9aa01832"
        },
        "item": {
          "id": "2bcdb38c-13fe-4f5f-bdeb-0180621afcfd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6b854e32-d519-4f16-abe3-20108746b0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca3ea17-4003-480d-b986-c711ba712fd6",
        "cursor": {
          "ref": "6f16d678-6bdf-45e3-92d0-06dfc9d2377e",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cdcbcefe-a5a8-4aa1-a70d-116a2c96025d"
        },
        "item": {
          "id": "8ca3ea17-4003-480d-b986-c711ba712fd6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b83dda5f-d84e-4aba-a5e2-cc5a030af78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd2b8e7-c1ea-4c11-ae43-d4d269e3c032",
        "cursor": {
          "ref": "7afb4ce4-f031-472f-ad47-732ed3c23e93",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "df59c2c0-09b2-493e-b180-f26df84e72b5"
        },
        "item": {
          "id": "2cd2b8e7-c1ea-4c11-ae43-d4d269e3c032",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ed2f1d5d-d1b8-479a-a274-6640a113c219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ad668c-bba1-4e9e-a4dd-7f4d0c2250f5",
        "cursor": {
          "ref": "90576873-1ba1-4737-a746-a7500d94571d",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f2146561-394e-47be-960a-fce371f011c1"
        },
        "item": {
          "id": "81ad668c-bba1-4e9e-a4dd-7f4d0c2250f5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "54786346-e249-43fc-93ad-4ab443e1e215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a72585-d1d7-4929-bc26-0eaba3640167",
        "cursor": {
          "ref": "8525f426-435f-46b9-911f-996ca8f992d2",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "65e71f33-f5a9-4302-bcd3-9876d6b11593"
        },
        "item": {
          "id": "44a72585-d1d7-4929-bc26-0eaba3640167",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b1530ec1-a9d0-4935-a3d2-9d0da9eba26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230dde23-dc53-492d-99e9-0f8a767987fd",
        "cursor": {
          "ref": "2adf39c1-401a-436a-8aa8-2d801538037c",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "752ee03d-c70b-4517-ab76-b9941eb3eb2b"
        },
        "item": {
          "id": "230dde23-dc53-492d-99e9-0f8a767987fd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "883e6e7f-683a-41e5-9ad7-a2736d5c43d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc90dd4-b628-4809-a68f-26b4df8945db",
        "cursor": {
          "ref": "fa6bb815-c132-4e9b-b837-1452e7747c47",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "77d11214-e20b-47b7-8410-fba087962b17"
        },
        "item": {
          "id": "1bc90dd4-b628-4809-a68f-26b4df8945db",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fbdb5289-535e-4d3f-99bf-1aff00e5afb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab93ec6-95ca-408f-ac55-c336c9072c81",
        "cursor": {
          "ref": "7449b367-ff7d-4433-8547-1869321bfc28",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bbb48b22-348b-46a3-8991-6545bba991ad"
        },
        "item": {
          "id": "9ab93ec6-95ca-408f-ac55-c336c9072c81",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "870a4ec0-fa58-44d8-812f-5315941ad997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c04949e-b7f1-4aab-bb81-1ce42fe414db",
        "cursor": {
          "ref": "3714cdcb-64c8-4883-a0ad-b1ee7b1aed9a",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f3f21fba-5541-4691-af3a-dbb2d1bea808"
        },
        "item": {
          "id": "8c04949e-b7f1-4aab-bb81-1ce42fe414db",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1ce0ab4d-a5f6-4cc2-84d7-f06e0355e933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc8498f-73e0-40bc-baab-1f11e40a9c92",
        "cursor": {
          "ref": "61b1e734-56b0-492a-8278-e1cb11ac9aff",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "18ef153e-08cb-4892-8e10-602c22e525ec"
        },
        "item": {
          "id": "2cc8498f-73e0-40bc-baab-1f11e40a9c92",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c2c1daa9-6bb7-4568-a21b-82609efc2c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a46f50-0a9c-4be3-8bbe-a5824c900642",
        "cursor": {
          "ref": "071470de-f7c3-48fd-956f-32b0926b6cf2",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "76b2ad18-b370-49b5-b558-382e071e1107"
        },
        "item": {
          "id": "79a46f50-0a9c-4be3-8bbe-a5824c900642",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a4d11d7b-5052-4265-b730-68e9f9453943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1340b460-ec44-4a4b-bca2-dd56bf97727d",
        "cursor": {
          "ref": "6b31ef0a-580d-45ed-90d6-4730755e2644",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "10ed5217-e64d-4898-b6ab-b30f6944a638"
        },
        "item": {
          "id": "1340b460-ec44-4a4b-bca2-dd56bf97727d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7418c111-c511-4722-b89a-be1d30658caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e84d11-ee84-4a15-85cb-6609ef5f121d",
        "cursor": {
          "ref": "f8f39ff0-0bf7-4615-849d-02ca18d26783",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "82e7c044-f812-4f28-869a-bebba9fb1be0"
        },
        "item": {
          "id": "f0e84d11-ee84-4a15-85cb-6609ef5f121d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dac02cf0-0cac-44c9-ac72-04a03fc13996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e444fa80-e7e6-4297-a4a6-f4ed1a8a2a03",
        "cursor": {
          "ref": "85a3ca63-8bfd-46c9-b2be-a2c4d539e02d",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "89d0137d-8f2a-4618-a489-9ef5e65c0607"
        },
        "item": {
          "id": "e444fa80-e7e6-4297-a4a6-f4ed1a8a2a03",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5be51777-61f1-45c9-b169-ae46180d7d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 736
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab09885-9d37-4074-aa4c-b85d1a95b4fe",
        "cursor": {
          "ref": "76450baf-4786-4139-be2c-28793a8c671c",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "074dfcbe-67f9-492c-ae70-dab47e74df08"
        },
        "item": {
          "id": "3ab09885-9d37-4074-aa4c-b85d1a95b4fe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2692debe-d2d2-4bf8-b663-c8ff2c1e3920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7afcd0c-171f-4a57-9b6b-a13b3c0ae134",
        "cursor": {
          "ref": "8f09c3a9-9d80-4df9-8f4c-2f5a649ddd2e",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "93c2590b-f2de-4f39-939e-f378e28e572d"
        },
        "item": {
          "id": "a7afcd0c-171f-4a57-9b6b-a13b3c0ae134",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f95861ec-9e21-4428-a5c3-1a45a3c5f5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b47a5b-3fbc-41be-a5d9-6e13edd5597f",
        "cursor": {
          "ref": "61e0c5a6-5a5b-44a7-be6a-c847636fbdf3",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "938fa26d-baa9-419f-8715-464202cd45f3"
        },
        "item": {
          "id": "59b47a5b-3fbc-41be-a5d9-6e13edd5597f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "446c5200-55d8-4f4b-8e5e-d092431f7a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64365a9-339e-4131-a56c-0f57c33a7de3",
        "cursor": {
          "ref": "6ecd43bf-e67d-4c30-918a-e233d0465f5d",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6cb34466-7f6c-4fc6-bd71-ca3cbdb48386"
        },
        "item": {
          "id": "f64365a9-339e-4131-a56c-0f57c33a7de3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6ad92f93-bfb0-4eb5-a2e5-fe2b1c3c012a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7d456a-32c0-470d-8e69-97d2e5a6dc6c",
        "cursor": {
          "ref": "d71256cb-509d-420a-b8db-81bf3966b05f",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c242d57f-f69c-4717-ac68-0fec6ba42c6e"
        },
        "item": {
          "id": "ba7d456a-32c0-470d-8e69-97d2e5a6dc6c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "141ecfe2-7b93-48c1-bcb2-a082529b2c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd31609-3eb0-430e-b010-c284966109ae",
        "cursor": {
          "ref": "86f8fb4f-b11e-4414-b716-cc48ca03dee1",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "004a1c3d-267f-49ca-812e-56e5b586c116"
        },
        "item": {
          "id": "8dd31609-3eb0-430e-b010-c284966109ae",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c797e109-728f-4032-9db4-10fe6870c4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a110e610-91e9-4b0a-ad9c-3231304fb318",
        "cursor": {
          "ref": "9405f5bc-86ee-4558-90f5-3069b902986e",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1d11cd9c-8085-41bb-8a0b-7c0085460f4d"
        },
        "item": {
          "id": "a110e610-91e9-4b0a-ad9c-3231304fb318",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2ac2f853-c3dc-4e60-ae3f-4ad9e26ea5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cb469a-88a2-49ba-8e2a-3e729292eb82",
        "cursor": {
          "ref": "4b303502-f7bd-4b8f-bf56-ac4dedeadd50",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cbafa150-4bda-476c-b9e7-5f3f930e5b56"
        },
        "item": {
          "id": "98cb469a-88a2-49ba-8e2a-3e729292eb82",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cbde7fd0-b16a-4d40-843b-f2de4e836036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9864b8be-bac6-47b9-b0aa-695ca16974d5",
        "cursor": {
          "ref": "fac25800-09a4-40f6-a9aa-950186d63ff5",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1e277b63-5385-4f66-9439-9a3ffb1a51e0"
        },
        "item": {
          "id": "9864b8be-bac6-47b9-b0aa-695ca16974d5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cbbd2d82-d455-4ad2-9641-f900bd7b4abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0933fe-59b9-4e99-a277-8132fd91e133",
        "cursor": {
          "ref": "06507939-4e8c-44b0-808d-dfcb0e8b8672",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4532b70f-0f5b-480f-8356-f463e19d2335"
        },
        "item": {
          "id": "8d0933fe-59b9-4e99-a277-8132fd91e133",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "79bd6068-c36f-4424-98c8-8483bc8b80c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd5b8d7-f039-4eaf-ae48-fd8e98e49be1",
        "cursor": {
          "ref": "921635fa-57a9-4520-b076-d56721847589",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "27d219d4-76da-4943-9b52-26f92848000f"
        },
        "item": {
          "id": "8dd5b8d7-f039-4eaf-ae48-fd8e98e49be1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0cb2af89-28d1-484d-ad8a-e5f27c4bcd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303e7fa1-169a-4500-8833-21bb000c84ad",
        "cursor": {
          "ref": "e37dd406-c5b1-44ca-9558-491167b6759f",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c3107db2-0bb3-4225-aea5-7dd7862bbba3"
        },
        "item": {
          "id": "303e7fa1-169a-4500-8833-21bb000c84ad",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "85c940d8-417e-465f-81ee-11cd713f1429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252411ae-9b22-4f3a-a225-7a5125da91a6",
        "cursor": {
          "ref": "d58aa0c4-d32a-463f-98fc-3d0aa9f6a6d3",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2d4341d6-a5ba-42cd-8686-0df2ad837845"
        },
        "item": {
          "id": "252411ae-9b22-4f3a-a225-7a5125da91a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1d982b82-3e49-4a51-be40-c85241a11326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32509fb6-6594-4e06-8793-19f990547b14",
        "cursor": {
          "ref": "f6858c80-0513-4943-a0f7-301d72e6dd6e",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "20007bdb-bfa6-44e9-8ca5-9a9f12d53989"
        },
        "item": {
          "id": "32509fb6-6594-4e06-8793-19f990547b14",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4f17c119-9ef2-4422-9fca-8228f386fc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b3fd2-51ac-483b-a162-ff39a2a3a9d0",
        "cursor": {
          "ref": "e71698e4-7e04-445c-bd15-182dd0741d33",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "87369881-4bfb-45df-a075-5a86a3a61911"
        },
        "item": {
          "id": "418b3fd2-51ac-483b-a162-ff39a2a3a9d0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e184de0-3825-4a7d-9a05-275da3427e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 873
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cac2bb-2d73-4417-8f32-7e742006c3e3",
        "cursor": {
          "ref": "f0d674dc-c597-41d8-9f02-af4f3a19742f",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b427e2cc-a38a-44ee-a3fc-c1514ae0e0bc"
        },
        "item": {
          "id": "c7cac2bb-2d73-4417-8f32-7e742006c3e3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3da0c990-6859-41c2-b7a7-5dc4c1ffc603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd25d08d-0a70-49fb-9adb-7a491957a86e",
        "cursor": {
          "ref": "8fb93b9d-6617-4717-b172-f4185384617b",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4e19ddf1-9371-45cc-a3ad-f447ec7a0bbe"
        },
        "item": {
          "id": "dd25d08d-0a70-49fb-9adb-7a491957a86e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1f29dffb-992f-4bf5-9dac-66972197d711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a86c73f-ae70-4e68-926a-33bb7fa8fdcf",
        "cursor": {
          "ref": "72f274e1-ef6f-46ee-b931-4a9a907a3649",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "68c590cf-7719-4be6-ac6c-1e89a4f39a2d"
        },
        "item": {
          "id": "2a86c73f-ae70-4e68-926a-33bb7fa8fdcf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3359cf3e-64e4-4c3f-9e9f-0ec82d225767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 849
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad086ee9-4da4-4737-a03b-a21239b285e3",
        "cursor": {
          "ref": "109dac26-3e9b-4f81-9372-6ad630675f72",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "25f5435e-1589-4499-a881-a538bd07ae02"
        },
        "item": {
          "id": "ad086ee9-4da4-4737-a03b-a21239b285e3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "47fdc1b7-83b1-4d02-8690-fae066083255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79875a73-46da-4fde-a6da-fc83338a2602",
        "cursor": {
          "ref": "791fd151-789f-4227-a5d2-65f7ed05e0e7",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "afb3a843-0cae-48a0-b615-63d816888c46"
        },
        "item": {
          "id": "79875a73-46da-4fde-a6da-fc83338a2602",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5329bc60-c9ee-4b3e-b9ee-56d6a5488ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af442298-8ce8-4dcb-9764-e57a8a346830",
        "cursor": {
          "ref": "317cebff-e3f2-468b-8091-2a0dbc54a0e9",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1865b66b-a510-4d8b-a048-ed6700d4a137"
        },
        "item": {
          "id": "af442298-8ce8-4dcb-9764-e57a8a346830",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c1cf37c4-ebe0-4c8b-9a11-38cf74e4d880",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef3824a-d0fb-4ff8-b2ee-21d1456146f8",
        "cursor": {
          "ref": "df6d6e09-8f14-4b8e-a0b9-abb4f8487a9f",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "49561b18-4d8d-4660-b250-2396c6504c9e"
        },
        "item": {
          "id": "8ef3824a-d0fb-4ff8-b2ee-21d1456146f8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "97714945-bb36-458b-ae4c-85d0304adc3b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 509,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0923c52c-c5ff-4f9a-b538-5fd470a8a36e",
        "cursor": {
          "ref": "304c90a6-56dc-4bf5-8914-09b6293e99f2",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8b742c72-f114-480b-9b51-84925c3d36ef"
        },
        "item": {
          "id": "0923c52c-c5ff-4f9a-b538-5fd470a8a36e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9cfc469e-0eac-4bd3-a3b0-82d99c58370d",
          "status": "Created",
          "code": 201,
          "responseTime": 2125,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "afa38702-5a3c-4f4f-91dc-afcfc622931a",
        "cursor": {
          "ref": "4fc04b31-724c-40bf-88e7-5d15720a3652",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9e5cf125-fe73-4512-a005-ee9e9e7b9605"
        },
        "item": {
          "id": "afa38702-5a3c-4f4f-91dc-afcfc622931a",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "cfcd37ae-af1d-4595-af95-a3e71c8420be",
          "status": "Created",
          "code": 201,
          "responseTime": 2193,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "415370a7-306a-4bc3-a8a3-3925cb1836ea",
        "cursor": {
          "ref": "0dbd8377-e593-417e-b6f4-b0df2812b3a9",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f6b2125a-9684-4f4e-a751-76e2758eff2b"
        },
        "item": {
          "id": "415370a7-306a-4bc3-a8a3-3925cb1836ea",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9d936787-67f6-410f-9ed4-36ffccc87c26",
          "status": "Created",
          "code": 201,
          "responseTime": 2128,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f6f298b1-5e17-4513-b6a7-75803a1c9d4b",
        "cursor": {
          "ref": "12c37967-5a8e-4e11-af4e-d4fef0be763d",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5dad7862-a8e3-40c4-94b7-d151d6d76b02"
        },
        "item": {
          "id": "f6f298b1-5e17-4513-b6a7-75803a1c9d4b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5eb24936-2899-4f7c-a596-617f9e5f8bde",
          "status": "Created",
          "code": 201,
          "responseTime": 2189,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b559a8e6-cf52-4e81-86b1-7c25119d9d4d",
        "cursor": {
          "ref": "1ea27d16-5611-41ab-a5dc-bf63b9038476",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0922d7b1-8b20-4f22-923f-74af5ba13320"
        },
        "item": {
          "id": "b559a8e6-cf52-4e81-86b1-7c25119d9d4d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "67e267e4-b905-4ad7-99f4-8c12551987c4",
          "status": "Created",
          "code": 201,
          "responseTime": 2179,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "b86fc97b-1ebe-41e6-bcc3-cbaa90bff607",
        "cursor": {
          "ref": "60624c17-4f31-4476-9de2-83166b00a9c1",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0a80fa29-1728-48b9-aeed-959ce2a1854b"
        },
        "item": {
          "id": "b86fc97b-1ebe-41e6-bcc3-cbaa90bff607",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6edb9195-4c48-431d-94c8-a7fbf108e0c6",
          "status": "Created",
          "code": 201,
          "responseTime": 2834,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "9033fca7-6272-447a-923f-e1406926f644",
        "cursor": {
          "ref": "ad06d244-2f10-4002-b3da-67e3bcf7c032",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f59d36ea-3118-42d7-a86e-bdaa2c8cb7af"
        },
        "item": {
          "id": "9033fca7-6272-447a-923f-e1406926f644",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "034ae581-394b-46ec-904f-c227da839b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9033fca7-6272-447a-923f-e1406926f644",
        "cursor": {
          "ref": "ad06d244-2f10-4002-b3da-67e3bcf7c032",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f59d36ea-3118-42d7-a86e-bdaa2c8cb7af"
        },
        "item": {
          "id": "9033fca7-6272-447a-923f-e1406926f644",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "034ae581-394b-46ec-904f-c227da839b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7190805-e6b1-4850-a686-e6f4b73fcae6",
        "cursor": {
          "ref": "efa482dd-21ef-4edb-a266-776ccebf9b4c",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f0eaf7d9-c1cc-43c7-ab60-6fa9e33aaec7"
        },
        "item": {
          "id": "b7190805-e6b1-4850-a686-e6f4b73fcae6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ebb85476-e7cb-44e7-953c-68ad97512900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc150c1-a7af-48eb-a746-51b34e9371ba",
        "cursor": {
          "ref": "7ddd6e5a-4093-4323-a87b-12cff5cc2c89",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "877c7d78-14ec-4fba-9ba9-8485bd0b51d6"
        },
        "item": {
          "id": "7bc150c1-a7af-48eb-a746-51b34e9371ba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "84c7206b-1d2d-42d3-a631-576ab01f2cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070adf09-ab8a-4c61-bafa-04ab3ce0fc44",
        "cursor": {
          "ref": "c03ce508-b015-41ef-bc5e-f3821eec87af",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "adc37e09-b2c9-46d0-96b1-a59c1c61164d"
        },
        "item": {
          "id": "070adf09-ab8a-4c61-bafa-04ab3ce0fc44",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cdc51291-b1a3-44b5-bd8d-b74d0828eedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb45bb4-9313-4108-ab52-e695b3f0e7d1",
        "cursor": {
          "ref": "bd62540d-1daf-4e15-bbc3-8ed3108d89c5",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "64cdf362-111a-4354-a7b3-8a74e0a08de9"
        },
        "item": {
          "id": "bbb45bb4-9313-4108-ab52-e695b3f0e7d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7812ecff-3534-475a-a15b-38a9aacd7b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb0ba0f-b110-4cc9-a2cd-57fa692447e5",
        "cursor": {
          "ref": "16000f8f-f13c-4883-9067-26b70e47d519",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "30c27f31-45d0-4aad-a00f-e8a2a2367dd9"
        },
        "item": {
          "id": "ddb0ba0f-b110-4cc9-a2cd-57fa692447e5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "73db7c13-24ac-4bbf-8a40-932316bcb1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43259d86-f8d2-4437-9948-2de519a38b26",
        "cursor": {
          "ref": "72e23131-ed54-44f4-bb44-6d8e4cc6b320",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ea187815-a1a0-4cac-96bf-fed22499e964"
        },
        "item": {
          "id": "43259d86-f8d2-4437-9948-2de519a38b26",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "645d2d71-90a1-46a6-9cdb-4efbcc582941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db12152e-2862-4e02-838b-1fa781a7ce18",
        "cursor": {
          "ref": "19f50a29-a339-4731-9154-a9f987587a8f",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a709664c-a338-4e84-a345-aa7982542d84"
        },
        "item": {
          "id": "db12152e-2862-4e02-838b-1fa781a7ce18",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "208237f3-715c-496a-8800-fd69a0df19f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92c27c5-f211-408a-821a-f30b6a26cfd1",
        "cursor": {
          "ref": "c208233f-ab7b-4310-81d5-5009672b7e14",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d48850de-9635-4784-a6f4-31d360f46fe0"
        },
        "item": {
          "id": "e92c27c5-f211-408a-821a-f30b6a26cfd1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "93ee626a-dfcf-4090-afe5-06d0edeb37da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6de47b3-8312-4628-bbc2-a67cb2eef620",
        "cursor": {
          "ref": "e82d4bd8-4780-4651-bfe0-09ae90801754",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "11184585-c9d6-4202-84a4-aa17bf3afbe0"
        },
        "item": {
          "id": "b6de47b3-8312-4628-bbc2-a67cb2eef620",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b0024ca7-f1fe-43f5-bf95-d1481ba2e516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d18c52-0dfc-4695-80db-4736a170fc88",
        "cursor": {
          "ref": "fde7539f-1e45-423c-a719-d71453886210",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "008f5209-a077-4c97-941d-0c9ba9c4b0ff"
        },
        "item": {
          "id": "b1d18c52-0dfc-4695-80db-4736a170fc88",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aaa48a34-cf93-4ef5-92bf-2ea6da83cb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9e3ba5-cd75-40f2-abd2-627e8081ec12",
        "cursor": {
          "ref": "442c648a-97aa-4eee-840d-2b177252d8e0",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b987ca69-9c32-453a-9329-8ef6482ab878"
        },
        "item": {
          "id": "6a9e3ba5-cd75-40f2-abd2-627e8081ec12",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ef26bff0-0b67-43a3-8496-08d50cfa7268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40c5181-b10b-401c-a4ee-4fda1876b90c",
        "cursor": {
          "ref": "b175b9de-38b7-4479-ada4-65f7e934e29d",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e9d85683-f5c7-48f3-bb76-aec42e5bc47f"
        },
        "item": {
          "id": "f40c5181-b10b-401c-a4ee-4fda1876b90c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2446a344-59bc-4713-9885-e611e88ed195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2f8f6b-74d9-428a-86a8-a7d13a5cf3f3",
        "cursor": {
          "ref": "37776676-138e-40b1-bf21-63dc4b726703",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5f0afb45-9da3-4ab8-803a-155991908136"
        },
        "item": {
          "id": "9f2f8f6b-74d9-428a-86a8-a7d13a5cf3f3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "19f56b59-6b47-412d-8628-675b99365596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3d94db-9944-428d-88b0-9b62bebcfe07",
        "cursor": {
          "ref": "151078ab-5df8-41d6-ad0a-3587867973c2",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0cafad45-e9a6-4f8f-a6f3-9ab6163609ad"
        },
        "item": {
          "id": "5e3d94db-9944-428d-88b0-9b62bebcfe07",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "04efc9fd-6a81-4f8f-b1b9-a9fd774b229c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2202e9a-8245-49a0-8050-b9462ee79ee3",
        "cursor": {
          "ref": "97eeb47a-3d83-4094-ae41-e3f5dc46bb1e",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3c769b49-9872-4f5b-b599-aa84c6005f4d"
        },
        "item": {
          "id": "e2202e9a-8245-49a0-8050-b9462ee79ee3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0489a875-3991-4c2a-8783-e1e502ee42a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ceb4e3-9b2a-471e-bdb8-c72ef0c7f5e3",
        "cursor": {
          "ref": "0442ca35-801a-4894-8559-be94f2e08b05",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2133767d-7895-4243-99e3-4625bb3a9e75"
        },
        "item": {
          "id": "56ceb4e3-9b2a-471e-bdb8-c72ef0c7f5e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "29d3e813-d448-4268-bfc7-68ef4299aea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf31d0d9-91ad-4ffd-88cf-7c300686ebee",
        "cursor": {
          "ref": "2c71955c-fe3d-4f80-898a-14336a1a8643",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3fddadcc-7037-4dba-8150-34f7fffa2542"
        },
        "item": {
          "id": "cf31d0d9-91ad-4ffd-88cf-7c300686ebee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3fd33c37-80af-4bfa-9b11-dcb0b6491007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff2c35-9897-4eaa-b736-9c05d82c2ff2",
        "cursor": {
          "ref": "4cebe9c6-00d4-4ade-8c1b-bf67d7b01162",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d719ad13-eac9-4cd4-bf14-bc02dcf28b8f"
        },
        "item": {
          "id": "c5ff2c35-9897-4eaa-b736-9c05d82c2ff2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9757de1a-7945-4fc1-97fc-6824facb0e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9c1f89-f380-4e96-aa10-43b6210dba0c",
        "cursor": {
          "ref": "89a46700-28fc-4063-8ae2-2902bac987c4",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8d5de797-1cdb-4f0c-93ad-e2a7632e04d6"
        },
        "item": {
          "id": "6a9c1f89-f380-4e96-aa10-43b6210dba0c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e79c5d87-ecba-4a18-b5c0-2bc4e6eb4797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91365c9-d63c-4892-a751-448d483c3784",
        "cursor": {
          "ref": "b7c2bf92-5ea7-4681-9d7d-aa6d76d4a0b2",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "582b0c64-0f56-408b-8cfa-86e2b2b39e2c"
        },
        "item": {
          "id": "e91365c9-d63c-4892-a751-448d483c3784",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6f1ba585-0145-4d44-948d-65d3353d44d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20e8e6f-2631-4840-af59-a08deead997a",
        "cursor": {
          "ref": "72bce66b-fd84-4dad-bba6-c7e0ca8dd6fc",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9c61d36a-be73-4b03-a45b-9d780d04fd80"
        },
        "item": {
          "id": "b20e8e6f-2631-4840-af59-a08deead997a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ed7cf10e-2af3-4676-b75e-0e68ed2c2b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21efdbc6-45b5-4300-90ad-bb7a4c3508a3",
        "cursor": {
          "ref": "370db373-5ebe-499d-a407-67e073149c02",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f85d49f2-31d7-4ad9-a914-48e46babd4b6"
        },
        "item": {
          "id": "21efdbc6-45b5-4300-90ad-bb7a4c3508a3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8dc1ed32-217d-43f4-b490-90f5387b06bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24c26ff-4dbd-4516-a3c3-6c5bda7fb6bb",
        "cursor": {
          "ref": "e8c3396b-dc74-497c-9ca5-184ea2efb692",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "205f5e22-ee6a-40db-97a8-d848d244a48d"
        },
        "item": {
          "id": "c24c26ff-4dbd-4516-a3c3-6c5bda7fb6bb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "531b2595-f34e-453b-af3b-d242fa624305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918ff691-e787-45b2-968d-c99e774a0a40",
        "cursor": {
          "ref": "166149a6-5d91-4644-8061-4afbed5ae8c1",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "40bc3742-2c08-4ff7-a9f6-cd971d039d36"
        },
        "item": {
          "id": "918ff691-e787-45b2-968d-c99e774a0a40",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "039482eb-31ea-4745-85c2-1de141cd0e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0658d917-34ef-4a37-90b7-5072b29c4c36",
        "cursor": {
          "ref": "2a4dbbbb-2a27-4d30-84f9-78d7a78ac4b0",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a50bc66a-1c8b-4248-b914-fadcdfc9744d"
        },
        "item": {
          "id": "0658d917-34ef-4a37-90b7-5072b29c4c36",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bb992b30-ea7a-44f3-ae64-20ede10b0cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0bd520-57f3-43b9-9892-12dc7acbe547",
        "cursor": {
          "ref": "84f79b99-cc06-42bc-8df1-18c4a10e5380",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fe8cd4e1-be56-4785-a1da-c61d3d8fe945"
        },
        "item": {
          "id": "5d0bd520-57f3-43b9-9892-12dc7acbe547",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f04d6b4-7b4d-4f5c-81b0-045cada8f235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41167c2-dd6f-495a-9486-781ef1893952",
        "cursor": {
          "ref": "7e020d58-8b10-4d83-81f9-e37ade207300",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4d324200-2cef-44be-93b3-7038c66dfcd3"
        },
        "item": {
          "id": "f41167c2-dd6f-495a-9486-781ef1893952",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "efda0ec4-71dc-4f78-8d53-50ed689b9a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aab3bc-fd82-4356-a908-5300364480fd",
        "cursor": {
          "ref": "9f27ffdb-6bca-4de9-af31-c49ce8b2403c",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1628b3d1-ebbf-4b99-a4c9-0355974fc0e5"
        },
        "item": {
          "id": "74aab3bc-fd82-4356-a908-5300364480fd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "700e8358-542c-4f32-9f3a-2c6255761231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ee0c90-df32-4227-b2ed-d45272dde573",
        "cursor": {
          "ref": "76541076-eb37-4548-bccb-ddc8e8ba8708",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2493b2cc-af78-46d7-aa56-a3d6015f4753"
        },
        "item": {
          "id": "d4ee0c90-df32-4227-b2ed-d45272dde573",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "910d0a73-fcf6-43af-b426-3878f4f1d34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9009147c-83dc-4654-9a7a-a132e2fb90b4",
        "cursor": {
          "ref": "f7f4aa81-2b94-49e1-8205-3d06ce7ec5ec",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9b1c618b-cae1-47a7-9a1c-031888e1f68f"
        },
        "item": {
          "id": "9009147c-83dc-4654-9a7a-a132e2fb90b4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9a34d777-4b77-4dd7-982f-71b025e66536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b6ee49-5bbb-4252-986e-9305998a3b62",
        "cursor": {
          "ref": "4ff13b30-64dc-4205-be8d-df1b3f06eb0e",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "66cd10bb-f1b4-4f94-a20e-e7aaa588e351"
        },
        "item": {
          "id": "69b6ee49-5bbb-4252-986e-9305998a3b62",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bf1b4c70-2fd6-43c3-96e1-3db091d7bd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb60fcb3-8210-4868-b467-44d1901b06c6",
        "cursor": {
          "ref": "a0b29a52-732e-4fe3-b153-26705861d660",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6acdd77a-2269-4ab4-9cc1-6bde97977129"
        },
        "item": {
          "id": "eb60fcb3-8210-4868-b467-44d1901b06c6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "44c8785e-9f9c-48ed-8b50-eb8bd0dd340b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b027f-f457-49ee-a163-d203485fe124",
        "cursor": {
          "ref": "e967ad43-5b36-4ba8-a344-452f15b1fa1a",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b1e84acf-e703-478a-a9ed-f33594445bc0"
        },
        "item": {
          "id": "4b2b027f-f457-49ee-a163-d203485fe124",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "bb02a2f5-8a8e-4d8e-a3b3-4ba54b91a673",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fc5d13-0eeb-4798-8f3d-4d0e887c1368",
        "cursor": {
          "ref": "602f88ff-1973-44dc-9b2f-3d8c6f859854",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "90027e65-5119-4f7d-8aa1-cfe323742480"
        },
        "item": {
          "id": "56fc5d13-0eeb-4798-8f3d-4d0e887c1368",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "04c3affe-d213-4b38-820c-4089ce50c413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fc5d13-0eeb-4798-8f3d-4d0e887c1368",
        "cursor": {
          "ref": "602f88ff-1973-44dc-9b2f-3d8c6f859854",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "90027e65-5119-4f7d-8aa1-cfe323742480"
        },
        "item": {
          "id": "56fc5d13-0eeb-4798-8f3d-4d0e887c1368",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "04c3affe-d213-4b38-820c-4089ce50c413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a459b7e8-72bf-4291-8717-708ce3aa700a",
        "cursor": {
          "ref": "eb9ecb46-dbad-4b36-9680-e5ce7eb47400",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ded3871f-fc7e-46a4-892f-11fa47b75805"
        },
        "item": {
          "id": "a459b7e8-72bf-4291-8717-708ce3aa700a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b23e3630-3725-4804-ac5c-d64f8c5f9446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26478b53-67d0-4451-8981-ea3482d6c2e2",
        "cursor": {
          "ref": "77f1717a-9808-4234-91df-fa9261af8134",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b64adcd0-546e-402a-a0cf-6b2ecad51c4c"
        },
        "item": {
          "id": "26478b53-67d0-4451-8981-ea3482d6c2e2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b5809160-9b61-4ec8-aec3-ccbc66432571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f0f331-52e0-44b0-8f8d-a9b981001b39",
        "cursor": {
          "ref": "99181f39-3eab-4756-8d55-e45ec6d94985",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5aecfcc8-3ae2-4c49-bb48-7c13612525d4"
        },
        "item": {
          "id": "07f0f331-52e0-44b0-8f8d-a9b981001b39",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "435211d5-7d9c-4444-ac7d-8ae053cdb388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a5034a-27d5-4795-a6e8-e82fd82d723a",
        "cursor": {
          "ref": "2899cc9f-0ae3-412b-88b8-4f0bdae66e53",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ea9b41cf-f302-438a-b462-8f1acb185f33"
        },
        "item": {
          "id": "e8a5034a-27d5-4795-a6e8-e82fd82d723a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a13d0a0e-032f-44c8-bfb9-913ab5b11be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164ecd47-3ee0-4382-a7b4-f8755be43421",
        "cursor": {
          "ref": "67268287-1ed3-4dca-b36f-6c192abb431d",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a8b77b21-8ced-4dd1-9e12-5fab06591747"
        },
        "item": {
          "id": "164ecd47-3ee0-4382-a7b4-f8755be43421",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "440c0831-e7eb-4d27-9aa1-775bd7293276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70a2359-ce0a-495d-ab1d-e0e1fdef9546",
        "cursor": {
          "ref": "782bc1ba-aefd-4fe2-bc0c-d70009514f1f",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9a504ec7-8e67-41cf-9f5f-ab56e524a9e2"
        },
        "item": {
          "id": "a70a2359-ce0a-495d-ab1d-e0e1fdef9546",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "056112aa-5fce-4e1b-9fb5-0d5eee308627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5441a0aa-cac6-4c0b-9813-4c54c1f5ff29",
        "cursor": {
          "ref": "dbbc8243-0400-46be-b0df-317d0f6c0e54",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4b028ca8-3ff6-408b-83b5-892d20a0112d"
        },
        "item": {
          "id": "5441a0aa-cac6-4c0b-9813-4c54c1f5ff29",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3ecbe030-93ce-4020-ad4a-45a59cc00a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2f493b-bf4b-48de-b597-fb4fb9f5decb",
        "cursor": {
          "ref": "37be48b5-9ac1-4bbb-a881-8fb9f178ba5a",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "027b9cdb-01c6-4016-ae42-aee936736aa3"
        },
        "item": {
          "id": "5e2f493b-bf4b-48de-b597-fb4fb9f5decb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "41286059-6ff0-4074-94cc-f1e8a57197c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814e764d-5fe9-4294-ae20-d6391f0afa89",
        "cursor": {
          "ref": "c7c73ae8-675e-4323-a9c1-54499e3269be",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fa8d20be-af98-4ff5-ba2a-ece82a4c201a"
        },
        "item": {
          "id": "814e764d-5fe9-4294-ae20-d6391f0afa89",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "231e6522-6b09-48b6-9190-3efdd5c46cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8007211a-6483-4a36-bc1a-fdf958f42264",
        "cursor": {
          "ref": "c3e8e697-d56e-4c19-af07-b250b78c42ca",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "941dc703-cdeb-4591-8703-a30b0928d0df"
        },
        "item": {
          "id": "8007211a-6483-4a36-bc1a-fdf958f42264",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "22384ed8-e1a7-4c61-91c8-3f14546ab6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eef1313-8623-4f98-afb8-d575f135e0dc",
        "cursor": {
          "ref": "81e0601b-5d05-4782-97ef-e10a02afd98a",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f059ec14-b693-4271-91a2-bbd1f4ad096e"
        },
        "item": {
          "id": "6eef1313-8623-4f98-afb8-d575f135e0dc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "40bf6b76-bf65-46c2-ba70-f6b3ab212b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909d8e21-8658-4521-bdb2-17e8fb4943f9",
        "cursor": {
          "ref": "47ada02b-c44e-46fe-afa4-4cd0e67a11cf",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2333a1ab-3e6c-41a0-8744-d16cfe97ac3f"
        },
        "item": {
          "id": "909d8e21-8658-4521-bdb2-17e8fb4943f9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e6d018f-c463-4d25-9f15-526db57af97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e59fa2-7881-4a75-8edd-c9d8b7afa1a5",
        "cursor": {
          "ref": "19ac4278-f725-4116-8708-824396f1e835",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2f55da84-93c8-4b43-bf4a-fea83a353340"
        },
        "item": {
          "id": "a5e59fa2-7881-4a75-8edd-c9d8b7afa1a5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff58552c-5db6-4d67-9cd5-1bc9f5dbf108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40fe7fe-1c30-46b0-87f4-2f46fe5f3332",
        "cursor": {
          "ref": "10ad0cc3-75a9-455f-91a8-215b3a39d407",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "77879331-6e41-425c-ba71-6ca00a8591fb"
        },
        "item": {
          "id": "f40fe7fe-1c30-46b0-87f4-2f46fe5f3332",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dbf205d6-1901-4a33-a2d6-997a187d162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad4e79e-3374-4277-8378-7a4254de7c62",
        "cursor": {
          "ref": "2159de48-9e9d-4132-be83-f1db6fbd9336",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ec65e6c7-916e-4a66-961a-b5f32e27d35f"
        },
        "item": {
          "id": "0ad4e79e-3374-4277-8378-7a4254de7c62",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8bb6ad5a-d874-4b59-86a4-f97729b654a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6bf375-d6ad-4a09-b4ae-0b5d028658d5",
        "cursor": {
          "ref": "68b1dbee-23b2-418d-92bb-044dcd4ea594",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "30f87eb1-e519-4c24-88df-50c95a6e32ab"
        },
        "item": {
          "id": "3f6bf375-d6ad-4a09-b4ae-0b5d028658d5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "53a17d3d-6e67-4adc-b1d0-68215f702464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa19bf8-b834-45be-ab9f-b2acdb88f7e1",
        "cursor": {
          "ref": "5edcfa92-dac7-4387-ad9a-95c47c237068",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "53e0530c-be01-4815-8b0d-02444e4c6aa3"
        },
        "item": {
          "id": "0aa19bf8-b834-45be-ab9f-b2acdb88f7e1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2715d9f6-05ac-4a10-b0e9-28a1ccd8300d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7635c1f9-b612-449a-8bf4-49ff02a884df",
        "cursor": {
          "ref": "8dc1ea9b-828e-495e-9585-f0cd6fa86ac7",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "18d53143-472a-4352-9251-7d3dbfbd3b22"
        },
        "item": {
          "id": "7635c1f9-b612-449a-8bf4-49ff02a884df",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1b25e64c-7951-4902-b447-ce76cd2f11d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b6acfa-11bf-4e31-aa67-0e57952adf74",
        "cursor": {
          "ref": "2853cd29-7d9d-49ea-ae0a-45612ce040c5",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "df712ff1-97c1-4c26-9460-c5bf7f29f9e4"
        },
        "item": {
          "id": "b9b6acfa-11bf-4e31-aa67-0e57952adf74",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ac27c911-94bf-41b6-a3fd-79ae2916ef65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d216e67c-8c75-4c0b-b60a-7e12f8880e0d",
        "cursor": {
          "ref": "b2efc183-dda3-4956-ab56-549392e0f7b0",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "87d6e440-bfbb-4407-bb7f-9eedb86585e1"
        },
        "item": {
          "id": "d216e67c-8c75-4c0b-b60a-7e12f8880e0d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "92b38ac8-a08e-491e-a1aa-ded3aec291f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d1ff52-0069-40a6-b35e-164c5e99c0d5",
        "cursor": {
          "ref": "a289fe2b-6713-4fb1-bd22-be7b66db1b04",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4d3a3174-1090-4626-8214-26828865ca2f"
        },
        "item": {
          "id": "d8d1ff52-0069-40a6-b35e-164c5e99c0d5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4893d715-4d8b-4b3a-a180-3156f0a58d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1ce61f-e0d9-4a84-9610-c3ae2b726923",
        "cursor": {
          "ref": "ac190ad8-35b2-4692-9ad0-307465dc5419",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "653da40b-ac7f-46bd-8091-b9932260e71c"
        },
        "item": {
          "id": "dd1ce61f-e0d9-4a84-9610-c3ae2b726923",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "41acafaa-7a85-48f5-ada4-812c4c14a8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d543ea8-54eb-49df-a8a8-ecfea1ae3867",
        "cursor": {
          "ref": "2501ab91-975c-4f1f-be00-8e1d71829751",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2921ef5b-ecca-49d3-a94d-3103d735ce01"
        },
        "item": {
          "id": "6d543ea8-54eb-49df-a8a8-ecfea1ae3867",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5dd4c3f5-add1-4660-a237-31e0d276a84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29f4f4f-dac6-4a40-9759-a3e1e8f7c203",
        "cursor": {
          "ref": "f1f09666-14ef-4382-89f5-0ca9f13b2dde",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1fcb67ad-657a-4f13-ab7d-0babdafbf364"
        },
        "item": {
          "id": "e29f4f4f-dac6-4a40-9759-a3e1e8f7c203",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "68485494-8e86-45b6-ba79-8dc503ddaf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33273b7e-92ae-4aa4-9349-8b915be308c7",
        "cursor": {
          "ref": "5ae48049-dda1-454d-a78a-82cde56d4b0e",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f08a5544-ed7e-4bb6-92c5-4def5a0ecf7f"
        },
        "item": {
          "id": "33273b7e-92ae-4aa4-9349-8b915be308c7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ddaf4b28-8f4d-4ff5-86b5-df1811a4bd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fbc7dd-2814-482a-ad70-f1a894ba755f",
        "cursor": {
          "ref": "57de378c-d946-4aae-bcef-b87b324cdc25",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b362d738-827b-4d41-984c-b958ea20b0dc"
        },
        "item": {
          "id": "47fbc7dd-2814-482a-ad70-f1a894ba755f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "299cd7e0-7e1e-4e09-9944-ddbb7b527862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41cf2fa-0668-4bd0-ad5c-5cf0ab03b995",
        "cursor": {
          "ref": "c972bfc0-457f-44f1-8203-0b18d4d83d20",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "83d2937b-e062-4f99-a6d2-ecdc9d552484"
        },
        "item": {
          "id": "a41cf2fa-0668-4bd0-ad5c-5cf0ab03b995",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e8cf2164-5431-41e0-8653-63d9b5f67aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebfb662-4189-485e-815c-8b064459bbe2",
        "cursor": {
          "ref": "d0376d0e-0a4a-46a3-8f82-d914e4d51a45",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "894363a3-0050-4966-ac6f-2261f3a05443"
        },
        "item": {
          "id": "3ebfb662-4189-485e-815c-8b064459bbe2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "060968cb-f066-46b4-88a8-f25968fbb321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58909b28-97d4-4a29-a052-8f8eec45af47",
        "cursor": {
          "ref": "9337edb4-eea6-4d3b-8634-ee7a81a62982",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c99cb10a-dcdb-41da-8580-bca58555e00d"
        },
        "item": {
          "id": "58909b28-97d4-4a29-a052-8f8eec45af47",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4795f4bd-6c89-4e42-997f-6131f808f173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df80634c-5899-4b9b-a529-6193c2b70faf",
        "cursor": {
          "ref": "8069aee2-f96d-4204-8d8b-84a90563207d",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1c78ac14-d872-46f6-a10d-87012bd336b5"
        },
        "item": {
          "id": "df80634c-5899-4b9b-a529-6193c2b70faf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b476e211-f1dc-4a96-b88b-50b9e573adeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e99f28b-bad4-490c-b99d-873e8a5978cd",
        "cursor": {
          "ref": "cad078b8-1b45-45fe-936e-791de182ad00",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ee240314-2fe3-4b90-acea-0a32eceba703"
        },
        "item": {
          "id": "5e99f28b-bad4-490c-b99d-873e8a5978cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30600f99-7284-42af-9ddf-901ec7c959be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9bf728-10b9-49a8-8384-065f7ae4b1b4",
        "cursor": {
          "ref": "b4bc4d2b-0eb6-43a8-83fa-3753440a815e",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "39dce98b-8665-4cbe-b15c-4f64f159ee4d"
        },
        "item": {
          "id": "df9bf728-10b9-49a8-8384-065f7ae4b1b4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8eadc504-23ce-4e29-9e63-2f5fd0c5b8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fcfe26-a60d-4ba8-a7ad-c27364227ed2",
        "cursor": {
          "ref": "968811a7-5f55-4a5a-bec1-ffc22debc954",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0cac66df-1256-4b35-9e41-a1c504432353"
        },
        "item": {
          "id": "92fcfe26-a60d-4ba8-a7ad-c27364227ed2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cecbce76-8e66-4c34-91d4-30bb06186081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bda64a-32fa-4348-abe6-027fb3dbb352",
        "cursor": {
          "ref": "ff5a1b66-3c18-4957-b68c-64c1a070aded",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "44e31662-0fa4-4cbf-a736-10f5e6311b60"
        },
        "item": {
          "id": "17bda64a-32fa-4348-abe6-027fb3dbb352",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "67cc2e5d-c15e-47ce-9927-71b066d3afd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385fbe7a-ec3c-4a88-af6c-2c2da21701d7",
        "cursor": {
          "ref": "47144fef-bdfd-4617-ae79-239858a7bbda",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ff411077-eda2-4c2c-90f2-4950b680e351"
        },
        "item": {
          "id": "385fbe7a-ec3c-4a88-af6c-2c2da21701d7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c6feab6a-7c6e-4731-9f8a-283977d7574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792aa4f8-259c-4a59-8edb-ad7d8b2849e1",
        "cursor": {
          "ref": "96a42e63-66c9-4bba-bffc-361d93b8a172",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "339cdd1b-1d07-4972-b8f8-8cadc1df7ce6"
        },
        "item": {
          "id": "792aa4f8-259c-4a59-8edb-ad7d8b2849e1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d7872c09-a153-48f8-97b6-d0329f2cc91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc0d27b-371a-40be-baa9-ccbeb5105c0d",
        "cursor": {
          "ref": "d55ea79f-8a26-454b-9a45-3a3b48f2c17a",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "638fc5ab-abf2-4c76-8ac0-3c92a81893be"
        },
        "item": {
          "id": "8dc0d27b-371a-40be-baa9-ccbeb5105c0d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "460079d0-f524-4094-8f61-248438da5025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4482ae08-ea35-4e70-ad91-a2b1ef0a685f",
        "cursor": {
          "ref": "0e467dfd-7780-48e3-bf64-9abb742e7619",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "009af596-fafe-4920-bd4f-ca9a57f6caf7"
        },
        "item": {
          "id": "4482ae08-ea35-4e70-ad91-a2b1ef0a685f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "309d72f0-5bb4-4715-b70e-e6ce93cb0750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aedb44-f01d-4d49-9d85-42849a62b098",
        "cursor": {
          "ref": "fe5da863-6939-43ff-a4e8-72b18ad01314",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d460e049-13d3-493b-9bfe-3a69b653db79"
        },
        "item": {
          "id": "25aedb44-f01d-4d49-9d85-42849a62b098",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "35ad0f21-3335-4710-a919-d401852bd4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b914880d-9d6a-422a-a6fd-d33649e5fdbe",
        "cursor": {
          "ref": "e891c78b-164e-4433-8a08-dee62dd5a329",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d344a6f9-dfcd-46b1-9d0b-30b25125d95e"
        },
        "item": {
          "id": "b914880d-9d6a-422a-a6fd-d33649e5fdbe",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f337d20f-d599-4dde-b4ec-3f2295b49205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cf0cee-c5cf-447b-ad4f-2ce7cfc41f87",
        "cursor": {
          "ref": "2b8b470c-ef7e-493d-b587-5df0de40f8c1",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "55218519-fe05-4e83-bda9-976b2ac98ed6"
        },
        "item": {
          "id": "98cf0cee-c5cf-447b-ad4f-2ce7cfc41f87",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2913cdf8-75b7-49d6-87be-ee9f6c49dfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1589220-c87e-44b3-a7e7-1e7cb66d3243",
        "cursor": {
          "ref": "2c8f6f9d-1922-4696-8624-4602778ab250",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7bae9584-d2b3-43fe-a780-f08537e691e7"
        },
        "item": {
          "id": "f1589220-c87e-44b3-a7e7-1e7cb66d3243",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1f9fdddd-d39a-44e9-8ab2-f66458502281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3bcf4b-5305-4316-b719-c422dba72cb5",
        "cursor": {
          "ref": "355b98d1-d46c-4cbb-b79e-c1b0058c59ea",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "164566cc-d349-42c1-af4d-49a6f3d444a9"
        },
        "item": {
          "id": "aa3bcf4b-5305-4316-b719-c422dba72cb5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "85e4bc37-7753-437a-9e1e-17ffdda337e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f62dd7e-f1d4-4f30-8d01-51d69c529417",
        "cursor": {
          "ref": "7d08a47a-5f44-4166-84a7-17850c0eb4d1",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "510a38da-7c05-4e8e-808e-9f4ce0d69f34"
        },
        "item": {
          "id": "2f62dd7e-f1d4-4f30-8d01-51d69c529417",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "58152684-9891-4588-b8c9-ff17981a5d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310671aa-712d-4e05-96b9-19adcbace646",
        "cursor": {
          "ref": "c5f614de-2765-4a4f-a3cb-395b725c85ed",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "79b3e4ed-e449-43ca-ace5-759675db7ac5"
        },
        "item": {
          "id": "310671aa-712d-4e05-96b9-19adcbace646",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1b70d7cb-57ea-436a-9be1-3b09ab93d577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df81cfd8-44d4-46ed-88c3-965e2209f667",
        "cursor": {
          "ref": "835152ae-591c-48df-ae53-e3d66eee3589",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "57b68d2e-222d-4518-8ad7-796bf68acc78"
        },
        "item": {
          "id": "df81cfd8-44d4-46ed-88c3-965e2209f667",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "86aa9fc8-fb36-400f-9ec8-518a7b5a447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86ae298-1727-4c09-b43a-d956dc0f11cf",
        "cursor": {
          "ref": "79f1c214-581e-4d66-b109-e6ff2aa0a72a",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "966e5932-dc6e-439f-923d-ae0dc357d200"
        },
        "item": {
          "id": "f86ae298-1727-4c09-b43a-d956dc0f11cf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7f007aa4-8cf8-4f22-bb86-f7b00c545a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbcb090-483d-4066-b569-0ef9635de56d",
        "cursor": {
          "ref": "6bdfef4d-53df-4456-917a-8cf1ef4cb941",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d9d74dd9-4a84-4c6d-b620-188ddbf7b8df"
        },
        "item": {
          "id": "3fbcb090-483d-4066-b569-0ef9635de56d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "54daca6e-2040-4af5-9704-b4e7fa759dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f0041e-6ded-4fe7-9bf8-5c6609d49dfd",
        "cursor": {
          "ref": "d35943f1-3c94-4097-a027-194023319a78",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "afc6c8ec-75d7-4a63-aa59-b8e05a886773"
        },
        "item": {
          "id": "a7f0041e-6ded-4fe7-9bf8-5c6609d49dfd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "19d6a2a8-02d3-4c39-ab4e-a6f0ebde8b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fba799-0865-40f8-8e42-2c8c6c451572",
        "cursor": {
          "ref": "91e7cb81-d344-4a0e-806e-aa3b742cb659",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d9be11ee-ac3a-4737-b954-a3bc7304bf3c"
        },
        "item": {
          "id": "80fba799-0865-40f8-8e42-2c8c6c451572",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2ed7bddc-987c-4b51-8ebc-e46d69c6001b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ad7809-fd5b-42bd-823b-ebf9113b96f0",
        "cursor": {
          "ref": "c257d1a6-655e-407b-9f35-67266fc32f25",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0dbf835d-1b44-4b0f-851d-a3153a176d73"
        },
        "item": {
          "id": "d7ad7809-fd5b-42bd-823b-ebf9113b96f0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "20a0628e-c3b3-40b8-a6a2-4c802975a809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5b9049-edc8-44c9-9212-65b792b420a0",
        "cursor": {
          "ref": "a1b618c6-0e5d-486b-80a2-985221b60ed1",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c1549da3-9339-4c3a-8095-f303cc70327e"
        },
        "item": {
          "id": "6a5b9049-edc8-44c9-9212-65b792b420a0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d479f3b4-d020-4858-a0fb-9632883610cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f52a3f-81fb-49df-bec8-a90ad046bd50",
        "cursor": {
          "ref": "39bd46b7-46c6-4c1f-a24c-d7dda14bcfef",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "820dad21-1d28-451a-8942-38ecfd1e5fd9"
        },
        "item": {
          "id": "b8f52a3f-81fb-49df-bec8-a90ad046bd50",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "daf2a3dc-42e7-42b1-ad8e-617e3242ef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5300ec78-e37b-4921-adfe-9525f4aade49",
        "cursor": {
          "ref": "44790e0b-cf0c-42f9-ae9b-6bb7d43925dc",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1220ccb9-9e43-4b33-9092-435d3fe8a5ec"
        },
        "item": {
          "id": "5300ec78-e37b-4921-adfe-9525f4aade49",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7e91c555-f2da-4e68-8f3c-263e861fd772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2992bcce-1aad-4797-8a6d-ab98eb6b11b1",
        "cursor": {
          "ref": "ba4285f4-4c11-436e-b3b2-9808723d3e60",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "af3e7fd1-7c69-460f-a240-0281ab9ac18e"
        },
        "item": {
          "id": "2992bcce-1aad-4797-8a6d-ab98eb6b11b1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5de3e9df-74ae-4b39-b570-7bcfd815a18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733776af-c8a0-486f-b1a3-a3419202056e",
        "cursor": {
          "ref": "5102fe32-0076-45e9-b632-a531b9e83246",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "623027dd-0860-440e-b0fb-b044cd75f76f"
        },
        "item": {
          "id": "733776af-c8a0-486f-b1a3-a3419202056e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "15af680a-c98e-479a-82b2-7b8492e4a405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b974b3-a944-4462-9f86-34a2892f16e9",
        "cursor": {
          "ref": "53399c5b-d8bc-4676-be0c-dc926500f846",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b1e5bef0-a274-4f90-855e-f78d7447f16b"
        },
        "item": {
          "id": "13b974b3-a944-4462-9f86-34a2892f16e9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cc2003f4-61df-4bb2-b81f-d5034d33b967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37631a1f-ba70-403f-8441-7bbccb3c75f2",
        "cursor": {
          "ref": "b53425ad-f514-4615-a301-f1a44bb6c09b",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "35c31734-88f0-4eb1-958c-65b19316f9cb"
        },
        "item": {
          "id": "37631a1f-ba70-403f-8441-7bbccb3c75f2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "87ea2704-719e-4eb9-956f-416a7914727e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c200eaa-8eb4-4c34-a986-aa0dbefac884",
        "cursor": {
          "ref": "1b365d34-5b4c-420f-bfe9-1f1e5ffd516f",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a35a34c8-eded-4b08-83b7-65d13ce85cee"
        },
        "item": {
          "id": "3c200eaa-8eb4-4c34-a986-aa0dbefac884",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "43a9d07a-e0e1-4375-a96d-c14093c98def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc72c201-e321-4f75-973c-35299d737b44",
        "cursor": {
          "ref": "9a06850e-e524-4ac3-9b40-1a466fd37360",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a300f30d-e3f4-48c9-85da-7fa7a603adc5"
        },
        "item": {
          "id": "bc72c201-e321-4f75-973c-35299d737b44",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e3939fa3-8812-4708-8de2-1a58841aec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f028088-9ca2-4d06-b25a-ea50e5f3e8b2",
        "cursor": {
          "ref": "687ba6a2-e2a8-45c1-8ab0-81e1005a81b2",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d7ccaec3-d607-4186-b91c-c0ba1dd1efaf"
        },
        "item": {
          "id": "0f028088-9ca2-4d06-b25a-ea50e5f3e8b2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9c78a6ad-d4f8-4835-be84-5dc0c47c4953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f93bf8-f991-4265-b0ca-10a706331f52",
        "cursor": {
          "ref": "d02cecb0-4c71-48c6-abad-ddcf8a945061",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fc93e9cd-28ba-4e71-9d9e-cb4012c3dadd"
        },
        "item": {
          "id": "b2f93bf8-f991-4265-b0ca-10a706331f52",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cbcda56e-fb05-4ca7-8e9d-8b18b0d6b63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a63631-d35c-4f81-831f-8b75628db1c6",
        "cursor": {
          "ref": "ae706ac9-b82e-41aa-90bc-c46775d6ac7e",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3fc158b1-3a63-442d-bbae-99c1cca70cf9"
        },
        "item": {
          "id": "04a63631-d35c-4f81-831f-8b75628db1c6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "67233ef0-9e55-4909-be5c-1491975619b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102fb4d4-d4e0-48eb-8339-1092f33d69d1",
        "cursor": {
          "ref": "84837f7f-274d-4946-87e8-98aa4f926a76",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d9a27d8f-83c2-4bc0-9395-f4f2ac2b8a91"
        },
        "item": {
          "id": "102fb4d4-d4e0-48eb-8339-1092f33d69d1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7ddf3520-5fb7-4537-b9de-f1ab2a8c6b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe6a59f-023d-404e-830a-cd1ea9165697",
        "cursor": {
          "ref": "7cbbac19-5d64-41fc-b500-02db2af3c91f",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "51e9c410-2b42-4861-8166-7b5a026aaa71"
        },
        "item": {
          "id": "afe6a59f-023d-404e-830a-cd1ea9165697",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a976c021-b883-42b1-83ba-dd0eb3a5c444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68ec36a-0e16-4a71-b7e8-fc9a2d02779d",
        "cursor": {
          "ref": "35c600f7-5d7e-4a45-bef0-7fce4610da06",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f85c50fd-01b8-4ef6-8749-2a8dc254462b"
        },
        "item": {
          "id": "d68ec36a-0e16-4a71-b7e8-fc9a2d02779d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "de2142d8-f7da-4caa-a7ca-da1dbb85a9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ef6432-4595-403d-8449-6be9043e67cc",
        "cursor": {
          "ref": "e408dc35-77ea-41d8-a02d-a9862e2d9cec",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "44d4e8b6-118e-42fc-9d69-07a0e36935f5"
        },
        "item": {
          "id": "08ef6432-4595-403d-8449-6be9043e67cc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1f6d3693-8c92-4dbd-be24-fba5aa924953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b8d7ff-47b6-43ca-827b-ec9911e7c981",
        "cursor": {
          "ref": "a84aa83e-cc9a-4000-9ca6-8ce5c93b52db",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e7829124-1297-4979-9b2e-9eead8bbcff1"
        },
        "item": {
          "id": "a9b8d7ff-47b6-43ca-827b-ec9911e7c981",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a9ed32f8-ab78-492b-b5fc-171337979fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1cdf24-5625-4e6b-8e3b-b6c8c0d8f12e",
        "cursor": {
          "ref": "5718c76d-07e3-4b24-b684-9ff8dc9b127b",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f553816c-1195-4303-9c6f-7737c1e66c32"
        },
        "item": {
          "id": "fc1cdf24-5625-4e6b-8e3b-b6c8c0d8f12e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4efb9ede-39ee-4057-839d-21b8f72bd6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4045d500-2854-4b0f-983c-d61d3e428862",
        "cursor": {
          "ref": "ff060dcb-67d4-4ad0-aa98-c6a8f7fd8126",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f77b6044-e1ba-44ff-a73f-3fdc7bafa555"
        },
        "item": {
          "id": "4045d500-2854-4b0f-983c-d61d3e428862",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6022819d-479e-4d82-b650-4e0e8b2c9598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e2b8c1-7048-4db8-9674-0b92c07662d3",
        "cursor": {
          "ref": "f0a2da46-1409-4338-9b6c-30eb6d4651c2",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8220ca8a-1cb4-4c10-a905-786384ec7c1a"
        },
        "item": {
          "id": "f0e2b8c1-7048-4db8-9674-0b92c07662d3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "25113f72-d5ad-4e96-9124-0ccfe10e2731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c077544b-a9fd-4d87-bdfb-1b1e55f84d65",
        "cursor": {
          "ref": "17427087-f9d7-4276-b3ad-329073279faf",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "af801b8d-eab2-4411-835f-24d0881a555b"
        },
        "item": {
          "id": "c077544b-a9fd-4d87-bdfb-1b1e55f84d65",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7d4a21fe-9a47-46bd-aa36-121272266aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7acd5ec-0930-4e07-9e35-556cd20192bb",
        "cursor": {
          "ref": "a0c1f353-372a-4054-b01f-6d8bedf4c380",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5ad0b3bf-523a-43f6-a4d6-44185936b366"
        },
        "item": {
          "id": "e7acd5ec-0930-4e07-9e35-556cd20192bb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "72fb2c7e-c64f-45d7-b506-c5343d96f383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a54ce0-c125-4771-a4e3-e90bdf59432f",
        "cursor": {
          "ref": "89e3e490-f2b9-4436-945a-b6e781b1c5ea",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "51035eed-8b87-48e2-bc89-07ee460c650e"
        },
        "item": {
          "id": "d2a54ce0-c125-4771-a4e3-e90bdf59432f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1367d898-a98a-4df7-a9e3-b1aa6871c332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20af720-bcd5-48ec-b85c-2a43d5fa56a2",
        "cursor": {
          "ref": "d20af2d3-8ecf-436d-88f9-b882c85b5498",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "926b296b-0495-4864-82d7-bc48965f1255"
        },
        "item": {
          "id": "a20af720-bcd5-48ec-b85c-2a43d5fa56a2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1858ec20-2a5b-4797-a966-026e1eea546f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e287ad-616e-4685-afe7-7fb59f07c93f",
        "cursor": {
          "ref": "a96973f5-1371-420c-a569-208c71f456dd",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "10edb755-e3de-4241-874f-b9485bb735b5"
        },
        "item": {
          "id": "16e287ad-616e-4685-afe7-7fb59f07c93f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4636b848-c6bd-4d05-a7c2-8e8d594435eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ac0ae3-3ffe-4fce-8520-d93caa2c2f5d",
        "cursor": {
          "ref": "5687913e-f517-4936-9ff0-164853d8f9dd",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e3e25c95-b9f9-43f9-8ecf-af808a4621de"
        },
        "item": {
          "id": "82ac0ae3-3ffe-4fce-8520-d93caa2c2f5d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e12e36d9-6416-409b-886c-b45e4b3f6f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48201d20-7366-4be3-abc7-4b26ab715607",
        "cursor": {
          "ref": "50fc9dc4-ecb6-4ea6-8abb-fa3386f2f17a",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a8657582-4491-4a83-a29b-800f6bb2610c"
        },
        "item": {
          "id": "48201d20-7366-4be3-abc7-4b26ab715607",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8a380b78-ca7e-434e-8867-fb6056317c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cb8065-6aea-4b0a-a1c9-4085c8321749",
        "cursor": {
          "ref": "cada402b-f418-4691-9a14-fe14d20dd8c4",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "625d6ed8-82f7-4c1b-9c1f-62df53d97bd5"
        },
        "item": {
          "id": "65cb8065-6aea-4b0a-a1c9-4085c8321749",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ec36a357-1c7e-45a5-8334-9029ce29f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e9049b-f06c-4a15-9b7b-be43e4622263",
        "cursor": {
          "ref": "3fa7bdcd-cd4e-4014-aa04-0dca8ebd61b8",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1723318b-cf41-44e3-bec8-12ac24cfe3f1"
        },
        "item": {
          "id": "80e9049b-f06c-4a15-9b7b-be43e4622263",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "708e7618-38bd-4c40-b5c7-bfa6221fccd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5a281e-6630-4785-b2e5-4cd9190a9336",
        "cursor": {
          "ref": "38e7d703-969c-461f-a600-e2fa041537ff",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9ee3b4a0-97c5-465c-8ab1-2c5e1715915f"
        },
        "item": {
          "id": "8a5a281e-6630-4785-b2e5-4cd9190a9336",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1532f599-dd1c-438a-8b34-134843e3ba90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fa1554-13dd-4833-afb3-da4d045d6c26",
        "cursor": {
          "ref": "0a20e9c1-5399-49d0-a3d4-656221b63040",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "15482230-9b38-4449-b462-5da23d6dc68f"
        },
        "item": {
          "id": "f5fa1554-13dd-4833-afb3-da4d045d6c26",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce666de7-4b57-4373-9e88-faf2e7553220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc37a6f-0431-411b-8662-8910c5f59694",
        "cursor": {
          "ref": "585f81ca-177e-470d-9bf6-80261c6008cd",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6f229f01-3c98-4a08-a52a-f0a29d40b6a7"
        },
        "item": {
          "id": "3dc37a6f-0431-411b-8662-8910c5f59694",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bb188166-96ec-490d-8679-d9d54d0afbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ab65f6-5db8-4c34-a310-b9bc4bb41386",
        "cursor": {
          "ref": "785b5add-2598-4b07-afeb-280b421f9289",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "af37f6ba-3770-405f-af85-536fc348e990"
        },
        "item": {
          "id": "a7ab65f6-5db8-4c34-a310-b9bc4bb41386",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bc9edba2-9bda-45e2-b71f-c7f6fdb60c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8053dbf8-2fb6-44fd-a9f3-02002a89bd56",
        "cursor": {
          "ref": "faae5ca5-9d16-490f-b8b7-169d6fb84bb3",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "237b25c2-944a-4baf-bd59-9824b7687549"
        },
        "item": {
          "id": "8053dbf8-2fb6-44fd-a9f3-02002a89bd56",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eb29554b-ec8f-49e1-844b-7a9b9a145377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a5ca5e-dae7-43e9-9632-cbccffdb7869",
        "cursor": {
          "ref": "b1b8b166-b353-4c0a-b126-05e162f777c0",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "461571cc-c79e-4774-a734-ca66a505ac1f"
        },
        "item": {
          "id": "13a5ca5e-dae7-43e9-9632-cbccffdb7869",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e674d9ec-9d5f-4d13-82fe-ab55e81f2e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497cff02-d5ab-4b67-a847-50f23fa5dac1",
        "cursor": {
          "ref": "cea58e6a-a2aa-4e82-8660-54c8e5f3f51d",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bee4d691-542c-48b6-8b1b-c2831be3935d"
        },
        "item": {
          "id": "497cff02-d5ab-4b67-a847-50f23fa5dac1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dddd5782-2587-4096-bbc9-8984db971e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c01e6a-702d-4893-87e6-d190fa4a214f",
        "cursor": {
          "ref": "cc560acd-f518-4bd2-ba0b-ce302985f0e7",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "23026347-a8bb-4706-ac9a-6e48a997961d"
        },
        "item": {
          "id": "75c01e6a-702d-4893-87e6-d190fa4a214f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "02677eab-4510-463b-ba2f-753dd2daf4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c324190-a8c9-441f-a57d-e563f8e8fe40",
        "cursor": {
          "ref": "34e5abba-7765-45a3-9927-aed30ed5d7b2",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5886f9ab-948b-467c-8126-9e8bb206f36f"
        },
        "item": {
          "id": "0c324190-a8c9-441f-a57d-e563f8e8fe40",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8eb5e454-69cc-4c8d-9c22-1f8d54554a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b861961-d867-4c7d-8505-0485b175b2cc",
        "cursor": {
          "ref": "678b71e8-8b2a-41a1-863f-1d3ea3c2d935",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "afe71075-6156-4ae0-a1d9-b80a09e472fd"
        },
        "item": {
          "id": "5b861961-d867-4c7d-8505-0485b175b2cc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7d2e4614-c257-4f4c-bc91-48232de6535f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d2c172-f6b2-480f-a5fa-1ca93f45baa8",
        "cursor": {
          "ref": "5b46112c-d5c6-431a-9351-a156f2c09600",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "67f83828-808b-4026-87e8-ff2f177eef11"
        },
        "item": {
          "id": "22d2c172-f6b2-480f-a5fa-1ca93f45baa8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2b93cf49-10cf-4d22-a044-24c8e8a14a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d356c62-af67-418b-85d2-49987c29a167",
        "cursor": {
          "ref": "a6230614-ff09-4578-8af4-55fe59ed53c5",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6b20c524-5ead-4199-959b-0637f69b6351"
        },
        "item": {
          "id": "7d356c62-af67-418b-85d2-49987c29a167",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7beb672b-bb0a-4658-a05c-5098ab4fa9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c364ee40-dccc-41a7-93e0-1e84eec287fb",
        "cursor": {
          "ref": "d915d7ca-ab09-4a5a-92cb-99ac9d6aec4d",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "49489cd9-f2e8-4438-9002-e41cd27bd8a2"
        },
        "item": {
          "id": "c364ee40-dccc-41a7-93e0-1e84eec287fb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "51d2296c-ce31-4321-b53a-03f417e64b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105ce638-10e1-4b95-ae6a-16c937446bf1",
        "cursor": {
          "ref": "6d812aab-6d07-49fd-a748-b2b3fab49aa3",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "42e53f13-f3b4-4331-b9d1-b9b9e7e483b6"
        },
        "item": {
          "id": "105ce638-10e1-4b95-ae6a-16c937446bf1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "76b780f7-9901-45f5-a69c-4386cfb50905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0d0417-c33a-45e8-8352-9dd2d623a455",
        "cursor": {
          "ref": "fce976c7-fdbc-40e4-8739-97ea28ee20ee",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "87a6cf10-2d9e-4cb5-bb11-635b3f577c59"
        },
        "item": {
          "id": "2a0d0417-c33a-45e8-8352-9dd2d623a455",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "da694641-6166-4820-910d-f7c3a10011bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7904270e-e464-445a-b360-18918a48ad79",
        "cursor": {
          "ref": "59e0400f-6efc-493d-b738-10485c1a5dba",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c624e3a-73a0-4994-9c9d-61314e739072"
        },
        "item": {
          "id": "7904270e-e464-445a-b360-18918a48ad79",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "704559ec-2452-44d9-a1a1-c8bbc1c107a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d382af-fdaf-4ff8-966d-d0d0336b2e97",
        "cursor": {
          "ref": "4e43735a-db1c-4617-80fa-42d25c9231af",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "52969237-4801-4602-81f8-ea2f97da518c"
        },
        "item": {
          "id": "57d382af-fdaf-4ff8-966d-d0d0336b2e97",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "44a54445-4d29-404a-9508-88b05fb7ba02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dc0653-1a34-4477-b160-583f8c17f208",
        "cursor": {
          "ref": "52b5fe2a-a847-4d1a-af4b-574fe2015a7c",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ace795c7-609b-458f-94f5-3344c64b388a"
        },
        "item": {
          "id": "18dc0653-1a34-4477-b160-583f8c17f208",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0109c13b-2333-4da6-908a-504af5e98645",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 287,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b126ac63-23e5-42c2-843e-fe80126d2edd",
        "cursor": {
          "ref": "466ab705-6040-407b-810f-419b0b0f73ed",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d0c7e6c2-c86a-4efc-848b-cfebcc7d2d1b"
        },
        "item": {
          "id": "b126ac63-23e5-42c2-843e-fe80126d2edd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "222fbfa9-0cc0-4bcf-970e-e389b6ba48a5",
          "status": "OK",
          "code": 200,
          "responseTime": 409,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9392af-4783-4f15-92b2-dde8a48d96a3",
        "cursor": {
          "ref": "3fcc01c7-69b8-41be-b903-17c61f3919cc",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cf46f27d-af29-4692-8a8d-02718fa87ef8"
        },
        "item": {
          "id": "ce9392af-4783-4f15-92b2-dde8a48d96a3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "997d8b44-e2ae-423b-a8f8-5b466d5f80f1",
          "status": "OK",
          "code": 200,
          "responseTime": 361,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5eef8a-d25d-410b-a3f0-61aaf17ecfcc",
        "cursor": {
          "ref": "601e8601-c146-4156-b588-c12c28991b7e",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "63f0c569-a0ea-4449-b37c-efbfd7dce16a"
        },
        "item": {
          "id": "5a5eef8a-d25d-410b-a3f0-61aaf17ecfcc",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "5a862810-7bb3-4f28-86d8-251b81f2c366",
          "status": "OK",
          "code": 200,
          "responseTime": 387,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a6b853-4634-4944-8bd7-ba32b436bdc0",
        "cursor": {
          "ref": "75540a68-7680-47ad-b270-02cb7318a3cc",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2b56d42b-596e-45b7-bcd4-8eee92806ad6"
        },
        "item": {
          "id": "f7a6b853-4634-4944-8bd7-ba32b436bdc0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "81051954-dc50-49c4-b901-5055c3a7e907",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe02e8f2-e264-450a-99b4-1b73afcc3d97",
        "cursor": {
          "ref": "e831d6c8-5913-4c88-855d-c9f3519c5a1f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "27688220-60c0-4421-982c-bbcf78b3ac60"
        },
        "item": {
          "id": "fe02e8f2-e264-450a-99b4-1b73afcc3d97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a16c3381-13aa-47ec-9054-3fa0b985e946",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe02e8f2-e264-450a-99b4-1b73afcc3d97",
        "cursor": {
          "ref": "e831d6c8-5913-4c88-855d-c9f3519c5a1f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "27688220-60c0-4421-982c-bbcf78b3ac60"
        },
        "item": {
          "id": "fe02e8f2-e264-450a-99b4-1b73afcc3d97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a16c3381-13aa-47ec-9054-3fa0b985e946",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe02e8f2-e264-450a-99b4-1b73afcc3d97",
        "cursor": {
          "ref": "e831d6c8-5913-4c88-855d-c9f3519c5a1f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "27688220-60c0-4421-982c-bbcf78b3ac60"
        },
        "item": {
          "id": "fe02e8f2-e264-450a-99b4-1b73afcc3d97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a16c3381-13aa-47ec-9054-3fa0b985e946",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5efa0f-6c00-4dea-9343-7becd06b495c",
        "cursor": {
          "ref": "c3e63a02-9c83-402f-9cb1-69f9c247cff8",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "60c8d6da-6dbf-42eb-977c-fcaebc16d0a1"
        },
        "item": {
          "id": "4f5efa0f-6c00-4dea-9343-7becd06b495c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "108e7247-0caf-4e30-a2f7-3666d5634a35",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 255,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254830a0-7c2b-46fa-9ce8-d58e41b00618",
        "cursor": {
          "ref": "2a7296fb-9b74-4679-aea1-cf3f4b440e66",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1920fe83-df90-4a43-b1b9-c748f39779d7"
        },
        "item": {
          "id": "254830a0-7c2b-46fa-9ce8-d58e41b00618",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "881e3cb3-b6e7-400e-9423-ccc0f19bad5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254830a0-7c2b-46fa-9ce8-d58e41b00618",
        "cursor": {
          "ref": "2a7296fb-9b74-4679-aea1-cf3f4b440e66",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1920fe83-df90-4a43-b1b9-c748f39779d7"
        },
        "item": {
          "id": "254830a0-7c2b-46fa-9ce8-d58e41b00618",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "881e3cb3-b6e7-400e-9423-ccc0f19bad5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d9ffc3-8b86-4f79-b7f1-7735d151c5cb",
        "cursor": {
          "ref": "5dde4afc-c6a6-4699-a820-390ca8615e96",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "42d2b183-a246-472e-aecf-7cece3e49d21"
        },
        "item": {
          "id": "06d9ffc3-8b86-4f79-b7f1-7735d151c5cb",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "2dd7ee3a-b08b-4e1e-a17e-f3aaf2e060ff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 483,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a225630-3cab-430e-bf7c-f457086e13df",
        "cursor": {
          "ref": "3676f4d9-4566-4cde-9844-a24d88de21fa",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5cfbf76f-e5ae-4557-a3f3-c769f84b3721"
        },
        "item": {
          "id": "5a225630-3cab-430e-bf7c-f457086e13df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fc511966-c371-4a9a-bf1b-ddda2dde755a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a225630-3cab-430e-bf7c-f457086e13df",
        "cursor": {
          "ref": "3676f4d9-4566-4cde-9844-a24d88de21fa",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5cfbf76f-e5ae-4557-a3f3-c769f84b3721"
        },
        "item": {
          "id": "5a225630-3cab-430e-bf7c-f457086e13df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fc511966-c371-4a9a-bf1b-ddda2dde755a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ee3d95-a75c-443c-af39-b1d00fca9479",
        "cursor": {
          "ref": "ac4dc772-0553-4a3e-b115-92064265a851",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "52ae9c41-5b20-412f-a4e4-21687e99e9ea"
        },
        "item": {
          "id": "65ee3d95-a75c-443c-af39-b1d00fca9479",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a40ad4ca-156b-4e56-8979-4eebdd4c3a3b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 466,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}