{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c56d9311-c8cd-41ad-80af-2ab3f4e7f4df",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "450eb380-c328-4a7d-8870-5366a72983a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e9835b6-a5ef-4e24-b1cd-6ff3a28b398e",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c882f22-254d-45aa-83cb-713b23c21101",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab6ae2d7-bf73-4823-8ebb-fd8b20738c71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "c77d242e-2deb-4c4c-bf67-04443564a5b7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "15012e68-917b-451c-b6af-2a4709f72bc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3d84db8-b2db-460e-9380-c5d3b0f7ffbb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2d51227-1a85-43f3-a29e-a27a78ff86f6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548a27be-46c6-4667-a50d-40bf3156e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6584fd13-9abd-44d4-8e8a-d81c1b1c3bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fafafc-3edc-4b2c-b60a-c0335e1e72ef",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29a078c-2c38-4ce1-a667-4cd00349ecfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e83f506-a11a-4242-9913-26d95ddf68d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3fc013-4145-4744-983b-ecbe52216ded",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aa7b46-617c-43d0-b218-436a3eedafba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5672f0b6-4f15-41b4-92d3-14a47b47581f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "926314ab-cb01-40ac-bef7-9108dc739fb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db98a54e-c5d9-431e-84ac-a7c8f344ad9b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b332a040-a6ec-4dbf-946a-471aa29ee7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea4b1e65-6262-483b-bee2-13d905ad1f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6e6942-dd2d-4e41-8458-7da52439bb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed1d8d0-efb6-4bdf-8fdc-36b9d4e32b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627efb2f-025c-4583-bb8b-0d3958e7569f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b470b389-1a74-452d-ae3a-f397276f28c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b178a2ff-a274-4469-989e-cb088ed9b961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d415d4a-f01b-482f-920b-5b6effb0a218",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "48bf78d9-05a3-485b-9fec-309d88ac1b88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "70563e02-8aeb-43e5-9ea8-e4ffb95d554c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e55a671-5310-4824-bc53-db4fb6c7360a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "314913b6-be88-4d13-8e27-9e61b25e4c56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "838e5084-6078-4918-b0e9-953b8fcc9fee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9032b8c-6813-47c8-b7b8-8778ba16c237",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fbfd036c-4d45-4596-824a-22ace2099d81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05e05e1e-296f-4a4a-a31d-22a2166c161a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd5bf26d-a46d-49ff-9b7a-b2db9804ec8d"
            }
          }
        ]
      },
      {
        "id": "c22e8d96-ef60-4399-825e-32dad5d365cd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ca2ebaa1-a945-4fee-9bb2-413b02e581d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3286eab0-3913-4e1e-a146-67a00700c7ff",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d324cc40-9947-4f09-96fa-f59882a2a8ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178f01c4-7393-4eaf-89d0-24c61f42d387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2115fc-b838-42b4-b9d2-2aecc2ca2b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c8615d-9ed4-40ad-867f-6a82be5741bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346ee5e8-66d2-4e33-a329-617c01f7b2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671d722b-beca-4a20-89d0-739412d14ead",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229d1b4e-c2ab-45f5-84a5-5ff144857a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e9ea5d-2383-4adb-9e16-25b117a8e002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f5ba56-b651-41f2-ad86-fb98deebc62b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a69ae0-51e3-4fe1-b3d4-721964d3321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b82b93-1bfb-49f5-8d24-cb3b46bd74d4",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426ddf25-f0a4-4a04-99af-fd6e303ce6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7020d781-c967-41a5-8d5b-594e126e2e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46664bce-6647-4ce5-bca9-1ee74caa68d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d1dd95-2f13-482f-b311-9b3aa71b716a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f4702a-0e99-47e0-8b12-b1b048b5c34f",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ab10c4-76b0-4e32-a995-3548091c1cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f4f11f-6a7a-44dd-ad56-eaa443310a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5baa89d-2387-4165-a2c8-9e7c5c1b7a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a3c4ab-5ac1-4823-a4b7-814b8ebd1b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3b4021-3ae4-46ca-b171-93772d921b81",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b8a690-daf8-4782-98b1-fba5b1498019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23fdbe3-c253-42e8-8f85-45b70c93178b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9546ff1-aefe-468c-8d72-cd4dbb931d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3640ab27-2f82-44fa-8953-7883ecda0bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2018d72-0e91-461f-a66d-f25faf75887f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d2233f-6c0b-4f3c-964d-f7b318c7fbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcfaab2-4e1a-49b0-a2b4-dcade0eca2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e71d1e2-f1ad-4fe3-8259-49b2e420f69a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05e2b84-7961-4627-82c8-33cb548d279e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea3ac5-ae7b-4e14-a4cb-8ac2212df7d7",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37a43a0-91e4-494c-91b3-e79ce7238d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47a1383-8c0e-45cd-b235-71f36264fc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2582f253-938c-46f8-a96c-112d3fc76dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a93380-eeaa-48d6-bf9c-ad9e1c1bb2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c288289-6f92-4f35-855e-e20abb4cce58",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41f0755-2519-4f9f-8e19-abb3b3f4026d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51102e82-3a00-4c05-90ad-8301259ec906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56c4bfd-910b-45ae-aabc-3eeaee29e702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c2e57e0-6c83-4faf-a06d-c5aa4d02db12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ca10c3-ffbd-4c10-9f95-64c9b4499ae3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f8f132-c657-455a-a9a2-ceafed62744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a776bea3-9e00-4d5d-a6e1-9d6438563752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f618fff-f7ba-4b79-bfe4-642a6caeaeb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3023a5d6-7159-435e-93ce-a125212b2418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b94d63e-8017-422e-a1ec-84147837c5d7",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c60457-df44-418f-bb7a-c2c9172d2cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f800957-8619-43b7-be9b-00837560c2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34b6ae9-24ee-42ee-8d18-b107c432c5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21292d62-bc2d-4997-9549-6ae97d4e3871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72379eb9-abb1-4c5a-8608-0b73ce713973",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d50af2-851c-4ed5-b017-c0dfb56605e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1b95b6-778f-4cb1-81c3-70de4f607516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aedd8ec-77a7-4a68-8b3d-efc45412d5e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "7ea4ec93-4fe2-443b-8b3c-06c0019420a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bdcf48-8fdf-4877-8b24-b201e64dbea1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc641179-b97c-4ca4-8fe5-ec1b0fca5390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c84f39-7329-48be-b849-d7283f0fa576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8226d103-c38c-4606-89b8-8d040e11d7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "8fd2aa3f-c4c7-4d41-941d-029ddd2e0562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07b8860-16ce-4510-b012-9e38833203c9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e311b1-0979-48e0-89c9-8aa9c33c5c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8908d4d-6bc6-47cc-889b-0c85925698cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc64e8b7-d4aa-40be-8d58-05ee2963ac1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a58973df-5663-4fe2-941e-ee6046d08234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad7e5bf-4f88-4e31-a88e-3e6bf2113aad",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebde4e96-c7cd-4f9d-aa35-17c7d92159a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9112881c-086f-4bb9-85b4-c3d11fb2f5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fafb1e-ad27-42c6-9ff8-83cd7331b939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fb0174-f65f-4cd0-b851-d6b887ac8374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1328628f-11d7-465e-b91a-57be9005ff11",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b143cee3-05c9-4443-a01b-c997778635e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a91cac5-02fa-42c2-b128-279982b53638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863e4cb4-8206-4ba5-8fde-7152f7878fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "baefc5ed-d28b-4fa1-98a0-6f1d7fb0307f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f7448a-bf28-48ba-832d-9ae2c7512f55",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b5cf1c-f865-42d4-a3be-d7094574cb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21a4d2d-f863-462f-957e-843f089dba5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6264d3a5-2fde-4e33-a4a2-7821bc987ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "d467d0ee-2e3c-4101-b4bd-3b2db9461a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf07d67-1051-41c7-8632-5efbcc608f54",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d89aec-bc34-4114-9a7b-0931f37e2ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185708c0-cb39-407d-8990-d0170704bbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec209f8-cfc0-4f2b-86eb-db883015a650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d300e42-401c-4bf6-a44d-c687a6107328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9f89e3-668b-4875-8df3-a2d956b66e21",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc29fce-8307-4ff5-80b5-225317fff46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e2bcd2-27a4-4df9-a0ba-387d9af42a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d1f723-786e-4fb4-9cc3-e4586e33ce11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcfa14a-ae07-457d-9f7f-199d5005244b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e2a84d-356a-4438-bf6d-a4b86b46783f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9a87a9-9b4e-4658-a47e-7dddb909008d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7279cacd-384c-4a9d-bde4-59aa896fe28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2acb5b-50e0-4d9d-94d7-a3c5c513cca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b39dfd-3cf6-4e4c-8d54-5e44d96bc0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5831c061-922c-4f78-b744-1ea1cbe6f199",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e222ce3-5f8e-46eb-a481-896f88995ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc96e81-ebb1-4104-9d4a-2872efbd0ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec0b34f-f383-4969-8bdd-d7ce2af62828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c6bc5b-2a33-48fa-9972-2031cfaa0025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6035e945-cbf9-41aa-a4f9-030152352d96",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4d5f98-05f5-4df3-a7f2-5502db4c96e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69773134-3e5c-4e4f-9e9e-5070decd38eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4c911f-1523-40c1-8990-16dec534a420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1814469b-5c9e-435d-9fb8-5ce239053a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2256c5c-7639-4133-8e4f-4328eeaaeff7",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2348694-7bc0-47f8-b446-d7538596a148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50ed84d-728f-49af-93d9-5aba2933ae3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb9ef8a-5cad-4980-9eba-fa84d42955b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b618cf-6592-4338-84db-b2e9c9060ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24ff606-3a09-4b8e-9210-ac76acbc6afb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92ff095-b9a9-4067-943f-5378338459d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20a84f4-3632-4a32-931b-6a587b11edea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676739c3-9342-40d6-83a1-a6b4dcba6fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990e6a07-d39f-4d3e-9033-7d3366b7df08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c381b32-d3dc-4433-b0d8-0e14399cbb01",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bdf393-7a8e-49d3-8819-5ee78928074d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a22cfab-96b1-449c-a8dd-a51c6b8b8bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b614e4-039c-480f-a1a7-e510ea4225a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb4677e-b410-48da-9567-8f826f2a5439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510a4f40-8dbf-4ea6-8468-0e2d278941f4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7613a63-3fb5-43c6-a8f6-c19e2eb3ca69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefbf1e1-e099-4c4f-8ca3-8ef37db2ef62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3d943b-2169-4d1e-8bbe-7de28d5f2dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53c5bd3-a3a8-4bb2-82cb-5de5c0e5e79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780b3ec1-311f-4589-a124-635d0d4311d5",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad719f7-26c7-446d-a0ac-c4317371d49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d7f61d-7b67-42b0-9fac-482f716fa073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b22aed-0933-48af-b0b5-a3d271ee4ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04cef87b-95b0-4f06-bb15-f9db820dcca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00740d84-f23d-4f7b-970b-108fa7c69c7f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2d0a64-31ad-4267-b899-2da4597361b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc736d40-bee1-4a4b-904c-dc7a871380ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25edf1e0-f38f-4bb2-bb2f-570ec0206ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2cda53-ec5b-4ba2-a937-6f607c5dbbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087c4ad8-345f-4faf-bad9-d5c0bfb2610f",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b675d13a-3edc-40cd-ac37-e76d67106401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa99ed05-f1c4-4867-90f3-3cc4e8aa3c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d91de4-a2ec-4983-842d-89e1a5a47821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7206c5-3503-4829-9d9c-7f73b05b4296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d965bd0e-2f61-45ac-a1b8-606e012dce47",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e01cc47-7bd3-4ffe-aad3-4ff06f305bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029e9bfe-9401-42d6-a423-b236bdfa996d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b04375-ecd7-457a-b2a4-257321050c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9ea5a5-7842-4c86-b7ff-82d5c30fe9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6bc4d4-a3cc-4361-91be-3089e52dd913",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55059fb3-4fdf-425f-baf5-d2a77b995944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0674bca-a794-4ec6-b09c-c5771bea67d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059b1222-79d1-43dd-8e21-39575e4966b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a459d2b-3baa-4a73-99d3-4bf361251900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73787b62-ebbd-417e-b8dd-227439f38078",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e018be-59b2-4a98-ac57-a231a6a4a8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "be1aab4d-2a75-403f-9d05-8b6c4d0d5598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e57f6f1-1413-4545-bde2-69344a53780d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6dd1a16-7698-4c90-89e1-1f36552ec25d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b10e4e82-f507-465c-8196-bc9c55bd5141",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba8d37bf-496c-4d83-a135-18ac04db01f4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143a8d6c-98a9-4632-90e5-9278c0f1be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45acf986-cf79-4d07-bf4b-e14962551f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829a021b-d6d7-4166-b305-0f22b251c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ed25647a-2d58-4df9-9043-4898730e9386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d064a4-07fb-4278-be1c-7bfcbd340da0",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903ea948-fe2b-46eb-aeed-2196fb381c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca1ff8cb-7d4b-484b-80fd-894b57603de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823c492f-d137-4f69-b100-b898a0b3c45d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "1a22b10f-fae6-4aa2-8d7d-55db4cdf82d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc4e5789-15b8-447a-babf-d75ca90a92f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36de2214-1b8f-4867-9fe9-5c25547e1574"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea00d517-7345-4a36-ab01-ed8935897b50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28c65e75-81fb-4759-b256-e49598193b3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5044ef78-c804-4c58-b5c8-f806432dcb64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b197310f-5522-4ec9-a50e-2a3bc94c47f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "29ed796f-859c-4bf9-9e3e-b6e47287508e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e7194f0-a168-43f4-984c-ae28fcb35ca4"
                }
              }
            ]
          },
          {
            "id": "e534c112-e382-44bc-a34d-fcef001e3311",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0dbfc3e7-9402-482a-8779-0917ffa1d2b3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ddf90a9-9899-497c-84c1-d7b5975624c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc473c0c-787f-4285-b6b2-1a99f9c8d509"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a1ce04e-e4b5-4618-bd17-32eaecd4fa16",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "0f45d5f9-19a2-4767-91c2-594cf5391908"
                    }
                  }
                ]
              },
              {
                "id": "b14f0417-9a3a-4f66-95b3-a2de6a8978fb",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c656feb-3c3a-4867-bf5d-cf83b7b1f9fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fe0ae17-5eec-4424-a4c0-dbfd3c0a34eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e6b5409-8420-4944-b3ae-9384a0d5de50",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "ce00751c-ba9b-473f-9523-53956bb6619f"
                    }
                  }
                ]
              },
              {
                "id": "156d3b45-5d0d-4fb9-90ef-cd82d5c79a5d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee61950b-e73b-4abb-a0af-7ba235fc75c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aafea2bf-aafa-4234-be39-b8021897b99e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b07325a-b9d5-446f-b49e-69e34835df95",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "344269e4-1bb6-4fb2-b65b-0f442d172d2c"
                    }
                  }
                ]
              },
              {
                "id": "5cc629b3-9f93-4531-8441-4e0b5297a7d5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "370bc0c8-9aa5-4d7e-a113-910ae4bde885",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60a883f5-fd4a-4a85-a1fc-a91ce8237a97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21204fa4-2604-464f-bee8-40ffa56a2e61",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "cf0394ef-a5b5-4718-864d-f98621ce08fe"
                    }
                  }
                ]
              },
              {
                "id": "e53b0ff8-cdfb-432a-8e82-dbf0ee023efa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a30e0426-f03e-4671-952e-66631e8bb56a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b66356c-fd9f-44b3-9bc0-3913a139e24f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71846ffd-7e76-4e29-b131-20ad6815ec93",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "55d0f1d6-99b5-459d-a9cf-85136696e9a5"
                    }
                  }
                ]
              },
              {
                "id": "69e57ee9-7f30-49dd-961c-c4979e8e100f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e3fc79c-64ad-410d-9a98-54c46e057279",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40deb366-97d3-48ec-b16a-55026112d29a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58b45a53-e599-4cfd-bd9f-961bea654b08",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "578be5d2-0399-45a3-af22-a5c543c82d5e"
                    }
                  }
                ]
              },
              {
                "id": "7b97d8f1-e1b1-417d-840a-1302607dc817",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63412935-7334-4c36-898b-28548fc9137b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3f88537-2f06-4c6a-baaf-968b3560b8b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2890825c-f182-4ed0-97b6-f13de97cc7b9",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "6b7fac67-967a-4d86-bd41-c65886850acc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47cd2390-29a4-4bd7-b0ee-60c4fadd9f7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a58f52a7-bcd3-498d-975b-567f1feaa008"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16e2bc8c-0647-408e-bac0-dabaea2d3815",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ceed643a-cdb9-4bde-8a49-28983ed8b764"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eece2523-f799-4ff5-a259-4fc8ed2cc5a0",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "6b1691f3-9b85-44aa-9846-73fb768cc6c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9550c104-73b7-4a1d-a67c-0863e4148680",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e1ea5b1-a183-4cae-9e36-090d0406aca7"
            }
          }
        ]
      },
      {
        "id": "add4a170-25d5-4c02-b1fc-dab62ff0e092",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b86715ad-7ac9-41aa-afdf-a3d8c7b6704e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87ae6758-7ae6-411a-aaa1-fb9cf3d180c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9200bb10-8e21-48f9-9cb2-32c7e2afab60",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfcdfe5-2d2e-4331-a8ad-08a63a48e38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb051cfc-eb75-4fd8-b11f-ab110e68bd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca272a7d-c45e-4491-87f8-4012cc4fcd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "339d82a5-62c3-42cd-b2ae-4b34e67357b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adb43e0-e181-45e2-b8da-054d6d103734",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6f833f-380c-42b8-b6e5-f02aecea5149",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "a9c11404-578b-4de4-9924-f77e111bdf45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47012731-5960-4d28-8e51-3b21afbe6865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "397a66e0-aac6-4ade-89b0-9742bd4a39c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4d97a50-bdd0-44fc-8d76-cadac43916ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e24536c3-be57-4310-8aa1-be5de1c51da5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcdc51dc-eb1b-44fc-95e3-2ba721da7897",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a5d32fd-2043-4acc-893b-382d5706d4a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a75a0b0a-f3cf-4e71-9818-a32663b10bdb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "1480581b-df2d-4add-829b-2a6da29b4914"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fe6fe4a-ca55-4c0a-858a-812af7468d24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00c987fc-4126-4fd1-9419-511b133ef545"
            }
          }
        ]
      },
      {
        "id": "c39d3e90-543b-4447-a35a-571fb5efefea",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9b29b71c-e472-44d7-a9c8-059e4860fd6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fda1e1d3-0c0e-46de-b98e-7d6cc66b15f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eab7feb4-b220-49bf-9f47-3080d770ecea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c6a604-96be-4cbb-95a2-59caaab19e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc4365d-5d93-426f-9860-16a8d663e19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fe8a10-ddf3-4129-9b40-ec0e9f6e133f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fcbdfe-038e-4944-8aab-2a662af3cf45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7e8efe-adda-420a-b9ac-a699465abe81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2a08f3-deac-43f1-ba65-a0a60f261d06",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce81cc4c-faa0-417b-bd38-a5211ff082af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0e453b-0a45-4cc2-8f83-f69734aa84d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110eca83-fcc5-40fe-9c91-8840d368e8f3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c715dd-ffc4-468f-8b9e-37df11cb16ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0126d2-2c5e-47f8-8c56-c497ed8d5ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1007dfe1-695d-4369-8d71-34dcfb0140ec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2186409a-ebe7-4fa3-b672-95f2395e5430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bbc1b2-bdfb-40f4-87f6-33864cff8b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f620d43e-a904-4612-9545-dd94954b7ec7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ff6246-7a89-47b3-82b9-c1a237c55c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71144df1-34fc-4bb3-9179-b5ac189c6e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3c79a1-f986-4491-b545-e7f254152b45",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95abcc24-24af-4d39-9c70-6d21518a1295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c5ef53-6f72-479b-af23-ab8275fd67fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49188b87-f094-4114-a18c-52c1ce218a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33067318-1120-4b39-8025-67baf75443e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619830f0-3c50-42e7-9c6e-f14b8a7dfd98",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e66d60-4631-4f09-90a7-2e84308c01de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f42ec2-fe01-4af3-821f-6cfe112334c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e014dd-7efa-4d22-bde6-5cec43efbde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db56e5e3-2b7a-4d62-82d6-b6afecea3852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8cae4d-9a2f-43e9-99e0-bbc4cddd6e13",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6e9605-9e3c-464a-821d-4edb958caec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6bc217-1c5f-4493-9f40-3ca6c1288943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b16a41c-d2c5-45ca-b0aa-2e468e74d842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac77211-60a6-46c7-9e74-c87e601a10a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cbf846-f37e-42e4-834e-b80933dca73c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d395afd-90db-45ab-9661-5c5a867dcd1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f0ee8b-6493-46ba-96b9-3d3eb3e2d18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9d826d-fcc7-4a31-bf19-9cba249d1e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9588c60-3f9f-4b99-bcd4-a983509a112b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a31bbd-0ca5-48dd-a695-3b6a938b6c2c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c58b918-f1ed-4471-a02b-9d8d0957ae81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842dd2ea-3ae7-4d72-8393-dd37c88b2036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df27ebac-b6e9-4844-af03-1e8d3da6be42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f671525-b8ff-4442-b2c1-abaea3d9676e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf2721e-8011-4a20-ac9c-9a5abe482010",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a0bdc6-617d-481e-98a7-75b14f794b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e111f68a-dab9-4797-97b5-09f0cf12c07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4734b9-43ed-4e00-a560-c051279d7484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40555a30-1217-48d6-8838-19f0304dc0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e46cf8-c86b-4a3d-b1fd-208b6558780b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0745120c-a9a8-421b-84a4-7ca8bfdec984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fdd60e0-6252-4b44-b9d7-af98dcbc0604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70928a12-aa84-4485-b23c-2aef47ed483d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c2a86c-cd4f-4882-9e92-55489505a83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5a6154-7396-4b18-b033-0d219871e86d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ba9306-9bb4-47a9-b4ad-62dd352d942d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5075f438-f57e-4e2f-8b96-e4f76e94acaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b414e546-8cc6-48df-9235-03396ee21953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63072898-f5c6-4c10-b1ee-8765869dbe79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a24c90-cdb3-4584-8200-425a9f3840ca",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1c8712-58ef-4442-9177-8a80b24eac87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbba3084-5e32-4e8e-8f0b-971ec8fbef89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a4abe9-1bc1-4ac4-b95a-237b075ee305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5320b176-f0cc-4d78-b223-c4c67d4917bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dbdcd1-befe-46ac-ab5c-4935cbd62808",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54ab0f9-d466-40bb-864d-27b67d50aed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "730a1107-78f4-4b93-a6b5-c200e48ca988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85987083-3693-4c1d-b266-7bda0fc7ad43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa50414-7575-49f3-a846-fced6d1c6960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd75cc0-2efc-4724-b12a-d1d46506e67f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28044b65-d502-435c-86d3-e1dce5626178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a106871-fb51-4503-b857-434ecafa3871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c058d627-6434-47ee-9278-f2664c8d6beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df82af0a-c231-4045-9d2c-1eafe0607992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aa6226-37d3-464e-a6c6-4dc4b6ac82fc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3afd6b2-d8d3-4c7d-bc90-73401c80a787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e477a760-7cdb-46ae-8b87-48c0d0163136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d1c1f0-dc99-48e8-9d3f-02429770befe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be659185-f2f5-4111-b280-7a0960b09858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b337c75-fa2a-4f99-b44e-11ebf496798f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2615a766-1dba-4869-9ac9-db2a624f0314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8296c76-1b07-47ae-b52f-b7d0e10aac65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25010835-b967-4042-936c-48ef437c2e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac04132-5c85-4854-b14b-fe37577fd56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70933c6-bf17-4847-8b0f-5077bb3ca5e9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abaf727-fbb0-4ac5-9269-d025cd99c9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646bd10e-2b1b-4ab4-bd10-03a855c8c3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f068ba3-d1d3-431c-ae0d-ecc6eda13867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01000e2-2899-4739-8b79-5342bb540aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfac813-05f1-4e81-a7ac-1150b61e7f28",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6e6a2c-e43a-4384-a7c1-ae3d5be6f639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99852cec-e0c4-4167-bd47-94b9fbb607b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d839fe-0106-42dc-8120-6e924e6c1b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e48ff1c-1f02-44f0-9b51-1b9a0e53f41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ec992b-42ea-43de-8a42-9a9fcb105a7e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512fc255-7e80-4a66-b889-38c787449093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974780f9-6c11-41e6-a18f-b2b5ff620fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6278f7b5-20e9-4dab-b011-afa135de73dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1e4bd2-c72b-4dfa-aa22-b36dc75ca946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c426c07-8dad-4e67-a700-99fbad0485f5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cd026d-1f03-43bc-9790-277e9961390e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc38d48-0240-474e-acf8-81cc0ba0346d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c1fdb3-ca33-4790-990a-94eab3abfb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b3ac03-62db-4adb-b041-4be6634213eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e5b0e5-68a6-4863-b111-6c06ccd5013b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6840934-dd60-410f-a2c0-fb520db0b849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5baa611c-16ad-49ca-9462-fd1c2d7eaa09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43944a11-7df2-4469-8b5a-46261f79e417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7341116-1daf-4289-b06e-cb9e39312d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80cc8e1-8cad-484b-b152-2d37a3a43512",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb29c4b-73e9-4226-9943-5fda8fffd6c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e584c1-29ff-4d9c-9bbb-5d052179222b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0b2deb-3c98-4268-8f52-847450d1f092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930af21c-729e-410b-a1dc-a917d405c316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db9aed0-c115-4394-92a7-d94f82d13c4b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1272df-0819-4e5c-8c2e-a17a91227214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19bdbce4-b57d-4fe8-a2bb-5eaa0b9db825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cada73-fd81-406b-ad90-1b8519935241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031b01fb-8909-4b57-ba0d-6647ac745a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df06677b-e856-4122-9cb5-bb13d1fe19f5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f960eda-58ee-41a7-ae26-09a104156b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6429e35-55a3-4583-ac38-ee447b863356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662435ea-c52b-4599-9a62-349d659c0857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73ccfb8-d2d6-4b08-9789-9653eae719c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d23bc5-7e74-4b17-8d76-baf5ea22fdf6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d12207-6483-48ad-94a1-3d2aec50cf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3d6bfe-aa99-412d-9274-8c6d4e728eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273eb5fc-6352-441b-a03a-a64508a7b820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6139219-7468-49cc-b9a7-5f93bff8f795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f205a26-bd8a-4498-9267-4b62ccc0ed7e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9db4870-8224-4e21-99b9-9ddad708f31d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7669b6f-53d4-4dca-80b5-753ca775724b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53658c0-1f61-4c78-94bd-8e2073d6be89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f85efe7-5d15-427f-b921-22efbf7bdcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629d15f0-7e2a-4601-9eb2-48e8e61cd1b7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f240ca59-cc39-4db3-8d72-227ed9d89fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ab5821-5f14-4692-b435-29bd14093487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a99192-52ce-4102-8f0c-b95b8e59dfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febc6b0f-1b97-47af-b777-97aa45455b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2f1a92-2615-47a3-9b78-58263afcd5ff",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b792f282-2c92-4d82-a7d5-7023f80968e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d8a953-63c4-4097-9cd8-42a5d68c47b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921b9e86-f3c6-402b-b0f4-23ac1e2c4132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd09fa1-efcc-4fdf-b65f-e0c06f678dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b679db7-347e-4fc0-b6de-37226d4b16a5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59b6266-43b3-4077-bb6f-4d5c2887067e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558af2a3-23f0-4dd8-87b3-a2936673d157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d44ecb-43a9-4342-83b3-683c39665b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd105a9-00c1-49f1-83e5-7bd8fa8fdaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346e7dea-7226-4e73-a684-08dce6e386ce",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc7ef5e-fa82-41e3-bf50-110d3beb43ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83488691-7cd1-4268-b7b9-e7728a2eef82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980d85cb-0b93-4197-a553-0e0ed4856702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba89359b-1f94-41b2-9749-869bca9fa7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76db870-7ba0-4bf2-806f-d95e6baf528e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6001795-08cd-4c34-ba0f-049554406919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adb93dc-eb37-498a-b330-f2922d3c7a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69586c7c-0cbf-48ce-8efc-38dd5ff4704a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a547f3c-eeb6-4bfa-9876-26a3b173a8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a79c6c6-a464-49b7-85b8-7689e5ffb221",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dc014b-6586-4367-9355-1d64d08de8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ece249-be81-4961-aded-e7e86bf929de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a371168-2db6-4f38-96fc-b3e0f7403b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794d56cb-d0f1-439f-9eab-f71cb909a1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50caef4-c2e6-4d61-a48c-ae8224fcb1ac",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c56a6fd-a31a-47ec-a826-6c3c72971567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f2a29c-c916-47c2-a36c-e9669f062e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d5cc57-b824-4462-a6bb-9c18b4a064e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc0b88d-31cd-4320-8bbf-08cdc782e8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a84cd8-9b59-459e-ae98-871d1b076085",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c0f659-9a4a-4932-bd7e-c65bd4a193ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058167f8-0dac-4db1-b944-3eab34aabef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5975dad2-4086-42c9-bc5f-20b2202ffb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78ac09e-3ad6-4bab-88c9-2e7f5b62f8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81744ae1-defc-422e-b2ce-d28a5ad83bd3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6875709-01c7-471a-9834-54d98dd1cc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12a879a-13d2-438b-9836-ebeb27a4af3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366b27d3-8fc8-4507-981e-b4c2e8b6ce18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90622df2-5f0f-47df-986e-385c549d2bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c2a7d4-5595-4063-9dda-50b649c35ddf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cc9acf-f1a4-4256-87cb-f1a940e99fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220f5e0d-d8b8-472b-8825-a84d04e8b08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "debcbb0e-c159-4d33-9087-176eb879abd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba6a778-70b6-4f54-89c2-7319369d87e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74404c7e-72d0-4135-9b18-3ed6531415ca",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27575b59-17ec-41f8-827d-6de19afc4dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abe5e94-5d0d-4828-8751-9873ffe6ffc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e631edc2-14f1-41de-bcfc-fee940d88374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d8baf4-5987-47a4-914d-2781015aa19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f612bc2-7e31-4c05-8cfc-da2eed444f2d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f12d82-20a5-493f-8558-b2abf2567910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5f7d36-2b87-4744-b824-25e5cbab3579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204484c6-a4d6-4846-9754-756db4e03ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724c953b-708f-4a6e-8661-8aae6a776641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f097f70-436e-44ca-95b4-75de0137bbd2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186fc380-b050-419e-92e7-ccf715b3c233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03da466e-b857-406d-a657-f8710cf014be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45a56c7-d943-4903-a3f4-eb9e42e5a56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eb11ed-e2ce-469c-8e94-7a6b5185dd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aa9e88-dceb-456d-a6b0-4ade1f098642",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28099308-7e3f-4f43-bc76-6714e5ed9a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f514aea-e7e6-4464-a24c-f411276aa31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14eba3e8-27fd-4926-a595-2069c7327ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfbcb70-5059-40ec-9883-e2454d277165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be861fa9-c913-4133-ad9f-aaebaf222a17",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f7d8a4-e5eb-4a21-a5f0-cfb9c0ed6edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5901b597-50fe-402c-87c2-dfe8b4adcc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27998a0d-4868-4524-825e-98523b5744af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1a0ad8-3c81-4ea2-b293-962b8c0dcb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f732e6-5f9b-4930-86ad-19e1e3c9a92a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d30c83-6563-44eb-af7d-b00a530ce7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa47d40-4be0-469d-b36a-b1b8a12d1aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3521bd58-0359-41c7-9fe3-cbcc24b70da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540ddbcf-1818-4b82-84c8-e0cbb110d67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0b1892-604f-4efc-ba25-2c6b8a16e9df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1354e0-ec30-446a-bfa9-f728ec23c3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1638ca-3793-4f8f-886d-298dee049aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95404d30-b25c-4663-9ac0-4f4d98a711e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91afd8bb-a028-4ffa-8926-28464ee03290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26908d8-ede6-4c4d-ba83-2872db0c981d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1df6e30-2ad1-4343-8f35-fd141247e321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c72bdcb-1f1f-4600-ad12-6dadd5ede892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869afd84-c2f0-4701-82b1-b0206bbf256b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61602071-993f-42ff-bd1c-570ed74d87d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d9e0f8-d51d-4bff-8966-0250866d4f6f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465f7ff9-e2a1-4180-a8d8-64df420545e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9f4092-bfb6-4b83-8103-6614117eb2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097f7acf-8f4c-4e02-9a75-7582a3524f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d02558b-0232-457b-afbf-522039be0a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b208b0f-2bdf-47bb-b6fd-97495f41b5ab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afe3be7-0c65-4564-8d8f-f759bae0e957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fc0e09-f293-4528-88b8-04f72b5b7d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eaf6c0-215a-44a4-885e-c758c9735f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a56e9ae-32c8-4dc5-aac0-3f5b5fe9e8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146e0dc0-ffb5-4359-9367-a6bfce2799d7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e85d0a8-df6b-496b-87ef-1aae62b41123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5e2aef-4c32-4c70-bdc2-b141ff1b8db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f981f3f6-d7a6-43d7-ae10-b211174732ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa79aafa-3b37-4abd-b5e8-57d6c248a080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9764c062-0103-45ad-82b8-35a8ca10d9df",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8f336f-ca77-4752-a37d-cd7087c9678c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ce5170-b531-4eb2-a995-88e27fb10503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911bcdb0-0a4e-4a3e-ae93-a3821979e3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8faa1352-8d0a-416c-8943-2d66839be075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e432b6-2d30-4fad-9716-504bc3a55842",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf099247-fead-4707-aac5-5503eeded59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6560ad6e-d198-4478-91c2-73bc01056fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac43928-dfae-4481-946b-0d2a7a7bee92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6829a964-48b5-46d8-b145-32d8742561bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff78ff03-1362-43a3-b80e-2bf5f3a424df",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faf65d7-3bfa-4f6f-9f0b-2094e90dae7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7759df5e-feb4-44e7-b668-bcf83f21dbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfb1603-ba04-4c96-a5cb-548013e9199c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6354874-9a28-43d5-b93d-cd31a651b8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc68c589-bb5c-40ed-8d58-0f04ad689753",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d17613-ac79-425b-8a9f-d05556ced2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16ab0a8-0074-483a-b1d4-6526f3c894dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8bd88b-e450-4983-bc1c-1e402238941e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb06ed30-4c6f-448d-9c4f-3d6b40e2dd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e397eb-a339-414a-a4b8-c5ecbbfb3fdd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63206945-db4b-47fb-b6e4-7bb22cdd0ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54b29bf-aba9-4d5a-9a9d-f948fe05e537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dc1ac4-3788-4f34-ad60-3adbf3dd7bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589de79a-3476-44d9-9bf5-67b92f00ce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34ec632-9925-4e20-ac53-76a52f430d20",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3666be51-f144-4bcf-8972-28ad7d3c32ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de145627-64a8-4c8f-bbd6-c1c07055df6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d16d96-edeb-420c-ba74-fac07ed40a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9179116e-3a61-4be8-90f7-37aaafb2389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4442652-632b-447b-a24d-427a502231e0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863fef24-eac7-41a5-85ff-b241565cde0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6509be09-6e83-41bc-9ee5-f6b8f80101c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03649639-f430-4f00-b4b6-e1e6f2c7af41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f911d55-0bf9-42b0-860e-dbc21b036800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09bc9eb-6b85-4d82-a1b3-bc6bc6aecce5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199e25f9-beeb-4b6d-bb19-fe04dad7f16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7ca130-aa70-41e9-a91f-f290fd9332f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a017b49f-d54c-4abe-9742-628b01072c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd4d107-86eb-4b29-b402-86a1d815126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c563853-cc9e-49e3-9029-9f81cfc63c34",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36b4c59-aaae-4d32-ae50-5728911b94e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306fcc35-0efb-4531-b59c-b54ef7f48604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabe0f40-41ba-47b6-805d-566a37702866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa5ff34-e6d7-4413-9ec7-1938dd76a26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3c8832-eaeb-4368-b656-93f8dc03d36a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e929f85-5844-4c55-aa54-1b637bf08af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9526c3d1-8742-48c4-92a0-5785da439a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e95a5e-2d2d-4ceb-b643-b04c7362b1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b271e8a-5664-4f99-9d60-b2eae7d91fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169560f0-2dbc-414d-8f3a-9a62905a9b62",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339fca76-37c5-4701-ad0f-988aa6274565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7f0344-6d4f-4f9c-b0d9-d2eaf82f0859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3a82e8-25c5-496d-9a19-a35fc4b31d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdf724c-c776-4432-9cbb-f1ab58483657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e356f907-6b60-4de3-8358-1f84a11a47b5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae9e518-00da-4901-aad7-16ab144d6285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9120cff-d4a5-4daa-b79b-f41a0b050f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df22810-3e57-4f22-91c8-926772c0aa54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ada5936-61a5-4cb3-9ac6-4601d21a5dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b60c9bb-0b0d-446b-8783-2a796600ad48",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efba973a-1716-4418-b130-a552ff07d155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2f89c9-1219-4308-bd0b-5af7aaf4c6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2971a212-6680-4647-bca9-94864c37bf86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fd2725-5f8e-4f0f-a346-a275c5e370fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f82c49-740f-457d-9445-5aa52562531d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d28966-e4fd-4d1c-9dcf-588634c593b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a12ef6-e5bf-441c-b82b-05f3041d7511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1ab569-0344-4061-9752-8b31814f76b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2809aed2-2b94-46d6-800b-441dfda6720d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f618b8d-2ce3-4d5c-bdde-13be09f1d03a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fe2d04-ed40-4060-a5d5-f63a14011f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54cd6a6d-fbe7-4667-90b9-f3a91369fbcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7392f04d-7313-457c-ac49-0f1718fc6335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363407e5-9413-4757-b8cd-ce0f27365931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d0a86d-ddf2-4ee8-b626-c3b9e10a5968",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a06bc5-03ae-44e1-9cc4-bfae14be901c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354ac2e8-fa0b-4e7a-a99f-206f126e1c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2650abcc-5484-421d-a669-3a22ecbdfd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4fff03-81ee-483b-a53c-63e91f18accd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8bd963-56e3-4f23-8a1c-aaa767c9027e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23387831-3b69-4053-a6ca-b6874d4e54b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc2f8185-7629-4783-ab73-80da28df977c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e01b1de-82de-4c9a-96b3-7a7757a653e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d433de-db65-4897-9230-b282caf74214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9334f74-918f-4f62-9e0f-c6f07bdee57f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619574e1-c0d3-406c-821b-05d7c830ade0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47946e3b-de9e-4676-aaf7-e535f0f00b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd90e73-0eba-4b08-87b9-affa7f352237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d243548-ab51-425e-ab03-88a52a71f4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3a62f4-7864-4812-8d90-735925d339f9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e9e08d-42d8-4ce6-b67f-49b8dec5bc9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e37665e-a692-4a28-bf39-c3f14dd88894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bda1cd7-9fb8-4136-b7bb-51e200b86e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46730ea-634b-4315-adb5-334958050107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9595a8b6-2a71-4505-b1e3-3e08c2e601b8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cc691f-0d1d-48f9-9291-6fe7edbc076c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13bf9fd3-40a5-4319-b53b-2092a3b61eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5484965-53c0-4e91-9872-a9dbd7501686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b4628a-39bf-46be-aae6-496f61a286a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90a1b36-5167-4676-8f8d-4a7abb58b346",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56b6aa1-a58f-447b-b507-99d1011b6630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06fd86ad-42fe-416d-b703-30108266e053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af34a28-7679-48d6-9bb9-3e084e30a857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdee4df6-0711-4cdd-a1de-87f5f820d32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c685e0-a9c4-4852-ac3c-deffc94140d9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbc0d0f-073a-4f91-8058-53bb7a5605c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8523b2a-871b-4a7e-94db-296adca3b7d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d65d6c7-ebcc-4c35-a587-df8af2bb47af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bd83a1-38a5-46f6-b600-4846448b7c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22473a5b-8d4e-49c5-899a-5bdd4d8a0786",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7336f13f-53e2-4a31-93c2-9c47cabcf956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a2c4f5-84d3-4429-940c-fa24d6c83879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f314279-294b-48bd-9a62-6aa42191ee24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cdf944-ddfd-400f-90d5-487765ea20fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22ae8cd-ddc3-4bcb-981c-9af79da20b5e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48813c71-e45e-4c8a-a831-7359d86750f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22bb11f-7e14-4359-ad07-61d3a7d28b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddd56e1-cf78-46a0-88bd-7a4813095210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62afab6b-ca5e-4153-91ac-1f3a5caa1c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65de4bb7-fa93-4e2c-8af9-f71fad4643b7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72774ba4-e36b-4f2f-a26e-96494c9024f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d40997-24ee-41f5-b00b-d20469ffed1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42da78e6-5b13-4e68-a407-e5b239ac5c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fe2e97-f8e5-4ee7-9a29-20cbe547eeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfbf354-c587-4a66-9cc0-bb676a29972a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb2586-e6ca-47ce-ac7b-57f464b76804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791a81c8-099f-4abb-8612-7a5aea1e6a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee961c7d-460b-4873-a135-af04106f616e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143fae3d-438c-47e0-8b5f-9a769199b37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4bd745-76ac-47e0-8325-98d7cd2a94c0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63af26a8-7554-4dde-b587-dd71fbdc71eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de5d37d-1e80-454b-9c35-4ada41661808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9560616e-8373-438a-b160-d82deea9a51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d658129-1232-4527-83d7-3f2f6ef97ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3beadd7e-a44a-46aa-b439-305545aa1e92",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92ec40f-eae0-46b7-9173-f67c37cf34a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b0f59f-9a72-492f-a3fe-b3912f5a21ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2241935-f226-405c-9207-9d707e264237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a2be88-6451-41c2-881e-f280d085fd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ab60e7-b6fd-41ce-b95d-210786198400",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72fefbe-9b5a-475d-ac52-5e0bf91069ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d2dda7-0fb2-4d50-8791-5bc942c14654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e806263-6767-44ac-a0fb-ae76155044cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0fb751-56ca-4238-8d92-f9eb5e0295a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e558f877-868f-4414-ad19-0e63ae0d0396",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab809fed-80d6-49e1-aee8-3bd701843b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b09e6ea7-d39b-4995-9db9-0f2e6f933fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7470da-419f-4075-baa4-5cc4b95e02cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca818595-efb1-4f6e-a06d-37a870c6f2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c7cafb-90f8-41e8-be8a-dc533a6b2d5d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3788e32d-f9fd-40f9-9f53-bf01afdb0b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d594ab-28a4-4885-8e38-bccce04e6d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf4432a-df8e-4d28-b209-5a3f00c29f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c81c9e-f146-42ab-bcca-b170e5314738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dda9ac9-8f6a-45e1-9dc7-24b0829f8eb7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a4ea6f-7d3b-48de-bdfe-238e9500d615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a310a0db-d03b-401d-b16f-01e8cab90660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9719f06c-b994-43f9-948b-fb912a289dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec765c7-9609-4c4a-b979-03319879ad44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1135eb-9d01-42e3-991c-cccbec9d1e2c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e68d29-a22b-4caa-92fd-e2527a2e3c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548aeca0-d290-4884-821a-491b6cd8014c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e66dd3-c44c-4e4a-8037-8a16786d91e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c98c89-55ea-4262-8ef4-1066937e7ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e328b62-bc60-4664-9273-5d4bb90078f6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0c1fb2-c1ea-4672-89e5-a95d0238ce24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceefe961-54b2-43fd-919e-4ec631fd2840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69573e49-3086-4bd8-a180-067a86a7ab15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721d6f15-def4-4183-8f13-d82331beeb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46aaceea-00b7-4c94-be48-ce322926239f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603cac1d-6f70-45e4-8330-9fae6c93deee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493aec4b-9c11-4875-ac1e-4989e09730ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964bea6f-2b9d-4f3f-9651-cce05701bba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada6e800-4d08-4a04-9bcc-c95daa9bfca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed62c912-a49a-4a67-8147-52d58db8608f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e91e238-7d09-4ae7-a8dd-733b71ba9af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd8a4a2-5e3c-4d98-ad3d-6b5a3b2c2429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dd1e85-1abb-4352-aebd-7891e0d04464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed19d284-7ac8-42d3-a776-e048629fa9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69aa308-f1c8-43ed-952a-76554ab70b1b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bd940b-54e0-45cc-8a3d-e976e0a20add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5368a69-cea9-44fc-90dd-7700e1ffc8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d129a8-3833-48ff-8691-8a2ac7c37988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bed5de-a1d2-4974-b58f-be5a5cb8a12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489a2545-7abd-4ec9-be44-bc70b634f6fb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f67deb3-6ac0-4fcf-8cdb-3c24e692dadf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4baaff4-8b1e-4cbf-b5b2-994af02bfe51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e430a2-f4c4-474a-88d9-a1c8bea7b139",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbca206-2636-49a5-a5e6-74255c33c820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982b495c-3306-4339-868d-0ca7cd097984",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5b0d83-6a15-4ac1-95fe-765aeae94104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e636a1-a886-4837-baa7-7c3c8fb405cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2292dd05-cbf8-4961-91f9-697d289734a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b32153-8e04-4c6b-b635-7d714237acf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648ce169-69c7-4385-a5a3-dcb9653f1936",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc9b633-85b2-4d3e-9e7b-6c36925b262b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7032c0-8c28-40b7-b645-f63d5498d715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2174c0-a9c0-4afd-a6a9-39cc01f63d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a40157-13c6-49f8-821a-07ea4d0044df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f7ab7a-48f9-4ec7-a192-2f16c4200ba2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03cb453-2a7b-4175-ae22-f8959f83fa19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e16ebee-f56b-4f64-bec3-2e10458901d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39712a8f-2327-453e-aee6-0e40ae8f1d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f46306-0601-49df-aace-6d0f9e3b9e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a5e7af-cc9b-4950-8318-2fa5c73b575d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb52004-d6e2-4817-b966-89e4aeaa2cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57818675-569e-41c5-af61-888d887546e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e69b2d-efa3-43cb-8376-2d4db8ee2d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c038030a-24ae-4dde-b8f0-f9b73ea524f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b576be96-3847-4240-89ec-87436d885063",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd10fe0-fc84-455c-8383-33b35d23ddaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b45e50ed-8bf4-48f0-a90e-abbbb292ab4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebd1b1b-f7c4-4789-84a4-f8eb033b1396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4155eb-999d-4e2c-be1a-eca8f4656109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe58e2a-bd29-4e52-accb-49f524690de9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12785c39-34b0-4b89-b332-0586d2146954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977157b0-7dae-4798-98ce-67c1916a0a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc8330f-3a73-4db9-a383-057f61208a93",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2155e46-8747-43a9-a24b-86a2d71d64f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0efee72-bd15-4aee-9f9f-71a6ff5e0165",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0381c481-f6a6-4b19-a95d-0f44f3655c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55f1276-97fd-4b46-ac20-076d57078e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3a5afb-afa1-4ef2-8be4-93d94ae4af9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f539d4a9-e88a-475c-b267-806e79fb8000"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "850d9b78-0b6f-4805-9459-fa0d2a2043ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72c80da4-9525-4e06-baba-5b396f49242f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "879207a2-1e5f-4777-8dd5-ff7b8e7516ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "743d3311-8093-4653-8ac9-c4d14934dede"
                    }
                  }
                ]
              },
              {
                "id": "5a7e46ee-d224-4515-9afd-c243b4b5981f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf47e907-15ed-4cda-8616-785b32deda60",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a55048-974e-4773-a0fe-256df574c020",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ea621b99-9397-46f2-a5f0-b65521414277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ffce4a-c323-46b2-9bcb-5c4b8784ca56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79e99d8d-97ca-4292-a994-8900a42bec71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc0c606-ce1b-4537-b303-442b81931f38",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a606a8-d4e9-4ce7-bfd6-364f0d6f0024",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a90953db-e89d-49a6-9467-d57dd9e54324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb48aab-96d6-4a84-8620-dfea51a59f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14c2ca2c-c9d4-416f-89e1-bd70bb8341a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c666a86c-980f-4980-b5e0-d0e00251487c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "257e25d4-7dad-416a-80ba-cd31d12fd4c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41bc39b7-b9e2-4d66-a377-2b7b5741e764",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d4f7293-b12e-4b47-acb0-40cf915b14db"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "9639e262-3d7a-43df-a621-8881cc366d5d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6429e528-31a6-49d4-a4cf-b05a09264da3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ad23d73-2c56-400d-b175-e238edf8bb4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3443769c-2c7c-458b-a5c8-2394c9cd4521"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28e16f3f-9255-4b29-b7fe-2a10b2b3a725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50283985-2bee-4ccc-9b2c-4b4307d325dc"
                    }
                  }
                ]
              },
              {
                "id": "2ef64f97-67ff-4148-9c0d-ea26fcd2f2a1",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdc10867-8987-4334-a9be-09da46c9ca0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "340650b0-f52a-47db-9b06-b065d7210741"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "611ad17a-2fcc-4aa3-b8e9-6a79e983fe65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86d5b6d6-d05a-4c93-90aa-47a32d161f12"
                    }
                  }
                ]
              },
              {
                "id": "08ade2bd-1418-498e-8b98-a871a93a7df6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32ba52cc-ba79-4a45-9e63-bb00d010c7ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cd5aa71-7283-48f3-b1ff-f7200a568f4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94e6f49a-a281-4d0b-8d15-c8b36811fd5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8616b5d6-3c9f-4356-8354-a095531dc2fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3700d008-c277-4db3-bb64-458969449290",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3fdf9a8e-b709-424a-915e-0b454c2216c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fe3737f-2332-415b-a3ff-893ca5227fd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0eedab1-b90f-4819-a11e-564b2b3bd565"
            }
          }
        ]
      },
      {
        "id": "926f1812-39b5-4a9a-8ddb-c7995d76a913",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "91efe7b0-739a-41bc-b427-b39a480d1bb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cf7593e-f7d2-4577-976c-96597df661c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e3edd42-e4f4-41ec-9dd5-6f6392cba9fe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e20a70-6fe7-4153-a35c-bad6f57b8acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29146aa7-6535-464d-b851-192d139bf9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f745ac9a-01b5-42a9-8cf6-3c8ad2f56ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98363ecf-6fa7-490b-8630-866082494a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19e9f3f-7311-4c6c-9ecc-891e84937d0a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939303bb-173c-4b7d-8e5c-da6cd5c7f3d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "88936f4b-ced9-4a58-80d4-590f17ea5d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a28959-1990-4dca-9541-93ce25d7acc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f492b3a-0b30-4be9-b4ab-8844fcf816ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d45477d-4b97-490b-a63e-e0c042fc3959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39c0f086-65cb-4959-9791-604345be1166"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25b0fe57-1182-4a9a-bb18-dfa9e1470d80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d19fb08-4e19-427f-95d6-666559ad0cdd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a351aec-e351-4909-89a4-1f3e564a12fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "d4ff0183-46f8-4ba9-b592-647a82ab4537"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "223b8deb-bd6a-4302-a2d7-6f1c36288899",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb97633f-7a2f-48dc-a757-98b97627846c"
            }
          }
        ]
      },
      {
        "id": "88684baa-7f5d-4a76-ba69-8d34c4fab090",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dc4ccfac-c96c-4067-923d-748214156f94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "989d4456-862e-4c5c-8356-6d1a3287d525",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "545b0537-8b6d-4eb4-9ae1-6604c264f9b6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85255b8f-58f4-49e8-871e-e91aef8a824f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da42fe5-edd9-44a1-8b50-8517ef7df440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906cf0f8-eee5-4b95-8df0-b0172d68f70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be969e8f-a59e-4cf6-afac-6957296dde40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c226ab11-7909-4015-813f-1b69fc1f1f0c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31afdae-0c74-493a-9400-7ce2ba74f0c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "5c7e6713-5d87-4329-af0d-096a785e430c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a8ace1-b6ab-4bff-ac83-87024e51c78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c2d3daa-0aba-4f96-8975-aa09438bba2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cdc74d8-e32d-40ca-81e7-0f4f4934485f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae5530f7-f098-45d2-93a9-59b6ea53d9d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "144c30c6-1a5e-421c-a014-22c44883adf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c4fd466-86bc-4133-8926-f1b7098c7ccf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4586e9e-febf-4dab-84b9-2300b05076b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "6c3f9218-b20f-452e-bf03-1f521e77ee86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab36b5c7-0c1f-45bb-99fe-1dd917f9ee59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab6e4f2d-7e45-41aa-80a4-05e76ea83c26"
            }
          }
        ]
      },
      {
        "id": "caf2efc3-11a6-4f6e-8d31-7c6cb0562999",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c2ae732a-b668-4eb4-acb7-7c12c45480b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50951ab9-9807-496e-bb69-9a5c6e67ae4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3df623e-ce76-4fad-b1b6-fadfe03e370f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849a5a33-9043-4e8e-b125-2d81853ac6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24fc94d-2bc6-4e6a-ade8-df2079a286e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5d1d53-b472-44b9-a621-56b90275955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "963c2905-35d6-48c1-881f-e4a834836b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e7ac8d-2bcc-4bf6-b408-e9840196ddc2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f4a181-b180-415f-bb3b-2beb85435c5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "52d06288-82b0-4248-bad0-d18377350120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5e1d75-38d0-4283-96ab-2be096c970a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4345f65-6a30-4989-ba98-cda5e80d44ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79722605-2568-4bbf-90ab-b14b381d1ab8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29ad9671-9fa8-425c-9954-464200e81ae6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0c893b-806b-4d3f-8650-74c111242012",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78539f65-9f03-4796-bdf1-3fc73b4271f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "830c887f-6daf-414c-846e-9dcca554ff14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "0cb40b89-ed4a-436c-84da-70a54d6ff3d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69b456d4-2270-4bf1-9f0b-fc10d852c8bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55d656ac-b0fa-4ef4-8669-e8d31f8a826d"
            }
          }
        ]
      },
      {
        "id": "40a36a1e-3c92-414c-9b28-37e1d9cb2396",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "4f920622-1f07-483e-aa4a-28db60184b53",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1211,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 203,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 315,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 611,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 600,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 196.4827586206896,
      "responseMin": 30,
      "responseMax": 2300,
      "responseSd": 335.33016367194296,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664500550612,
      "completed": 1664500597626
    },
    "executions": [
      {
        "id": "9e9835b6-a5ef-4e24-b1cd-6ff3a28b398e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 155,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f1592fdb-c854-493e-9443-a1ef07a5e705",
          "httpRequestId": "2500d1b0-ae5a-461a-bde4-93dc6d1d9241"
        },
        "item": {
          "id": "9e9835b6-a5ef-4e24-b1cd-6ff3a28b398e",
          "name": "did_json"
        },
        "response": {
          "id": "276b178c-ae8c-4369-b971-85aa46e27622",
          "status": "OK",
          "code": 200,
          "responseTime": 1649,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d51227-1a85-43f3-a29e-a27a78ff86f6",
        "cursor": {
          "ref": "a8dfd57c-634e-4863-9460-880513572643",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ebe060ff-1ede-42a2-881f-1b298d25d3a6"
        },
        "item": {
          "id": "c2d51227-1a85-43f3-a29e-a27a78ff86f6",
          "name": "did:invalid"
        },
        "response": {
          "id": "15d9be29-25b9-4724-8b11-589b8cba54cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d51227-1a85-43f3-a29e-a27a78ff86f6",
        "cursor": {
          "ref": "a8dfd57c-634e-4863-9460-880513572643",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ebe060ff-1ede-42a2-881f-1b298d25d3a6"
        },
        "item": {
          "id": "c2d51227-1a85-43f3-a29e-a27a78ff86f6",
          "name": "did:invalid"
        },
        "response": {
          "id": "15d9be29-25b9-4724-8b11-589b8cba54cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fafafc-3edc-4b2c-b60a-c0335e1e72ef",
        "cursor": {
          "ref": "f5ea87cf-b92c-4c2f-ad8e-14c0e1b04ff5",
          "length": 155,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6136ccfc-ef70-44d1-8c7a-3fec7c46bb38"
        },
        "item": {
          "id": "f9fafafc-3edc-4b2c-b60a-c0335e1e72ef",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d4070c7d-26e8-4827-a843-76b46d90d68d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 458,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3fc013-4145-4744-983b-ecbe52216ded",
        "cursor": {
          "ref": "ac1698b1-0318-404c-af83-ea4730099acc",
          "length": 155,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cf649ae9-2365-4e33-96c7-cd7407594b39"
        },
        "item": {
          "id": "2f3fc013-4145-4744-983b-ecbe52216ded",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d2fe9b6c-df0b-4e81-9cf7-f74969db80a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db98a54e-c5d9-431e-84ac-a7c8f344ad9b",
        "cursor": {
          "ref": "f626c8e6-d633-446b-9562-e93898926236",
          "length": 155,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b1300bba-400f-4fb5-b37b-5d46e4e21bfe"
        },
        "item": {
          "id": "db98a54e-c5d9-431e-84ac-a7c8f344ad9b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e61d0462-07e2-4c98-b08b-df3f154d9377",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627efb2f-025c-4583-bb8b-0d3958e7569f",
        "cursor": {
          "ref": "31680de5-0905-48d6-9245-91d4d1924a06",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fd368924-e596-4d2e-a465-5b5d27e44782"
        },
        "item": {
          "id": "627efb2f-025c-4583-bb8b-0d3958e7569f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a9706c33-7720-46a9-b59b-831f2c68a97c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 81,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627efb2f-025c-4583-bb8b-0d3958e7569f",
        "cursor": {
          "ref": "31680de5-0905-48d6-9245-91d4d1924a06",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fd368924-e596-4d2e-a465-5b5d27e44782"
        },
        "item": {
          "id": "627efb2f-025c-4583-bb8b-0d3958e7569f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a9706c33-7720-46a9-b59b-831f2c68a97c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 81,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e55a671-5310-4824-bc53-db4fb6c7360a",
        "cursor": {
          "ref": "a6df4cb9-269f-42f2-92d1-b79251ae2638",
          "length": 155,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1d01f6c0-fa9d-4a17-8965-3b4a5e060830"
        },
        "item": {
          "id": "5e55a671-5310-4824-bc53-db4fb6c7360a",
          "name": "identifiers"
        },
        "response": {
          "id": "061e3346-fcd5-48c4-bfd1-a74836de9e4a",
          "status": "OK",
          "code": 200,
          "responseTime": 344,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d324cc40-9947-4f09-96fa-f59882a2a8ba",
        "cursor": {
          "ref": "ecc55136-9476-460f-9896-10050566b49a",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d4ccb42b-a3b1-40d7-a2d0-01705b9e7559"
        },
        "item": {
          "id": "d324cc40-9947-4f09-96fa-f59882a2a8ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57b6bec1-b962-4e67-bc71-71bdf8a17d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d324cc40-9947-4f09-96fa-f59882a2a8ba",
        "cursor": {
          "ref": "ecc55136-9476-460f-9896-10050566b49a",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d4ccb42b-a3b1-40d7-a2d0-01705b9e7559"
        },
        "item": {
          "id": "d324cc40-9947-4f09-96fa-f59882a2a8ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57b6bec1-b962-4e67-bc71-71bdf8a17d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d324cc40-9947-4f09-96fa-f59882a2a8ba",
        "cursor": {
          "ref": "ecc55136-9476-460f-9896-10050566b49a",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d4ccb42b-a3b1-40d7-a2d0-01705b9e7559"
        },
        "item": {
          "id": "d324cc40-9947-4f09-96fa-f59882a2a8ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57b6bec1-b962-4e67-bc71-71bdf8a17d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671d722b-beca-4a20-89d0-739412d14ead",
        "cursor": {
          "ref": "46a74488-447f-4d9e-b51d-a2489d0a5102",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "95ee464c-3d82-496e-9d16-6aae1914c89e"
        },
        "item": {
          "id": "671d722b-beca-4a20-89d0-739412d14ead",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "94c2a00f-6af8-48a1-a379-ddec3e7143b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671d722b-beca-4a20-89d0-739412d14ead",
        "cursor": {
          "ref": "46a74488-447f-4d9e-b51d-a2489d0a5102",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "95ee464c-3d82-496e-9d16-6aae1914c89e"
        },
        "item": {
          "id": "671d722b-beca-4a20-89d0-739412d14ead",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "94c2a00f-6af8-48a1-a379-ddec3e7143b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b82b93-1bfb-49f5-8d24-cb3b46bd74d4",
        "cursor": {
          "ref": "a259ff83-460a-4a2b-9e23-eecc11dab78f",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6b55d28-eb87-46e3-be21-fb72bc2dbb9a"
        },
        "item": {
          "id": "50b82b93-1bfb-49f5-8d24-cb3b46bd74d4",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "99eecd5a-6afe-4753-b627-8335fa0da326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b82b93-1bfb-49f5-8d24-cb3b46bd74d4",
        "cursor": {
          "ref": "a259ff83-460a-4a2b-9e23-eecc11dab78f",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6b55d28-eb87-46e3-be21-fb72bc2dbb9a"
        },
        "item": {
          "id": "50b82b93-1bfb-49f5-8d24-cb3b46bd74d4",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "99eecd5a-6afe-4753-b627-8335fa0da326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f4702a-0e99-47e0-8b12-b1b048b5c34f",
        "cursor": {
          "ref": "a1e44fca-4a95-4f66-983c-0ad4164785aa",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c796a70f-4268-42a3-9940-c1000a3c1522"
        },
        "item": {
          "id": "20f4702a-0e99-47e0-8b12-b1b048b5c34f",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "3ac352dc-cd17-4e3c-bb5c-f0bcf3cff578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f4702a-0e99-47e0-8b12-b1b048b5c34f",
        "cursor": {
          "ref": "a1e44fca-4a95-4f66-983c-0ad4164785aa",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c796a70f-4268-42a3-9940-c1000a3c1522"
        },
        "item": {
          "id": "20f4702a-0e99-47e0-8b12-b1b048b5c34f",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "3ac352dc-cd17-4e3c-bb5c-f0bcf3cff578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3b4021-3ae4-46ca-b171-93772d921b81",
        "cursor": {
          "ref": "71bed658-cdc6-4203-b722-b3306f6cc1b0",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d02ef413-5ff4-4221-a952-70f98a5b883f"
        },
        "item": {
          "id": "de3b4021-3ae4-46ca-b171-93772d921b81",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "b05fafae-7ac7-4f7f-98fa-930452284751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3b4021-3ae4-46ca-b171-93772d921b81",
        "cursor": {
          "ref": "71bed658-cdc6-4203-b722-b3306f6cc1b0",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d02ef413-5ff4-4221-a952-70f98a5b883f"
        },
        "item": {
          "id": "de3b4021-3ae4-46ca-b171-93772d921b81",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "b05fafae-7ac7-4f7f-98fa-930452284751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2018d72-0e91-461f-a66d-f25faf75887f",
        "cursor": {
          "ref": "6f6b8876-ec00-4acd-a143-bbc86549b58a",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a00ce77f-80f6-4ecb-9b9c-8e723079ff3a"
        },
        "item": {
          "id": "d2018d72-0e91-461f-a66d-f25faf75887f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b4a47087-7b6a-4d15-a548-15946778e185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2018d72-0e91-461f-a66d-f25faf75887f",
        "cursor": {
          "ref": "6f6b8876-ec00-4acd-a143-bbc86549b58a",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a00ce77f-80f6-4ecb-9b9c-8e723079ff3a"
        },
        "item": {
          "id": "d2018d72-0e91-461f-a66d-f25faf75887f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b4a47087-7b6a-4d15-a548-15946778e185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea3ac5-ae7b-4e14-a4cb-8ac2212df7d7",
        "cursor": {
          "ref": "ad19ca7b-13df-4d2f-a48a-64ef3c306c7e",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e274b875-34c7-442f-9956-faf7b9990479"
        },
        "item": {
          "id": "a6ea3ac5-ae7b-4e14-a4cb-8ac2212df7d7",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "64646ace-3f86-4389-8fac-56e5b3a50232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea3ac5-ae7b-4e14-a4cb-8ac2212df7d7",
        "cursor": {
          "ref": "ad19ca7b-13df-4d2f-a48a-64ef3c306c7e",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e274b875-34c7-442f-9956-faf7b9990479"
        },
        "item": {
          "id": "a6ea3ac5-ae7b-4e14-a4cb-8ac2212df7d7",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "64646ace-3f86-4389-8fac-56e5b3a50232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c288289-6f92-4f35-855e-e20abb4cce58",
        "cursor": {
          "ref": "5fb768a5-1917-4c3d-825d-28319b7f6396",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "51bc0e68-87a8-4548-88fb-87acec9bee53"
        },
        "item": {
          "id": "9c288289-6f92-4f35-855e-e20abb4cce58",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "3a8a75c5-1594-44f4-8103-e0535b1b2730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c288289-6f92-4f35-855e-e20abb4cce58",
        "cursor": {
          "ref": "5fb768a5-1917-4c3d-825d-28319b7f6396",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "51bc0e68-87a8-4548-88fb-87acec9bee53"
        },
        "item": {
          "id": "9c288289-6f92-4f35-855e-e20abb4cce58",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "3a8a75c5-1594-44f4-8103-e0535b1b2730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ca10c3-ffbd-4c10-9f95-64c9b4499ae3",
        "cursor": {
          "ref": "7cf35963-fdd5-4823-9dea-3eb07614f588",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ddb0f29f-adca-49cf-8d10-19ac8ad8a58f"
        },
        "item": {
          "id": "83ca10c3-ffbd-4c10-9f95-64c9b4499ae3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9681d0c0-139f-41b1-af0f-091ee468030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ca10c3-ffbd-4c10-9f95-64c9b4499ae3",
        "cursor": {
          "ref": "7cf35963-fdd5-4823-9dea-3eb07614f588",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ddb0f29f-adca-49cf-8d10-19ac8ad8a58f"
        },
        "item": {
          "id": "83ca10c3-ffbd-4c10-9f95-64c9b4499ae3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9681d0c0-139f-41b1-af0f-091ee468030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b94d63e-8017-422e-a1ec-84147837c5d7",
        "cursor": {
          "ref": "aff62615-bcc2-4bb8-a395-1d4f4eaf9473",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c4267de3-edd0-47bf-876c-4cc8b51ace8f"
        },
        "item": {
          "id": "2b94d63e-8017-422e-a1ec-84147837c5d7",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "548ba52d-c79e-4304-beb7-bcaa098a7797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b94d63e-8017-422e-a1ec-84147837c5d7",
        "cursor": {
          "ref": "aff62615-bcc2-4bb8-a395-1d4f4eaf9473",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c4267de3-edd0-47bf-876c-4cc8b51ace8f"
        },
        "item": {
          "id": "2b94d63e-8017-422e-a1ec-84147837c5d7",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "548ba52d-c79e-4304-beb7-bcaa098a7797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72379eb9-abb1-4c5a-8608-0b73ce713973",
        "cursor": {
          "ref": "e39d1351-7747-4207-a280-b189040ccfb6",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "974d183f-f297-421c-927a-cd5ad9509cbc"
        },
        "item": {
          "id": "72379eb9-abb1-4c5a-8608-0b73ce713973",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "0573012e-0529-4e13-9f34-9bef5bf1b8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72379eb9-abb1-4c5a-8608-0b73ce713973",
        "cursor": {
          "ref": "e39d1351-7747-4207-a280-b189040ccfb6",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "974d183f-f297-421c-927a-cd5ad9509cbc"
        },
        "item": {
          "id": "72379eb9-abb1-4c5a-8608-0b73ce713973",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "0573012e-0529-4e13-9f34-9bef5bf1b8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bdcf48-8fdf-4877-8b24-b201e64dbea1",
        "cursor": {
          "ref": "99fcc00a-b9ad-4812-a3c1-fabbe1c1c03c",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "23214950-064e-477f-a9c4-ef61940da684"
        },
        "item": {
          "id": "44bdcf48-8fdf-4877-8b24-b201e64dbea1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0873bce4-9102-4461-b668-d8453f090173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bdcf48-8fdf-4877-8b24-b201e64dbea1",
        "cursor": {
          "ref": "99fcc00a-b9ad-4812-a3c1-fabbe1c1c03c",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "23214950-064e-477f-a9c4-ef61940da684"
        },
        "item": {
          "id": "44bdcf48-8fdf-4877-8b24-b201e64dbea1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0873bce4-9102-4461-b668-d8453f090173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07b8860-16ce-4510-b012-9e38833203c9",
        "cursor": {
          "ref": "ac0412f8-7ff6-402f-b4ed-10ea71550005",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ffd49587-fe27-4a1f-812e-89c49f01fd8c"
        },
        "item": {
          "id": "e07b8860-16ce-4510-b012-9e38833203c9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2fb94fd4-fe5c-4e06-ac21-cd718e2c04d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07b8860-16ce-4510-b012-9e38833203c9",
        "cursor": {
          "ref": "ac0412f8-7ff6-402f-b4ed-10ea71550005",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ffd49587-fe27-4a1f-812e-89c49f01fd8c"
        },
        "item": {
          "id": "e07b8860-16ce-4510-b012-9e38833203c9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2fb94fd4-fe5c-4e06-ac21-cd718e2c04d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad7e5bf-4f88-4e31-a88e-3e6bf2113aad",
        "cursor": {
          "ref": "4c908f84-704e-4df1-b25b-bb6a9934684b",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "500e637d-00d7-4bde-acc4-5ba12014584c"
        },
        "item": {
          "id": "6ad7e5bf-4f88-4e31-a88e-3e6bf2113aad",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "5b70f5f7-6ee9-401d-ba7d-f974a068ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad7e5bf-4f88-4e31-a88e-3e6bf2113aad",
        "cursor": {
          "ref": "4c908f84-704e-4df1-b25b-bb6a9934684b",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "500e637d-00d7-4bde-acc4-5ba12014584c"
        },
        "item": {
          "id": "6ad7e5bf-4f88-4e31-a88e-3e6bf2113aad",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "5b70f5f7-6ee9-401d-ba7d-f974a068ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1328628f-11d7-465e-b91a-57be9005ff11",
        "cursor": {
          "ref": "3bcd7f2b-d625-4505-9cf4-e069e75eb9d9",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e1014b2f-2eee-46f3-bc23-ea8647141e9f"
        },
        "item": {
          "id": "1328628f-11d7-465e-b91a-57be9005ff11",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "1d438591-a83b-48db-9109-487f4bc52a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1328628f-11d7-465e-b91a-57be9005ff11",
        "cursor": {
          "ref": "3bcd7f2b-d625-4505-9cf4-e069e75eb9d9",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e1014b2f-2eee-46f3-bc23-ea8647141e9f"
        },
        "item": {
          "id": "1328628f-11d7-465e-b91a-57be9005ff11",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "1d438591-a83b-48db-9109-487f4bc52a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f7448a-bf28-48ba-832d-9ae2c7512f55",
        "cursor": {
          "ref": "263d004c-3f07-448a-9bba-c876b86e924a",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9753bc66-1e98-4f5c-a99a-7211f09ca8d5"
        },
        "item": {
          "id": "28f7448a-bf28-48ba-832d-9ae2c7512f55",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f4beddce-966f-4d59-ba90-984b62cbf390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f7448a-bf28-48ba-832d-9ae2c7512f55",
        "cursor": {
          "ref": "263d004c-3f07-448a-9bba-c876b86e924a",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9753bc66-1e98-4f5c-a99a-7211f09ca8d5"
        },
        "item": {
          "id": "28f7448a-bf28-48ba-832d-9ae2c7512f55",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f4beddce-966f-4d59-ba90-984b62cbf390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf07d67-1051-41c7-8632-5efbcc608f54",
        "cursor": {
          "ref": "916aa2d0-8987-40aa-a5de-9c94bf201b8d",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6c7110ed-d621-4792-9f20-a330f020de01"
        },
        "item": {
          "id": "1cf07d67-1051-41c7-8632-5efbcc608f54",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "88b6bbb2-54ba-498c-a8ef-98fec6dda4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf07d67-1051-41c7-8632-5efbcc608f54",
        "cursor": {
          "ref": "916aa2d0-8987-40aa-a5de-9c94bf201b8d",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6c7110ed-d621-4792-9f20-a330f020de01"
        },
        "item": {
          "id": "1cf07d67-1051-41c7-8632-5efbcc608f54",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "88b6bbb2-54ba-498c-a8ef-98fec6dda4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9f89e3-668b-4875-8df3-a2d956b66e21",
        "cursor": {
          "ref": "b31f200d-6499-4fa1-8bd3-71b4a5d9566b",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "88d47caa-4f46-4c74-b594-11ec5519ac96"
        },
        "item": {
          "id": "0a9f89e3-668b-4875-8df3-a2d956b66e21",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "27aedb13-f2d0-4cc1-b8ee-70c463a97bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9f89e3-668b-4875-8df3-a2d956b66e21",
        "cursor": {
          "ref": "b31f200d-6499-4fa1-8bd3-71b4a5d9566b",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "88d47caa-4f46-4c74-b594-11ec5519ac96"
        },
        "item": {
          "id": "0a9f89e3-668b-4875-8df3-a2d956b66e21",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "27aedb13-f2d0-4cc1-b8ee-70c463a97bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e2a84d-356a-4438-bf6d-a4b86b46783f",
        "cursor": {
          "ref": "d267e52f-4083-4665-b65e-9359c3464f42",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "72955fba-4925-446b-afda-a8e0866c986b"
        },
        "item": {
          "id": "c3e2a84d-356a-4438-bf6d-a4b86b46783f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "28c0715d-8fc6-468c-b28d-c3ce48ba7d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e2a84d-356a-4438-bf6d-a4b86b46783f",
        "cursor": {
          "ref": "d267e52f-4083-4665-b65e-9359c3464f42",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "72955fba-4925-446b-afda-a8e0866c986b"
        },
        "item": {
          "id": "c3e2a84d-356a-4438-bf6d-a4b86b46783f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "28c0715d-8fc6-468c-b28d-c3ce48ba7d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5831c061-922c-4f78-b744-1ea1cbe6f199",
        "cursor": {
          "ref": "4ef77ee1-3f6f-4d41-9087-98c1da0241ca",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bd1bc93c-7801-441d-9435-cdf1931a796a"
        },
        "item": {
          "id": "5831c061-922c-4f78-b744-1ea1cbe6f199",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a2e24b53-d972-445f-9f11-c28bc0e2a392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5831c061-922c-4f78-b744-1ea1cbe6f199",
        "cursor": {
          "ref": "4ef77ee1-3f6f-4d41-9087-98c1da0241ca",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bd1bc93c-7801-441d-9435-cdf1931a796a"
        },
        "item": {
          "id": "5831c061-922c-4f78-b744-1ea1cbe6f199",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a2e24b53-d972-445f-9f11-c28bc0e2a392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6035e945-cbf9-41aa-a4f9-030152352d96",
        "cursor": {
          "ref": "cce26591-35f7-4030-9887-e9855649cbeb",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "69f20ba6-736f-4e15-a70a-4983d5fa187e"
        },
        "item": {
          "id": "6035e945-cbf9-41aa-a4f9-030152352d96",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "2a8e0ae7-bea3-4121-8137-566a59d6c051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6035e945-cbf9-41aa-a4f9-030152352d96",
        "cursor": {
          "ref": "cce26591-35f7-4030-9887-e9855649cbeb",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "69f20ba6-736f-4e15-a70a-4983d5fa187e"
        },
        "item": {
          "id": "6035e945-cbf9-41aa-a4f9-030152352d96",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "2a8e0ae7-bea3-4121-8137-566a59d6c051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2256c5c-7639-4133-8e4f-4328eeaaeff7",
        "cursor": {
          "ref": "fa029214-ac04-48f8-b76d-f2378427e1cb",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c3525f25-bb31-4ccc-8761-9cb0dc26b48d"
        },
        "item": {
          "id": "e2256c5c-7639-4133-8e4f-4328eeaaeff7",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "28625484-58ca-4057-88bb-e091b6053bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2256c5c-7639-4133-8e4f-4328eeaaeff7",
        "cursor": {
          "ref": "fa029214-ac04-48f8-b76d-f2378427e1cb",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c3525f25-bb31-4ccc-8761-9cb0dc26b48d"
        },
        "item": {
          "id": "e2256c5c-7639-4133-8e4f-4328eeaaeff7",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "28625484-58ca-4057-88bb-e091b6053bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24ff606-3a09-4b8e-9210-ac76acbc6afb",
        "cursor": {
          "ref": "0f32aa71-9527-4a9e-856b-bc5e292ab5ed",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "55400aa7-93f2-4bfc-a312-0001b5592c92"
        },
        "item": {
          "id": "b24ff606-3a09-4b8e-9210-ac76acbc6afb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9e062a64-5eb7-429a-9eaf-6122169495b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24ff606-3a09-4b8e-9210-ac76acbc6afb",
        "cursor": {
          "ref": "0f32aa71-9527-4a9e-856b-bc5e292ab5ed",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "55400aa7-93f2-4bfc-a312-0001b5592c92"
        },
        "item": {
          "id": "b24ff606-3a09-4b8e-9210-ac76acbc6afb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9e062a64-5eb7-429a-9eaf-6122169495b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c381b32-d3dc-4433-b0d8-0e14399cbb01",
        "cursor": {
          "ref": "a999ec69-5844-49ae-887d-4ebc72a62878",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bec9bbea-9de6-4d51-86a5-403b1a1db437"
        },
        "item": {
          "id": "3c381b32-d3dc-4433-b0d8-0e14399cbb01",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "5cc05458-7015-412e-baa0-050d330412dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c381b32-d3dc-4433-b0d8-0e14399cbb01",
        "cursor": {
          "ref": "a999ec69-5844-49ae-887d-4ebc72a62878",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bec9bbea-9de6-4d51-86a5-403b1a1db437"
        },
        "item": {
          "id": "3c381b32-d3dc-4433-b0d8-0e14399cbb01",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "5cc05458-7015-412e-baa0-050d330412dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510a4f40-8dbf-4ea6-8468-0e2d278941f4",
        "cursor": {
          "ref": "d598054c-0e02-4556-a6c1-d2449eca5cdb",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6199f15d-c9f4-4bc7-ad34-7ea0e12f8851"
        },
        "item": {
          "id": "510a4f40-8dbf-4ea6-8468-0e2d278941f4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0b87a1a0-7064-4868-8af2-31257404a188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510a4f40-8dbf-4ea6-8468-0e2d278941f4",
        "cursor": {
          "ref": "d598054c-0e02-4556-a6c1-d2449eca5cdb",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6199f15d-c9f4-4bc7-ad34-7ea0e12f8851"
        },
        "item": {
          "id": "510a4f40-8dbf-4ea6-8468-0e2d278941f4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0b87a1a0-7064-4868-8af2-31257404a188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780b3ec1-311f-4589-a124-635d0d4311d5",
        "cursor": {
          "ref": "672fa231-71aa-4842-8787-2d44488c4d80",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "852543c4-404c-4655-a0b8-e40b48b3bb38"
        },
        "item": {
          "id": "780b3ec1-311f-4589-a124-635d0d4311d5",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "e4313ded-c2b3-44f6-a677-33ec15f9c8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780b3ec1-311f-4589-a124-635d0d4311d5",
        "cursor": {
          "ref": "672fa231-71aa-4842-8787-2d44488c4d80",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "852543c4-404c-4655-a0b8-e40b48b3bb38"
        },
        "item": {
          "id": "780b3ec1-311f-4589-a124-635d0d4311d5",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "e4313ded-c2b3-44f6-a677-33ec15f9c8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00740d84-f23d-4f7b-970b-108fa7c69c7f",
        "cursor": {
          "ref": "267e406f-7e03-4af3-9de5-4c442e885ad1",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "026b78ad-549f-434e-87ac-350e87cc4586"
        },
        "item": {
          "id": "00740d84-f23d-4f7b-970b-108fa7c69c7f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7bc6d23e-e44e-4bf0-b9bf-92e8bd3a97b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1234,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00740d84-f23d-4f7b-970b-108fa7c69c7f",
        "cursor": {
          "ref": "267e406f-7e03-4af3-9de5-4c442e885ad1",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "026b78ad-549f-434e-87ac-350e87cc4586"
        },
        "item": {
          "id": "00740d84-f23d-4f7b-970b-108fa7c69c7f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7bc6d23e-e44e-4bf0-b9bf-92e8bd3a97b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1234,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087c4ad8-345f-4faf-bad9-d5c0bfb2610f",
        "cursor": {
          "ref": "de60d537-bf6a-4867-975a-050edf1ff6a8",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "57ac9605-ac94-49e3-9676-7129cc61cbf8"
        },
        "item": {
          "id": "087c4ad8-345f-4faf-bad9-d5c0bfb2610f",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "c2f52794-9b1c-4721-b158-d6c7fa947fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087c4ad8-345f-4faf-bad9-d5c0bfb2610f",
        "cursor": {
          "ref": "de60d537-bf6a-4867-975a-050edf1ff6a8",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "57ac9605-ac94-49e3-9676-7129cc61cbf8"
        },
        "item": {
          "id": "087c4ad8-345f-4faf-bad9-d5c0bfb2610f",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "c2f52794-9b1c-4721-b158-d6c7fa947fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d965bd0e-2f61-45ac-a1b8-606e012dce47",
        "cursor": {
          "ref": "56b36e6a-ef26-4fd2-93a5-79a88e2640f9",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "65293f5b-e21d-439a-becf-07be2005f06f"
        },
        "item": {
          "id": "d965bd0e-2f61-45ac-a1b8-606e012dce47",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "6f60069d-90fb-4c44-b784-e33a3232caa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d965bd0e-2f61-45ac-a1b8-606e012dce47",
        "cursor": {
          "ref": "56b36e6a-ef26-4fd2-93a5-79a88e2640f9",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "65293f5b-e21d-439a-becf-07be2005f06f"
        },
        "item": {
          "id": "d965bd0e-2f61-45ac-a1b8-606e012dce47",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "6f60069d-90fb-4c44-b784-e33a3232caa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6bc4d4-a3cc-4361-91be-3089e52dd913",
        "cursor": {
          "ref": "e98874fe-289c-413c-bfb4-3418d90242f5",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e9674025-b88e-4380-8bd7-4890e42e60f8"
        },
        "item": {
          "id": "6f6bc4d4-a3cc-4361-91be-3089e52dd913",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "363f6d6b-9443-4386-8e44-679c3dba861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6bc4d4-a3cc-4361-91be-3089e52dd913",
        "cursor": {
          "ref": "e98874fe-289c-413c-bfb4-3418d90242f5",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e9674025-b88e-4380-8bd7-4890e42e60f8"
        },
        "item": {
          "id": "6f6bc4d4-a3cc-4361-91be-3089e52dd913",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "363f6d6b-9443-4386-8e44-679c3dba861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73787b62-ebbd-417e-b8dd-227439f38078",
        "cursor": {
          "ref": "9cb18db1-a4ae-4dba-a8c2-4c9ceeeda958",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "98b44c4c-26e8-4c77-a15d-73684d4a37b9"
        },
        "item": {
          "id": "73787b62-ebbd-417e-b8dd-227439f38078",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "cc9bf2c0-5e1d-4944-9899-b1f9ba06a03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73787b62-ebbd-417e-b8dd-227439f38078",
        "cursor": {
          "ref": "9cb18db1-a4ae-4dba-a8c2-4c9ceeeda958",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "98b44c4c-26e8-4c77-a15d-73684d4a37b9"
        },
        "item": {
          "id": "73787b62-ebbd-417e-b8dd-227439f38078",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "cc9bf2c0-5e1d-4944-9899-b1f9ba06a03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8d37bf-496c-4d83-a135-18ac04db01f4",
        "cursor": {
          "ref": "6d328b45-1306-4410-8155-87820e062e9c",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "161741a8-3a09-406f-ab83-9d71c7425127"
        },
        "item": {
          "id": "ba8d37bf-496c-4d83-a135-18ac04db01f4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f394cdcd-50e8-430f-9b82-e837705bb119",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8d37bf-496c-4d83-a135-18ac04db01f4",
        "cursor": {
          "ref": "6d328b45-1306-4410-8155-87820e062e9c",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "161741a8-3a09-406f-ab83-9d71c7425127"
        },
        "item": {
          "id": "ba8d37bf-496c-4d83-a135-18ac04db01f4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f394cdcd-50e8-430f-9b82-e837705bb119",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d064a4-07fb-4278-be1c-7bfcbd340da0",
        "cursor": {
          "ref": "2707dcef-be7f-4bde-b84a-b876cf6bb4c6",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "143d89f6-bffb-48f4-887b-ca9f5004c068"
        },
        "item": {
          "id": "45d064a4-07fb-4278-be1c-7bfcbd340da0",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4179aa7f-b3df-4b3e-83e2-69fcb5a2f67c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 43,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d064a4-07fb-4278-be1c-7bfcbd340da0",
        "cursor": {
          "ref": "2707dcef-be7f-4bde-b84a-b876cf6bb4c6",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "143d89f6-bffb-48f4-887b-ca9f5004c068"
        },
        "item": {
          "id": "45d064a4-07fb-4278-be1c-7bfcbd340da0",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4179aa7f-b3df-4b3e-83e2-69fcb5a2f67c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 43,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbfc3e7-9402-482a-8779-0917ffa1d2b3",
        "cursor": {
          "ref": "29fbcf0f-3acc-4119-9669-0cec55df8851",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a8db846a-8e83-46ff-8af8-8b844b3c86fd"
        },
        "item": {
          "id": "0dbfc3e7-9402-482a-8779-0917ffa1d2b3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ad168cc6-5c7e-4f3d-8330-e22bbc463dda",
          "status": "Created",
          "code": 201,
          "responseTime": 1330,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbfc3e7-9402-482a-8779-0917ffa1d2b3",
        "cursor": {
          "ref": "29fbcf0f-3acc-4119-9669-0cec55df8851",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a8db846a-8e83-46ff-8af8-8b844b3c86fd"
        },
        "item": {
          "id": "0dbfc3e7-9402-482a-8779-0917ffa1d2b3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ad168cc6-5c7e-4f3d-8330-e22bbc463dda",
          "status": "Created",
          "code": 201,
          "responseTime": 1330,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14f0417-9a3a-4f66-95b3-a2de6a8978fb",
        "cursor": {
          "ref": "eefa9b15-23ee-4d94-a488-92927a63a936",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "741a98f0-cf94-4cfc-bf23-dbb0ff91d4d5"
        },
        "item": {
          "id": "b14f0417-9a3a-4f66-95b3-a2de6a8978fb",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b72973e8-b423-4a12-b8fc-b58d28f4ee7c",
          "status": "Created",
          "code": 201,
          "responseTime": 577,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14f0417-9a3a-4f66-95b3-a2de6a8978fb",
        "cursor": {
          "ref": "eefa9b15-23ee-4d94-a488-92927a63a936",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "741a98f0-cf94-4cfc-bf23-dbb0ff91d4d5"
        },
        "item": {
          "id": "b14f0417-9a3a-4f66-95b3-a2de6a8978fb",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b72973e8-b423-4a12-b8fc-b58d28f4ee7c",
          "status": "Created",
          "code": 201,
          "responseTime": 577,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156d3b45-5d0d-4fb9-90ef-cd82d5c79a5d",
        "cursor": {
          "ref": "fb6fa607-3d1c-460c-bbd8-6d3f01e56d5f",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4704ddf6-6661-4991-8870-e5d373c89318"
        },
        "item": {
          "id": "156d3b45-5d0d-4fb9-90ef-cd82d5c79a5d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cd4371c3-cc9f-48e5-9913-9187c6e3cba3",
          "status": "Created",
          "code": 201,
          "responseTime": 381,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "156d3b45-5d0d-4fb9-90ef-cd82d5c79a5d",
        "cursor": {
          "ref": "fb6fa607-3d1c-460c-bbd8-6d3f01e56d5f",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4704ddf6-6661-4991-8870-e5d373c89318"
        },
        "item": {
          "id": "156d3b45-5d0d-4fb9-90ef-cd82d5c79a5d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cd4371c3-cc9f-48e5-9913-9187c6e3cba3",
          "status": "Created",
          "code": 201,
          "responseTime": 381,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc629b3-9f93-4531-8441-4e0b5297a7d5",
        "cursor": {
          "ref": "46b58194-07ea-438d-8d33-bd76b9179a0f",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "de2ac2f9-8c40-4a72-8d55-fcbf692b1a82"
        },
        "item": {
          "id": "5cc629b3-9f93-4531-8441-4e0b5297a7d5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "792192c5-63d0-42a1-8da3-b150b656e9cb",
          "status": "Created",
          "code": 201,
          "responseTime": 362,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc629b3-9f93-4531-8441-4e0b5297a7d5",
        "cursor": {
          "ref": "46b58194-07ea-438d-8d33-bd76b9179a0f",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "de2ac2f9-8c40-4a72-8d55-fcbf692b1a82"
        },
        "item": {
          "id": "5cc629b3-9f93-4531-8441-4e0b5297a7d5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "792192c5-63d0-42a1-8da3-b150b656e9cb",
          "status": "Created",
          "code": 201,
          "responseTime": 362,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53b0ff8-cdfb-432a-8e82-dbf0ee023efa",
        "cursor": {
          "ref": "de86185b-ac00-466c-9594-4755c75328d8",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e6e0d7dc-cd3f-49ff-a6f0-9fcfdac1a8d7"
        },
        "item": {
          "id": "e53b0ff8-cdfb-432a-8e82-dbf0ee023efa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cce09b71-a175-40f4-a854-f7a57d50fd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "e53b0ff8-cdfb-432a-8e82-dbf0ee023efa",
        "cursor": {
          "ref": "de86185b-ac00-466c-9594-4755c75328d8",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e6e0d7dc-cd3f-49ff-a6f0-9fcfdac1a8d7"
        },
        "item": {
          "id": "e53b0ff8-cdfb-432a-8e82-dbf0ee023efa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cce09b71-a175-40f4-a854-f7a57d50fd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "69e57ee9-7f30-49dd-961c-c4979e8e100f",
        "cursor": {
          "ref": "f688e4b9-d6e1-4d36-858e-1125437c5003",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2396da50-9f3b-437d-81ee-63df8b5eea31"
        },
        "item": {
          "id": "69e57ee9-7f30-49dd-961c-c4979e8e100f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3157e682-6123-4613-b75b-1bb089b17b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "69e57ee9-7f30-49dd-961c-c4979e8e100f",
        "cursor": {
          "ref": "f688e4b9-d6e1-4d36-858e-1125437c5003",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2396da50-9f3b-437d-81ee-63df8b5eea31"
        },
        "item": {
          "id": "69e57ee9-7f30-49dd-961c-c4979e8e100f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3157e682-6123-4613-b75b-1bb089b17b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "7b97d8f1-e1b1-417d-840a-1302607dc817",
        "cursor": {
          "ref": "e3a7010e-b58d-4b75-8171-80d50dc746b9",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "65606271-a333-4bbe-b4c0-009d635ed3a9"
        },
        "item": {
          "id": "7b97d8f1-e1b1-417d-840a-1302607dc817",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "b25f1154-3a2e-4eb7-8fd1-cc1042e10bae",
          "status": "Created",
          "code": 201,
          "responseTime": 359,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b97d8f1-e1b1-417d-840a-1302607dc817",
        "cursor": {
          "ref": "e3a7010e-b58d-4b75-8171-80d50dc746b9",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "65606271-a333-4bbe-b4c0-009d635ed3a9"
        },
        "item": {
          "id": "7b97d8f1-e1b1-417d-840a-1302607dc817",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "b25f1154-3a2e-4eb7-8fd1-cc1042e10bae",
          "status": "Created",
          "code": 201,
          "responseTime": 359,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9200bb10-8e21-48f9-9cb2-32c7e2afab60",
        "cursor": {
          "ref": "091ce259-c523-49bf-8790-c5a9960b4129",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a65e9dc1-0fc2-4126-83b4-e0bec0156290"
        },
        "item": {
          "id": "9200bb10-8e21-48f9-9cb2-32c7e2afab60",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4743f1ba-6b6d-49ac-89d9-8b8be68691dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9200bb10-8e21-48f9-9cb2-32c7e2afab60",
        "cursor": {
          "ref": "091ce259-c523-49bf-8790-c5a9960b4129",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a65e9dc1-0fc2-4126-83b4-e0bec0156290"
        },
        "item": {
          "id": "9200bb10-8e21-48f9-9cb2-32c7e2afab60",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4743f1ba-6b6d-49ac-89d9-8b8be68691dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adb43e0-e181-45e2-b8da-054d6d103734",
        "cursor": {
          "ref": "4156c615-9be7-4a68-b4ec-4a965577cc71",
          "length": 155,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "de9289f4-bf14-477b-ae61-99d37a3e37a5"
        },
        "item": {
          "id": "7adb43e0-e181-45e2-b8da-054d6d103734",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "242e54fc-058e-4d37-965c-cc476c25c90c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab7feb4-b220-49bf-9f47-3080d770ecea",
        "cursor": {
          "ref": "fd80dbb0-8e23-420e-8c97-e0a0e9578b12",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "afd5f400-bff1-4290-b03e-deaad063295a"
        },
        "item": {
          "id": "eab7feb4-b220-49bf-9f47-3080d770ecea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "505c1e3e-761b-4f9f-b83b-13ecc3661e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab7feb4-b220-49bf-9f47-3080d770ecea",
        "cursor": {
          "ref": "fd80dbb0-8e23-420e-8c97-e0a0e9578b12",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "afd5f400-bff1-4290-b03e-deaad063295a"
        },
        "item": {
          "id": "eab7feb4-b220-49bf-9f47-3080d770ecea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "505c1e3e-761b-4f9f-b83b-13ecc3661e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fe8a10-ddf3-4129-9b40-ec0e9f6e133f",
        "cursor": {
          "ref": "f10c911b-faef-4fab-8345-97f6febe535d",
          "length": 155,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fd524f10-4ddd-4cf6-a93a-1e93d77d20b5"
        },
        "item": {
          "id": "24fe8a10-ddf3-4129-9b40-ec0e9f6e133f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b7fb5cc6-deb3-46d6-9d35-686715eb11aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2a08f3-deac-43f1-ba65-a0a60f261d06",
        "cursor": {
          "ref": "55bba6fc-540b-4f28-8dd4-32051a0f3d2e",
          "length": 155,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "50bbefbe-db2f-43c0-a474-abebfda12403"
        },
        "item": {
          "id": "8b2a08f3-deac-43f1-ba65-a0a60f261d06",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0e293651-371c-4eb7-b4e6-c347a7bf06a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110eca83-fcc5-40fe-9c91-8840d368e8f3",
        "cursor": {
          "ref": "5321470f-2605-4ddd-bccb-bc0d935efb56",
          "length": 155,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "64361a47-a5c0-4e62-92ea-2bd8851aaffe"
        },
        "item": {
          "id": "110eca83-fcc5-40fe-9c91-8840d368e8f3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c077ff21-1ffb-4f0d-95af-28e1ad714e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1007dfe1-695d-4369-8d71-34dcfb0140ec",
        "cursor": {
          "ref": "d4cd17bf-b4f8-45db-9928-9bb010acdba9",
          "length": 155,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bbbd18f0-8bbc-4fce-96e1-f215fcc5750d"
        },
        "item": {
          "id": "1007dfe1-695d-4369-8d71-34dcfb0140ec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "32c069d3-b415-4769-9dd0-aa4f8bb48d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f620d43e-a904-4612-9545-dd94954b7ec7",
        "cursor": {
          "ref": "a70a3425-0ef9-4fdb-834c-7fa70ae19853",
          "length": 155,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "08bb9fbf-a10b-4f96-8654-4a7a4f2214b7"
        },
        "item": {
          "id": "f620d43e-a904-4612-9545-dd94954b7ec7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3afec527-4bbd-4783-afef-254f189eee9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3c79a1-f986-4491-b545-e7f254152b45",
        "cursor": {
          "ref": "6fe1a391-55ed-4844-b852-6b409cfc2f68",
          "length": 155,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5edac7ec-b4e2-40e3-b381-f35938d36b0b"
        },
        "item": {
          "id": "9a3c79a1-f986-4491-b545-e7f254152b45",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2f2bf594-1d5b-45ad-bb9e-71f64761562c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1754,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619830f0-3c50-42e7-9c6e-f14b8a7dfd98",
        "cursor": {
          "ref": "13d588cf-fadf-4c9b-ac3a-4914e0621627",
          "length": 155,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ee18de02-a380-4e04-852a-dc49ea3a99d7"
        },
        "item": {
          "id": "619830f0-3c50-42e7-9c6e-f14b8a7dfd98",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c56efe3b-8521-4056-a5dc-f7ad77612c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8cae4d-9a2f-43e9-99e0-bbc4cddd6e13",
        "cursor": {
          "ref": "2badc29c-7367-46b8-ac1e-baeed461e183",
          "length": 155,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d1c74f34-9012-436b-9b86-e90f7dfadd9b"
        },
        "item": {
          "id": "2c8cae4d-9a2f-43e9-99e0-bbc4cddd6e13",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a03bd605-2366-4711-8339-b61eceaf8d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cbf846-f37e-42e4-834e-b80933dca73c",
        "cursor": {
          "ref": "580ec466-dc08-4402-81d3-b998b01113bf",
          "length": 155,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2e62f257-99b3-4bbf-8813-fc8576009950"
        },
        "item": {
          "id": "25cbf846-f37e-42e4-834e-b80933dca73c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "06968002-ba67-420e-8f52-238e9c47913c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a31bbd-0ca5-48dd-a695-3b6a938b6c2c",
        "cursor": {
          "ref": "55c2d047-84ed-4bc9-9b1e-f32b2e1d1c07",
          "length": 155,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "47354566-008d-467b-b997-a45711153dce"
        },
        "item": {
          "id": "b5a31bbd-0ca5-48dd-a695-3b6a938b6c2c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "db536b78-cfb3-451a-b1c4-c55ef4d1c7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf2721e-8011-4a20-ac9c-9a5abe482010",
        "cursor": {
          "ref": "77eb33f1-f7f3-4e99-ae0b-fc03132fbae8",
          "length": 155,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cf3a173d-3df4-4abf-aad3-c66907edccfe"
        },
        "item": {
          "id": "9cf2721e-8011-4a20-ac9c-9a5abe482010",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7b19b10d-e2a3-4a7a-b937-6eb6ea19f38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e46cf8-c86b-4a3d-b1fd-208b6558780b",
        "cursor": {
          "ref": "94ab89b5-b62f-43a0-bf39-1d4548043ce6",
          "length": 155,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b9bd904b-223f-4cdc-893d-49057bb78556"
        },
        "item": {
          "id": "53e46cf8-c86b-4a3d-b1fd-208b6558780b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "25190e8f-08f2-485a-9e69-905258a63a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5a6154-7396-4b18-b033-0d219871e86d",
        "cursor": {
          "ref": "f93d7b9c-a8a9-4cae-8338-6dfbe4173d42",
          "length": 155,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "361d85d8-7a74-4ade-a5a6-ee0c9e7d19b8"
        },
        "item": {
          "id": "ce5a6154-7396-4b18-b033-0d219871e86d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9d7a03e0-413f-4367-90a4-e73fe059eeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a24c90-cdb3-4584-8200-425a9f3840ca",
        "cursor": {
          "ref": "9684def2-1abf-4826-b94d-1d9ad6c9e8e6",
          "length": 155,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "84160dcf-823b-4cd1-bf6e-d6e3e0ce88d2"
        },
        "item": {
          "id": "e8a24c90-cdb3-4584-8200-425a9f3840ca",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b876aef2-161b-4567-9a16-561efe428dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dbdcd1-befe-46ac-ab5c-4935cbd62808",
        "cursor": {
          "ref": "2c54fed6-d1d7-4409-b16c-cf3633bee3e1",
          "length": 155,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "faab2ea9-25a6-4626-a421-f7945e8f70ce"
        },
        "item": {
          "id": "71dbdcd1-befe-46ac-ab5c-4935cbd62808",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6ea0501b-f6fa-4898-9b06-7337451abd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd75cc0-2efc-4724-b12a-d1d46506e67f",
        "cursor": {
          "ref": "815c9c05-f823-4eda-8afd-f89dc9194acc",
          "length": 155,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "93e9bdae-2881-4cbb-a9cc-d96531d96ff8"
        },
        "item": {
          "id": "8cd75cc0-2efc-4724-b12a-d1d46506e67f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a232fe61-a690-482d-bf89-0c70cfd74aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aa6226-37d3-464e-a6c6-4dc4b6ac82fc",
        "cursor": {
          "ref": "b9a4f4df-d3e1-430e-9d2a-c219839056d8",
          "length": 155,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "da30bd82-1f6e-480a-9e33-b46698640915"
        },
        "item": {
          "id": "f4aa6226-37d3-464e-a6c6-4dc4b6ac82fc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "137e8ae9-4e00-4d69-996a-49f0490f068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2063,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b337c75-fa2a-4f99-b44e-11ebf496798f",
        "cursor": {
          "ref": "d885236b-516c-49ab-8d7c-c091eaabaab6",
          "length": 155,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d1c0fce0-c6fd-4038-8ec1-c90eeac17381"
        },
        "item": {
          "id": "9b337c75-fa2a-4f99-b44e-11ebf496798f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c1028f13-9cdf-4680-9bb8-8e30519c1b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70933c6-bf17-4847-8b0f-5077bb3ca5e9",
        "cursor": {
          "ref": "c761b142-4a3e-4e00-8d3a-547df57c4d46",
          "length": 155,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bf47fab4-5675-4e51-a814-468a73ced111"
        },
        "item": {
          "id": "e70933c6-bf17-4847-8b0f-5077bb3ca5e9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ce6a38dd-5b89-4268-9c57-a5bfa20d632b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfac813-05f1-4e81-a7ac-1150b61e7f28",
        "cursor": {
          "ref": "20e178e8-a373-48c6-bbee-b7acbdc536d9",
          "length": 155,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "49095868-e88b-45c6-9345-1e6c0b8aa34e"
        },
        "item": {
          "id": "1cfac813-05f1-4e81-a7ac-1150b61e7f28",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d76fbed6-abd9-4c4a-8f1f-57409be4ad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ec992b-42ea-43de-8a42-9a9fcb105a7e",
        "cursor": {
          "ref": "6ded8189-1ed3-4ebd-a998-0bb476cc7c81",
          "length": 155,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f14e798c-aa6c-4189-b99b-7f9c19f87568"
        },
        "item": {
          "id": "f1ec992b-42ea-43de-8a42-9a9fcb105a7e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8fd3ab58-9ba1-48ac-8016-d2e72936891d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c426c07-8dad-4e67-a700-99fbad0485f5",
        "cursor": {
          "ref": "64dc1c69-5525-4438-a46a-0d95ca48093c",
          "length": 155,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "40e97a73-53ec-4a5a-918a-124be4d8c4fd"
        },
        "item": {
          "id": "5c426c07-8dad-4e67-a700-99fbad0485f5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cca15bd8-9ff9-4f23-a60f-4d60e27631ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e5b0e5-68a6-4863-b111-6c06ccd5013b",
        "cursor": {
          "ref": "fd61ee2d-716e-42e8-8564-f8bf5b0d35c7",
          "length": 155,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "230fe092-5933-4a34-a323-5ccf03e1b5ff"
        },
        "item": {
          "id": "46e5b0e5-68a6-4863-b111-6c06ccd5013b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b14dad43-5712-4fab-8b2a-507a772b5c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80cc8e1-8cad-484b-b152-2d37a3a43512",
        "cursor": {
          "ref": "dc37459d-cabd-4cc6-a042-c58c20f47888",
          "length": 155,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cee59a00-c062-4225-8883-3efee40f11d2"
        },
        "item": {
          "id": "e80cc8e1-8cad-484b-b152-2d37a3a43512",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e5bf8c39-decf-4481-80a2-0d1dad960079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db9aed0-c115-4394-92a7-d94f82d13c4b",
        "cursor": {
          "ref": "f820b5da-6161-4425-be7f-801d879ffb42",
          "length": 155,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a93beb3f-eabf-4ef6-a2d3-fa7e217ff95a"
        },
        "item": {
          "id": "4db9aed0-c115-4394-92a7-d94f82d13c4b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0f2c6404-35cc-42a4-bc7a-0488b6de0a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df06677b-e856-4122-9cb5-bb13d1fe19f5",
        "cursor": {
          "ref": "fe906978-d5cd-4491-9259-ab97506306fd",
          "length": 155,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c348ea9-9019-43b7-b77c-3f1575288b4d"
        },
        "item": {
          "id": "df06677b-e856-4122-9cb5-bb13d1fe19f5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c1038fe8-1338-4029-a9af-98d62119d591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d23bc5-7e74-4b17-8d76-baf5ea22fdf6",
        "cursor": {
          "ref": "e04118ca-f0d0-43e0-8755-e5d5aacb6522",
          "length": 155,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cc84c6ec-b42b-4077-a6f0-8363b5a0d14e"
        },
        "item": {
          "id": "a4d23bc5-7e74-4b17-8d76-baf5ea22fdf6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b94a2da2-f848-4d47-ab72-aeb80b45dea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f205a26-bd8a-4498-9267-4b62ccc0ed7e",
        "cursor": {
          "ref": "b7681865-b141-4801-bc8d-70f7fd130305",
          "length": 155,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "32123693-9bfa-4122-8dae-aae1aa690456"
        },
        "item": {
          "id": "9f205a26-bd8a-4498-9267-4b62ccc0ed7e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d846dd2b-fab2-40d7-98dd-53f30a152409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629d15f0-7e2a-4601-9eb2-48e8e61cd1b7",
        "cursor": {
          "ref": "d8c6380f-e1b0-4f78-b5f2-30dd687ecc9f",
          "length": 155,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d73a9ca8-eb30-4cd3-a6c3-22fc655e4787"
        },
        "item": {
          "id": "629d15f0-7e2a-4601-9eb2-48e8e61cd1b7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "53c26c75-a56f-4e76-9ca6-9d7bae23b91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2f1a92-2615-47a3-9b78-58263afcd5ff",
        "cursor": {
          "ref": "d2f61781-625a-40a6-a5f7-868c13ffce0f",
          "length": 155,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f96f3290-7929-4817-a8a5-8f97aca86198"
        },
        "item": {
          "id": "df2f1a92-2615-47a3-9b78-58263afcd5ff",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8396f1fb-8067-4fba-99f7-7651af705569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b679db7-347e-4fc0-b6de-37226d4b16a5",
        "cursor": {
          "ref": "e7e204de-cb52-4fea-91d3-1f2cf29f7061",
          "length": 155,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "92f83474-96a7-4910-9490-3c416275f1c3"
        },
        "item": {
          "id": "1b679db7-347e-4fc0-b6de-37226d4b16a5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7e46da3f-4c8a-4fa5-be8e-4f80ef8f5ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346e7dea-7226-4e73-a684-08dce6e386ce",
        "cursor": {
          "ref": "5311fa4e-6e3a-485b-88d3-96ec63de1178",
          "length": 155,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "30d6c2f5-2e33-491b-9a90-3ed50e6ea020"
        },
        "item": {
          "id": "346e7dea-7226-4e73-a684-08dce6e386ce",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cc569bbc-1e97-44b6-af79-7c401568fc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76db870-7ba0-4bf2-806f-d95e6baf528e",
        "cursor": {
          "ref": "e2fbd75a-61a8-4b0b-8a5e-e6aa116d64e2",
          "length": 155,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "df92ce80-5515-43f0-aee7-7d6447dea763"
        },
        "item": {
          "id": "f76db870-7ba0-4bf2-806f-d95e6baf528e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aab66270-9665-47f0-98e0-2471172f811d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a79c6c6-a464-49b7-85b8-7689e5ffb221",
        "cursor": {
          "ref": "5f0b6f99-616e-46bb-bb3b-e6be4c2d20f2",
          "length": 155,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "54dcf630-2c35-4377-b2a8-67cb5a1531c6"
        },
        "item": {
          "id": "7a79c6c6-a464-49b7-85b8-7689e5ffb221",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a214099a-58ca-42e0-be1d-7a244db965e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50caef4-c2e6-4d61-a48c-ae8224fcb1ac",
        "cursor": {
          "ref": "932809f2-ce5d-4a9f-b9de-2463d4e26524",
          "length": 155,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "39b134de-3264-4c22-8e10-692e688b1538"
        },
        "item": {
          "id": "c50caef4-c2e6-4d61-a48c-ae8224fcb1ac",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6fb4528e-6c61-47af-a47c-35e679868f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a84cd8-9b59-459e-ae98-871d1b076085",
        "cursor": {
          "ref": "7bc064bd-9a61-4f15-b4e9-bcc83469e76a",
          "length": 155,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fa4b42d9-a8bf-4b33-9e8d-32dc15d5888a"
        },
        "item": {
          "id": "33a84cd8-9b59-459e-ae98-871d1b076085",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "72835a23-5753-4273-b5bd-94838ad4115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81744ae1-defc-422e-b2ce-d28a5ad83bd3",
        "cursor": {
          "ref": "08b3ec41-820c-4819-9d9f-3a4bc6d74ae1",
          "length": 155,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7c6b2db7-78c5-4b9f-98b2-0fe010ff71c9"
        },
        "item": {
          "id": "81744ae1-defc-422e-b2ce-d28a5ad83bd3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bb25f467-bbed-41ab-9faf-44631ca549fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c2a7d4-5595-4063-9dda-50b649c35ddf",
        "cursor": {
          "ref": "db893134-1e4f-4d90-b5ed-43a2324917f9",
          "length": 155,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bcfdd79a-1145-4c47-9674-b9c1603fa5ac"
        },
        "item": {
          "id": "c5c2a7d4-5595-4063-9dda-50b649c35ddf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c9658aaf-5ba7-4792-8766-9465354dbce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74404c7e-72d0-4135-9b18-3ed6531415ca",
        "cursor": {
          "ref": "791783ae-d22b-47e5-b665-4068e39f7dbb",
          "length": 155,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b1504a4e-d996-4dd6-9f6f-b9e31dc64170"
        },
        "item": {
          "id": "74404c7e-72d0-4135-9b18-3ed6531415ca",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3fcf392d-96da-4acf-be81-32322a8550fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f612bc2-7e31-4c05-8cfc-da2eed444f2d",
        "cursor": {
          "ref": "5c746092-7d78-42cd-bea1-2eec1037329e",
          "length": 155,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "32a64c34-8927-45d7-a47a-0a48a92938ed"
        },
        "item": {
          "id": "1f612bc2-7e31-4c05-8cfc-da2eed444f2d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a80e1489-76df-4088-8038-a508e2c2565a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f097f70-436e-44ca-95b4-75de0137bbd2",
        "cursor": {
          "ref": "75d54ecf-05fe-4d11-94c4-97ab8e618335",
          "length": 155,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "55dd70fa-f855-477c-a025-328451739e55"
        },
        "item": {
          "id": "5f097f70-436e-44ca-95b4-75de0137bbd2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "55b3c75a-725f-46cb-8006-03334e323a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aa9e88-dceb-456d-a6b0-4ade1f098642",
        "cursor": {
          "ref": "295d53aa-64a2-4fb8-9d0d-c0beeb651977",
          "length": 155,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8362e5c2-7a98-40a4-8eb6-00ed98fbccb5"
        },
        "item": {
          "id": "76aa9e88-dceb-456d-a6b0-4ade1f098642",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1564dee3-294f-4697-a1c9-8d909828b151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1508,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be861fa9-c913-4133-ad9f-aaebaf222a17",
        "cursor": {
          "ref": "62c94232-6f85-4838-a057-083b0d1e595c",
          "length": 155,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "36b7755e-09ca-4891-92c5-d7d82d2bd61a"
        },
        "item": {
          "id": "be861fa9-c913-4133-ad9f-aaebaf222a17",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b09d2632-918e-4e99-9c12-6a450bf74d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f732e6-5f9b-4930-86ad-19e1e3c9a92a",
        "cursor": {
          "ref": "3406c12c-7186-4269-adeb-aff0230a342f",
          "length": 155,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6d086bb4-a2a7-47b9-b271-6e0d7945ba70"
        },
        "item": {
          "id": "e7f732e6-5f9b-4930-86ad-19e1e3c9a92a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "28fc60d6-b23d-4557-9e0b-816133cf8b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0b1892-604f-4efc-ba25-2c6b8a16e9df",
        "cursor": {
          "ref": "c24e5836-6f94-4b1e-8847-ef57324bdc8d",
          "length": 155,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "51bcfe7a-0ede-4188-9f37-52a2afe363a5"
        },
        "item": {
          "id": "1e0b1892-604f-4efc-ba25-2c6b8a16e9df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "59b22915-4d3d-45c2-bbb7-7dc3910c862e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26908d8-ede6-4c4d-ba83-2872db0c981d",
        "cursor": {
          "ref": "c4a233c7-bf1c-4245-a7ef-6dfdcae21673",
          "length": 155,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cdbb5fe3-6123-4a6b-8ad2-73d231418955"
        },
        "item": {
          "id": "b26908d8-ede6-4c4d-ba83-2872db0c981d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3e0ada41-e924-4c95-82c9-1d763ea5788a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d9e0f8-d51d-4bff-8966-0250866d4f6f",
        "cursor": {
          "ref": "b4938007-06ac-41cb-8e3a-ddb4f2636625",
          "length": 155,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "97cab511-d46a-421f-9d00-279e2e35ce53"
        },
        "item": {
          "id": "07d9e0f8-d51d-4bff-8966-0250866d4f6f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "489564e1-4837-4af1-b9c0-fef96481176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b208b0f-2bdf-47bb-b6fd-97495f41b5ab",
        "cursor": {
          "ref": "cc7f6f33-c289-4d5d-a164-08fdf6c6f426",
          "length": 155,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b3ad6169-5b16-4608-8840-3a7b7ffdac0c"
        },
        "item": {
          "id": "6b208b0f-2bdf-47bb-b6fd-97495f41b5ab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "adfb7976-13f3-4b67-9e83-3b577aa76f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146e0dc0-ffb5-4359-9367-a6bfce2799d7",
        "cursor": {
          "ref": "9e998419-a148-4bad-908e-e4b87205c13b",
          "length": 155,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "32bf04c1-70db-4674-9898-7e89cd12b259"
        },
        "item": {
          "id": "146e0dc0-ffb5-4359-9367-a6bfce2799d7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4a0363b0-e33a-4421-bc16-86e31d127cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9764c062-0103-45ad-82b8-35a8ca10d9df",
        "cursor": {
          "ref": "f9f63aa6-981e-4c9a-9742-12371cad92b2",
          "length": 155,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a5571fda-f8cd-487c-b66c-95407d856fcc"
        },
        "item": {
          "id": "9764c062-0103-45ad-82b8-35a8ca10d9df",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5c6ebfc4-a99b-4df3-a1d2-c8a6d5424d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e432b6-2d30-4fad-9716-504bc3a55842",
        "cursor": {
          "ref": "61325858-416a-4649-ac9a-62323c0534c0",
          "length": 155,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6080638f-6f6d-4bb6-be03-9f9b118c46fa"
        },
        "item": {
          "id": "74e432b6-2d30-4fad-9716-504bc3a55842",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fb8ac208-be3a-4a1f-96fc-35ba3ed74244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff78ff03-1362-43a3-b80e-2bf5f3a424df",
        "cursor": {
          "ref": "051adf15-3eef-4dbd-8c49-26e5620bb579",
          "length": 155,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3fd66502-e7c7-420a-9798-bcfedf42d6c9"
        },
        "item": {
          "id": "ff78ff03-1362-43a3-b80e-2bf5f3a424df",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4ece8dc2-b208-4536-adf0-9281d2fa6052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc68c589-bb5c-40ed-8d58-0f04ad689753",
        "cursor": {
          "ref": "31514ba4-82a2-46c1-b722-701f93726c9d",
          "length": 155,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d04d3af4-98c2-4bed-acff-185da3b3f5a5"
        },
        "item": {
          "id": "fc68c589-bb5c-40ed-8d58-0f04ad689753",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f19b024c-6ab8-4e3e-8dc6-b66e97710178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e397eb-a339-414a-a4b8-c5ecbbfb3fdd",
        "cursor": {
          "ref": "8d31a2fb-595e-4588-927c-f00dc4bc382a",
          "length": 155,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "214ed6f3-0822-4603-bfd2-2a437cab850e"
        },
        "item": {
          "id": "e7e397eb-a339-414a-a4b8-c5ecbbfb3fdd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "652e27f5-c9c5-42c8-a93e-ec07ae2831f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34ec632-9925-4e20-ac53-76a52f430d20",
        "cursor": {
          "ref": "4ccf95e5-ea15-4824-9189-633fae4b4410",
          "length": 155,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b708a740-030a-4285-b052-0d3ec3a83d6a"
        },
        "item": {
          "id": "f34ec632-9925-4e20-ac53-76a52f430d20",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "52a7c3a6-3e72-4f60-b1d2-bd2ad175f922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4442652-632b-447b-a24d-427a502231e0",
        "cursor": {
          "ref": "fa88ec37-1013-4909-9453-60ce0b1b3c30",
          "length": 155,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c91da40b-c3ad-4c1f-89ed-e70d77aa557c"
        },
        "item": {
          "id": "d4442652-632b-447b-a24d-427a502231e0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b7d688a5-e8e0-4f6d-b8d1-65dd72c9ba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09bc9eb-6b85-4d82-a1b3-bc6bc6aecce5",
        "cursor": {
          "ref": "1835294d-fde4-4f6c-8dc8-3c8c87252f78",
          "length": 155,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "40a980f1-9508-40ec-a54e-ae9caecf1089"
        },
        "item": {
          "id": "f09bc9eb-6b85-4d82-a1b3-bc6bc6aecce5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f211a49d-dbac-4404-a485-d5d99d8d1156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c563853-cc9e-49e3-9029-9f81cfc63c34",
        "cursor": {
          "ref": "a997869c-8526-4789-bb25-b50174b57811",
          "length": 155,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "727e9d7d-69a3-45c9-9da4-a56351c0339a"
        },
        "item": {
          "id": "4c563853-cc9e-49e3-9029-9f81cfc63c34",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b23bb24c-ad6e-4897-ba3c-f8a0709e4bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3c8832-eaeb-4368-b656-93f8dc03d36a",
        "cursor": {
          "ref": "fa61103a-e796-4450-a41b-27b64535d227",
          "length": 155,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f79645ce-273f-43b4-beac-6cab08b14750"
        },
        "item": {
          "id": "da3c8832-eaeb-4368-b656-93f8dc03d36a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "841f88e2-6aa0-47e6-889d-79ab42d6522f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169560f0-2dbc-414d-8f3a-9a62905a9b62",
        "cursor": {
          "ref": "a5d946ea-4bc0-4ba8-b982-3fc8a2e94ff5",
          "length": 155,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0cfc07ea-a657-4e1d-9816-76f5f20b414e"
        },
        "item": {
          "id": "169560f0-2dbc-414d-8f3a-9a62905a9b62",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9f64462c-cc68-4c98-b0ee-9ba79dd5af11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e356f907-6b60-4de3-8358-1f84a11a47b5",
        "cursor": {
          "ref": "be127c6b-393c-4ede-ab87-ac4fade4390b",
          "length": 155,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a2836709-2208-47a6-b8e5-88fb85de200f"
        },
        "item": {
          "id": "e356f907-6b60-4de3-8358-1f84a11a47b5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0df5fb37-175a-45e5-92ba-cf1427464a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b60c9bb-0b0d-446b-8783-2a796600ad48",
        "cursor": {
          "ref": "6662a8cf-b8ac-463b-a1bf-e3c3b6b72ef5",
          "length": 155,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "14120620-b765-4762-8ba3-90def03133c6"
        },
        "item": {
          "id": "0b60c9bb-0b0d-446b-8783-2a796600ad48",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7d51141c-4854-45b7-95de-bc287d993784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f82c49-740f-457d-9445-5aa52562531d",
        "cursor": {
          "ref": "3f7d5d2e-84a4-4f42-9982-6d52355debaa",
          "length": 155,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8660da46-a9d7-4211-b120-5d8988bc3e9f"
        },
        "item": {
          "id": "95f82c49-740f-457d-9445-5aa52562531d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1f345dc4-591d-4de3-8d63-ab7ba2344711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f618b8d-2ce3-4d5c-bdde-13be09f1d03a",
        "cursor": {
          "ref": "fdbee1b9-089a-445a-87be-a9288d71b0d5",
          "length": 155,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fb02b0de-d42c-4276-b1fb-e98780d4f44e"
        },
        "item": {
          "id": "5f618b8d-2ce3-4d5c-bdde-13be09f1d03a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eeb63130-f1b3-4679-90e6-09b7dbe43cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d0a86d-ddf2-4ee8-b626-c3b9e10a5968",
        "cursor": {
          "ref": "e9715ab9-fc32-4ed2-86ec-8699653a1b80",
          "length": 155,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bf87c9e9-8c69-4426-95f2-69914db01066"
        },
        "item": {
          "id": "07d0a86d-ddf2-4ee8-b626-c3b9e10a5968",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b7bdea3f-d1a0-4b1b-b165-34786c39d35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8bd963-56e3-4f23-8a1c-aaa767c9027e",
        "cursor": {
          "ref": "cb0547cd-4719-41da-88ff-f8f626aeaa82",
          "length": 155,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "80bddcbf-ad41-4093-86c8-60c9ab2631b2"
        },
        "item": {
          "id": "5f8bd963-56e3-4f23-8a1c-aaa767c9027e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f1935ff7-d59e-444a-b518-fa28fd4d556e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9334f74-918f-4f62-9e0f-c6f07bdee57f",
        "cursor": {
          "ref": "730fcbc3-18af-4d0f-8b57-92224cdf0e38",
          "length": 155,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "715dfc84-aa22-4be5-9541-839dd5236efa"
        },
        "item": {
          "id": "c9334f74-918f-4f62-9e0f-c6f07bdee57f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f91708c5-dd77-48a2-bba5-06246ad73e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3a62f4-7864-4812-8d90-735925d339f9",
        "cursor": {
          "ref": "52793efc-a8fb-4ee2-9f70-d571870ffa5f",
          "length": 155,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7651ff3f-edd2-46d8-8625-6b24fc6ee3e0"
        },
        "item": {
          "id": "bf3a62f4-7864-4812-8d90-735925d339f9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f5d8f77a-c75b-4b8c-ac02-726ece0c3b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9595a8b6-2a71-4505-b1e3-3e08c2e601b8",
        "cursor": {
          "ref": "fe1faefa-3d90-401f-ac74-710fa4c28b2c",
          "length": 155,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b661be1f-b954-48be-bce2-4557d47e68ae"
        },
        "item": {
          "id": "9595a8b6-2a71-4505-b1e3-3e08c2e601b8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "db873631-da19-4929-88fd-3c16742809e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90a1b36-5167-4676-8f8d-4a7abb58b346",
        "cursor": {
          "ref": "e4d0c242-f4cc-4bd1-a8b7-7eef35b4fcb5",
          "length": 155,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2f0fd01b-fc40-4e0e-add6-7189dbd2bbfd"
        },
        "item": {
          "id": "e90a1b36-5167-4676-8f8d-4a7abb58b346",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2d1e119e-7d04-4cf2-a3ea-1f52e5b057c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c685e0-a9c4-4852-ac3c-deffc94140d9",
        "cursor": {
          "ref": "7b9dd517-91b3-49e6-bcfd-88aca8feecdc",
          "length": 155,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f32fbe4c-ec55-4a9f-b528-ae74003e7a60"
        },
        "item": {
          "id": "f1c685e0-a9c4-4852-ac3c-deffc94140d9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e0bc9c60-4dc2-4b0d-9b97-b47eebc5a282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22473a5b-8d4e-49c5-899a-5bdd4d8a0786",
        "cursor": {
          "ref": "96fc3e53-beb6-4469-a3b7-06f08198b42d",
          "length": 155,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "86ab5ae1-8a1e-43e5-911f-b50573558284"
        },
        "item": {
          "id": "22473a5b-8d4e-49c5-899a-5bdd4d8a0786",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ab5dd951-9b11-490d-b3f0-a7798d435980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22ae8cd-ddc3-4bcb-981c-9af79da20b5e",
        "cursor": {
          "ref": "de366bf1-176a-44b4-a3b3-89f24c84475a",
          "length": 155,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "87befcac-6b3f-49ce-9058-c2a9789e5a00"
        },
        "item": {
          "id": "d22ae8cd-ddc3-4bcb-981c-9af79da20b5e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c6d08ac-cd93-4e93-a7fb-f2e962c04cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65de4bb7-fa93-4e2c-8af9-f71fad4643b7",
        "cursor": {
          "ref": "7ef823eb-7d18-4160-b302-674d94b2e953",
          "length": 155,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9039409d-8b57-4c04-b91a-270d3e94e301"
        },
        "item": {
          "id": "65de4bb7-fa93-4e2c-8af9-f71fad4643b7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c0092d0e-95f2-42e7-b5f4-1d22b79b5ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfbf354-c587-4a66-9cc0-bb676a29972a",
        "cursor": {
          "ref": "74b46fba-0884-415d-9f51-3650a1469951",
          "length": 155,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7fe01ee8-4729-4229-b2fb-2c7dbde469f0"
        },
        "item": {
          "id": "abfbf354-c587-4a66-9cc0-bb676a29972a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "15a0b9b2-d65d-41c8-a9bb-7dae754147c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4bd745-76ac-47e0-8325-98d7cd2a94c0",
        "cursor": {
          "ref": "2494521d-edb6-4cd5-abe5-98bdf5d662db",
          "length": 155,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "71caac8d-9747-4e59-b0a8-4ae8ab5eb015"
        },
        "item": {
          "id": "8f4bd745-76ac-47e0-8325-98d7cd2a94c0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "93e02eef-f158-4ce2-91df-50fc7304549f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3beadd7e-a44a-46aa-b439-305545aa1e92",
        "cursor": {
          "ref": "622e84e6-e964-42fc-bb1a-8090e5a02c66",
          "length": 155,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1aac3e40-4177-4bb6-bc92-13ae119944d7"
        },
        "item": {
          "id": "3beadd7e-a44a-46aa-b439-305545aa1e92",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0ac4d9c1-56f3-49a6-83dc-140850c17067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ab60e7-b6fd-41ce-b95d-210786198400",
        "cursor": {
          "ref": "d3985cfc-0d9a-41b7-8f58-6526efc50105",
          "length": 155,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "42506e5a-62b4-46a8-9112-56cde265883a"
        },
        "item": {
          "id": "68ab60e7-b6fd-41ce-b95d-210786198400",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "027607ca-b00e-4da6-8e75-322bf9fcc6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e558f877-868f-4414-ad19-0e63ae0d0396",
        "cursor": {
          "ref": "98addb80-76c4-4f3f-bcb7-091606168cac",
          "length": 155,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3246fb1f-8817-4907-9fa3-e850091a1494"
        },
        "item": {
          "id": "e558f877-868f-4414-ad19-0e63ae0d0396",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "086ef612-6d8e-437e-855c-d58405f0c7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c7cafb-90f8-41e8-be8a-dc533a6b2d5d",
        "cursor": {
          "ref": "bb2649a4-4f34-45b4-938a-053668c9f54c",
          "length": 155,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1b71d7ed-1034-47c4-90d8-3a93a8e3f49b"
        },
        "item": {
          "id": "69c7cafb-90f8-41e8-be8a-dc533a6b2d5d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "78a25506-cf0c-4751-bb6b-27760f92a563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dda9ac9-8f6a-45e1-9dc7-24b0829f8eb7",
        "cursor": {
          "ref": "c5973496-0795-49d1-856a-84220997ef72",
          "length": 155,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "81b44109-d2e5-473f-aee4-945ae7e3471b"
        },
        "item": {
          "id": "7dda9ac9-8f6a-45e1-9dc7-24b0829f8eb7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "56a4cb23-c5e6-433f-8b04-f717943d3a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1135eb-9d01-42e3-991c-cccbec9d1e2c",
        "cursor": {
          "ref": "627fc337-1b23-41eb-b839-a04f73d2769f",
          "length": 155,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "17c2b9f5-f2c1-49d1-a1e4-f9bcba9b865b"
        },
        "item": {
          "id": "aa1135eb-9d01-42e3-991c-cccbec9d1e2c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d4f43eeb-b94e-4d5b-9241-2d43768d9771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e328b62-bc60-4664-9273-5d4bb90078f6",
        "cursor": {
          "ref": "779bc953-395a-4aea-837e-dd788c4486d2",
          "length": 155,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "df727e46-06c5-40b9-9544-272f448f71cc"
        },
        "item": {
          "id": "9e328b62-bc60-4664-9273-5d4bb90078f6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e564a284-b816-41d2-a9e3-eb5a70ac20ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46aaceea-00b7-4c94-be48-ce322926239f",
        "cursor": {
          "ref": "674022e5-2fe6-4009-a1f6-53af305295ba",
          "length": 155,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "569b5393-9666-409d-a2c6-dc8d18b83995"
        },
        "item": {
          "id": "46aaceea-00b7-4c94-be48-ce322926239f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3067d304-df9e-47c6-a485-f23545e7ca94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed62c912-a49a-4a67-8147-52d58db8608f",
        "cursor": {
          "ref": "645dc5d3-2a5f-47a7-bde8-4abfae91debb",
          "length": 155,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "85468745-4680-4973-bda3-ebf7cbcdb89c"
        },
        "item": {
          "id": "ed62c912-a49a-4a67-8147-52d58db8608f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8db89165-0fb1-4004-b17e-5e5b51aeb945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69aa308-f1c8-43ed-952a-76554ab70b1b",
        "cursor": {
          "ref": "78870ede-5adc-461b-bc0b-f6e0625c1372",
          "length": 155,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9137db43-97f3-4f25-9305-4550a588d45e"
        },
        "item": {
          "id": "f69aa308-f1c8-43ed-952a-76554ab70b1b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a3845a5a-c40c-4bfc-999f-7df4ad493d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489a2545-7abd-4ec9-be44-bc70b634f6fb",
        "cursor": {
          "ref": "94443d45-bbb2-458c-91e4-12e03aaaa152",
          "length": 155,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7c6f9535-7103-4198-9961-0dc7c69c6d2f"
        },
        "item": {
          "id": "489a2545-7abd-4ec9-be44-bc70b634f6fb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "edb3ba2b-bdea-46f7-a8de-38ab0ae68568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982b495c-3306-4339-868d-0ca7cd097984",
        "cursor": {
          "ref": "e4cd3355-ab6b-4c0e-af93-a15c4057224c",
          "length": 155,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e0d95bd6-2cbf-4bfd-bed9-1fa7d47d092e"
        },
        "item": {
          "id": "982b495c-3306-4339-868d-0ca7cd097984",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4dc2298b-0cf6-432e-8a19-407a778030d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648ce169-69c7-4385-a5a3-dcb9653f1936",
        "cursor": {
          "ref": "0d3170d6-4a53-4f10-8be3-608f074c2d18",
          "length": 155,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "66f534f2-cc5c-47c5-ba1b-f48d977b21a8"
        },
        "item": {
          "id": "648ce169-69c7-4385-a5a3-dcb9653f1936",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "77c541c4-ebda-468e-98c7-d45ec75b24d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f7ab7a-48f9-4ec7-a192-2f16c4200ba2",
        "cursor": {
          "ref": "d4e9d8ea-2935-43c9-8a50-92c3503f2c9d",
          "length": 155,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aa35f946-1948-4ef1-ac06-5bfb7adfae44"
        },
        "item": {
          "id": "e6f7ab7a-48f9-4ec7-a192-2f16c4200ba2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c46a43c6-45bf-43b8-a926-5305ed7144f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a5e7af-cc9b-4950-8318-2fa5c73b575d",
        "cursor": {
          "ref": "50683d63-a2f3-471d-b384-9755264f19c4",
          "length": 155,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "87b64446-8654-44ab-aa97-772a514aea19"
        },
        "item": {
          "id": "c2a5e7af-cc9b-4950-8318-2fa5c73b575d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a5796400-ec5c-49f2-a5af-8097ef7fe991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b576be96-3847-4240-89ec-87436d885063",
        "cursor": {
          "ref": "f5a537ce-1da7-4b70-b520-064cf8604a6e",
          "length": 155,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a1b32811-1454-416b-904c-0c9bf942f77f"
        },
        "item": {
          "id": "b576be96-3847-4240-89ec-87436d885063",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b4f832d5-09c9-45d7-a021-0fd59fc94f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe58e2a-bd29-4e52-accb-49f524690de9",
        "cursor": {
          "ref": "73f9befb-ca72-4224-9092-d6a79970de53",
          "length": 155,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e93ee5ce-ea25-4fa1-9d43-fb8f2d3bebb8"
        },
        "item": {
          "id": "1fe58e2a-bd29-4e52-accb-49f524690de9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9fd8225e-d2fa-416d-b7c8-c34b4130852d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0efee72-bd15-4aee-9f9f-71a6ff5e0165",
        "cursor": {
          "ref": "986a1004-290d-4161-8251-07cad6916a31",
          "length": 155,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b02eeb0b-3936-46cd-adbc-ca0dff380896"
        },
        "item": {
          "id": "e0efee72-bd15-4aee-9f9f-71a6ff5e0165",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4e63908b-5b00-49b8-ad9b-4835c6f1fef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf47e907-15ed-4cda-8616-785b32deda60",
        "cursor": {
          "ref": "208e4230-ffb0-4258-a15b-3cbfbe9cc004",
          "length": 155,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a5e33992-5b27-42e5-8c40-2e666a3b3863"
        },
        "item": {
          "id": "bf47e907-15ed-4cda-8616-785b32deda60",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "481ecd79-cd6b-4525-9040-48f328637dc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc0c606-ce1b-4537-b303-442b81931f38",
        "cursor": {
          "ref": "a1e236ae-b362-4bf3-bc83-7e7305f89da5",
          "length": 155,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9133bc29-7606-4d1c-b770-87f7e5ed058e"
        },
        "item": {
          "id": "ecc0c606-ce1b-4537-b303-442b81931f38",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a77227c0-730c-46fe-b1f8-2242967f4051",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6429e528-31a6-49d4-a4cf-b05a09264da3",
        "cursor": {
          "ref": "c4b80fbc-564f-4532-8e78-426522538ca0",
          "length": 155,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "995155fd-be29-4e22-b856-c91f0eb399ca"
        },
        "item": {
          "id": "6429e528-31a6-49d4-a4cf-b05a09264da3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "72930794-723e-411f-bc11-d4813aea69cc",
          "status": "OK",
          "code": 200,
          "responseTime": 2300,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef64f97-67ff-4148-9c0d-ea26fcd2f2a1",
        "cursor": {
          "ref": "a96b9b0b-abd3-4476-991a-73f6f798c42b",
          "length": 155,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b752989b-2ce6-4fdf-a32d-6cfa034c6ce9"
        },
        "item": {
          "id": "2ef64f97-67ff-4148-9c0d-ea26fcd2f2a1",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "26fadd91-60dd-49ba-b71c-c814298ff1b4",
          "status": "OK",
          "code": 200,
          "responseTime": 692,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ade2bd-1418-498e-8b98-a871a93a7df6",
        "cursor": {
          "ref": "1f1c305e-b75b-41ab-9e0e-874cc9a88c4c",
          "length": 155,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cf6526b0-8d35-4ef1-878e-7725440f54d7"
        },
        "item": {
          "id": "08ade2bd-1418-498e-8b98-a871a93a7df6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d40af100-8fdc-4718-98b0-c7136272bd15",
          "status": "OK",
          "code": 200,
          "responseTime": 494,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3edd42-e4f4-41ec-9dd5-6f6392cba9fe",
        "cursor": {
          "ref": "a5b8a7ec-8899-4715-b222-b4f6c697653e",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "698a8ec9-f3ab-4bc4-aa89-0c87aa318b95"
        },
        "item": {
          "id": "7e3edd42-e4f4-41ec-9dd5-6f6392cba9fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd043df0-70e5-4608-bc80-981889e93750",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3edd42-e4f4-41ec-9dd5-6f6392cba9fe",
        "cursor": {
          "ref": "a5b8a7ec-8899-4715-b222-b4f6c697653e",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "698a8ec9-f3ab-4bc4-aa89-0c87aa318b95"
        },
        "item": {
          "id": "7e3edd42-e4f4-41ec-9dd5-6f6392cba9fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd043df0-70e5-4608-bc80-981889e93750",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19e9f3f-7311-4c6c-9ecc-891e84937d0a",
        "cursor": {
          "ref": "4bb223a1-abad-4587-8ab9-0476f2953d94",
          "length": 155,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e5b2c39e-0324-4447-9bf3-3051a540174f"
        },
        "item": {
          "id": "e19e9f3f-7311-4c6c-9ecc-891e84937d0a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "7fbd6fc7-083a-4c69-b6c5-885c7bf0cbe1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545b0537-8b6d-4eb4-9ae1-6604c264f9b6",
        "cursor": {
          "ref": "b08e8a28-40f3-4ff6-8d3c-c29b2e612363",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "16937bb4-4d5b-4fd4-b203-7570987fc6b3"
        },
        "item": {
          "id": "545b0537-8b6d-4eb4-9ae1-6604c264f9b6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9a1c8175-274c-4b94-b596-a88af15108d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "545b0537-8b6d-4eb4-9ae1-6604c264f9b6",
        "cursor": {
          "ref": "b08e8a28-40f3-4ff6-8d3c-c29b2e612363",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "16937bb4-4d5b-4fd4-b203-7570987fc6b3"
        },
        "item": {
          "id": "545b0537-8b6d-4eb4-9ae1-6604c264f9b6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9a1c8175-274c-4b94-b596-a88af15108d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "c226ab11-7909-4015-813f-1b69fc1f1f0c",
        "cursor": {
          "ref": "0e49d374-5ac1-497c-87f2-8b424b09665e",
          "length": 155,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7591012e-6058-4297-b78e-509f47731151"
        },
        "item": {
          "id": "c226ab11-7909-4015-813f-1b69fc1f1f0c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "67519839-4965-42ee-b4b9-53f8ebc454ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "d3df623e-ce76-4fad-b1b6-fadfe03e370f",
        "cursor": {
          "ref": "25e35d08-82c8-4432-b465-1b7769ad52f4",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9aab82cd-3ade-4f4a-8850-a838fc31d04f"
        },
        "item": {
          "id": "d3df623e-ce76-4fad-b1b6-fadfe03e370f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f6c32e57-175d-4fcb-b5d9-58c206c61daf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3df623e-ce76-4fad-b1b6-fadfe03e370f",
        "cursor": {
          "ref": "25e35d08-82c8-4432-b465-1b7769ad52f4",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9aab82cd-3ade-4f4a-8850-a838fc31d04f"
        },
        "item": {
          "id": "d3df623e-ce76-4fad-b1b6-fadfe03e370f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f6c32e57-175d-4fcb-b5d9-58c206c61daf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e7ac8d-2bcc-4bf6-b408-e9840196ddc2",
        "cursor": {
          "ref": "8d1ab658-f0de-400e-89e8-18edeeacdbe5",
          "length": 155,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "61afcf30-ce39-4f00-9b4d-10d9f7a25580"
        },
        "item": {
          "id": "84e7ac8d-2bcc-4bf6-b408-e9840196ddc2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "12ec04ca-f174-42ef-b8c7-f0d1bf5959b1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 59,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}