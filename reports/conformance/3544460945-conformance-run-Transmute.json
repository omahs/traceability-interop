{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5d7f02c7-9545-4ead-8a16-cefb28c2bfc7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a9e4d13c-146e-46e4-9fc2-f6cedfa0e0e4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "607110f9-d81d-43b7-8732-cf07e85058ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb489cab-6772-432b-a7e4-a6b8225eab79"
                }
              }
            ]
          },
          {
            "id": "9613ae90-caf1-459d-8a7d-96af59e6fe17",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c30f17e-3b08-4a51-929c-8cd37c33187a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "852d44b8-8654-46dc-90ce-ed7d69653c37"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bbd67165-6d24-47d1-a0c0-12d0419e140d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3d0164b9-7489-4131-806f-acb7ae2146e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02ccac3c-0be5-4198-a599-21342a58a711",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db9409b5-deff-4e4a-9898-ec84e5a3ce39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20516ec0-d218-4fa9-a48b-96237f4e370a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "644ef522-d1fd-44af-9061-22c0737b3773",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4bb2730-1975-4d02-b23e-c7a832d00de0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f9544bd8-642b-458d-9853-e872d1d7216b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4726ab18-bbdb-49df-9e76-22add22975ba"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2d472f7-d246-4616-be30-293d2315d365",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c8293149-a21e-4fcf-a9d0-0e6b8393a6aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b391c6b9-d8e4-4eee-a36e-0fb499126e2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f79f0e99-fb79-4e14-ae5d-9e0f6ab920d9"
            }
          }
        ]
      },
      {
        "id": "67b893fa-83e9-4700-b4f8-239296d6b32f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c53f96dd-7b2c-4bb4-bc98-95dbceb85b91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1c8240e-c9f0-4ffe-828d-f574b0dfe604",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c41e773a-9ba7-4adc-a73e-b19758d3723f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b004fa-e19c-4ca6-a5f3-4217a022cd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4229ffee-76ab-4fa7-baae-fca7a0ca1dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb2dc95-fe57-4be6-90f6-f6fe1afb5403",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af025060-05a3-44e9-8e56-f79e7d150bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1a898d3-b5c8-48bc-a06e-deb66a06ac17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd7f353-e0a7-4070-bd05-120d72e3d93b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586d663f-0468-42a1-a16e-f9cfa7895110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6af4c206-1c30-45d3-a47a-03b1da0ffd50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30bb1719-b340-482d-ad1a-80a7345858e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "108a8ab6-9e5f-4f84-b9a2-f607c8b10f11",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ea5efb-b7cc-4580-90e0-0f4a23d9ca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8acbcee2-c1a9-4fda-a383-2be125aa35c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71789d3a-173e-4914-80d3-4f2e0f63237d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d42286-9afc-4a06-afb4-90af1738d3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cee8f4-291b-4992-ab1e-2a8fa5070bea",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b23934-e151-4e55-bc29-94015dacda98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20bc43be-a95e-4c65-be59-b6ab1f44c382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be10677f-9260-4825-a18c-a728fcf2dd67",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "f2724985-7e9b-4cd8-bd77-e0916df0e59b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b170ad9c-5c87-4076-9fb6-1ee55fc32108",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0fa4fcf-5ecd-48ef-a832-e6d67b5c614c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9afcb0d-6075-4578-9aaf-496c3701ed7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d0a112da-3b0f-4b0f-9257-84036891c205"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bffbf5fb-4af4-4c40-bd69-1161a785e8a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9645dc19-6955-4404-b770-b3f414651cd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68940c04-c906-4c0b-95bf-8b003f3c1ff3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "357fe431-25a5-4866-b7ae-4ec390896d0c"
            }
          }
        ]
      },
      {
        "id": "c3ca80a3-e126-4edb-9ff0-fd83a0c0124a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "582140cb-e714-437b-8d59-344484224e46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a2641af-63dc-4a60-a8bf-83284315e528",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "38e7c24d-6402-4adf-9556-9fc2ae8f3fb9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a75f08-3ac6-4741-ae47-13d3a9fa2ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49070fc7-0b3b-442d-9919-60e909d136fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d623b6-3147-4a7c-a30c-4f0f65df784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbc80731-a093-4464-b428-7c0e9cc75ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b3621b-f8b1-4255-ae20-2ea435f115da",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535bb42d-bd71-4633-80d6-484ef9fa6ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf63e57-9ff9-49a5-9c60-52cd9587c490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6e7f50-12d4-446e-8a53-7c9b3c139258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88e8db4c-fb05-4870-a5fa-556021ab11e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c45b5e-43ea-4ec4-b087-2cd00c98d5e0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c1d857-49ff-4611-a642-c3d2d00f54a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54965bda-c50e-415d-a55b-4ea7d8c73da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e34a83e-7721-4d9d-884a-766316b98147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7151c83c-eb8b-4286-b9f0-7f611a3baf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88735d2a-39f1-4156-a5ee-fd1b21439fd8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1776bfe5-af5d-4e05-a9ee-7bb75cd9422a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b14f02-2496-4de9-85aa-5ca0c600e288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d854b9-e7b8-4852-a15e-9759e88cf26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9970be46-d3c1-42f5-8ff1-a2c044a50294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db93846-d132-42ff-9f05-7b8eda6caf91",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bce97c7-9dbe-418f-8f03-0978bf6388c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbae901-331d-462e-9dff-cf36012c41b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b61491-64cc-4c25-be00-540632ddccbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8d03986-ec39-49d7-83d1-3f1391057f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c022229-91b9-4c7e-bb1a-86d8d34fb901",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b4d43b-d178-4a61-aae1-6c2030e58140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1331878a-6dbc-41ed-8de2-fb3e8801e3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d15d5d-07cf-4eca-8476-d322335ad5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c7583d6-4f88-4027-95d2-9770780fd0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99a4a7c-1f6a-4d0b-8f47-705eb1c965fc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631ba93c-b8cd-4754-bb32-cb64f977a771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b91849a-0b75-4997-a00c-ac40bb40b16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539b52be-7e24-401f-b822-79b1a96a7295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17be86ab-ab04-48f1-bedc-4125fdef8f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78ea8b7-830b-4b27-9a22-ca0332346675",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29357b1e-fa15-4d50-a377-2ff225920d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99afbab-e1a0-4c32-bad9-c16fcae97a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3363d86f-637c-4c68-8474-aa480da8ee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5052934f-c6e4-4ba5-867c-0a3f85d166e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823f63d5-2254-4bcd-a918-0f8725bf9757",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc078110-d66f-4b76-833d-4cf2113eb66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2052f5-5d35-4567-bbe3-1c6677bed1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75e4ea5-17ec-49b8-9098-8ca22e961c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4474742f-ee4d-40dd-9adf-821f5cd4ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0efdb67-30dd-401f-967a-d23be5ce9937",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e83aa0a-9486-4c68-9fc7-4b1df009e5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7d6a44-8788-419b-b9c9-523eb57df399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f37c24-b578-4b89-b7b5-050a3e8d7ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c62326e9-af8a-4386-9af3-e8378bede68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e575c10-8617-49eb-ba39-a6c30da12e93",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6d548b-4a08-4dd8-962f-0f8916e10035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc149679-15dc-4217-b157-58995ace3026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc680e0-57ba-4a91-a15a-1c24f369fe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d98c362-3fa0-47c8-a82c-23fe7fc924af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4dc318-6705-43cf-a7c5-f93f30dedcf3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048e8dd2-e90e-459e-85c2-e95102a904d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57f55a9-3b6f-418c-97f3-4238ed73cc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed20de3-566c-4190-a065-e450dba2ffaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcf7d06e-5bda-4404-adc4-f9194732aede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba0a609-3fd1-40b7-9178-17c1c972d153",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbc7eb1-ecc1-4a13-8d92-b33b50382df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a937ddb-4f20-4232-a33c-f6472d9543d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38487b5b-85f3-4faa-b994-d77e00c4c721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9813a426-5304-415c-9572-f21583539018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9576fcd7-b2a8-4fc2-b393-92755449d8a8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c6dc51-4e7d-40b9-85ce-a382964410b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79373128-ff91-4555-a27a-2972d265b6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c596f81-c84a-41b5-8ca7-6ec11b6ceda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02042773-2ca1-4ab4-aa56-02ba05d7c180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b075b6ac-bad4-4075-9ce6-43da546146b2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da5cf49-b072-4ec6-9656-1620b991c0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c78f299-d620-47fb-b25a-77550549f106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62459e2-529f-494c-acc5-c57cf0c97a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e16e35ca-1529-4e82-aaa6-e27ea7798f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36d5232-2d36-4a51-9e7c-c4bd0e18e2c1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd2d60d-f91b-4cc9-b2eb-4f3ed7db0c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de9d897-8e9d-42e9-95e3-42a0e1a563c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714fd0ff-36e5-4620-b87c-8b2ad4e55d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4d83c00-0d02-4905-90f1-4a51a613d60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d85ba9d-f5b4-4577-90fe-90191791cbc3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505f969f-47e3-4691-b3d4-b6b8ccc2ae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6cb31c-4dd5-4975-8a7d-144259fe6311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32256fd0-cbcd-41fc-8320-b183140dbdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00edb4ef-89b8-4f16-9d9f-f45334e36a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c527b597-89b1-443b-bd35-fd5e65cf1d99",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b242e42-26c7-4e03-bc93-0158e006545f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c8f26a-f4e1-44b0-991f-7daf3f11f368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fd1346-06c5-4159-b5ab-c52f88cf6304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3cfeea-1880-4cfa-bd9e-03a23d5d5539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eec6245-b68c-4e7b-9a6f-d0bd560c84b1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1f0ac4-c019-430c-9f15-d9b65ade3be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38786a85-79c1-4c07-bed8-136efa2b86c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f5d23e-e824-438e-b692-23df2f1ed39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38a5bdfc-163c-4569-8185-9faaab334931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7865cda2-03e3-4c3e-bd5a-6ec88822a1d5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0c8aa1-f3c0-45c7-bb16-56a4eb8f2582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fafbf8-8f58-4871-8eef-9ae3ac6e19d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9f7e8e-34e2-4fd2-91d3-49e2c295c3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e0b110-a1d8-4100-b78d-48425e98da71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e52e2cd-0bcd-40d7-81b4-46c229f162c8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdb5893-c976-4d39-9540-b460539329d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788dd191-e64c-4fa3-8796-9605b6ede735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bf267b-d3a9-4b4c-a647-738d88607693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd09f6e-7b49-445b-9eea-c89a02682430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a4f014-25c4-4507-a326-3cb3a3c42137",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951c5bec-7961-4f5f-b1fe-ed1c172fafd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d785d399-100b-4ab3-a524-2c4bbf52d77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e71d5f1-6444-4b4b-9c36-b6ac647125a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a3df44-ebb5-406d-84dd-16844309fe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d8e50a-b90d-44be-9888-0019e9eac573",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856c21e8-c6b5-4e40-aaa2-338608c14bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7bd6c0-d353-4a9e-959c-088f9b68a775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5823f9b0-5fde-49d3-be70-42cc96d45083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "534ef1bd-6949-4de7-9163-24e35e5a0b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aadbc2-2047-4394-ab9a-315a9faf80f5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d419f8e-b35c-496d-8870-c79939f8d948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d114c94-9d2a-4959-83fb-13f9e0d8eb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5118d6-071a-4c40-a09a-219676467f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5325c763-bf34-48b3-8fa4-9349af3fafcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1564a8-3ac5-4a22-84d1-4ab2bcc3c8a3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fed5998-505a-489b-acb6-90badf68e47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82ccd22-64ca-4447-a46a-41b793d488dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6c469a-ca01-41f1-9595-0f951dadc893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d95961b-3f44-40ae-a10b-df6094439e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c511378-f442-4b7c-bbb1-23057add0003",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a23c4c-c7c2-4330-8f09-d763f79bcaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8308e3a0-789f-48c8-ba28-150243d8d5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f626cebe-38cb-4bb0-be4e-b7ce29247c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "196a71e7-67b5-4e67-9a4a-b71c6a27b022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a6aef5-086d-471c-87f0-e867d9a83a92",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01ca2a1-24fc-447f-b6a6-d961a6d9c795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45580d15-97dd-491d-bc71-ec9671d67192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a48ac7-eb78-4d5b-b513-9fdebad19818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "880589dc-7626-4a2b-82aa-b0543d0e8441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1972e74-e674-4d2d-b60e-210fa80ac5d4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896f684e-53a5-48d7-9fea-c28b83460923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2201d098-8733-4a0c-993c-51d6310b9c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19de4fa1-ce23-45f4-9dfb-f1dab60ad080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa01976b-8e55-4e8d-9e6a-cc6585c18a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fb51f6-545e-41ff-9975-155a62ab8f6f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878344cc-efa8-4c05-bc40-7882875c8686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac15416d-af64-4a74-bc05-f09df7b59e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dfa748-2706-4c5c-b4f8-6f4c1242e0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "822d7439-6c0c-43fd-aa66-05e87da7da4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f097623a-ba9d-4e41-84a7-37babaccce57",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb3897f-332a-4774-8206-8d5daeeb2bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a734d20-6900-4efc-9694-694febbc19cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98cf612-8298-435f-b419-ef9c52ee08be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c06664-705e-47b6-9f77-ba816066f04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d87e15-dd44-4e35-a591-87275bc972ef",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657e80e5-db3d-4d3d-947a-b0bc8fb3b6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0603ecd1-4582-4ab0-906d-0d65abafae5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9261d3e7-c91f-4b8e-83a9-a6e27611ad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd73863-e6e2-45ba-90ca-8b0f7fe1d2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23c2088-ee86-4940-81fa-4130422281a7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1604de-2519-4bba-9f24-bf016a4d05dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cd0554-f051-4796-a668-1aac604c3c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8242f8db-a9f6-46cc-ba82-6c651448d61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb1bf8d-2713-4d65-84d0-cd868ddb3909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad4e30c-dd64-4764-87a5-bc2fdf31247c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46312f51-9ea4-45b7-9fea-9fb21f3762a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea533f4-7bd1-4ee0-9417-e698a5f673b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d84fbc7-e1a7-4adb-beff-1f7722bf0581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b23fd61-e8e5-4f61-96d8-be40434e1934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4992ea6-5f98-412a-b74a-a925846d1605",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbdf625-dc70-4354-97a6-69e8eb7d0c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83b0263-c700-4d89-9fc6-f556879bb322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf6eb81-b9b9-4329-a7c9-240a256cf42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb4d800-371f-47f7-9bc0-66286cbe8233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42404ee2-cd66-4d2d-ae1f-2dc64538c8e3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeed9539-e90d-447f-8d09-ec6fa9435fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a730f7f-77b3-41dc-8c71-a7183c9fe466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161f279a-97ca-4c6b-9e6b-13971ba255ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e790b7c9-b2c8-417c-930e-7cc9b5953340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea3e648-4992-4b55-91a6-f0df49ff9362",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51572d33-91d1-4fd8-8d51-165a2d18bc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08793732-1ca4-421c-b007-9feff916ff66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3825296-3116-41f4-9739-11bc8d168ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b84e563b-ced9-45c9-b8cc-751d18d6a065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ba8726-9110-4b63-8b87-77c3a88ec996",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581553c8-f981-4b7b-87d4-9a9683a3c716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699da351-6de8-4857-b7cb-852cb8e0b213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f6936c-cd88-482a-ad46-df12362b0772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d97306de-eea6-4c69-981d-b4b70eb6061a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a15a6d-ff11-4e74-ac61-8cf45c0c3fd4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9857b9-cabd-4fc7-b68a-505a8cc23301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175ac631-9f85-4135-a666-a025a02dd2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b26227-c1fd-449e-90d5-16b13af3fb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "967e9f20-083b-444e-aad8-050e1fef899f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95c7c37-211e-4e5c-863f-4157ed4b3f31",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52270226-2b4b-4146-9b4f-899a02206b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1089846-c808-4ccb-9dfc-0ce406ea3f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587b07b9-6337-423f-8403-b1c9a738194c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f407e261-d7b3-43f5-8d59-e140770cf5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84e07a0-615c-4aae-9b9e-cc1757f1e021",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44d0f7e-6417-4db8-a799-6f00dc6a231a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecad794-286a-443c-8f4a-7af5373ae900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695a40c9-e188-4593-819e-727839b0d1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b923aa77-9b5f-44c1-baf1-575619c15ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4669234-cf49-443b-a9f7-796792f4672a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a049a-cab5-4520-83bc-b80d9eeeacfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc2d167-dab8-4677-8d42-a577c60947ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5ab466-0b6b-401a-bc1e-c5e016b7355d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cd3a15-57b2-458c-8982-b1bc8b2d618f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c781ec-303b-4761-9b41-592636302fc0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8461072-786d-4765-b113-c6fbf13fce61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97582d49-0e70-4fea-9c8b-eac0d17fcf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79842ee1-9527-49ec-8d84-1a350909b1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "86173b20-d8af-4cb5-b8f0-42bf67770859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df71bc6-3f6a-4533-b991-90e2f64ce782",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aade527-49af-41b2-ab59-c4ba3ebf7d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024d5bf3-1a2c-4249-9d02-22d914f64d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36b4666-1cf8-407f-b176-19e7cbe6a1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "519f9cd5-4547-4c4a-9469-e49c18ff0488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570d5229-a721-4bcc-8c4f-33fb6855f35f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5e7937-1282-4684-b498-d7825adbd7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40776834-d10d-44ca-876d-241363f5d1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8b7742-fbf9-4fee-9d90-996f885b9b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3118dce-c674-4ddc-bfbc-eac4e20dcec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4913f6-b432-42f0-8e21-84467e88e444",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d82032f-5975-4bd7-8193-704ae8031ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cecafaf-5810-419e-ae58-0d51df3d3815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222e5f84-17e5-4697-95ca-267306986733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4963ae3-85c0-4eba-a717-896b05ae7a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19634480-309c-4f69-b465-9d24969a09a3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe82f695-f8b9-41db-b8d2-c2b89d8eba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6103a9-e33c-42a6-8926-34de2faac240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8087a4-5884-4e0b-a446-0cb0857db3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f76dbb-f141-444b-8fc0-fb9b8be497ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823d0a53-124d-4c5c-a388-90ac8f5d2e73",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd04a04d-64ed-4efa-bdac-8f6bf145f3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a20702e-7fda-4350-82cf-6ed41635ecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b4b5e9-c76a-4ec7-91cb-6f19a9d47f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf83735-46d1-4847-b58c-cbcc859475b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f5017c-5fbd-44ba-ae94-3efa39008b41",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda9a483-9a9a-4366-8ab8-697060b8b998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b93f3ae-08d4-438d-90f4-b15d70703295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca2ff65-bbcf-4ea2-aee7-c8b417a8b204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e8f988-1f2a-45c6-8b6b-7f25000f58fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02937c91-0778-426b-942b-bd508e789846",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d277a44-b501-414d-806b-d9a54dd2aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ae2729-464a-45a3-8dd9-8b85ff2eda5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6788a876-cc0b-4bbd-b16a-bf1417cc03d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89b8adf1-a5ed-464d-a401-9ce42b30f98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1a603a-2d87-43c9-b918-b75e47678e55",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7207a0c-deaf-483d-a36d-18f38f5594fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5442f61-642b-4d9f-b98b-e9538a5e4ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50c29bb-95fc-4920-ae5f-25a22b92f234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9885a0-bbaa-4743-8588-e522da24772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5351999-e7d6-45ae-9c7b-745046d8562a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360ce48c-91cb-4e2c-8f8c-600ca97bdc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c50c65c-36b8-4eca-b7a3-1a908158aee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd3b7cf-bb92-4dfe-9797-81333e70e5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e646021-b9dd-44eb-9b6f-389c2d628d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10970b59-1410-436b-8606-8fd2acefa038",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278b52bb-864a-4bf3-a898-2277cf69ca18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8ad1f3-3987-4f93-a446-de0c00436392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0539b7ac-22d4-400a-be82-f6996ba58fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23f673a4-00fa-4c13-ad97-a6784c90e231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d268b4-30cf-4b33-a7f9-47261ca79a25",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd495fe-ab8a-4ea1-9db7-75cb2d9ee05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa56940-5654-45d8-a2c9-71d1f31eddd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4489bb9e-4f9d-4ea0-bf46-0d6f1d7c45c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a7c06f-8757-4d81-a5f7-21892441970d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11e44d7-306d-45d3-83e4-74ff173a4234",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ba14cc-5bd5-4c78-9cef-232c7f993db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcce2e9e-7f4b-4634-9ed1-459e597dd6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aac747f-d50a-4265-856c-6e2392f1310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "066e59e3-3244-4f7c-a621-dff4c2037856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d46fa9-1f2d-43d8-8efc-036610023cef",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134c8bc8-e1bd-410e-9e10-11acbbc50e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afb426f-0ef7-47f9-aa3d-f0978ba2857b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3ef2c8-d87e-4a4b-8338-68d3ba1ffabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac182e2-a3ae-4459-858c-a1f44ee35cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1265d84-ea3b-4639-aaea-9ca637ed32f2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdc3788-2768-4242-940f-a8a2e9a30098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5c7f09-083a-4611-8be7-9e86ebdd64a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33bfff3-72b2-4a2f-b14a-a7520ecdf995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d8cd68-c469-4d72-8c96-caf81d11e454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c048c156-ee10-4a38-9943-4847f5f6243d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058226db-3e83-4c06-9651-38a09be4f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edffc272-4243-46c0-862b-bcd561eb4c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bdb7c7-e9e9-41d8-aa3b-aa9efa91fcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2af211d-2456-4dca-b958-f788cebe277b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4175fab1-220f-44c2-bb1c-dd282580aa16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeec748-0940-4514-b043-a40e403ad558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f268639a-b7e8-4b91-9cd4-f0b3d6c7a7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6472553-4b1a-4a88-9217-c7984c82d730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95a2cfa1-c588-4bd7-be83-a6be08591b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25a9db1-7e60-47d3-8cb7-d227b85a52cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e78738-6662-4bdb-8a26-3365768e5929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9f8e28-96f7-4571-a53c-e844392609ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48057153-1aa5-488f-9350-13c9bdc6aa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "557fb719-e83e-4e61-9583-18dc0edb578c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ea7dee-600d-4753-85e7-a5b3835b32c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f1fbda-1419-44e9-9d20-0ae0688a0465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee597a3-e5df-4713-8944-6d945d653a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20f7172-d46a-47f4-8711-66f262a58aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ce5dd5-e060-4e1a-b5d1-58d655537cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d56b93-8de2-4919-a267-39cb0f679200",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ef5f6-e4f8-4344-a70e-4bc6ac1ee1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469fb766-202f-42eb-9883-a2bd6c0b181e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b725bb2c-407d-4fa4-8eb4-67e50dba2b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8266f704-323c-4bf6-8e80-5ef44ef82e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475c1055-462a-4a6a-8197-2f407973d8ba",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd979c77-d3ad-415d-b957-fde5f183b204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fded6c-838f-49f4-9a07-fe9ca283f986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc27a1c-4baa-466c-acec-efc6e461dc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "233936d8-475c-4544-8341-13460cf1e933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26545d07-4c7d-4b32-930e-8d4aeb126279",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cb54aa-a6e5-491a-bfd6-17250a71d615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea1225c-7384-4d46-bd54-a874bf5643de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422af224-d059-45ac-8651-a03dcb363f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee45fc42-b9b7-4773-80d5-b5748c956ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2af9bf-e7cd-41fa-abc2-eb5cfe351621",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa16318-955c-4a08-8363-3f152e70a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558e3548-c099-4c4a-8568-d397366288ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13df166-2a95-4378-849d-6f4ad623b18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65009e1e-27b5-44ec-ad8f-509f40bae80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e37762-3d18-4a52-9dfd-7a5a44eff41a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b9284d-2a77-4b52-bf8c-32aec4f1d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98784595-a16b-4cee-ad0b-ec186918474c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1ed4e0-3235-456f-8f70-0dbb08b82bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "135ff093-4927-4432-8048-c14491f8a5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5fb0ad-ef1b-4877-a1ed-48249fef6b58",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2366ae7f-b217-417b-9ed6-f82094bf8522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86d2489-2a3c-4c72-9c7a-3d8e405052b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2bbfee-8c73-4f1e-bc14-d0c4b688219c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a91958e-d548-4fc6-bef2-78ed49ad5941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d5643a-2f6e-4108-9177-67ad3c49f60b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895bd190-8831-4c34-87e6-9b9b98df5204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fc39a9-97ca-4dd7-9bbd-86c5d01627d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50786dee-cd6a-44b1-9b13-17b88ff66795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12658104-2477-42fc-a31b-7f5712c77151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74239ed9-3b6d-4b70-81b3-cce18c0a6642",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87415ad1-61dd-4a33-9ce9-ed4022f7bc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a929bb8-5b85-4759-bd04-186074e278f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c62faa-0426-4fcc-b735-9a57f1c69b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ff8e3b-587f-4da0-84dc-e05ead8d4907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2aadd43-ab16-4c45-8609-5a8184c95417",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1593dd-cf9b-4f8f-8261-d9ec06fae9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81f88d7-e520-4309-9d58-edec493ec2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895ae91e-45e0-4793-a1ca-74f0b7961e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c48614-d860-492c-85f9-d978e88f2ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219717dc-7262-438a-b4e7-fe25fc801963",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8006334-b0e1-4854-a167-1a37ce39595a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e877ac05-efc9-419e-adda-fe4bc830a460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639909cf-66fa-4f5e-82aa-56e2113fb7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8edd353-5fa9-46b2-a3af-850f31cf0ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e4ecaf-96c4-4a56-b298-5070ce3fb039",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbaaf02-0bda-4a44-b079-5f7beed78965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0725a0-3801-4811-bd59-5db2a728de55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d986e030-4727-41ad-9a4a-436c10ce491c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdb1ec0-cf58-487d-8ea4-c43d6f7d95bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe631df7-e84c-49fb-9c8d-b515bb30628f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4919178-6d27-4268-9ca4-298a1c5f25cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9c0af0-f8fd-4bba-b0da-4af62148d53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7ee927-306e-4daa-b23d-e4dbbf0f8ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc159fb8-030c-45bd-b907-1e6bd63d9ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2662f37b-649b-44d1-a4da-16cde661ff21",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d32683b-7f5b-43da-8485-c8738bbdc136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7ad0cc-3fd1-4e2b-9882-5d91425e3fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd11be8c-c464-413d-9fcd-c115bcef1645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b5aa93-ceb1-435c-938f-3cf07705cd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309fd9b3-986c-4e6e-a53b-b2e5baec9a8a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829e0848-0ae1-4a7d-941f-b35bc484e1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d68c83-55e0-4c33-bc67-b4f786915948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6869bc69-7a5c-47ca-8860-2892bfbfb2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "482940f4-0236-4317-9543-e1f5a75ddfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f374720-95dc-421a-a2dd-127bb09f85b6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29adcfd4-cbfe-44df-a53b-3c86bf8643ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6800a0f2-8c18-48c3-be50-935c360ef72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0467d3-7ba0-4c11-9864-bdfdc3fcb571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55d2a59-8e32-46cd-82ea-f2363b59fbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3584fcab-3672-43f7-a0ea-996cbcd8595b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224038f4-035c-48ea-b40c-3474da9d92cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd3df75-c1a5-4a96-95ad-7cc0c7dd59b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19549e3-3db8-4a7c-91fb-7e80cbe7086a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71097141-8ac7-454b-9a66-a7e1aa646265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d66504-fb0a-41d3-8c80-42fb422a3bf3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56958517-341e-45c1-874e-74abe5726365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73482dbf-550e-4e0b-8a54-57718bf168f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b413b9-e39e-4fbc-8886-5f09031c469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e58243-daa8-412d-9980-06cea6596ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc27b59f-c7cc-45bb-a6a9-f0b012f691f9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cffc3b-4c00-4e13-94be-605348cc701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f600e0-3458-45c3-8ac5-048bc6b0fb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bb8a6d-695c-49eb-bcee-3ee99b42a07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "134fc6d1-1aeb-41ee-b5aa-d1494fb72e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2670a52d-9dd2-4f1c-9623-d42fa410ecac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f94e1bf-ea2d-4889-a397-d8fac46c7ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd72a2e-67a9-4705-af17-98a9d49916e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c97360-bd2c-4c63-8237-9a03c08a4c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50111325-b153-4736-bc57-f81a407728f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6c50b6-769b-48a4-a9c3-fb609b05c80a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92949f40-4d80-48db-8384-47cf82c1217f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf67f4e-a9a2-4af0-a0e8-e68c4d496766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a832bc4f-8cec-4423-85d4-145aabdf677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fea18f3-6615-45ed-bbc3-fe72bd0e6e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d917a00-b2e1-40c1-99fd-4572a0403375",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6fe6ad-43df-457e-8fc9-76467e099977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcb8c51-06ed-4346-8414-3c148fcda8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287f65fd-0a91-442f-b185-ea9f080d484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c76339-624d-4b51-b38f-cfe02693ced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bd2760-297a-4bfb-96db-a8e4cd218865",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88282a3f-e36e-4040-928e-8bb1d8c6b48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07701c9-cc47-4959-84c4-4ee4ae87e43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15370c14-28f3-4dca-a81a-62fde5d64840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3af028-4857-4cc8-a498-945946021713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b63f4d-5bf4-42b1-a363-d7dec0d913e8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f715b5-9433-464c-a58d-ec21ac356baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c607579f-8e0c-4304-ad5f-0882846f6731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b16f08-b14c-4d21-b6cc-9dcfa61c4fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2835b1fc-fbef-4754-b7cf-7046406bb25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a71cf9e-8613-4371-8dc2-7840f4f35c74",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b036c3-87e9-4aaa-8da4-3cd925366bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11067243-3cec-4587-8add-ed9b4d9fb23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f32b3b-f6ae-43e0-995d-1503b950fa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db4b510-079c-422f-b3cc-0ea3cc6d2c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b1c225-ad60-4f8b-982c-8e47f03992b4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef8143d-cf15-4705-a97d-3b57003027d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32a7f5c-3078-48cb-936e-5bd2365fcfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c358a9-4127-4f12-ac2e-784a81cea1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab806d47-b411-4608-bb37-4c705c7d6423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b001559-655b-481d-b9ab-a424b370a93d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7badd97-f15f-4d01-ac4f-e1ec4995027c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b4004e-69f6-48eb-9ba4-e8bfafcf81c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9d1102-0851-4e36-8935-ae37080a273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b71e5bcc-d6c1-4c9a-bee5-8dafc49662f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341f75c7-392c-4a93-8b0d-17ac1d7970d5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fcc6c2-58d5-4434-be76-b880ff68ba7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1fee77-782f-470b-923f-553d1f05cbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc4581f-817f-47d1-aa05-1066b107db95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "869b96eb-4b93-4131-a497-bec77b0e8e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb5c0e2-2a9d-45b2-a41d-c019114c3bb6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9903188-469c-4a6a-949c-03ed8e30a94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28145bcf-3e2f-49dd-913b-01ca6a2cc082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195ed830-3a04-4edc-a797-204afa04475e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0148c0-10be-4087-a03c-7bf808206e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8128ddc5-646f-491a-ac10-e0a0187281d8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48302ba-5561-48ec-b0d9-7bca9159abfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011d706f-9b3f-4a65-a71f-1d437e7913ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0efb1ea-0155-4a5c-b0f0-2ee5f60c1117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "818696ce-017c-43de-9745-e5f2664c7634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b0685a-ed8d-4019-88d1-57285a0e62d3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d00497-0387-4ad3-a3f7-d3e7eee54a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ece414-5b86-47fa-9f40-6fe2a13d20b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76425c8-831c-4ba8-b23f-8a814c618572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef92a851-c5f8-4785-8f58-0d0222365689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f849bc1c-9df0-4556-8f00-88efb7e48b13",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f58b5a-7a83-467d-b2be-12ea9244be28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec70c6b-8a90-461c-9260-4672624af5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feacca3-14d1-45cd-9c5f-e109235e622b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3674f021-cb23-4677-8c03-153c3da4149c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd74614-5f8e-4549-8bd4-0bfbef76880f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cbd87e-1033-4ecd-a53a-545b810e49e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fb8ff8a4-0b04-4fad-bd1c-f991598614ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214b61b9-7057-4a49-a17d-780b8b7e6a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c05026-5f2a-4e4e-8ed4-67013ffa9938"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "909ee558-febf-46ad-b50a-1e0d6c852d37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e747642-34b8-42ee-b2a2-769e8871ae81",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e404f4d1-51fd-4691-b7af-f5c72b82a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fab10852-32d6-4f92-8763-c8161cf48428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d603a7e3-c588-4840-a40b-b9e776cdb714",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "62009519-f37f-4bcc-96f8-1f21f0a744b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf9f955-eeff-4a73-8bdd-afe578a812c8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2042826b-2202-41c6-a025-87006dd3e3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5074edd8-04c2-4782-aeca-4bfe67903e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b83b4f2-9097-4514-8efa-b1307e8212d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e2f4280f-4b97-4284-95ea-7c52abdb76e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1fd46aa-779f-4469-bc1f-be9bda14d113",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d38d20f-6d30-4b63-a33c-ff07a61a6037"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4032fc2f-cde4-4cdf-92a9-c0503e5b4066",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d68c285-5768-4047-9477-e6c3d7f228b1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f80b6f0-e557-4a94-a568-79809bdea462",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e895db7-bd7d-48d9-95b0-23f6324f3497"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6cfa065d-e82b-44b7-a621-cfa83b3f12c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "032c0fa9-ec77-423e-92b6-e3fa67117949"
                }
              }
            ]
          },
          {
            "id": "acf979c1-0873-40d6-8323-032e4a480264",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fa2d421-d563-41c3-a361-93848e99b031",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56656536-2621-41aa-86aa-7792183e6d7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d51b846-93a6-49de-94e2-edca7c87419b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4638eaa1-47ea-4663-9c99-baa5ea174235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1cd07808-57aa-4776-974a-ea62a0fe666d"
                    }
                  }
                ]
              },
              {
                "id": "9d6a6d47-c43b-4805-9328-7defd50844fb",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba7664ef-14d3-4737-a6d0-7aa4c0116d23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bc1a387-bf32-4de3-a48d-cca6b607427a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "270bf056-87ff-4440-877c-3332d15f04de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efa373ff-52fd-49e7-8086-a47c84185868"
                    }
                  }
                ]
              },
              {
                "id": "f36ec399-07de-4c0b-b437-b4dffca82de1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73a937b8-8ca7-4b8d-adb9-198b3b364196",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2ae8b11-c67a-4d20-a509-1c2251883388"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b10cc24f-c8d0-42cf-8a56-84dbfb74a09e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7be38103-55ec-4a16-963f-83bd3c235c85"
                    }
                  }
                ]
              },
              {
                "id": "c1b5481c-52cc-41a4-8c0b-b22e242fc83b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b806347d-3c40-4735-acbf-62a7c3e5e992",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11325301-1fff-491d-8d7a-1fa1ac6c8cf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2020a71b-d369-4605-8b06-b1ee7de216e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8354a6e9-3f69-474b-a007-6b6bdfa590e8"
                    }
                  }
                ]
              },
              {
                "id": "bd2a447d-2e48-40bc-8884-50c5e82c793b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f812241c-eaeb-4997-89a5-95622b0254aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4154c005-6f08-47e4-999c-79916d875a0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a9045c1-2e91-4ce0-ba92-dbbf10bd710c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b7ba43d5-c0c2-42b6-87d8-12105f186d49"
                    }
                  }
                ]
              },
              {
                "id": "6394cdaf-8b19-4a5a-99bf-a8470e2dc061",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1985de2b-5c12-4dee-9dbe-3494985b7cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1edd5647-ab1b-46e8-8c0f-d295dafc97cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "554c6e0b-8ac5-4560-8cf7-a54f6debfdae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a5a67e0-5330-4c68-a2e7-c2a2d6f3f97f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43b34d08-e977-4d2d-9fc6-42576c5df78c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64d4ab8d-6d24-46ce-a41a-efbbe528a2c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7267b139-f794-419d-9cf4-c266658cb6ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cecbe14b-2c18-4ce1-ae28-c54df20e5194"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d26317d-0532-4fb0-8d83-729e90676ecc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "79813d52-582c-4402-9aa9-399bb2f9fb12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbbe3518-751d-40d9-8554-83f9c6f9e728",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a826be12-48ec-4966-902e-4819b418af09"
            }
          }
        ]
      },
      {
        "id": "68967cd7-96f8-43e1-b4ef-178331ad6320",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f7bc3dbd-2b9b-466e-9f1b-8ceb469b827c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc8fc946-dec9-4e42-988d-db7c7380c011",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7557533a-8d3b-4ac3-bec2-64914a120ad7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc71f9d-ae14-4613-9c8d-580cb4005712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec44fcc6-8286-4ec4-956f-fe7aa2a0803e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02989759-6cd9-4d48-addf-0e79e90daa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7bd8a5-3803-4b6b-a0b1-0557f07c88fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ab932c-6c84-45c7-a829-d14477f2e2a4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638e0bdd-4afa-4fe9-9ce4-87d5b56b42f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79da8395-70fe-405c-ab3c-6bb2611e533a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b51d121-e902-4d06-bbf0-183ad84e14c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9354f64-b165-430c-9990-a0632e896dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd8a258-c44e-444c-8e3d-7fc2d1a404b2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d070d63b-9fb5-4d1e-82c6-daecaa0bd80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1511cc67-6f4b-450f-8761-4d8072b9ce9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f92d4f-22e4-4d06-aaf2-0d25fce2bbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0857e484-3536-4fbe-9d0e-cc9dfe05696a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109b3518-8e91-4c16-a06d-6b0a7f45ee7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fada96-507b-4f71-a838-34ceeb89d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbe1fa9-c1cc-4780-8768-ea7fddcda458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c11115-08e1-4c23-9037-2ed0bbfa3350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b388007e-971c-4b9e-9148-a982235bffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf11d9f-136e-461c-8406-94f099bd6607",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fe8832-4cf8-4fd5-91c4-d5fd9456039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901a1327-eaf6-4e8d-8201-aac6e0178d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34d6b02-de80-450d-af4c-a7ac47cd3ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e7924a-dcb3-47b2-b1ae-acb9e4881750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170b9cee-a959-48f1-8976-2f6ca3b3e3b8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b01fce-e19d-4245-b157-6fdfde635fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8586eca-8c24-4b63-b3fb-eb81401f8de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae48b4e-c072-4165-8f03-934a88920eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ddd6ce-6cb7-487b-a72d-d70cee5148b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67c5e80-7311-41f7-b246-8d0db70c078f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d365f555-9adc-40ae-89a1-2783ee865682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cf9269-58d1-44df-87bf-2ed5440b0ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbb1618-8c05-42ab-a96c-15dc4bc58bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e27799-2095-4bde-88bf-d04c198705e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3477413-87ef-4921-8ff3-19542494c76e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b9b783-2827-46ca-84c6-954f215e7932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f822b3a3-3fee-47a3-82a4-d345f4dda8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7902aa8a-f500-40d5-8d0a-e7ddddad9320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35eb7637-c67a-43dc-b50a-a01f89c87a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7f3aa5-73d7-4445-949a-c2baa75ac3f8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b71cead-8451-4ea3-88eb-82a343dafad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3a956b-bf76-4af3-9ce3-6522a433c1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4de6fa1-5b75-4022-9142-11c49e38b72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "941263eb-677a-4c99-8028-4d8206a5edaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c1dabb-5ac7-40c3-a5d5-8032dbb88805",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1ffd8f-e996-446c-8b37-ec59179c9ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56faa683-8768-4ca7-bce1-2a5a80ce80ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f7db77-9a11-4d60-890f-c0ca27c8cf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a40452-c389-4039-828e-da604a511dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed10aab-0bf0-471d-bb30-55c6084d6d4e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a531c35f-52f3-4ed9-9fbc-289fcd47b27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862b7641-658b-4c3b-b5d5-995c84a9a1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ed75a3-6b80-4dfc-b11c-5b8188af7ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c84a6549-7cf7-42aa-aeea-ab95ecf42a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a85fbe-7d0e-4bc4-a1e3-f2497770c7fb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cee03f9-c21d-4a46-8a83-a18877c598f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8206d475-b59f-4ad7-b9a1-e6e5014bf793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93ad502-4106-4f0d-83f7-2d2a5734d42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79fab7d1-304b-437a-acc5-da7e412d0570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790ab1a8-d080-4236-8fbb-718d8902d7fc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5d20e5-8035-4cb2-a1a5-0f83519d7be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a848c488-cbf0-43c1-83c7-71b7402b5861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeae3b9-2d05-4616-9f9b-4fd70225dbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1acfd296-d380-4d93-a78c-76ba4d8ce8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665c429c-684a-4d37-9bb1-e5d2208fa5ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffe0cc3-c0a8-489d-8da0-c841b46507b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf252f6-cac1-4a0e-b6db-813aa5842955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8b6c34-63cf-41db-b29c-e9afadcd8533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08e2054-27bf-438c-a4f2-ad49ed283757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe76757-21c5-44c4-8d63-d68f3e178c55",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58551a3c-7aae-4407-ac49-93e6f19b5a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946a4a20-ae31-469d-a9d1-668930374701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92965ad8-6dce-4100-98d1-1ea3d95cbe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c833f1eb-96ce-44d6-8cad-7b0cdeb5ae07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838d52e9-c79c-4278-8764-6c250628e9a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7414f4-4ae0-4625-83cb-79bfbb394fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a91112e-059f-4e9a-977f-f535d8a42679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca70fd52-4ea5-4186-9666-9ec5732aa06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9795885-7deb-4156-af42-070333898b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e0e5f5-2939-43cb-a893-727209523401",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aca2a71-de1a-445f-9850-936e796b23b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906126e3-a8a1-4001-952c-f65f2c5ee6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e9a8d1-ff7c-4e27-9f5a-3316757f22dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37f3590-3b48-4a8a-9a70-6a7237760d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394673bc-1707-4e3f-8563-a43a1b604603",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b374187-594b-4bed-9b3a-e1e407755c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25574ee-c892-4b45-9fe0-2528eba28792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4bc2aa-28c5-4ec2-a184-349965d4122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d98876-2f01-4205-8eb7-ffe6cb79fcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820d5559-0eac-43d5-a2d8-67af30310c32",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2b7be5-6827-4c3f-8f95-dd424de67f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4738e0ac-c18e-40ad-9728-b26198eb201c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bbb027-8b94-475c-88d9-c927852ce0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca9f955-6d47-484b-a3f1-126fda0924fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09075cd8-640f-479b-8e28-88bec95685aa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6727d6bb-2244-4251-9727-75240d70c8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01eedcf6-19f6-4669-910a-677e70602961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a6e223-2396-4a7f-b579-b603efaa9685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d11cf6a-bb61-4ee4-82af-1f5c9563a9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53cb254-77e9-4c6b-8ba7-e021eecbce29",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ec2c0a-1157-408a-a0c2-02185d14a5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac29ae5-d87e-4d7d-8d05-251b935513db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36a835a-a028-4fdd-8ae6-25f60c99e83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "283ba219-d752-4d7c-bd88-30a515b3d72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e10a08f-ce05-47f3-b690-41f72d2b9405",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7d0057-afcc-4f2d-98cf-367707b8bb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076c41dd-b27b-4e0e-805f-57373d1e37d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac03675-018a-45bc-8207-00b2d012fa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c33da2-7398-4459-8d1d-c97d9ffb2d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd249972-53e3-4431-b9d2-92d5966c0871",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f350fcdf-c085-4775-90ca-8ca3743ca33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d713cea2-a8fe-4e3e-925c-86913a2dcc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b2993d-c597-4470-beaf-d3361f7400b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "211ef6c3-360d-4124-a76b-aeaf5f82cb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639f575e-7598-4562-ba50-d3fd50321f9d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcea4dd1-f1c6-4932-b088-881454d855f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a679bcb-a843-48e4-8157-bc243a6424a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776e67ee-7b76-4fbb-8129-cfc35a1e68ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2469ee9-daf9-452e-accb-59b5d732880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe92b6-f496-4f6f-8a14-448f92331df6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daf9271-7810-4176-9c76-345e9b5e66d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcec8297-e270-4c37-8f3a-389c0ec57aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65454a7-d029-4a55-8180-c86aaf738c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a68098a-ab50-4b0b-a356-5f453602606c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23127a68-2196-43f5-adb4-ad98e0e65f09",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fdcb98-db84-4842-ae79-3df16f9d78eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b388f4-ab10-4b92-a220-e2dc34aa2014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3e17c1-6715-4ec1-a971-565a6da30d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26186b56-77a6-4103-a2f8-79104daa349d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446d0db9-5539-4db4-ae67-fb8530f358d4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c3e8c6-72a8-4605-8bcd-6a420665194e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c14dd4-886a-4ba5-8166-0e1900d9f2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a400ffa5-6169-4a3d-9446-f5d4c76823af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80eac509-0dfc-4cc5-9baa-ee0dd4890a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3407be7f-9feb-45ae-9760-16b840695c7a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c920b31-206a-4aa0-8a83-c4c92099a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ad5dd8-85f0-4b16-bbea-f2205edf7101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859f3754-ec00-4bc6-b541-2d39e116ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e93308b-f1e7-4663-814a-7620c7cfc667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3636af81-ae67-408f-805c-912b6de7b951",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de93e0f-4cd2-4cc2-a98c-89963f35a310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d6f787-6c12-449d-a63c-c8ab43a805ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a964625-a4af-432d-8084-7db8d3e762c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad5676d-7625-448e-9010-c90dbabfcc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5a451e-f792-4578-8997-b453717e09cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb206b38-b1b4-4354-959e-a79e3ddb3df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db61c509-539e-4d4e-a540-f17ea56a3268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8b01e2-a5ef-4a73-9285-931355657ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5954bbeb-5fbc-42fb-9ac6-33796afef3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f034a46c-eefb-42c2-8128-09fb7fccbcde",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897d2977-9924-4831-9f53-d734275a7e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1d2ae1-d628-40c9-ad71-709cf88f84b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe7eacb-302c-41b6-b123-471c5945b2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1750fed6-374a-42d4-ad55-1c4178ed178e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8173178f-e713-4ebf-a403-5bcd828e94a0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d30f70b-ef68-4dbf-b04c-0bc9240a3737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3250812a-5f14-467a-b8c1-4bc14f55263b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f553cf-e4d1-4c58-98f1-bd3dc788fdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47266cf-7df9-4eac-9fb2-17f5b4b81ae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85f3e5d8-0d5a-4c26-afae-7a2528741a32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ebd6ea2-d317-4c8b-96ff-4ceb9a80df32",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afe04c9-edda-4bb3-b351-4e22b744236f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7c2df0-2dc8-449b-832c-9cb5b0268483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3569793d-0aba-4661-9cae-124d35f0c78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6b3611f-d801-490d-b6a0-c8f4051cb418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c038224-9044-4550-b1e9-c217355822ce",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee0f96c-950e-44d2-9c5b-e2686906e6fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "11df0875-d806-4b44-b0d4-fccd90fbe3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23101c71-dcb4-4f24-8d9a-64ed26eade83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "829303f9-154c-4f40-9041-34f307ad66b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5099996c-6a11-4683-a90c-5b2d3c4e3d85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b96d757f-500e-4d0f-9606-53dd85ac4443"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1948b9bd-18b8-41c2-a749-0bf38ecf938f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c48399a-bc3d-40fd-92ae-e437b7f94fe3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d752b3d5-aa2b-4aaf-ade8-44f8ed672bb9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "22c0fd9c-151b-4c98-919c-82f395e5c2ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e1dcb4d-cdb7-4214-8243-a6497b976885",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b5efc0c-a3f1-4f22-828c-1a61e6c214f5"
            }
          }
        ]
      },
      {
        "id": "ff1a0838-5d3b-443f-bde8-2460d1ad8962",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8770880c-6fef-4542-be5c-4f978d18d536",
            "name": "Negative Testing",
            "item": [
              {
                "id": "034d3a18-cd67-45a0-b14c-36bb26192a53",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f82e604d-435e-4f9a-9a41-91ae47c7a379",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef24068c-7f8e-4f84-aa50-48a6f8d2eb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb8e91f-29be-4422-bb9d-7b3a623dfed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c621799-b306-4efa-add8-e1b120c8e482",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7016f0f-9d68-4fef-b9cb-99a5b0d43e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783dffdd-053d-4fc4-9da7-67b9b0924b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd04f4b9-a8ec-4673-b97a-f9b09cb6882d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1abb831-0e85-4c8e-823d-63791465233e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba99801b-71ef-4c9e-a69f-38d68422adf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39cdb69-09e6-41aa-89d7-271de5faea23",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbb2ec7-2e38-4db3-a2a8-c782a3f4e0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064db2f6-8ea6-4ca4-a61e-c763b08241ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdda69e5-738c-446b-949e-52c214abd35b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec48d50-4db4-4bcc-90bd-49095b31a4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d0aa43-8b84-4e07-ab7f-80f69f42d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861a3049-73df-4ce7-b19c-e5c5b5100df4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363285d3-4096-4b36-acd6-706c961fb3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7845b465-7a65-49d6-a630-c25555042967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fd6874-4cd5-45a0-a8f1-e599e82e5e34",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5905d148-da44-4095-abe4-a1c8d7305921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd00c2b7-0111-4f1e-bf22-4e4ea9de04c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee7268d-1e3a-4f8c-b8e9-335da9502953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc013cb-282c-402c-9beb-7c08bc59abfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1bfa6b-0d87-489c-9896-c0f46c7e6eef",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe60255-323e-4000-9466-7b9d32d98b7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecd833d2-dd0b-4986-b421-81608f548e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006448f8-3dbd-41fb-8e1b-d6212c1cc686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239632cc-ef3b-4c08-a689-4b2624b87eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2a5182-7b62-4eb0-9ec7-914735c03e9d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fa9196-ebd8-4a3a-b41c-bce6aa9c0ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d785a2e4-49d7-4e1b-a53c-e62b3ce2c118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833794de-9938-433e-98ab-c6955c677a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18ed5f0-50d0-4f96-b9b0-2e435a435215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023d856c-a26c-4b7f-b2d6-da60a00d8aa3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6c08b5-bfb8-4158-9c47-c492bade6dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf54777-a25a-4bd3-b8af-648a8312a5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7db847-658d-4887-91f0-666a93f59e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f254f10e-9849-4259-ae9b-9e9c8f682bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d8a73e-e188-4098-89fb-00747a9bc16a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd132bf-fc3f-4f40-b57a-7d21d2e816c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf497da-99c9-4283-b1d6-615bc77c3824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051de85a-b34a-42d5-a24c-dd6967841bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7af32a-5fe2-4b53-87b4-6bb6c3341c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd011d92-208e-4512-bb6d-b0649bab7be7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb39ebc4-9df0-442b-8806-041b3c8a362b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133077cf-54b7-483d-9568-797f7265137a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d96d446-197b-49ad-9558-a51e17d07b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d88f22-d40c-4f14-825a-5a67b749af7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f5fffd-afed-4be6-9396-d03d252f1330",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a356aee0-9078-4fde-a345-570fae6339fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ed2d0e-bb10-4dd3-b068-aeae6050fddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0768432-3ee1-4ac8-a5e4-7b72392a1fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f63b58-5704-41fb-a1ce-6ed26bea6f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3a0a6c-3327-4f76-9188-4725f59860fd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285b7824-b500-4c28-90fb-37aef1c2ad93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214e7330-b32f-4252-93bd-c9f81bb9e9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a57148-caaa-4227-9126-5e8d7c334ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee49b0d-8618-4fc6-ab38-83c4f424a288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8343ce30-3217-459a-85fb-ab9a2cdc144d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa853728-3d2c-4c41-977b-f84f182214be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e4cffd-04d1-4dde-b96a-f14006a9a8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2617734d-a4ab-412d-b968-8f48c9b082e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53f0baa-fc77-4f7d-8fcd-30814d4860fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1a35c5-eb91-4d0f-bc32-bfbc3b3b0a28",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b48f18-0964-4364-bc57-4a4efb8fa3a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e14846-9cf9-444d-bbd5-a22e7a3c1375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22a4385-ab46-4ab4-a7b3-5a4243339c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d5adaa-6f82-4c0f-bb3f-4ccff491da90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c28e8b3-fe20-4933-9a92-d52aed308abe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46d22f8-e090-42df-af0a-08d968bcd25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f0e2e4-af96-47c0-894b-4abdc254b93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce41e7f-f4a5-4c6c-8524-803920c985c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a58d7b-5305-4e37-b76d-7591ce87feb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2467ed-bb0f-494a-b809-914de9ac06c2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be4dbbf-ef14-45b3-948d-1265d70d5155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e117b111-6e7d-46dc-993c-fe64a426ec4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6eb8352-140a-45a5-a407-2b56650ed67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9257cec6-c7d4-45b1-b24f-5156a5ac933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414de12c-bc31-4f61-850a-6ad2c6a50ca9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71df28c6-f59b-415a-94c9-5383bb00aa99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1231f782-4352-4dbf-a2fd-62c430758841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eeeda3-d2ee-4721-ab3b-75ac5566036a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5497559-4091-4504-813e-5126efdb8efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385156f6-ed53-4220-b7ca-84314d05921d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d6fe36-8264-40fc-b3aa-0f2c825dcde0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bf6a45-e8b1-4350-964e-7a031a6deee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc47dcde-d526-4bea-8e09-9927d3e9ac37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2272ed-0006-4674-84ed-b8f2d4921723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde7c4ed-1492-4068-abd4-df2eabed7915",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ac8ec3-0677-46e3-bb4f-788e33269d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb257d48-2d56-4e92-8a8a-b7405e1c2760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab9b674-6401-41d0-80e8-2444f1d35d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07426a6-9cc9-4ad6-aca7-b23385dc37fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581fe087-35db-40b9-acb3-9d3396a9ac85",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385c82a1-0c8e-42f6-8613-5d82a0bc972b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ded378-5b00-4d83-ac5f-07c6ee38bbff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5804653b-cc8b-4e79-a1df-b561bc486919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd414af0-1c0f-4790-b21d-e37f03509ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1309ba3-7873-4d99-9dc4-fa6e6d7d8dd7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0984bed-167f-4875-b5e8-0035b13c4359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8537c7-904d-4c48-93c6-311bcf077b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4907210-3e78-46a5-93b2-94e346179c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929a8ee5-91ff-459b-aa7f-6c500c11180a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bc1255-5416-40a8-9ed2-8c94cc703aa8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fa0581-ad4a-4f53-a354-2c2068cac41c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44250bf0-edb7-4011-bb80-d93dc63c3ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5816b15-da15-4e8f-990f-7ff73ef3933b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10ac965-bb71-4b3e-8b1c-66fed08e3f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844dafed-1b68-4470-836e-7b7b15dc5582",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a76e96-dab4-4cab-ab7d-8116c57e6ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18a60930-73b9-4f94-af36-c9c78ed5890e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386717fc-24e4-4747-9b8f-73b1d928b325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763a52ea-2478-4b05-9c77-de2d636dca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc41612-8ced-4671-ad6a-15a0bd36219a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57a09b6-84fc-48a2-9138-71aa25d0a035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8774e88-0f43-4a9b-ba90-715339ccc064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf60073-6a8c-40c9-9b1a-521338dd5982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d398bb-4876-4e70-ac21-26c1b091381d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7ef772-f074-4b1b-bdc2-6bd2d50eb8f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523eacb6-aa56-4c90-8d88-2bc8b4a81bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a23bac7-7168-470b-b735-ddfe7e4e42b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602f091c-763e-4680-a1a3-cbc1cca00451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf284181-466c-43aa-b5b1-306d6fc82efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ca1e6-9ff4-4436-a8b4-49b8edd4d61a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c877e1f-4023-4268-9aed-9a7a607e3a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938c3336-5681-4f87-b1c4-35030cd4d212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac092f8b-4e79-4355-a432-60db9db7513d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a638a620-9516-4912-9ffc-8f088407cfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb595f03-8f42-4015-8d9c-7980a8086c1f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c4d98a-9ddb-4c83-8ee4-e1def75538f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c858f5-1269-4b08-88af-e629a68f434d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fedfb2-d7a9-496d-aa7a-3e54c856976a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e0e979-252d-4d80-bda3-28219753cc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b614df3-e296-4034-ad20-8f0d7f337e29",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d20a6d-5e0d-4739-a781-cd511d714ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71dbc531-ce57-4328-bf1e-0bc88e96ae91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1724f5-692f-4ea4-8f60-564bd950bd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70aa6a7f-0ed0-4fa8-b683-183d0f0e0cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05522d78-a39e-4d12-a18d-a05f98e94830",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca62149-c15e-4bd0-a8db-2e85798c5dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d92fcb-e16e-4ed5-b63b-b3a08c36a785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fb4d78-3aaa-40a7-80f6-1336378091ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fffc166-3ecd-4ad2-91f7-f785890231a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013961ab-fc6e-456e-b2ee-885d3e3c8ab1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd9a3e7-196c-4b8d-9605-ab39c78b310d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc0384c4-90aa-4d28-b6fb-2a9d5b5683e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721d2b96-689e-4d6d-b08d-e6b5e79c18c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09304ec-c383-451c-94e0-5685ed8eeb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06def2cc-79c4-4be2-bc52-aef17dac4e8c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807d4b0e-827f-4b3a-a38d-bf01eced90ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a53d9f6-5308-4b14-881f-49f5ad713ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e8797-a809-4d3b-b565-b2077bcf24cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc608ec-306f-4841-9246-520bfa7a97b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd447e1f-21a8-4a3b-a09a-b8236f419f1d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cb1f49-1f47-4c35-8f56-36c7bd11f4a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b9b49b-513f-4db0-9cd0-b48a3360715f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2160dc-a0d0-4de5-9cb9-173aba490869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400c902e-c864-41c3-8ce3-bef7c8d9a1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3351a9-a655-4e63-8c79-53c6ae5fdfdd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ca2cf3-6ee9-4b8c-abe1-0d21bde1162d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8caa262-4cc0-4672-b3d4-8bc3b73f17e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919a50c5-423b-4639-b87f-70864290cfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e75a4be-10f8-42e7-93a1-b0b366b9234b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e78c2a7-cac6-4d30-99d1-59829690bc1c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f4093b-ceb4-4e04-9807-ecec330b9eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5141b46-ccc5-4bee-bbde-5165debfcbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc44855-0ea1-483f-8c75-2eb41987b0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81f64b2-72bf-4b14-b24e-c125d166c650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2ce128-f4e6-46b9-8948-6b6caefdb100",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34be1057-4e74-4aac-9d81-9f4f53b966e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63707b8b-63d0-4f0b-b8d6-c85e38050dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcae8882-9c61-479b-ac9f-a8020126e92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766d68bb-7f79-438b-89a2-7e618ecbb3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdb2f2f-9daa-434c-8297-f625109045e0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61af8426-68df-4715-922e-64055791a7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98284d68-5843-40d4-92cc-ac4ed54ba947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e24e7a3-a04f-4c8e-8638-025ca3e195ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3844c0ad-0002-4988-a605-45adce56f9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04af784d-5743-438f-8ebf-d21653fc05b2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9e08a9-1b7c-49c8-8400-29c7e4e4fdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32aec5a-5f46-48e5-85f3-8d7f1041f95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906f347e-491e-463d-b43a-fb702fa7e54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bf388e-e26a-40a5-b078-240688572c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3815f16a-79e9-4f49-bda9-d9abf33ddda9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ce52ea-4447-41dc-9740-a04db9059ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690881f6-9e1a-41ba-a216-3cc895ddd51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3d7784-3784-4d35-b1f3-82fe0d118c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1759d9e-8359-4ed6-9550-7d16d118649f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5612cbaa-aad3-43d1-bc86-4643b0790106",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de4e23b-2bbf-4097-81ee-f2cafcd0bb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4279dfa1-ccc3-4714-aa3d-b34d0c3801b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89260ff9-610b-4eed-bfe6-2effb99d4cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b3383d-961c-4468-b42d-cf714282d8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba27bb2-0ac1-41fa-a3a5-f29b4e7d60f3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f662c60-56bc-439a-8135-02369813e935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ff7f6f-ef4d-476a-9759-5569031a0000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7d9a1-db3e-4e12-a7e5-81fc37cb0875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354aefdf-0880-41bd-bef4-532989482355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0370384a-04ee-45b2-85dd-5c28f007e474",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba89766d-d59d-4b1b-ae6b-d6d6382fd8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57baf85d-7bc4-4a25-8966-7b6944f6d3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5822d2-c6f0-4a4f-aff2-a20b72f92f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491617eb-cf64-4367-a5e5-3f16e1a40dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9feecfe7-aa26-4c06-ac65-6a6af63a8852",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c70ada-b8c6-4842-874d-75f68ab11318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e66780-8e87-4710-9b18-de35192aa3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67f358a-6bf2-4059-96b4-0ae66e4512f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed19cacf-a935-4598-a954-61cd3e3206ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d41d65e-d7d4-422a-84be-6535199050a5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880f4cf7-ca90-4a80-ac0f-27a0a6960dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4dca3fb-29fb-488d-b3bc-e26f9cf68dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a06706-0a13-4586-8995-d4c01d1fae79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f771dc6-3658-40b6-9a10-ca6dfa887598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76146abf-be30-4284-9c7e-7ea9c4aa1cae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b89f1bc-09a0-4dbd-a27f-cb847fa67216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36683392-ebce-43d7-898b-5daea2f61171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95df7c70-bed2-436f-9e4b-775f5156fc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70130f40-d7cd-43af-8bbb-4f19502bbf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8c24a9-a146-489e-b728-75a86d7bc0df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd23e12-61e2-42d2-855a-45e6d86be10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062d2b4e-db50-4a11-9c9f-88b8988b23e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4672c1-63da-40a5-b892-c6ce5ccba4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48301caf-a4a3-440c-983c-277d36dfc479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652cd097-fe8f-4abc-a226-d1ef51773ce5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0604379-0bef-4226-a109-1021737642a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bce5c7-2f5e-49e9-b257-f81072fd1cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e586cfb2-7556-4a68-a9c6-5d5400312275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f166e3f3-44ee-4a00-acc8-47acced2a519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94833198-3a04-4774-a397-998d94eb95dc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4f3432-c084-43ff-8958-46d28a9d3c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859e08e8-8a0c-4a96-a477-a62c4116af7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210b4a41-bec9-4d4b-998c-eaafa50cf716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e072774b-b295-4e96-9793-9626854b990b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677a6efa-d39c-4a81-bf1a-fc7a9d63f249",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20daf010-3705-45fa-8c78-7a35b346d7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a351547e-1043-4009-8b5b-3367ce50dc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c7d82b-c584-44c4-990e-e13d231d42b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dc0e4b-0de7-45f9-867f-dbb03ad8fdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957bed2d-e6f7-4fea-8497-0992445a34ce",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9225776b-29ba-4156-a3fd-93bd431672a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94137a2-4e98-4e61-a3cd-22e1a0f0b73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e77413d-2421-45d5-b6e3-3d6da32d199b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266b8364-74c2-44d6-b22a-e8f506c16bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd30d6e-9aec-4756-9518-d416e16ec9b5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdef760a-07ad-4cf9-85dc-a902e34c21d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad70043-e623-412d-a356-0856388d6123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e551dba-4b3e-4a54-b945-54f1e37f7b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51067b8a-550b-44f6-8eac-421344817387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b8f7ac-ce2e-46e5-97d1-0d5426ac12b8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b54bf1-5233-4560-bd93-d4d66299addc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0768a79-cb49-49bd-9632-00e06b3baab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef134b13-259e-447e-a767-b19d4ea21b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa28d3a3-16c8-40c0-845c-e8117ebbce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afabebd7-2312-46a6-9daa-de9dab2ddabc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b978360-1d07-464f-8335-b76e9bd67735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f20ab66-dc44-4af9-9db2-2ee4b0247dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aaf4ec-4e05-46f7-b083-98faea774f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8d3a34-5462-4e74-9e86-c42119a863d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6078b07a-7ff8-4409-a915-f4e4d033f22a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9750729-e622-4a85-90dd-16595f7a23fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbcb5ac-c3bf-4a49-b2f4-670c536bcf3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf2e1de-db4b-486c-8e18-e51cf19967de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f067e74-d703-4bed-b723-dcfff1a929d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d014ccef-f0cb-4b73-b15c-76e6ebf0c6fc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b37706-29d4-4081-9ab1-88500ce5bdb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e56b9a4-d2de-40b8-a9e3-d8c7c2d436b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7fb70f-9ddd-464f-86ea-eeaba1c896ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fda5c82-b4b0-4c5d-a2f4-5b74dcaa2300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186b7e85-2fca-4b8b-a723-7307fea8465e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bdbcfe-2e38-494f-9cc6-ff9c55c04c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aeb22bd-035f-4136-b927-1ac95ac5278a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ce473a-f704-4b26-84b3-7d7ae71aab24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d08d02a-9f7c-488c-b232-fe21dff63dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adc17b7-c819-4bd4-97c2-84654c25f623",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b7e309-54b3-4146-9f27-64c6a231889a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64927f36-a580-45eb-a3c9-e1a24495a51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c49d45f-27e8-473c-8cfd-28342ce90cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33479c5-8621-4382-b132-b1dd1d9ecd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3615da-d0b4-4e0c-8c02-a0d84d403885",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb1c9d9-2547-4b9a-90c9-d507865a6f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b3392b-2c60-414c-bff6-f30758612928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e6e900-84fa-4033-8071-ad2f2e7c0676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f139dd-f072-4527-b0fd-c061ce2ff014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e06364d-898b-459e-bfeb-140e98ccb838",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab712144-d71e-49a3-aa3a-ba6c7077dcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bb4483-e000-430b-b84b-124c17ced489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fa593f-4f88-4211-a03a-3360e42b4f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8943d5c0-9e9c-4a78-83c6-4ea0f41e616d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487f9e4b-ebad-4700-a362-ee5b00a127cc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26c71bf-29d1-4105-a524-d81f0c289840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50a1797-64b0-42d2-a802-25cc2e721ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed89bf86-26ad-4525-b166-4dd010fdc0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87456b9f-43a1-4d44-b9b9-dbe3eb5097ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9498a8c9-5123-4564-b827-c8b9e5a3cae0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09236c23-4326-4da9-a025-3411fc908216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e2791c-85c1-4f8a-9e66-a82011103cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2c7ad5-134f-4264-940b-cab121707e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891f80b9-79ad-408e-9c11-7f9af50ae8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a708a-5896-4acb-8176-d6c43f8775c3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57de6455-a10d-43d8-b481-f329204f4a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce5e0ff-dc3f-458b-a64c-6e531a9ae93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bc39ba-363b-4898-9b4c-3b1c71c3d70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43cd416-dd2e-4378-a159-1413db33c683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3510a7-8dfb-47de-b631-ef67db29d0e3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54f573b-55d6-46a0-a93f-8830d668d434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057ba3c2-8038-4cff-ad77-f1e2cbdfd51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b25334-9aef-4642-9d38-0804e49f2e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111923ec-2f5d-4b69-9ced-2829fd7a810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20235fb-fad8-4a6a-8e3a-77ccc9eab9e6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1539d4-57d4-4b5d-ac84-4107e50b2ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64389580-2ed0-4ab4-b037-a9f96f617fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b425151-61dc-4840-bed1-051bf288ad48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0f13eb-3f1a-4fdf-87fd-3eb938df93ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673d918a-43e6-4fc7-86c7-e60883a31d15",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a423ece6-fd88-4654-946b-c72cd463e846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7719a995-a508-424a-a8db-9ca1a35dc7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c076ad3-eb16-42f6-bfd4-4a6458567e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f711aead-fb43-4983-9f45-6a43b565d5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdf4bf7-49db-4f94-9d5b-9bc11cb64a11",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba1f501-4bdd-4b72-826c-2a8efed0fa9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff04e5d1-b3d0-4456-b03f-02e16b9822a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d475b1c-3364-4d0c-b968-b45fcfa93203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49fa98d-154b-48e5-bce8-d147bf3f84af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745e7f3a-4128-4c73-87ad-61e2c8f50ad4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a59b53a-e10f-453b-af80-d15d72466e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061eced1-f707-48cf-9212-ca43460683f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c12c4c-9031-4a01-affb-2a635e61c114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be06a100-0dfe-4480-b236-2bea358a3d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae92c858-a430-4bb3-ab63-1ff2bb6e0080",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35da90ac-7305-42b6-a128-82ea2648acd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22997fbd-81b1-4608-b3e3-6e60584a3e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fde32a-e2bc-40ca-9406-6d3a06e17913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da86bd36-b9ad-4078-a7ac-2ccfde8f264c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6665cb4a-d664-40cd-9df1-f388bee61240",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fe0cd6-5f1b-477d-ab77-aaa8d8dad44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb7e9a3-c1ee-4596-b48a-8f75af9c136e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27f9fec-754c-456f-beae-daa7676a3fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f9b838-7446-4e1f-81bc-ecb6cc28ad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70365f47-16ef-4a23-bb0b-66190f6c6e0c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ed016e-2f91-46b7-8c4a-f7116b287c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1da7ea0-0457-435c-9a76-6623399ad799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4b2a03-b859-4e96-8c39-4ea53a1e7954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0473148-cbae-469e-8370-102b26b654df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92b0eac-da5d-4e37-898c-2d69a947b6bd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08accc8d-65a0-4278-a6cb-5d09167e5fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b681d98-40d5-4ee1-a4cd-826acbf9c209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60b3cc2-954d-4197-8f83-7fba48ce7294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88552d8e-5163-408b-b81e-aecc63fa87db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528d755c-6dbc-493d-abab-52fbb695ea6c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff0e862-0c3f-4c4d-9153-bf488194239d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f71a1d47-f694-417e-84ec-b92cbd204e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a82f0f2-0967-4e87-b768-500b64bd0834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426c3ccd-6e16-4b4d-957c-fc9f22503dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004e7192-0139-4f3c-b2b6-3bdd6ba2fdde",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aba21e-4744-4937-93f3-3c0cd9a947ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27dc44ff-399d-445c-b903-3a9a2fac8b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9661207-2498-45f2-9d09-79be34f3ad0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c8fca3-4317-4fa4-b623-eda23d057a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e600a9b8-b9f9-40e7-8d6f-117b2193eb5c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43753838-83c8-4e85-a075-b3e744685c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12738d17-fd8d-471b-b019-30f5b3468f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0d090c-04ff-4525-ad67-facb2b09ac37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147ff689-1391-43c1-8f64-6eed53fd28aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdffd55-d0bb-4bb8-b738-e9944e5ba98e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03b8aa2-65ff-48dc-895b-dd93bd629815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a46bd6a5-f231-4c7f-8879-111d06335905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf8beb2-daaa-4e24-bcd8-2bfd459447b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cff8d7-4e8b-4e6b-b99b-9681110aa6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df55bc7e-ab87-4112-8e23-9d0efcbeaeb4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc84d8d7-73c6-4617-8728-591ad9d6b62e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41621f7f-d3d7-4690-aa4d-e0ce6eb5eb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe247a-d4d0-4e5f-8919-cbac5fee7d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713d6579-d87b-4926-b8d4-567c906e7bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954ebab9-d2f6-4d10-bcf8-3436b1cc1a44",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7841e40c-2be8-4bee-ab0f-951543c52ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ee0142-5b7a-4848-97da-31bc8b9cbdab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a914a6d-329b-4ac2-bafa-dd9521dfd3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2fb069-6a98-49d4-8a7c-d7629d57fc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79efc83c-37d5-45a9-b313-37887c761713",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51130859-f828-44a6-ac46-0f8635d73d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018b7e0c-6712-4122-9ecd-69e6c0e6e9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df41b6-84cc-46f7-bb00-f8e01633421e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d61176-7094-4755-8de2-211cf6cbd525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96be9e3-436e-406c-9334-e4fd09c89d63",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf749815-202c-43df-ae98-b0045a4c961d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee4fc3f-c070-454a-936f-927770ad1900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d888bd-622f-4617-a9f5-ee7882c1b8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5a04c6-be7b-4e26-b0d5-45c563e7c7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45286f51-cfbb-4239-97e8-b0aedfa60502",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c45534-34dd-4090-847d-ce2e5262f4be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f263c1-4cc3-48e9-a26c-ac50806c2d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5eed953-ec45-43c9-b851-6d5ebf75016d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8edb856d-132c-438d-a374-e245bd087709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc86401f-c66d-4a7b-ade6-b9668f27bb84",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe327cc-e315-4bef-ae90-fbc8c7ed2c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846cdb2d-0f4f-42af-b1ad-8182269160d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a55fc46-0239-48a4-bf71-e183957d9c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dcd51b-49c8-41ab-a4b9-394b5e02bb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a22532-e353-434f-9ff0-e3fd05f8f035",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ca9d52-46ea-4370-a400-26092f432279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c7b27c-c86b-4fe7-9501-b947b6df279f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3bed5b-8d26-4247-8ede-490d7e0a9297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146b21a1-ebca-4486-8ad4-4827eada2751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c74ada4-bab1-40dd-ade2-fe0975fb2d2b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c5ddb4-8a7c-4ff6-8e0b-320d7e129dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd3fbfb-81d4-4e8a-b0b7-02c94503bbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2210d64-82a8-4b62-82cd-5d82b461affc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4489518-57a5-4bbc-a321-57462a62e5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01d1498-ddf0-474c-be88-f1c93a715580",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743161da-0859-4bf0-85c6-a6ee4ef9898b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf96a16a-2cc4-4a30-9012-7c6705c35ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a745a3da-523d-4146-a1c5-a82c3bf7063d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90c0aad-d9f7-44cf-b3fa-002d1da33fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f208c4ab-858a-4191-a84b-9382e57564c3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1505fba-7f41-4bec-9ea9-74bebd9c6db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53eba90f-9952-43e9-ac22-29c10e50d3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d3aa20-81fa-450c-bbe5-3847f76595fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2b276b-af91-4126-8c0a-65b8deaa9184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2558c6c-373d-4681-8e8b-b30ee21fe7af",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b328c3d-6af8-450c-a94d-24e1357fcb11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72936f4b-2d64-47a2-9ddd-6459692df4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec5bb5e-b3be-4a40-a218-5d5c7ec35753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d786b22-5dac-4207-97b2-bf314d10d807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b111b4-cb62-45b8-be50-b801fe2888e7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62b15a9-bed1-497e-93f1-ce955e37b489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf712ee-ec4e-46f7-a75b-4ee04d79d104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f597cc09-ce22-442e-be40-c22dd9a23407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af173aaa-cc79-4347-83ac-deb8e3d17ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e68f99-f068-445a-b8a1-6d74349afe7f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee11dae-7e2d-440c-93e4-795e8b4b3ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90b03ef-f460-411c-8838-844942f2dbb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984e1958-d60c-406f-a2f5-040b6dc043ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417a5df2-a5de-4f6c-9362-34de81d815b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd71ef0-5dfc-44f9-a132-5ea984da1264",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae7542f-f1c9-4b3a-9eb9-134014d69a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a388e5f4-0b74-403f-86b6-704817376448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96ec2e4-014c-4792-b5b3-b010f1cd9d83",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5053c13-32e7-478e-b790-20a6be6e5d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6862ffe1-9435-441c-a210-18f1b7b76c92",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc17039-1478-4ba6-9e24-b8bef7e25149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63554e87-05a9-4f4f-9073-c51ad2baa67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e776a5-8264-4d9e-be4d-897500f8e750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01876e39-80cc-41af-b317-ebf721e235c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed112f81-5fc3-43ae-affd-97e2d4f2dd39",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b595ba6-47ee-48a2-ba55-b63b175e54fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a38585-2fe5-4139-a479-15b9d849d39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5873e3-abc6-47b3-8d16-f10fee42ee18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baf7990-411b-4689-a4c1-8b98645271e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f29c426-5cd9-4602-bf01-66df8d855eb2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310cd8d3-8bbd-4a46-9bd6-09b897f1b009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ed32575-0bdd-4b01-ba07-d00696800db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3424cfa8-a45b-4189-af69-c487f5cce781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e84a1f0-ca7a-4490-b5d3-688252d502f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa272dda-8109-4f4f-8166-124471c09b8e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822b327f-9bfe-4775-b379-1c5851dfa61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dba4380-b301-4dc8-a35b-32011d97a59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8ce38f-bbb1-4404-8e56-a97f1e8d7c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ec6cb3-18e5-4b47-9c70-74ddd4ae7027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee8d838-1a1e-43cb-bc5e-3d107bb92cac",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9edb350-bdf1-4374-a318-77588211fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e91300-69f9-45a6-b750-5221d6f14984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6595e39-bbf1-4048-a728-87a8e803accd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83b4cb9-c251-4011-a066-d7c6a1a10bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a343e9-6a25-4a6d-b407-5b7dac2cf277",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506a1224-3c9b-4515-9c01-5a4202c70cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4852418b-db9c-4b7c-a9f3-f9977187bc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7beacc-effc-437f-b22e-1e142978f694",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765c9308-6ba0-48a5-83bd-77d7c9478c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb717ac-8c29-4f72-89e1-ec05bb3a4461",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bec1057-f845-4f9b-b844-b9b5d85c0314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4caccf-a05a-472f-a5c4-c58e71fd555e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c3fea7-740f-45d4-a3ce-96e80ce94604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1c92ba-3e7a-4306-9a89-110453af9241"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "202ebaa9-118c-4acd-b4f7-56fa6f4382b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ff70882-0559-4f7d-9427-d3a4f6503031"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc5a1080-e85d-4d96-90f9-4dc5de3f3269",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f4098c8-eec5-4e5b-bfa4-c94a9e931313"
                    }
                  }
                ]
              },
              {
                "id": "c1bfc714-3ebd-40be-8306-62c68ad5ba2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4dfcac72-27df-41f4-b392-511b60dce27c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb50e044-54b4-4f27-adb7-8163f0a04aee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bf93c0fe-8810-45df-b854-b225384f8811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4ea68a-c241-45e8-b4a2-76b043b38df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39d187fd-0f75-4245-8078-ad77c29ff191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956e028f-f568-4a9b-bac6-ea1312d11011",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c6cf7b-4ec2-46f6-8a56-9274d8bcc411",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "02cd6c11-f9cc-4b0c-b4ef-6c13a50910e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8af14f-bb57-4678-be8d-99ed1d0bcbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "def4ceb9-1584-4de3-a043-3ac07076e2c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a0be514-6332-4e84-9c6a-9ddbeade826f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f67ff0bc-f7b8-433f-813a-7ddb39c46329"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e0c8c05-b6f1-46bc-9210-bccfb8e398a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6db3e649-2909-44e2-93ae-d6a22648271b"
                    }
                  }
                ]
              },
              {
                "id": "e3477c26-0bd8-4253-aa73-576d793c6c36",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c136e0ed-6ace-49d2-8f90-40e46dac7a06",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bdafce-d1a8-4500-af7c-993c6f3adfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f87fefad-7fce-4ea7-af55-0eeede1bc4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d1bf9f-0bf5-4327-9b42-cc7bcff8fbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7b851b-3d0d-4dc9-881a-3172fc5d676f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5e04710a-966c-4fa3-b4c2-d9273658621e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "907bdd49-45ed-4839-b7c3-043b19b1d0f7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88e66242-dded-4eec-8ed1-9cd3d4a4a200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "65136765-8483-4a40-8cee-b528b075da94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cfb4e53-67f9-4bde-8cca-db7680b58908",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93221c35-0a3c-4367-b8d9-6e356d8f515a"
                    }
                  }
                ]
              },
              {
                "id": "e716aafd-b9b4-4131-ab12-4ca378888757",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9de91dd-0ef8-4664-8dce-1b413f1331cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "88241036-ebde-434c-8e97-5c2ee430d4f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41590b29-73e8-438e-b216-3e7c174b47c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b24b8e55-d621-4762-b772-df2d67b65c75"
                    }
                  }
                ]
              },
              {
                "id": "a3b4aa7a-c59c-4f69-9497-a4bfa5bcf63f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e1b2f16-733a-45ed-afb4-23a410be9ef2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c0f5368-3ca5-438e-845c-0be02068ba9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30167ede-f031-4ed1-93aa-5a46e4192a60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61666648-c7e2-4208-9141-69b0d8a4272f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d64281d-5015-4aee-80a8-1a4e06feef43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f612bf32-5ae5-48f3-9017-72a70d903a0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e716bb6a-bc5f-4504-beb1-89ff1cee6aeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94984616-bacc-4979-8191-ff6ef939ce2c"
            }
          }
        ]
      },
      {
        "id": "67c0398e-1496-421a-8638-3f21287a3512",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "175cf06b-063a-40eb-a079-6cc12c752b33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f3f33a0-4ba6-4564-bd54-b7b1406dfd46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48c8c928-1a31-4eaa-8c20-9bc696718ac1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711817c3-4667-4039-b4a1-89366af1147d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9895c499-8bdf-43d9-a3a7-df62e6f8db36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314f34c3-8d00-4fc3-bb79-3b338c41ddc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c0e8edf-6fac-4efb-83c3-f33e338bdc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18ed5ab-6be7-4155-a490-4c38e9e6a1fb",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b547b558-4b53-4b5a-b632-de5883e9b0fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c40510a-9e69-4138-8a1e-d0d273934f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10db544e-5a86-43c0-b810-f10759b976ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3f51a72-4c35-4fa4-bdad-698afbada7b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "754696a8-d18b-4bf1-909a-2b6bfe736096",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fabdc719-ffec-43e7-995d-66817e755a3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b8d2db7-4fc9-4e23-baeb-61693cf4e6ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db152cc4-4a64-4bc1-8af4-8b175e0e5eb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "122d7f95-504d-4155-aceb-89003cbe9432",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "90a7af30-6116-44dc-8a59-cb218acb609a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0ded96f-be5b-46ca-a10d-de161287c72f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba014974-6781-43be-94c7-42ef32a6433a"
            }
          }
        ]
      },
      {
        "id": "c4dcc521-3842-4184-b738-ee521b4fdeba",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0f222768-c976-4435-a7e7-af735d1cf5c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "007f125e-a715-4e7b-949c-7ae66d6398f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f786b442-22cf-4ad8-9b90-78d333e51f45",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608748e9-6c60-47d3-b557-6636d48c3764",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f34f7377-e9ae-4eff-9a01-4e6c37fb620a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c3b1b6-d7a9-439b-b6aa-e32c6672f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1b699ca-e043-4f2a-ba9a-2a7450aeb91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f87bc93-b0bf-47a3-9d1a-d177f6c9eb29",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b495eaf6-7a03-41fd-a7ba-f33011c43e37",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3bc3a429-bd92-4d91-b834-bc66ae96c875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fb49ef-1304-4920-90dc-864f366e1e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f7a5736-372e-4799-af6e-337ea4029419"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2be3627-7dd7-4083-8988-6f10ca4854f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57edf78d-39f6-4fb9-960a-9c7f634122a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c784bf12-9d8d-42fa-97b6-3eb9a4e8de4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ec4528c-3ad2-42cd-9da2-24a8a68c338d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eed4e581-0e02-4e6c-a388-d6b4a2675e68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7cc9e653-b10b-4aff-a951-01983d9baa74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60c6679d-c36e-4009-9d71-ac395b0e337e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "454f6246-c634-4d94-9819-f0418e9608c4"
            }
          }
        ]
      },
      {
        "id": "9eecc590-3670-4e20-9164-c06761a899b8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fe1c0700-ac26-478f-a1b6-edf4dbfd1a90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7958593-cf1c-4122-8cd3-3b7bdaa12a48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cbf7197-0bcd-4656-9c05-fcc67d6e0fc1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9226ff7b-268d-433a-85e4-fb74fe9daf36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b35195b4-18a3-4832-85f1-a537c51a496d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e016c7be-2de5-4345-a953-98b59be19a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff19ee22-a8a2-45cc-a1f0-f523b15bd933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5867696b-64f4-452a-ab14-ee72afdeb4cf",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a986388-e20d-4bd4-8eaf-841fc8baa584",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "781f5bdd-ccc9-4d2e-a2ae-bf476b4c221e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9f8b43-af1b-4ed8-8899-1a394f917a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8022ded6-a017-40e3-93c2-171b7eee2a1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "540b6ccb-3235-4cb9-a60c-c7d547e3e411",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e9bc885-9bd3-436d-b29c-46fe3aa39536"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34d3a1d4-77f7-40f1-93a0-6eedb3449d45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37283120-67fe-4972-89ef-a527602f27fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e94b1e1-1a71-47cf-ba44-12d8695e5828",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "59e26452-fb02-42bb-8ddd-d0b0057b80c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1191592-9bde-46d9-b371-6edec1f80405",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a90c0578-86fa-4cf9-a057-be8ce1b13b98"
            }
          }
        ]
      },
      {
        "id": "d3ee1d59-3219-41c9-96f1-85b2282e38e4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a670694b-62ba-4a50-9003-76e9936ef05e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50804871-c3f1-4993-8cae-864da5925dd1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aaa28b97-3820-4992-8941-e4e2493cc0f8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bafcf7d1-acb0-4981-a27c-65913756e7d1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5267e993-39e3-40fe-b2e4-f2d1f43519d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 463.1762452107277,
      "responseMin": 12,
      "responseMax": 2900,
      "responseSd": 357.5448094668781,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669336900529,
      "completed": 1669337031824
    },
    "executions": [
      {
        "id": "a9e4d13c-146e-46e4-9fc2-f6cedfa0e0e4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5d398d62-1dd8-4296-9adc-4149f1047283",
          "httpRequestId": "c7e2ed6a-b96e-441f-a0da-37737787aedd"
        },
        "item": {
          "id": "a9e4d13c-146e-46e4-9fc2-f6cedfa0e0e4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dff05554-3859-4f52-a018-b74d78b29e9f",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "9613ae90-caf1-459d-8a7d-96af59e6fe17",
        "cursor": {
          "ref": "36a4e63f-75ad-4d35-82b8-486e54857e9b",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fb9c1454-2c29-4ad0-ba88-8d3d6dbf226e"
        },
        "item": {
          "id": "9613ae90-caf1-459d-8a7d-96af59e6fe17",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "49900828-b9f1-4c4b-b2b4-2d8756201c95",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "02ccac3c-0be5-4198-a599-21342a58a711",
        "cursor": {
          "ref": "ffdc6383-fbf1-4b3e-9d6a-d017d97fe3ef",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ffd478da-532e-40fb-9e21-c1eba338f0b0"
        },
        "item": {
          "id": "02ccac3c-0be5-4198-a599-21342a58a711",
          "name": "did_json"
        },
        "response": {
          "id": "897d97a4-a372-4903-a23c-68b2b11e93ae",
          "status": "OK",
          "code": 200,
          "responseTime": 885,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41e773a-9ba7-4adc-a73e-b19758d3723f",
        "cursor": {
          "ref": "92849c4b-a626-42cd-883b-541ab8050ac2",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4a77b778-8284-4fb1-8bdd-471f97eff969"
        },
        "item": {
          "id": "c41e773a-9ba7-4adc-a73e-b19758d3723f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6047f305-b5f8-409d-a50e-357ea2acac76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41e773a-9ba7-4adc-a73e-b19758d3723f",
        "cursor": {
          "ref": "92849c4b-a626-42cd-883b-541ab8050ac2",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4a77b778-8284-4fb1-8bdd-471f97eff969"
        },
        "item": {
          "id": "c41e773a-9ba7-4adc-a73e-b19758d3723f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6047f305-b5f8-409d-a50e-357ea2acac76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb2dc95-fe57-4be6-90f6-f6fe1afb5403",
        "cursor": {
          "ref": "7717670c-72ac-4530-a1fa-5cf1c753b876",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8c01f960-ec60-450d-ad31-d2d440cf9918"
        },
        "item": {
          "id": "1cb2dc95-fe57-4be6-90f6-f6fe1afb5403",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2ac11f1d-a5f3-4716-8774-37c4d01437f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 814,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd7f353-e0a7-4070-bd05-120d72e3d93b",
        "cursor": {
          "ref": "27b80d86-ed79-403e-8639-0fdcef537166",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "416cc113-00e5-49c6-9989-cf030adebc02"
        },
        "item": {
          "id": "5fd7f353-e0a7-4070-bd05-120d72e3d93b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b24d2261-f122-4086-af02-8f1aa1a72abf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 817,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108a8ab6-9e5f-4f84-b9a2-f607c8b10f11",
        "cursor": {
          "ref": "590a6a3f-1985-4b00-b668-3048ad109941",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "36f54658-8327-4edf-a7ec-a1372f9f3d3f"
        },
        "item": {
          "id": "108a8ab6-9e5f-4f84-b9a2-f607c8b10f11",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7041654b-1b67-4188-a893-fca11ad3afb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cee8f4-291b-4992-ab1e-2a8fa5070bea",
        "cursor": {
          "ref": "117bae28-5736-46aa-85ae-4628d00f5a4c",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "716153bc-65ba-44f5-90d1-df4ec29c3610"
        },
        "item": {
          "id": "16cee8f4-291b-4992-ab1e-2a8fa5070bea",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d4bcb23c-0d88-4e49-9783-bafa8f519a85",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cee8f4-291b-4992-ab1e-2a8fa5070bea",
        "cursor": {
          "ref": "117bae28-5736-46aa-85ae-4628d00f5a4c",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "716153bc-65ba-44f5-90d1-df4ec29c3610"
        },
        "item": {
          "id": "16cee8f4-291b-4992-ab1e-2a8fa5070bea",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d4bcb23c-0d88-4e49-9783-bafa8f519a85",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fa4fcf-5ecd-48ef-a832-e6d67b5c614c",
        "cursor": {
          "ref": "fd7748fc-e136-481c-8b04-da0a9ce74d63",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e0af1ab1-945e-4a2c-b389-31dc8d1cb845"
        },
        "item": {
          "id": "d0fa4fcf-5ecd-48ef-a832-e6d67b5c614c",
          "name": "identifiers"
        },
        "response": {
          "id": "c566a047-7fe9-4940-8855-e9111f70dfa2",
          "status": "OK",
          "code": 200,
          "responseTime": 936,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e7c24d-6402-4adf-9556-9fc2ae8f3fb9",
        "cursor": {
          "ref": "0447a9fe-1e6a-4f48-ba7b-dcf4a433e666",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6050dad9-136f-4214-9fc2-146bd8a9fd53"
        },
        "item": {
          "id": "38e7c24d-6402-4adf-9556-9fc2ae8f3fb9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ede7b739-fb13-4e4e-ad24-c856be68f86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e7c24d-6402-4adf-9556-9fc2ae8f3fb9",
        "cursor": {
          "ref": "0447a9fe-1e6a-4f48-ba7b-dcf4a433e666",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6050dad9-136f-4214-9fc2-146bd8a9fd53"
        },
        "item": {
          "id": "38e7c24d-6402-4adf-9556-9fc2ae8f3fb9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ede7b739-fb13-4e4e-ad24-c856be68f86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b3621b-f8b1-4255-ae20-2ea435f115da",
        "cursor": {
          "ref": "349b445b-6f74-433d-b96f-18a2414f18e2",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b194f18b-95f4-4ad1-81c7-49dbcf8f97a3"
        },
        "item": {
          "id": "a2b3621b-f8b1-4255-ae20-2ea435f115da",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a0e01258-686a-49c9-8929-94e8e9831200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c45b5e-43ea-4ec4-b087-2cd00c98d5e0",
        "cursor": {
          "ref": "773401ef-817f-4ac1-ba52-be6cecd698cf",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2f247401-ae28-4e21-94b7-02a6bf27b458"
        },
        "item": {
          "id": "d3c45b5e-43ea-4ec4-b087-2cd00c98d5e0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f2ff9bb0-9cf9-444a-a32c-03451311ad8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88735d2a-39f1-4156-a5ee-fd1b21439fd8",
        "cursor": {
          "ref": "5afd23bb-b4f2-400a-93ae-6f032c8f0cfd",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "42f9fa86-c701-4261-87cf-4b097b657286"
        },
        "item": {
          "id": "88735d2a-39f1-4156-a5ee-fd1b21439fd8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0d4f82dd-f168-4892-8683-ec3f5eea1926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db93846-d132-42ff-9f05-7b8eda6caf91",
        "cursor": {
          "ref": "ecbcce19-3f22-419a-b5ed-1900252a6667",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8c971f43-b5f4-482c-9572-c034bd317012"
        },
        "item": {
          "id": "3db93846-d132-42ff-9f05-7b8eda6caf91",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0483648e-8eee-4037-a23f-911c240a2aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c022229-91b9-4c7e-bb1a-86d8d34fb901",
        "cursor": {
          "ref": "f6d2095b-528c-4302-a22e-74547f17606f",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "22016d9c-602f-4d8f-9891-72436e35c182"
        },
        "item": {
          "id": "7c022229-91b9-4c7e-bb1a-86d8d34fb901",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "708210f3-df3f-4209-bcb4-b0a28026e3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99a4a7c-1f6a-4d0b-8f47-705eb1c965fc",
        "cursor": {
          "ref": "237c6b15-e83f-450a-9b46-01055040cf8e",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e20c7ff2-6109-4208-8cfc-f1cd4b783264"
        },
        "item": {
          "id": "a99a4a7c-1f6a-4d0b-8f47-705eb1c965fc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6da99b36-8473-47b4-8aff-b93867f6a2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78ea8b7-830b-4b27-9a22-ca0332346675",
        "cursor": {
          "ref": "f3bb8f4d-5acf-4394-a421-1e0af891f019",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "38a2cccf-08b5-4397-856c-a57a04b856bb"
        },
        "item": {
          "id": "d78ea8b7-830b-4b27-9a22-ca0332346675",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fe3786e8-a800-43df-a363-a412db39e92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823f63d5-2254-4bcd-a918-0f8725bf9757",
        "cursor": {
          "ref": "aab833f2-0a52-49e9-a54d-cdff7fcc2259",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c3efa08e-8f5a-4181-b6cd-121a94f567a4"
        },
        "item": {
          "id": "823f63d5-2254-4bcd-a918-0f8725bf9757",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0e6b4332-3778-44ba-bb45-270eecd67d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0efdb67-30dd-401f-967a-d23be5ce9937",
        "cursor": {
          "ref": "441635f0-cc1c-4712-be3c-ebe3edb0c082",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a9a3797-7a68-44f9-bf3a-9cbd4f025c4b"
        },
        "item": {
          "id": "a0efdb67-30dd-401f-967a-d23be5ce9937",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c73237d4-d5ea-4b95-8bb8-61e6720ca73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e575c10-8617-49eb-ba39-a6c30da12e93",
        "cursor": {
          "ref": "589bbd7c-46f7-4d81-bf34-fdaa068bb125",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "905f447f-d658-4972-92aa-11c6c124b500"
        },
        "item": {
          "id": "6e575c10-8617-49eb-ba39-a6c30da12e93",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b752b440-cf83-4ecb-9b92-882265196f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4dc318-6705-43cf-a7c5-f93f30dedcf3",
        "cursor": {
          "ref": "b14f2d58-a1ab-449b-bd97-98f97a52a0a7",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e13d3598-4c9a-4ddc-b1f8-c84bd74d856b"
        },
        "item": {
          "id": "fc4dc318-6705-43cf-a7c5-f93f30dedcf3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "84d76f38-1bcf-4ab4-9935-3486bb572408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba0a609-3fd1-40b7-9178-17c1c972d153",
        "cursor": {
          "ref": "70f80da3-7571-4c90-9f09-b9d65a2303a6",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "49998832-c30d-4cd5-b6c9-865f54dd2056"
        },
        "item": {
          "id": "6ba0a609-3fd1-40b7-9178-17c1c972d153",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2d3ac029-3ad0-41f3-8b83-69eea82a8edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9576fcd7-b2a8-4fc2-b393-92755449d8a8",
        "cursor": {
          "ref": "5a84824b-3309-40b2-8c82-38f16d0f7c68",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7f2af148-1bee-4b92-abaf-39b1cf942a35"
        },
        "item": {
          "id": "9576fcd7-b2a8-4fc2-b393-92755449d8a8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fb97e8f6-ecb3-4f08-9168-672bacc524e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b075b6ac-bad4-4075-9ce6-43da546146b2",
        "cursor": {
          "ref": "5199e7b7-70c2-4b90-b83e-73854af18dfa",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "80e99672-ca8d-4dcd-8d20-4a8eb25fb323"
        },
        "item": {
          "id": "b075b6ac-bad4-4075-9ce6-43da546146b2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fe609481-a235-4d2d-9fb1-25531c8e7f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36d5232-2d36-4a51-9e7c-c4bd0e18e2c1",
        "cursor": {
          "ref": "5a270345-416a-477b-816d-5be67ed9718f",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f07e2b00-4ef5-4a4a-ab90-a660c1319dfe"
        },
        "item": {
          "id": "c36d5232-2d36-4a51-9e7c-c4bd0e18e2c1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cc991ad4-7d2c-4d88-8219-972e733a5589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d85ba9d-f5b4-4577-90fe-90191791cbc3",
        "cursor": {
          "ref": "d3af50b5-4969-423b-82ca-fbd750417f6d",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "da2bcbea-e953-4cac-9640-9223b69a14a0"
        },
        "item": {
          "id": "5d85ba9d-f5b4-4577-90fe-90191791cbc3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a5d41b29-312a-4882-ad9b-9a77c336b703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c527b597-89b1-443b-bd35-fd5e65cf1d99",
        "cursor": {
          "ref": "73f924c3-c406-4266-be53-03c53cd9d2e6",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a90086ff-50a7-4344-a7f3-c10951bb437c"
        },
        "item": {
          "id": "c527b597-89b1-443b-bd35-fd5e65cf1d99",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9faf223a-97cc-47de-9d10-5d481d58e032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eec6245-b68c-4e7b-9a6f-d0bd560c84b1",
        "cursor": {
          "ref": "89e12b8b-f550-46d3-9094-086180cc5eb3",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "328b9af2-04cc-4ede-8a11-ffee3bcccc91"
        },
        "item": {
          "id": "0eec6245-b68c-4e7b-9a6f-d0bd560c84b1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6de5e7c7-2122-40d5-864a-5a94e23b90b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7865cda2-03e3-4c3e-bd5a-6ec88822a1d5",
        "cursor": {
          "ref": "a8f25a96-d164-4607-b822-1db50cb4810a",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fcf29a99-a175-4268-9e5b-dd7ec4fe3ca6"
        },
        "item": {
          "id": "7865cda2-03e3-4c3e-bd5a-6ec88822a1d5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e2584c4b-47d9-481b-b886-81b9e6aeb40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e52e2cd-0bcd-40d7-81b4-46c229f162c8",
        "cursor": {
          "ref": "49ab931a-df8b-40b1-9191-dc1a4fa49188",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "74bf1a1d-b8ed-4adc-885c-ec768b831c1e"
        },
        "item": {
          "id": "6e52e2cd-0bcd-40d7-81b4-46c229f162c8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "92516eb4-4a0a-4899-96df-e38f939a69ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a4f014-25c4-4507-a326-3cb3a3c42137",
        "cursor": {
          "ref": "fff20eef-90a9-4b18-b15a-af7febba5416",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d2738034-e9c8-4941-8622-234c178867e9"
        },
        "item": {
          "id": "d5a4f014-25c4-4507-a326-3cb3a3c42137",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21453147-ce91-4c2b-a5c1-729e9c165142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d8e50a-b90d-44be-9888-0019e9eac573",
        "cursor": {
          "ref": "fd5399a3-7faf-4c0c-8f1a-f697ea6ee199",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "da116a04-5dbd-474b-8ad8-2d82bed586f5"
        },
        "item": {
          "id": "83d8e50a-b90d-44be-9888-0019e9eac573",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c24318ba-b1e0-4e8c-ba78-3988ad8af1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aadbc2-2047-4394-ab9a-315a9faf80f5",
        "cursor": {
          "ref": "bda052ba-5721-4abd-a38b-f999ba7269ad",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aa513610-32e3-46f1-bf6b-6018e5f16fc6"
        },
        "item": {
          "id": "11aadbc2-2047-4394-ab9a-315a9faf80f5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fc9795b3-fda3-4008-ad32-0294d1721b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1564a8-3ac5-4a22-84d1-4ab2bcc3c8a3",
        "cursor": {
          "ref": "8e84fe8c-6709-48fa-8421-49b743c23912",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c1485a73-42bd-4b3c-bfc0-654e5ee50d46"
        },
        "item": {
          "id": "2d1564a8-3ac5-4a22-84d1-4ab2bcc3c8a3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0fcbf182-f268-4c34-bd73-c528fd4db285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c511378-f442-4b7c-bbb1-23057add0003",
        "cursor": {
          "ref": "adccfeaf-dd8e-410b-924c-e3e33ef31e56",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dec38c84-fae7-4f85-b451-1da95a378ea7"
        },
        "item": {
          "id": "6c511378-f442-4b7c-bbb1-23057add0003",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "45806be4-956b-4019-9f1a-9c5f4ff808fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a6aef5-086d-471c-87f0-e867d9a83a92",
        "cursor": {
          "ref": "d2c9b385-d3c0-4edf-b948-f687bef5324d",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "15c34c1f-8651-4193-9825-52ec571681af"
        },
        "item": {
          "id": "d4a6aef5-086d-471c-87f0-e867d9a83a92",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c11acbac-d2bf-4637-a9ff-a811c8fe8342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1972e74-e674-4d2d-b60e-210fa80ac5d4",
        "cursor": {
          "ref": "3c7a931a-1bab-4e6d-a851-c6f582260fdf",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b7852f00-e7b6-453b-a158-76a83d86484c"
        },
        "item": {
          "id": "c1972e74-e674-4d2d-b60e-210fa80ac5d4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e70d8189-611b-4244-940d-8dfee444366d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fb51f6-545e-41ff-9975-155a62ab8f6f",
        "cursor": {
          "ref": "587c4202-b679-4b90-a09d-fee1bb18e37e",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a2830e9a-61de-446f-9b60-f5abf78f9ba7"
        },
        "item": {
          "id": "60fb51f6-545e-41ff-9975-155a62ab8f6f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4f2b8c21-4ac2-47a3-94f4-dae36ca37961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f097623a-ba9d-4e41-84a7-37babaccce57",
        "cursor": {
          "ref": "a90db754-9e29-4e7f-bc52-0bd162ce949f",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0ebeb854-b4e0-4658-aaa7-b6d384c103fa"
        },
        "item": {
          "id": "f097623a-ba9d-4e41-84a7-37babaccce57",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e02d9f1d-f39c-485d-8328-4ba3bfe50c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d87e15-dd44-4e35-a591-87275bc972ef",
        "cursor": {
          "ref": "97d486ff-8c5e-4adf-9645-2b2533c26ab6",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "21712b51-bcff-4b01-901c-47d89019534f"
        },
        "item": {
          "id": "d1d87e15-dd44-4e35-a591-87275bc972ef",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d2633b9f-6495-48af-96a0-475ece1e8bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23c2088-ee86-4940-81fa-4130422281a7",
        "cursor": {
          "ref": "f70c9c13-7cd7-4153-8ba5-0ad0a824307e",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "58a4ce2e-f3ba-49e5-9386-26ddf3be27fb"
        },
        "item": {
          "id": "d23c2088-ee86-4940-81fa-4130422281a7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dc1b3264-5223-479a-8e93-4e66dfa78e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad4e30c-dd64-4764-87a5-bc2fdf31247c",
        "cursor": {
          "ref": "e6ea579a-07e9-4935-9bd0-774effcbdb2d",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bab0f51c-b5c2-4a36-91d3-df3d6e7f6b9d"
        },
        "item": {
          "id": "7ad4e30c-dd64-4764-87a5-bc2fdf31247c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "be37f4e3-05b3-487d-b7c4-54ad51a03a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4992ea6-5f98-412a-b74a-a925846d1605",
        "cursor": {
          "ref": "325258b5-eee3-4639-9ae8-3915d6b93902",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "839cb0f6-0d98-4e64-8ba4-b9fd566b3bfe"
        },
        "item": {
          "id": "f4992ea6-5f98-412a-b74a-a925846d1605",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f4f2e3a1-9b14-4452-97b3-cd2927f074fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42404ee2-cd66-4d2d-ae1f-2dc64538c8e3",
        "cursor": {
          "ref": "ce9bf40d-f5c7-4869-89fa-71f82b3e8e38",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1115ebec-d82d-4a07-8f66-d13b73805593"
        },
        "item": {
          "id": "42404ee2-cd66-4d2d-ae1f-2dc64538c8e3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "307f0c7e-cbee-4c60-be8b-2f58bf6fdf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea3e648-4992-4b55-91a6-f0df49ff9362",
        "cursor": {
          "ref": "baf84b0d-c4c4-424a-98d0-801ced2f0026",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d0633f89-15ff-4972-8876-a4183b3b85ce"
        },
        "item": {
          "id": "6ea3e648-4992-4b55-91a6-f0df49ff9362",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b89339f1-f8ea-4d63-9c2d-ffa569d53ebc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 872,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ba8726-9110-4b63-8b87-77c3a88ec996",
        "cursor": {
          "ref": "dae2ce18-d91c-47aa-9b44-81a2d34139f6",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "807b6183-200c-4372-addc-68dc94f880f7"
        },
        "item": {
          "id": "49ba8726-9110-4b63-8b87-77c3a88ec996",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5a5147a7-da96-43a4-8c60-11945c411143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a15a6d-ff11-4e74-ac61-8cf45c0c3fd4",
        "cursor": {
          "ref": "6014546c-cd39-41e0-bd87-feef6c074ee4",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bd3a0181-a139-4d63-992f-00c6b204f2e1"
        },
        "item": {
          "id": "85a15a6d-ff11-4e74-ac61-8cf45c0c3fd4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "298badaf-979a-4248-b243-a80631065b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95c7c37-211e-4e5c-863f-4157ed4b3f31",
        "cursor": {
          "ref": "8ee28766-df0a-43a1-b6e7-66efa2005d81",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4fe2a914-2e78-4fc3-b0e4-e8e5688f935f"
        },
        "item": {
          "id": "b95c7c37-211e-4e5c-863f-4157ed4b3f31",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c92eeda6-120a-4bf4-98c3-04d27e480452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84e07a0-615c-4aae-9b9e-cc1757f1e021",
        "cursor": {
          "ref": "ec83f901-f6e8-465e-a0e2-b0be17323cc9",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1150c926-8b50-48d6-8d16-79f03064df3d"
        },
        "item": {
          "id": "d84e07a0-615c-4aae-9b9e-cc1757f1e021",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3b1416b2-9589-4f37-8a9f-1b1f23abcdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4669234-cf49-443b-a9f7-796792f4672a",
        "cursor": {
          "ref": "87809801-d4c6-4d93-87f5-73b15593fe01",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fcbf19fb-a39e-4abb-ac9c-64d2ef1da2d6"
        },
        "item": {
          "id": "e4669234-cf49-443b-a9f7-796792f4672a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "61a6b7ec-c157-4520-8352-b492b1383024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c781ec-303b-4761-9b41-592636302fc0",
        "cursor": {
          "ref": "f6b6ec23-e3d9-4367-93aa-a17d3cfbc80a",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "216265d0-6168-402a-b43a-58693e38278b"
        },
        "item": {
          "id": "31c781ec-303b-4761-9b41-592636302fc0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f9c7f24e-e4be-42a5-9f8c-cbfd84a25770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df71bc6-3f6a-4533-b991-90e2f64ce782",
        "cursor": {
          "ref": "67280261-db18-4143-9422-7f68ccd2f1f1",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d653f907-b0b5-4168-820f-299b3903486f"
        },
        "item": {
          "id": "5df71bc6-3f6a-4533-b991-90e2f64ce782",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2722c736-90da-4936-8a38-072d23ca6df2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 535,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570d5229-a721-4bcc-8c4f-33fb6855f35f",
        "cursor": {
          "ref": "a33451d4-f448-4905-887b-9c9c9d108e47",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b6f63dc4-93db-4822-b8a0-c26c0a4ee555"
        },
        "item": {
          "id": "570d5229-a721-4bcc-8c4f-33fb6855f35f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1f723d8a-ee26-4156-a2fd-318c92c5e299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4913f6-b432-42f0-8e21-84467e88e444",
        "cursor": {
          "ref": "d37410e3-eb08-4828-a6be-5204e2384435",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2ad96f1c-2afc-41fb-8296-f04bd08eef76"
        },
        "item": {
          "id": "df4913f6-b432-42f0-8e21-84467e88e444",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8a37940f-e883-4cdb-abd7-a69a1763431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19634480-309c-4f69-b465-9d24969a09a3",
        "cursor": {
          "ref": "8119a726-ef71-4207-94e3-6043c3e4cf90",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e040da5e-a88a-4c9a-a750-4bd6dad951ac"
        },
        "item": {
          "id": "19634480-309c-4f69-b465-9d24969a09a3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e5c4d396-f26f-4d0c-9b1d-a81248d806e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823d0a53-124d-4c5c-a388-90ac8f5d2e73",
        "cursor": {
          "ref": "a84144d6-0e1c-4f72-8da5-fac0126bdafc",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8a630302-876a-41b1-8870-867733c4326d"
        },
        "item": {
          "id": "823d0a53-124d-4c5c-a388-90ac8f5d2e73",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "91ad1eaf-4b7c-4c47-9ca0-8e9a46a716f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f5017c-5fbd-44ba-ae94-3efa39008b41",
        "cursor": {
          "ref": "5f545c4f-931a-46e7-88b4-4486056bad71",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bc21e25d-ae58-43ac-bdb2-758ea683b44b"
        },
        "item": {
          "id": "57f5017c-5fbd-44ba-ae94-3efa39008b41",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99422ca9-b83c-44de-9b02-578297319f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02937c91-0778-426b-942b-bd508e789846",
        "cursor": {
          "ref": "7a2af9ea-f9b3-4e3c-911c-a9affc7ce53f",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b270bcaa-a118-42e9-a129-5de4580b52ec"
        },
        "item": {
          "id": "02937c91-0778-426b-942b-bd508e789846",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f5e6a9a1-c521-499e-96dd-4a81caffacea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1a603a-2d87-43c9-b918-b75e47678e55",
        "cursor": {
          "ref": "91d9df9a-3c9c-4c13-97eb-e3e2b50c9f0d",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a5e1e5a3-d276-465b-99d7-13cf7e0870d9"
        },
        "item": {
          "id": "ba1a603a-2d87-43c9-b918-b75e47678e55",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0f1a7f37-5777-4f83-b420-6d4a912b5ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5351999-e7d6-45ae-9c7b-745046d8562a",
        "cursor": {
          "ref": "588c6e35-024e-4e6f-a8f7-741558546f0a",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "38a52f9b-e5fd-46d5-aceb-4ac000404aff"
        },
        "item": {
          "id": "b5351999-e7d6-45ae-9c7b-745046d8562a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8203dd82-d549-46ac-8d3b-3108c8c47a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10970b59-1410-436b-8606-8fd2acefa038",
        "cursor": {
          "ref": "8a45e3c1-7599-4cd1-8c68-3a2913903964",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e24645b1-6543-4232-9f3f-e528cdcf4c62"
        },
        "item": {
          "id": "10970b59-1410-436b-8606-8fd2acefa038",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "19ba5af1-b260-4b31-9d78-52d6dddd8c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d268b4-30cf-4b33-a7f9-47261ca79a25",
        "cursor": {
          "ref": "e098a117-cba2-4f88-b711-8287e243e319",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8d45553b-fdf1-4ecb-8f83-b52be7491d50"
        },
        "item": {
          "id": "04d268b4-30cf-4b33-a7f9-47261ca79a25",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cc1a3c58-a23c-4fbb-a81f-527a043e37c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11e44d7-306d-45d3-83e4-74ff173a4234",
        "cursor": {
          "ref": "869fa1a7-d4e1-408a-a24b-360c78d5f0f8",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2ff68fa8-cebf-4adc-b960-dac7543883fe"
        },
        "item": {
          "id": "a11e44d7-306d-45d3-83e4-74ff173a4234",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a81ececd-1975-4b76-a9c8-4336eb222c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d46fa9-1f2d-43d8-8efc-036610023cef",
        "cursor": {
          "ref": "87669b22-7204-426b-a5b6-383e060f1b03",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7628a781-256a-49b8-8fd3-3cfdd3df6b0c"
        },
        "item": {
          "id": "93d46fa9-1f2d-43d8-8efc-036610023cef",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fac90696-a781-405c-bf62-236c8f8872a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1265d84-ea3b-4639-aaea-9ca637ed32f2",
        "cursor": {
          "ref": "27538038-a5d0-4931-a239-4935d3ad664c",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "aca9982b-549e-44a3-9eca-5af6b5789965"
        },
        "item": {
          "id": "e1265d84-ea3b-4639-aaea-9ca637ed32f2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b45fec4d-9778-41f5-8f2a-e487307484da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c048c156-ee10-4a38-9943-4847f5f6243d",
        "cursor": {
          "ref": "8bb16978-8ea1-474d-b4ca-a6a6001652a0",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7aab4466-a3bf-441a-8eb8-9aff5c0802c9"
        },
        "item": {
          "id": "c048c156-ee10-4a38-9943-4847f5f6243d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c4ecf8b6-1fbc-4cdb-bedd-fe5e3a1a9f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4175fab1-220f-44c2-bb1c-dd282580aa16",
        "cursor": {
          "ref": "a999c64a-bc29-4c97-b82f-390a10fc8c22",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "092c063e-7b9f-42de-8f8a-620338526b64"
        },
        "item": {
          "id": "4175fab1-220f-44c2-bb1c-dd282580aa16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "95694db6-dd75-4108-850f-f4a6c987334d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25a9db1-7e60-47d3-8cb7-d227b85a52cd",
        "cursor": {
          "ref": "dd50b914-0eeb-442a-b0ab-37ecadcace98",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "697022d4-c2e2-457d-a92d-4ff54e6939fa"
        },
        "item": {
          "id": "c25a9db1-7e60-47d3-8cb7-d227b85a52cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c25b1a33-5eac-49f2-ab74-35ec8e937b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ea7dee-600d-4753-85e7-a5b3835b32c2",
        "cursor": {
          "ref": "813bd067-2af8-4fb9-9146-ddbebef11016",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b8017d6e-57c6-440c-a957-8cb03886be7d"
        },
        "item": {
          "id": "64ea7dee-600d-4753-85e7-a5b3835b32c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aa720cd8-45e3-4960-928c-eddc2a2ab639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d56b93-8de2-4919-a267-39cb0f679200",
        "cursor": {
          "ref": "0f70899c-6046-4306-9a75-a24e762180d5",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "198f6912-c886-40e8-9a71-eaa54f00fa54"
        },
        "item": {
          "id": "b7d56b93-8de2-4919-a267-39cb0f679200",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ac216c38-25f9-48fa-a28e-3debc22fc995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475c1055-462a-4a6a-8197-2f407973d8ba",
        "cursor": {
          "ref": "448b1ada-428d-4b15-ab22-42a01da326ff",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "387dfa2f-3700-4fe5-a320-283e12a9fa76"
        },
        "item": {
          "id": "475c1055-462a-4a6a-8197-2f407973d8ba",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4d73ac80-e786-4824-b0a3-f3403d85251b",
          "status": "Created",
          "code": 201,
          "responseTime": 2246,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "26545d07-4c7d-4b32-930e-8d4aeb126279",
        "cursor": {
          "ref": "c5f92265-1ea8-4d64-b992-a134534495e6",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fc004b44-31da-4bb0-a91e-c6a52fe5f6c0"
        },
        "item": {
          "id": "26545d07-4c7d-4b32-930e-8d4aeb126279",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5a3a011f-a9b4-4031-add9-e7f390c85d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2af9bf-e7cd-41fa-abc2-eb5cfe351621",
        "cursor": {
          "ref": "b4a9967a-f2e3-461a-a873-867a64a0c877",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "551d3f81-a5f0-4125-84ec-76a2da8c4c3d"
        },
        "item": {
          "id": "ad2af9bf-e7cd-41fa-abc2-eb5cfe351621",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "201f56af-735d-4fd1-8709-ba60c81d1a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e37762-3d18-4a52-9dfd-7a5a44eff41a",
        "cursor": {
          "ref": "2c11f4f4-3481-49ba-ba72-d9530e1af7fc",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "271d39d1-397a-4374-b79e-9455bfb664e1"
        },
        "item": {
          "id": "70e37762-3d18-4a52-9dfd-7a5a44eff41a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7329ddc6-92ce-4ae6-86a9-76ac51952bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5fb0ad-ef1b-4877-a1ed-48249fef6b58",
        "cursor": {
          "ref": "09717d06-976e-47c0-b9b0-2ea647a3a30f",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0352ed02-5c42-4613-ab3b-55d11cdaf7ba"
        },
        "item": {
          "id": "cc5fb0ad-ef1b-4877-a1ed-48249fef6b58",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c43c08b1-05b9-4af3-8a03-fc28db3ed4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d5643a-2f6e-4108-9177-67ad3c49f60b",
        "cursor": {
          "ref": "effe6a4a-76e9-42ee-9bc2-10bbbbff5469",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2155043b-2a59-409c-be18-e8b9b5939d85"
        },
        "item": {
          "id": "23d5643a-2f6e-4108-9177-67ad3c49f60b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f005cf68-4341-48b8-b22a-8e9b0b961e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74239ed9-3b6d-4b70-81b3-cce18c0a6642",
        "cursor": {
          "ref": "892941bb-5c02-4c95-950c-21000969cbdd",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2e630f2b-3207-49c2-a0d6-403370f7fe7d"
        },
        "item": {
          "id": "74239ed9-3b6d-4b70-81b3-cce18c0a6642",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c2362bb9-bdf5-4a5e-b19a-7e568d6afe80",
          "status": "Created",
          "code": 201,
          "responseTime": 2034,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "b2aadd43-ab16-4c45-8609-5a8184c95417",
        "cursor": {
          "ref": "429633c6-90c4-4003-af2b-50662aba4a2e",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1604b621-4193-4c27-a37a-878a91f5dea7"
        },
        "item": {
          "id": "b2aadd43-ab16-4c45-8609-5a8184c95417",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8cece996-1e03-445e-a85d-fd9039400aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219717dc-7262-438a-b4e7-fe25fc801963",
        "cursor": {
          "ref": "2849c540-ce8f-4258-8c85-620c9feac688",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b7563982-ef19-4fac-a32f-19d101662d2c"
        },
        "item": {
          "id": "219717dc-7262-438a-b4e7-fe25fc801963",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "13a8941f-b2c6-433d-a087-2d9e08c0a78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e4ecaf-96c4-4a56-b298-5070ce3fb039",
        "cursor": {
          "ref": "709cddb9-64ac-49b5-b777-8e13182f7bbc",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "27fecd26-bff3-4726-87e6-b8fccde0b65d"
        },
        "item": {
          "id": "04e4ecaf-96c4-4a56-b298-5070ce3fb039",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b1838bd5-c466-4045-ade5-ae697f637b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe631df7-e84c-49fb-9c8d-b515bb30628f",
        "cursor": {
          "ref": "ca3558e0-b742-4aa8-9277-39842cfa3099",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1c5c44a9-7328-458e-b7eb-09f5bfaebb33"
        },
        "item": {
          "id": "fe631df7-e84c-49fb-9c8d-b515bb30628f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8f2879bc-c3e8-4625-90b9-2e871520769a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2662f37b-649b-44d1-a4da-16cde661ff21",
        "cursor": {
          "ref": "6739280c-14da-4d2f-948c-f1cddc0f1ecd",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "41e3ed46-6d2a-411b-997e-2666312b0760"
        },
        "item": {
          "id": "2662f37b-649b-44d1-a4da-16cde661ff21",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b29f4f1d-37d8-413f-9de9-d3b72e7b48ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309fd9b3-986c-4e6e-a53b-b2e5baec9a8a",
        "cursor": {
          "ref": "8ac3365e-77ab-4003-a1af-35a99670f442",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "21a1998d-19cc-4a2c-ba5e-b3d37e1c8f94"
        },
        "item": {
          "id": "309fd9b3-986c-4e6e-a53b-b2e5baec9a8a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7d20e937-6c6c-4d24-ac5e-fbd12e582d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f374720-95dc-421a-a2dd-127bb09f85b6",
        "cursor": {
          "ref": "a8646a5f-de47-4cd6-832c-50a3a779a9bc",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cfe8f0a4-087f-4c14-a551-81f5e37e4482"
        },
        "item": {
          "id": "8f374720-95dc-421a-a2dd-127bb09f85b6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3d2c3f7e-b22b-474f-98f8-85d51c688069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3584fcab-3672-43f7-a0ea-996cbcd8595b",
        "cursor": {
          "ref": "fbe64934-32a2-4f9b-b29e-953de1e0c85b",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9f161b3e-abab-4b27-bbaa-206bc91967ef"
        },
        "item": {
          "id": "3584fcab-3672-43f7-a0ea-996cbcd8595b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b45a4baa-cc01-4f7c-90ba-91420b30cecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d66504-fb0a-41d3-8c80-42fb422a3bf3",
        "cursor": {
          "ref": "9b8ab95b-e116-478e-8379-006bd15b2228",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0f55f996-38c2-4001-a603-475273c9914d"
        },
        "item": {
          "id": "55d66504-fb0a-41d3-8c80-42fb422a3bf3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c34bde9f-dbb2-4f39-ba64-c0409f609da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc27b59f-c7cc-45bb-a6a9-f0b012f691f9",
        "cursor": {
          "ref": "089b1602-6de7-4613-8831-c29f3723ee78",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6e5f9a80-8097-479b-8e98-4cf6faa5f7cf"
        },
        "item": {
          "id": "fc27b59f-c7cc-45bb-a6a9-f0b012f691f9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dafe17c8-cb98-40cb-9ae9-860ffc864955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2670a52d-9dd2-4f1c-9623-d42fa410ecac",
        "cursor": {
          "ref": "1781e8c2-585b-4efe-9732-112b26e1d8ae",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6f0f774b-c267-4139-82b0-b31f02a11595"
        },
        "item": {
          "id": "2670a52d-9dd2-4f1c-9623-d42fa410ecac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "52860414-a1fe-494c-95c1-ad89abd499bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6c50b6-769b-48a4-a9c3-fb609b05c80a",
        "cursor": {
          "ref": "d1762ee1-63a2-4aa0-9199-b009ddb2c82a",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4f595c96-cbac-4208-aa06-04fcbd52c371"
        },
        "item": {
          "id": "7e6c50b6-769b-48a4-a9c3-fb609b05c80a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "39e66ae3-12ab-49b9-91a8-2505e3345f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d917a00-b2e1-40c1-99fd-4572a0403375",
        "cursor": {
          "ref": "e2236a2f-58f7-4804-a338-fa9cb08da3ba",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "55e6b156-be27-4b23-a710-76317da4b7ac"
        },
        "item": {
          "id": "2d917a00-b2e1-40c1-99fd-4572a0403375",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "948a4a7b-bd0a-43ba-958b-b63fe3285ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bd2760-297a-4bfb-96db-a8e4cd218865",
        "cursor": {
          "ref": "92233e56-dff8-4168-b6a6-8ec48ec52d46",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a65fe3ac-5e8f-47b5-ad1e-7cb8959280da"
        },
        "item": {
          "id": "c9bd2760-297a-4bfb-96db-a8e4cd218865",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fa2075d8-5a71-46cd-b636-cd406ccb94ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b63f4d-5bf4-42b1-a363-d7dec0d913e8",
        "cursor": {
          "ref": "85e095cd-5add-489c-be9c-aba76f4dd530",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "79c7527c-ba82-4f52-a70d-8473fc623690"
        },
        "item": {
          "id": "30b63f4d-5bf4-42b1-a363-d7dec0d913e8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "74af7161-19c5-459d-af6e-b4ac715a513b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a71cf9e-8613-4371-8dc2-7840f4f35c74",
        "cursor": {
          "ref": "c8e7563e-ba4f-437d-b384-a7a72f4ef2f5",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "85ce999e-72c5-4bae-8614-88badd9183e3"
        },
        "item": {
          "id": "1a71cf9e-8613-4371-8dc2-7840f4f35c74",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b639f0f9-589c-46aa-bb0f-830be76b74b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b1c225-ad60-4f8b-982c-8e47f03992b4",
        "cursor": {
          "ref": "fd28281d-4650-42fc-bb81-aeda265fa72a",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5dd17aff-4af3-4432-857a-3d0ec5efff5e"
        },
        "item": {
          "id": "28b1c225-ad60-4f8b-982c-8e47f03992b4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "55db0ca8-f220-4c3d-a97f-090473a50f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b001559-655b-481d-b9ab-a424b370a93d",
        "cursor": {
          "ref": "467c6ba9-b65a-4079-a56b-090dc9c8d639",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "94500f5e-d008-4c87-8347-b070741295d5"
        },
        "item": {
          "id": "3b001559-655b-481d-b9ab-a424b370a93d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3098233c-387a-4aa3-b4eb-6f09af390de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341f75c7-392c-4a93-8b0d-17ac1d7970d5",
        "cursor": {
          "ref": "97ac72a5-71e3-44e4-bf34-380440802c07",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1cdd28dc-c0cf-45f8-aae6-11474dedb9ab"
        },
        "item": {
          "id": "341f75c7-392c-4a93-8b0d-17ac1d7970d5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "53e16e46-2481-49b2-b3e8-a76b50ccfb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb5c0e2-2a9d-45b2-a41d-c019114c3bb6",
        "cursor": {
          "ref": "18647d54-9918-434f-b9b6-92792ffead3a",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a652c66a-1aee-4928-83b9-5f25bc4fe882"
        },
        "item": {
          "id": "5cb5c0e2-2a9d-45b2-a41d-c019114c3bb6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d501043d-2895-4cbf-8abd-80e649e1c0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8128ddc5-646f-491a-ac10-e0a0187281d8",
        "cursor": {
          "ref": "7d5e3a15-6c69-4b04-81fe-e612cea5fc99",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5d85abfe-5162-4843-9524-adeec6d78af2"
        },
        "item": {
          "id": "8128ddc5-646f-491a-ac10-e0a0187281d8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b5707d31-02d6-40d9-ad95-f53966c03768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b0685a-ed8d-4019-88d1-57285a0e62d3",
        "cursor": {
          "ref": "d159e071-9f2d-4742-a7ec-876cb9affee2",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f1b7e72d-ce6c-4082-b013-a016a9fdaf01"
        },
        "item": {
          "id": "96b0685a-ed8d-4019-88d1-57285a0e62d3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fd4fcd80-0b52-44b9-824d-1ebdb815a974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f849bc1c-9df0-4556-8f00-88efb7e48b13",
        "cursor": {
          "ref": "cf4961ca-bcaa-4974-afc8-b209a9858efc",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "66587f5a-64aa-4054-8096-7a4f7a6d1f16"
        },
        "item": {
          "id": "f849bc1c-9df0-4556-8f00-88efb7e48b13",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "11e6dbec-5572-4d36-9adf-ecb2de7dcada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd74614-5f8e-4549-8bd4-0bfbef76880f",
        "cursor": {
          "ref": "f9ab640e-af28-4015-8b43-afa856b01019",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fd3d0f91-770e-4a4b-b0f0-8912789c8ed5"
        },
        "item": {
          "id": "7fd74614-5f8e-4549-8bd4-0bfbef76880f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3d4200a3-ce4e-45a2-9af1-7d6c3e516390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e747642-34b8-42ee-b2a2-769e8871ae81",
        "cursor": {
          "ref": "d023f1f4-2594-45ad-bb94-ca1df7dcd8ed",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "215f514a-673f-4452-8eaa-3fe642c3ae9e"
        },
        "item": {
          "id": "8e747642-34b8-42ee-b2a2-769e8871ae81",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ac923b2b-9153-4a7e-9bc3-ca2ee66c8929",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf9f955-eeff-4a73-8bdd-afe578a812c8",
        "cursor": {
          "ref": "ffbe9595-942b-4753-a521-ee6756714873",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1335e91e-e7ef-4953-888d-54220aab4161"
        },
        "item": {
          "id": "2cf9f955-eeff-4a73-8bdd-afe578a812c8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e8fa2eb6-371b-4a87-8efe-479308421b78",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 486,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa2d421-d563-41c3-a361-93848e99b031",
        "cursor": {
          "ref": "71f2201f-66bb-4944-af20-0595ced6290f",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c51c3495-a856-4792-af69-c560bb1dc453"
        },
        "item": {
          "id": "4fa2d421-d563-41c3-a361-93848e99b031",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d1718bab-43b0-408b-8235-c4f5df1ec92c",
          "status": "Created",
          "code": 201,
          "responseTime": 2077,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "9d6a6d47-c43b-4805-9328-7defd50844fb",
        "cursor": {
          "ref": "60a80a3f-aa86-4f3f-b6f2-b38d3c88a095",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0648cfa6-b675-4d55-9cfc-d73b03451819"
        },
        "item": {
          "id": "9d6a6d47-c43b-4805-9328-7defd50844fb",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "1827f13a-0ab6-4b7a-993e-81c5dd1fe277",
          "status": "Created",
          "code": 201,
          "responseTime": 1966,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "f36ec399-07de-4c0b-b437-b4dffca82de1",
        "cursor": {
          "ref": "da39d1ab-a5d7-4eb2-865f-52b46376369c",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bd8e7256-9fc9-4e0e-9258-2622e55f3c60"
        },
        "item": {
          "id": "f36ec399-07de-4c0b-b437-b4dffca82de1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7de922e3-83d5-4729-803b-7d2d3cc65d00",
          "status": "Created",
          "code": 201,
          "responseTime": 2029,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c1b5481c-52cc-41a4-8c0b-b22e242fc83b",
        "cursor": {
          "ref": "d69c6785-3880-43e9-96a8-a71a87eb4001",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e0c4c9b6-bca7-48ec-bc61-557a0abb24a1"
        },
        "item": {
          "id": "c1b5481c-52cc-41a4-8c0b-b22e242fc83b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "56e736e2-0b1b-4c1e-8d34-4cf128e47de7",
          "status": "Created",
          "code": 201,
          "responseTime": 2007,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bd2a447d-2e48-40bc-8884-50c5e82c793b",
        "cursor": {
          "ref": "5be47642-842a-446b-8317-47dcce98bb0f",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b99f101a-2e2d-40e4-8ea2-44bab41a2f38"
        },
        "item": {
          "id": "bd2a447d-2e48-40bc-8884-50c5e82c793b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "81e6e319-e5b6-484f-9099-484aec179633",
          "status": "Created",
          "code": 201,
          "responseTime": 2027,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "6394cdaf-8b19-4a5a-99bf-a8470e2dc061",
        "cursor": {
          "ref": "119d45d0-15fb-4d94-8d50-d70eca647703",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "101e2d0f-da42-4476-b292-777d15b14b3e"
        },
        "item": {
          "id": "6394cdaf-8b19-4a5a-99bf-a8470e2dc061",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c945f717-7fb9-4a40-ae13-5945e7410a09",
          "status": "Created",
          "code": 201,
          "responseTime": 2900,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "7557533a-8d3b-4ac3-bec2-64914a120ad7",
        "cursor": {
          "ref": "c450bdc2-ef9d-4cdb-b87e-c92e717820a4",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7b8e48ed-9a60-46ce-873d-ce7cde04d30d"
        },
        "item": {
          "id": "7557533a-8d3b-4ac3-bec2-64914a120ad7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e73c33fe-68fb-442d-a66e-6d11a2d2b314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7557533a-8d3b-4ac3-bec2-64914a120ad7",
        "cursor": {
          "ref": "c450bdc2-ef9d-4cdb-b87e-c92e717820a4",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7b8e48ed-9a60-46ce-873d-ce7cde04d30d"
        },
        "item": {
          "id": "7557533a-8d3b-4ac3-bec2-64914a120ad7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e73c33fe-68fb-442d-a66e-6d11a2d2b314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ab932c-6c84-45c7-a829-d14477f2e2a4",
        "cursor": {
          "ref": "ea72551b-1919-4b51-ae71-35035983eb58",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e0141426-7101-4d6f-948e-04afa58aa4dc"
        },
        "item": {
          "id": "24ab932c-6c84-45c7-a829-d14477f2e2a4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fc7fa480-1648-4a47-8d2b-be75181dc339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd8a258-c44e-444c-8e3d-7fc2d1a404b2",
        "cursor": {
          "ref": "d1ed37f7-f774-44b6-a6cc-d6099e4ec07b",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "45c961d3-fafd-4797-9955-fb04b3781e61"
        },
        "item": {
          "id": "fdd8a258-c44e-444c-8e3d-7fc2d1a404b2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d8057408-427a-44d0-a143-32a4d56c7141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109b3518-8e91-4c16-a06d-6b0a7f45ee7e",
        "cursor": {
          "ref": "9484e40c-dbe2-4ab2-b7e7-987491c7a76b",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4fc77f24-5684-4495-b5cf-9c763dde860f"
        },
        "item": {
          "id": "109b3518-8e91-4c16-a06d-6b0a7f45ee7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8373798d-ba7c-479e-beca-97e1fde2f12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf11d9f-136e-461c-8406-94f099bd6607",
        "cursor": {
          "ref": "7ec9284d-4628-40c6-8dfd-82a04a960bff",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "de9d93fe-0217-4911-b30e-6b734f00836c"
        },
        "item": {
          "id": "ebf11d9f-136e-461c-8406-94f099bd6607",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68721d49-560c-46d7-ae3f-f1c76d568645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170b9cee-a959-48f1-8976-2f6ca3b3e3b8",
        "cursor": {
          "ref": "538af07d-a1c5-4650-a176-4c7769bf1483",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cc6eeea0-cc49-434c-b4f0-102f26591def"
        },
        "item": {
          "id": "170b9cee-a959-48f1-8976-2f6ca3b3e3b8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0c3eede1-24c4-4f7d-8b42-c6bba9617a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67c5e80-7311-41f7-b246-8d0db70c078f",
        "cursor": {
          "ref": "54c8f265-fe03-41ae-b279-ef79f82f52a2",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "66706401-1a27-4985-85e9-2135c777d9bd"
        },
        "item": {
          "id": "f67c5e80-7311-41f7-b246-8d0db70c078f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a890d9ff-93dd-4385-a245-0e9fda4f83d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3477413-87ef-4921-8ff3-19542494c76e",
        "cursor": {
          "ref": "0cff1ff5-ca13-4b63-9e7c-5429c2914bf1",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c89fbb97-db8e-47eb-9fcd-59dcc4fc2ad5"
        },
        "item": {
          "id": "c3477413-87ef-4921-8ff3-19542494c76e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b6ae918-dc12-4205-a1b1-ca75b757f8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7f3aa5-73d7-4445-949a-c2baa75ac3f8",
        "cursor": {
          "ref": "44020b39-8262-4014-8c6d-a98a4d5f7a0f",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6989260c-ea94-494c-8073-2cc0a26a0102"
        },
        "item": {
          "id": "2d7f3aa5-73d7-4445-949a-c2baa75ac3f8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7c870514-d202-4bd7-820c-2aed8c7c61a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c1dabb-5ac7-40c3-a5d5-8032dbb88805",
        "cursor": {
          "ref": "100eb2b6-12e5-4b49-ac80-4b52919aca23",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "735021db-679c-4b4c-ac96-429617de40bf"
        },
        "item": {
          "id": "28c1dabb-5ac7-40c3-a5d5-8032dbb88805",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "628f11d9-4ca5-4d48-bc0c-6a2324e7ca6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed10aab-0bf0-471d-bb30-55c6084d6d4e",
        "cursor": {
          "ref": "149c18d0-d761-41a5-8ebf-a7d545884a29",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "82da9e80-ec10-4df7-988b-d7a0fd8e3b80"
        },
        "item": {
          "id": "bed10aab-0bf0-471d-bb30-55c6084d6d4e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "287edcb2-05b5-45d6-a866-90f6c8378efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a85fbe-7d0e-4bc4-a1e3-f2497770c7fb",
        "cursor": {
          "ref": "0abde67e-4439-4321-baab-4f5c280edc85",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2dc3b29c-b56c-44f6-a498-46aca8b9003f"
        },
        "item": {
          "id": "25a85fbe-7d0e-4bc4-a1e3-f2497770c7fb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e626debe-b705-4697-885c-65f57a61322b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790ab1a8-d080-4236-8fbb-718d8902d7fc",
        "cursor": {
          "ref": "3a0cf13a-b137-4e2d-b292-37e7ef839fa2",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e49e48e5-47db-49bf-ba73-e64e6147c752"
        },
        "item": {
          "id": "790ab1a8-d080-4236-8fbb-718d8902d7fc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2b30e484-5b51-4583-8761-370bfa5f564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665c429c-684a-4d37-9bb1-e5d2208fa5ce",
        "cursor": {
          "ref": "65032bef-a2bb-42d6-8d67-483853bba9f7",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e005d77a-e5cc-4dbe-b3ae-85a8efd31133"
        },
        "item": {
          "id": "665c429c-684a-4d37-9bb1-e5d2208fa5ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5fce35e2-4563-45d6-892d-e260c48addc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe76757-21c5-44c4-8d63-d68f3e178c55",
        "cursor": {
          "ref": "90a0bcc4-1561-47f7-9174-4ed64423ec2c",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4851b81e-7752-48c8-8f4d-830a0cded5a6"
        },
        "item": {
          "id": "efe76757-21c5-44c4-8d63-d68f3e178c55",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3b4cb045-dd65-47da-bac7-3838f8a272a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838d52e9-c79c-4278-8764-6c250628e9a1",
        "cursor": {
          "ref": "87f07cdf-1472-4388-98d7-ca9b9f074b69",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "79117d76-c768-4fa8-a2fb-0788ca4f6266"
        },
        "item": {
          "id": "838d52e9-c79c-4278-8764-6c250628e9a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d358f6bc-f713-44e6-8958-f59b71db9e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e0e5f5-2939-43cb-a893-727209523401",
        "cursor": {
          "ref": "d91a5d31-2794-4471-9ae3-19151a2b3be3",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dfcd702f-7934-40be-a5dd-62ec27840446"
        },
        "item": {
          "id": "a6e0e5f5-2939-43cb-a893-727209523401",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1f72a673-d879-4fa0-acf0-cf10ce4d737d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394673bc-1707-4e3f-8563-a43a1b604603",
        "cursor": {
          "ref": "a91b2706-7551-4a2c-a452-2d6132a47f19",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3e3318b7-9463-4fd9-958e-bc7cb7cdb2d1"
        },
        "item": {
          "id": "394673bc-1707-4e3f-8563-a43a1b604603",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "65d3e422-6e2f-4345-ac1f-4d0a2c721e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820d5559-0eac-43d5-a2d8-67af30310c32",
        "cursor": {
          "ref": "df4d7795-8e99-47e3-84be-517e05642648",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dfa74f35-0087-458c-b272-5f26552e5edb"
        },
        "item": {
          "id": "820d5559-0eac-43d5-a2d8-67af30310c32",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ea40631-5da3-4bfb-9e9e-4acc7e3103b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1231,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09075cd8-640f-479b-8e28-88bec95685aa",
        "cursor": {
          "ref": "1bc80440-f25e-41d6-8ab5-316f2db87481",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6cc16d93-6be0-446f-aaf8-8b4c65fc7d2d"
        },
        "item": {
          "id": "09075cd8-640f-479b-8e28-88bec95685aa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "26343ff2-d6fb-4925-a525-286a404e8d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53cb254-77e9-4c6b-8ba7-e021eecbce29",
        "cursor": {
          "ref": "7cfb0466-98fc-473a-aa3d-c36f46fd12a5",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ad8e9a3b-13a4-41b5-abce-f2dcb1927efe"
        },
        "item": {
          "id": "f53cb254-77e9-4c6b-8ba7-e021eecbce29",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "96e6f08b-7e3b-4518-8cf1-df690d9b97ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e10a08f-ce05-47f3-b690-41f72d2b9405",
        "cursor": {
          "ref": "4a362066-7e11-4703-a856-56a99585b30f",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bb555461-cd91-44c2-8c75-71a12b0fd452"
        },
        "item": {
          "id": "9e10a08f-ce05-47f3-b690-41f72d2b9405",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a4ade087-811f-40f9-a45a-32d2aed13dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1137,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd249972-53e3-4431-b9d2-92d5966c0871",
        "cursor": {
          "ref": "7c378943-57f3-4c7e-8f39-317b8112d7e8",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4599cc7a-0127-445f-b990-aba7b769823b"
        },
        "item": {
          "id": "dd249972-53e3-4431-b9d2-92d5966c0871",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "41d90106-ceff-4d58-8e1c-3a96a5f7cc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639f575e-7598-4562-ba50-d3fd50321f9d",
        "cursor": {
          "ref": "e312a264-d636-42e4-9ecc-7d82a0698383",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d8f676c0-8ed1-4062-80c5-d76a646f345f"
        },
        "item": {
          "id": "639f575e-7598-4562-ba50-d3fd50321f9d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec77b26f-e636-4d85-b588-0adcf6e481c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe92b6-f496-4f6f-8a14-448f92331df6",
        "cursor": {
          "ref": "38479231-fb7f-4265-81ba-9fc5bf1687ca",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aca07890-0747-4ccf-acc6-7c92b96c9924"
        },
        "item": {
          "id": "76fe92b6-f496-4f6f-8a14-448f92331df6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c211ee62-69d9-4c3c-a45d-a614ff7251ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23127a68-2196-43f5-adb4-ad98e0e65f09",
        "cursor": {
          "ref": "3f87ebe8-5d2f-4a0e-bb07-5a1cde03e0e9",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "80b04184-7a7a-43bf-8796-99fa5f182384"
        },
        "item": {
          "id": "23127a68-2196-43f5-adb4-ad98e0e65f09",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "391905e4-3712-46bd-b762-37384b486430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446d0db9-5539-4db4-ae67-fb8530f358d4",
        "cursor": {
          "ref": "e30c9f14-bef1-41a1-97a7-7f01383c3b10",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "edc654b7-1ffc-41f0-bdef-7433b4586171"
        },
        "item": {
          "id": "446d0db9-5539-4db4-ae67-fb8530f358d4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5b989c6d-4b0d-472e-bc4f-7649c325a3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3407be7f-9feb-45ae-9760-16b840695c7a",
        "cursor": {
          "ref": "5a4ec940-9900-43e8-964c-1e183bba7167",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aebfcd4f-5820-4d1e-8a4d-9af3f2b8768d"
        },
        "item": {
          "id": "3407be7f-9feb-45ae-9760-16b840695c7a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4fa172a7-cce3-4ea2-be3b-84927db220a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3636af81-ae67-408f-805c-912b6de7b951",
        "cursor": {
          "ref": "00bffcbd-f745-4a28-83cb-6ca07cca3699",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4be83e4c-ad4a-4015-84be-6f99951b726b"
        },
        "item": {
          "id": "3636af81-ae67-408f-805c-912b6de7b951",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8f8f7f91-ff45-4ec5-9652-678cb540c4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5a451e-f792-4578-8997-b453717e09cd",
        "cursor": {
          "ref": "cf1768ed-b2e0-4efc-83d2-886da8e45ca9",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bb41ad25-8727-41bf-b48c-edcaf363d025"
        },
        "item": {
          "id": "ca5a451e-f792-4578-8997-b453717e09cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bd159278-1f3e-41b1-8250-f7317a3a83fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f034a46c-eefb-42c2-8128-09fb7fccbcde",
        "cursor": {
          "ref": "81259bcb-09c2-4e18-9599-06e7b65b85dd",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "58dbe25f-6756-462d-90fc-0885fb8275a2"
        },
        "item": {
          "id": "f034a46c-eefb-42c2-8128-09fb7fccbcde",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d4de9695-a63f-4d1f-9e55-d81529a7fed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8173178f-e713-4ebf-a403-5bcd828e94a0",
        "cursor": {
          "ref": "1a031ddb-8217-4ff3-9315-8e49fa8fd094",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4e382062-150f-4d25-b146-5ace238da3a4"
        },
        "item": {
          "id": "8173178f-e713-4ebf-a403-5bcd828e94a0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "84d3c55c-1f9d-4bf3-a4af-2cae925fb4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebd6ea2-d317-4c8b-96ff-4ceb9a80df32",
        "cursor": {
          "ref": "b552e44c-92ac-46de-86a2-c4ab6ac857c6",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "99c60b60-6109-447f-935b-bc5387e9e527"
        },
        "item": {
          "id": "8ebd6ea2-d317-4c8b-96ff-4ceb9a80df32",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1214d87a-3214-4028-8526-d21bbf84fc08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c038224-9044-4550-b1e9-c217355822ce",
        "cursor": {
          "ref": "a9234c06-8243-4acb-b42c-49c15e1dc001",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1cd59349-343e-4eb6-8756-0fac5bfc2275"
        },
        "item": {
          "id": "7c038224-9044-4550-b1e9-c217355822ce",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "41665d5f-0782-4a49-9c3f-51284ad15cd9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 508,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82e604d-435e-4f9a-9a41-91ae47c7a379",
        "cursor": {
          "ref": "d9ae62c7-ca85-4985-8f75-6a4a66d1c2a7",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3faf7446-ba7e-4a6e-b980-7692c1ed1162"
        },
        "item": {
          "id": "f82e604d-435e-4f9a-9a41-91ae47c7a379",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1e44de84-ca16-4594-a1c0-1852941dd2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82e604d-435e-4f9a-9a41-91ae47c7a379",
        "cursor": {
          "ref": "d9ae62c7-ca85-4985-8f75-6a4a66d1c2a7",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3faf7446-ba7e-4a6e-b980-7692c1ed1162"
        },
        "item": {
          "id": "f82e604d-435e-4f9a-9a41-91ae47c7a379",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1e44de84-ca16-4594-a1c0-1852941dd2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c621799-b306-4efa-add8-e1b120c8e482",
        "cursor": {
          "ref": "02156339-c1dc-4547-9da6-4a494969cf65",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2fd6d5a6-eff6-4f47-9df8-f7840a92e651"
        },
        "item": {
          "id": "9c621799-b306-4efa-add8-e1b120c8e482",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9912f4a7-11a8-4f0b-b8fe-c2edcca0766d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 263,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "cd04f4b9-a8ec-4673-b97a-f9b09cb6882d",
        "cursor": {
          "ref": "2970ea03-53c8-4b90-ac03-512ef2d18f97",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b5e18939-ded1-4b4d-9d06-fb7690393ef0"
        },
        "item": {
          "id": "cd04f4b9-a8ec-4673-b97a-f9b09cb6882d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "566a6bab-8bdd-4a8c-92b3-a063b1f6c1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39cdb69-09e6-41aa-89d7-271de5faea23",
        "cursor": {
          "ref": "384ed847-140b-4e93-bcef-837f0dc45527",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1b523673-87e1-425b-8a6d-cb35a3a3bc21"
        },
        "item": {
          "id": "e39cdb69-09e6-41aa-89d7-271de5faea23",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "740a2805-c1c1-470f-9ce6-ed41ca3b772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdda69e5-738c-446b-949e-52c214abd35b",
        "cursor": {
          "ref": "94c74180-256b-42eb-a65f-9ffe9ca50edb",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f6ba338f-d1ad-4b8a-9a83-853a707106af"
        },
        "item": {
          "id": "fdda69e5-738c-446b-949e-52c214abd35b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "af3dbfcf-4abb-4498-9a37-6197dc311a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861a3049-73df-4ce7-b19c-e5c5b5100df4",
        "cursor": {
          "ref": "6012bf4c-6e65-445f-9ee0-5709103367fa",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "61a6afb7-3e68-4c7d-9cdd-0b45b57f3f2b"
        },
        "item": {
          "id": "861a3049-73df-4ce7-b19c-e5c5b5100df4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "143e62ca-44ef-4d09-b9a6-06ab0fc692d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fd6874-4cd5-45a0-a8f1-e599e82e5e34",
        "cursor": {
          "ref": "f53b7909-ecfb-4a61-8777-9b74a42448f6",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6bf07ec9-9690-4cf7-939e-8a4bbb473369"
        },
        "item": {
          "id": "f1fd6874-4cd5-45a0-a8f1-e599e82e5e34",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d9f7cc03-303b-4970-a1b5-f1894bca5c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1bfa6b-0d87-489c-9896-c0f46c7e6eef",
        "cursor": {
          "ref": "eff2769d-2033-4800-887e-ae8ed206b4c6",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cae53c6a-3a98-45ae-af43-acab4de3212f"
        },
        "item": {
          "id": "0c1bfa6b-0d87-489c-9896-c0f46c7e6eef",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2e8f4fb9-8c0c-4b0f-9861-8762897002b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2a5182-7b62-4eb0-9ec7-914735c03e9d",
        "cursor": {
          "ref": "e6aa20e8-d868-418d-9fe2-757441064198",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a289e8eb-6203-4d22-9338-24c8256ac5a8"
        },
        "item": {
          "id": "2e2a5182-7b62-4eb0-9ec7-914735c03e9d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "01d1d44e-6f8f-4190-a901-2571910ace3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023d856c-a26c-4b7f-b2d6-da60a00d8aa3",
        "cursor": {
          "ref": "519a0547-0bba-416f-a5eb-2ebf02eb7905",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1836713c-21fc-42fb-a515-bd94dfc01699"
        },
        "item": {
          "id": "023d856c-a26c-4b7f-b2d6-da60a00d8aa3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8b5d8c33-f740-4363-8f61-cfa032356a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d8a73e-e188-4098-89fb-00747a9bc16a",
        "cursor": {
          "ref": "e77e4c23-c0d0-4eac-a635-8321de6141c2",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6c7d7db1-2e3a-4e96-ad38-5b38f63db672"
        },
        "item": {
          "id": "01d8a73e-e188-4098-89fb-00747a9bc16a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e4188234-a3b2-4783-8c62-4cb1b67fe221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd011d92-208e-4512-bb6d-b0649bab7be7",
        "cursor": {
          "ref": "9cc5cefd-5b21-4c49-a91b-a0c5a9117b17",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9f038889-0e45-44f8-b3de-7ecbb46e9116"
        },
        "item": {
          "id": "fd011d92-208e-4512-bb6d-b0649bab7be7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "636791c6-195c-4b42-8a52-0e211a17f887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f5fffd-afed-4be6-9396-d03d252f1330",
        "cursor": {
          "ref": "e803cece-0024-4c4c-8281-e177cce37b5f",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d093ab5c-bbbc-4820-9303-099e60a3152a"
        },
        "item": {
          "id": "e1f5fffd-afed-4be6-9396-d03d252f1330",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a8d2ffde-5221-4a02-8fe5-1859ea67e303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3a0a6c-3327-4f76-9188-4725f59860fd",
        "cursor": {
          "ref": "29bf3cf3-8137-4227-80fa-2ded3ca9170b",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "612dc9b1-ca8c-4af0-9b48-d77ac2089dbf"
        },
        "item": {
          "id": "1a3a0a6c-3327-4f76-9188-4725f59860fd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5267e8cb-5ea5-4c77-bff0-a87c3048645c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8343ce30-3217-459a-85fb-ab9a2cdc144d",
        "cursor": {
          "ref": "11d76009-f68f-49ce-8c75-5640111e84f4",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e876786b-0574-4017-8240-2ab03e8805a3"
        },
        "item": {
          "id": "8343ce30-3217-459a-85fb-ab9a2cdc144d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "54393c8c-e6e3-4b53-9db1-48bc35d3c7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1a35c5-eb91-4d0f-bc32-bfbc3b3b0a28",
        "cursor": {
          "ref": "4f1adef4-e631-4c45-a204-2d9c9994a8d0",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "77553108-f598-438a-b895-0653ab326cd4"
        },
        "item": {
          "id": "6f1a35c5-eb91-4d0f-bc32-bfbc3b3b0a28",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ea3eb49d-fd5e-47b9-9729-6a3c7aa38da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c28e8b3-fe20-4933-9a92-d52aed308abe",
        "cursor": {
          "ref": "61d3e175-af7a-44ca-9678-c51252432716",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c349958f-1c31-480f-bab9-dcebeb9b6fb3"
        },
        "item": {
          "id": "2c28e8b3-fe20-4933-9a92-d52aed308abe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1180eea8-f8d0-41e9-93dd-9c4d3d2f6e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2467ed-bb0f-494a-b809-914de9ac06c2",
        "cursor": {
          "ref": "f1ccea35-54b9-4ead-a3ff-f169ef55d233",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1e6ca62d-6e18-4ef1-a96f-45fadc0fe65e"
        },
        "item": {
          "id": "ad2467ed-bb0f-494a-b809-914de9ac06c2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a8915ee2-49de-4e61-bd41-c7d58db57212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414de12c-bc31-4f61-850a-6ad2c6a50ca9",
        "cursor": {
          "ref": "ea39a66f-9c53-457a-9cfe-49203e3cf40f",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c82001a8-ca18-4c3e-976f-bfcd472a90be"
        },
        "item": {
          "id": "414de12c-bc31-4f61-850a-6ad2c6a50ca9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bdb7e167-d9e2-4ce3-9e93-4ba3ad3c95ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385156f6-ed53-4220-b7ca-84314d05921d",
        "cursor": {
          "ref": "fb3d8cbf-9016-495d-8f2c-e13fbede196b",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d24b785f-6101-4651-bc02-4e57b3dd1a99"
        },
        "item": {
          "id": "385156f6-ed53-4220-b7ca-84314d05921d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "19b73142-3f3c-42f2-bd96-e86bff1e0d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde7c4ed-1492-4068-abd4-df2eabed7915",
        "cursor": {
          "ref": "bea8132d-b669-4f4a-abc1-e11dad312aeb",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f66d1cf3-87b3-4f13-86bc-d7ed16f801df"
        },
        "item": {
          "id": "cde7c4ed-1492-4068-abd4-df2eabed7915",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "10c44be1-e514-4317-a6fc-18cd8e1af9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581fe087-35db-40b9-acb3-9d3396a9ac85",
        "cursor": {
          "ref": "3f215727-1c5f-4ff8-98bf-7d410bf19a59",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ea9f4734-6c67-4ab9-b520-ed4423f92a14"
        },
        "item": {
          "id": "581fe087-35db-40b9-acb3-9d3396a9ac85",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d61bab4d-facc-4c01-8f26-557bbb838ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1309ba3-7873-4d99-9dc4-fa6e6d7d8dd7",
        "cursor": {
          "ref": "22d327e5-f446-4edd-a347-02c1926fa739",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a8075244-1187-467e-aca9-bc893cb5c607"
        },
        "item": {
          "id": "b1309ba3-7873-4d99-9dc4-fa6e6d7d8dd7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8e50747f-9a07-4d43-901a-f9acc24c5315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bc1255-5416-40a8-9ed2-8c94cc703aa8",
        "cursor": {
          "ref": "07921325-b721-4bb5-8a16-6a6dd0742384",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8d4fa894-9ba0-4d34-8aae-d31e3fe95901"
        },
        "item": {
          "id": "b6bc1255-5416-40a8-9ed2-8c94cc703aa8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cde068c1-6a5e-4b16-a14a-b185b440f7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844dafed-1b68-4470-836e-7b7b15dc5582",
        "cursor": {
          "ref": "ed74c59a-d424-4cef-ab85-b0930ebae57a",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e1a4302e-a960-48f5-99f8-9c347374f9cc"
        },
        "item": {
          "id": "844dafed-1b68-4470-836e-7b7b15dc5582",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "53848d55-2778-4d78-b2cd-8808d56575a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc41612-8ced-4671-ad6a-15a0bd36219a",
        "cursor": {
          "ref": "3af66fe1-d5b7-4280-b5a1-3c407c9263cb",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6d699033-2791-4c8f-9e20-351f95cee47b"
        },
        "item": {
          "id": "fbc41612-8ced-4671-ad6a-15a0bd36219a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "06e282a7-e5ac-4f63-9774-5e569b6a5cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7ef772-f074-4b1b-bdc2-6bd2d50eb8f8",
        "cursor": {
          "ref": "5a50128f-7d50-4c74-9ba8-a6638c2439bc",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5bce65cc-9566-434b-84a8-afd69d538d06"
        },
        "item": {
          "id": "bd7ef772-f074-4b1b-bdc2-6bd2d50eb8f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "768bca13-4e0f-427d-a6d6-52d17507e8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ca1e6-9ff4-4436-a8b4-49b8edd4d61a",
        "cursor": {
          "ref": "bcc94eae-5e4a-42da-a313-bf238665a19f",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "32ec1ac1-7a98-4a45-b6a3-c9c647bcfaae"
        },
        "item": {
          "id": "5a3ca1e6-9ff4-4436-a8b4-49b8edd4d61a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4fa70898-e788-4998-bc6a-9228c4617ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb595f03-8f42-4015-8d9c-7980a8086c1f",
        "cursor": {
          "ref": "d9cfa727-9c18-4650-a1d1-e6681e7eede7",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a08ef014-f223-4b84-8c12-ace3ca9b838c"
        },
        "item": {
          "id": "bb595f03-8f42-4015-8d9c-7980a8086c1f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "54557674-c018-40c8-b377-1f2758a1a395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b614df3-e296-4034-ad20-8f0d7f337e29",
        "cursor": {
          "ref": "aafd305b-0c47-4aa7-8a35-bd1779159052",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "faff25a4-f9c1-43a1-b4ca-c76aedfc7001"
        },
        "item": {
          "id": "3b614df3-e296-4034-ad20-8f0d7f337e29",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d44daffb-010a-4a85-b0d2-add3975bb99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05522d78-a39e-4d12-a18d-a05f98e94830",
        "cursor": {
          "ref": "b3d0ae96-8626-4d67-85fe-970f078123b5",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f8b77f59-52c7-4324-bbac-775b54ec95fb"
        },
        "item": {
          "id": "05522d78-a39e-4d12-a18d-a05f98e94830",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9e515f7f-abb2-4b24-a5ff-567b699256ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013961ab-fc6e-456e-b2ee-885d3e3c8ab1",
        "cursor": {
          "ref": "4c0e823a-6a9f-4b68-9505-3905dc051e1a",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0376d41f-f411-4b7f-839a-eef335f552dd"
        },
        "item": {
          "id": "013961ab-fc6e-456e-b2ee-885d3e3c8ab1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5cf09382-e4ca-4eb3-8016-9a66aca507ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06def2cc-79c4-4be2-bc52-aef17dac4e8c",
        "cursor": {
          "ref": "5ec6e8cf-0e1a-4fec-9738-1791238186a4",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d14827c3-9921-4d9f-bb42-b4eb6a8d2448"
        },
        "item": {
          "id": "06def2cc-79c4-4be2-bc52-aef17dac4e8c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e75f3a9a-6ead-4323-8026-306e85d56503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd447e1f-21a8-4a3b-a09a-b8236f419f1d",
        "cursor": {
          "ref": "4f369f11-2471-4ca0-95a1-609fd88980b0",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "92adcc16-9c81-463e-9377-144fcefd4ef0"
        },
        "item": {
          "id": "dd447e1f-21a8-4a3b-a09a-b8236f419f1d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b89a080-60aa-4e17-b19c-9b2896a37d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3351a9-a655-4e63-8c79-53c6ae5fdfdd",
        "cursor": {
          "ref": "f7b608fc-8cfe-4133-8b9d-58b90ae6f257",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a6e710c7-7588-4879-a68b-8c1acffe176c"
        },
        "item": {
          "id": "8c3351a9-a655-4e63-8c79-53c6ae5fdfdd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3b83ddfd-22df-4a55-bb2e-8af4744186f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e78c2a7-cac6-4d30-99d1-59829690bc1c",
        "cursor": {
          "ref": "a9a91ba4-125b-4da9-b355-fb618c94c0ee",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1c5f6897-7c4a-412b-bb63-b5424c720331"
        },
        "item": {
          "id": "7e78c2a7-cac6-4d30-99d1-59829690bc1c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "77aa2946-79c0-4f62-ae91-c0f5fed4fb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2ce128-f4e6-46b9-8948-6b6caefdb100",
        "cursor": {
          "ref": "15fec2c8-6f51-42e5-87d6-fc1066d414cd",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dfe1ea4a-b0b2-4cc2-ae62-fd7c75dd7714"
        },
        "item": {
          "id": "6d2ce128-f4e6-46b9-8948-6b6caefdb100",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "912e90ff-e1a6-4470-9185-9564d7261ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdb2f2f-9daa-434c-8297-f625109045e0",
        "cursor": {
          "ref": "c5dfa2af-62c6-47cd-ae45-0d2eab003fa3",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ff3dde9b-e0e6-40a2-adb6-fe3a6e6552da"
        },
        "item": {
          "id": "acdb2f2f-9daa-434c-8297-f625109045e0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "07ffa91a-57be-4319-80ce-faf9f02362d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04af784d-5743-438f-8ebf-d21653fc05b2",
        "cursor": {
          "ref": "2c151b35-d4a8-4294-81ff-43ddc4f44923",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0752cbbb-5e8b-49c3-b737-1ae47f8f8467"
        },
        "item": {
          "id": "04af784d-5743-438f-8ebf-d21653fc05b2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "afc3762f-314d-4b15-b33b-e221858b8bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3815f16a-79e9-4f49-bda9-d9abf33ddda9",
        "cursor": {
          "ref": "aa7cf0dd-6b8c-465a-964f-daaeffd61173",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8b303147-b0e5-4abb-a408-25a16ae41319"
        },
        "item": {
          "id": "3815f16a-79e9-4f49-bda9-d9abf33ddda9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a9574389-401d-404e-a34b-a9e02b5233f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5612cbaa-aad3-43d1-bc86-4643b0790106",
        "cursor": {
          "ref": "bec0ba88-f19a-45dc-ba8f-924f807b39e4",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b51f46b3-0c3a-4497-8895-276b26df0fc9"
        },
        "item": {
          "id": "5612cbaa-aad3-43d1-bc86-4643b0790106",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "caf8a792-b50b-45c9-ab0d-61b24214f463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba27bb2-0ac1-41fa-a3a5-f29b4e7d60f3",
        "cursor": {
          "ref": "9690c0a3-4314-44b6-9694-ce70de656fea",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f63e478d-a8e8-4f25-867e-ef70da9e6435"
        },
        "item": {
          "id": "dba27bb2-0ac1-41fa-a3a5-f29b4e7d60f3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c052f4c2-5487-47ee-b1c7-550157561634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0370384a-04ee-45b2-85dd-5c28f007e474",
        "cursor": {
          "ref": "3c3b2eed-6f83-4a25-98d2-3c9ddb5e445c",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "31339966-f330-470c-bb46-dfdd8bb8947f"
        },
        "item": {
          "id": "0370384a-04ee-45b2-85dd-5c28f007e474",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a91ed52e-144f-407d-9fbe-e62785b39b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9feecfe7-aa26-4c06-ac65-6a6af63a8852",
        "cursor": {
          "ref": "7331827f-fa6d-45e3-93f2-cb908dde278a",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a63dd16c-83ae-4c2b-8c06-7a9581b4c029"
        },
        "item": {
          "id": "9feecfe7-aa26-4c06-ac65-6a6af63a8852",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bfba0ad6-a3d2-4bcc-a1c4-fe8be67db999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d41d65e-d7d4-422a-84be-6535199050a5",
        "cursor": {
          "ref": "1c9c51c7-d514-4161-a858-49c0de1b0ed2",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fd8515fe-f92c-4d97-b484-f3b7f35350de"
        },
        "item": {
          "id": "6d41d65e-d7d4-422a-84be-6535199050a5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6da99824-7f37-49dc-be7f-16ee8e200825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76146abf-be30-4284-9c7e-7ea9c4aa1cae",
        "cursor": {
          "ref": "516dc5f9-3929-431b-b8e8-995c89d8806a",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "70a7e603-bea6-4029-a5ba-bb74e9546dfd"
        },
        "item": {
          "id": "76146abf-be30-4284-9c7e-7ea9c4aa1cae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "64057bdc-9b07-4ce2-b649-731323a3d9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8c24a9-a146-489e-b728-75a86d7bc0df",
        "cursor": {
          "ref": "ebac8a58-cf45-4551-a4e2-2bd0544618dd",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e74eae3b-dc65-477f-a088-90aaa14f8b8e"
        },
        "item": {
          "id": "af8c24a9-a146-489e-b728-75a86d7bc0df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "28caf9df-f822-44d9-ba86-b472f42b8fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652cd097-fe8f-4abc-a226-d1ef51773ce5",
        "cursor": {
          "ref": "98d4b11e-036e-499c-adcc-b482a46275a2",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1b304294-d956-41b5-ae94-9d0fbf4f9049"
        },
        "item": {
          "id": "652cd097-fe8f-4abc-a226-d1ef51773ce5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8e6ffc7c-b4cf-4210-9633-7d2cf402a6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94833198-3a04-4774-a397-998d94eb95dc",
        "cursor": {
          "ref": "d9b95e4a-ddd2-4885-a644-5c16d281fab5",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1ddcaf3a-d324-4c04-abde-8ffb6a2f83ae"
        },
        "item": {
          "id": "94833198-3a04-4774-a397-998d94eb95dc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b004ddf4-5549-4760-83a9-8bfa965469e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677a6efa-d39c-4a81-bf1a-fc7a9d63f249",
        "cursor": {
          "ref": "6180f1d6-5f9c-4bef-8ad7-17a8b68c40e6",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "64a72e3e-1a80-4af1-9e49-6984dd9eb36e"
        },
        "item": {
          "id": "677a6efa-d39c-4a81-bf1a-fc7a9d63f249",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b371454c-4f3b-4dc0-9862-da20fc9b682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957bed2d-e6f7-4fea-8497-0992445a34ce",
        "cursor": {
          "ref": "0dd68398-35ba-478e-a664-2eb9604dc044",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ef94f3b8-135e-4074-a8bd-9415652a6e92"
        },
        "item": {
          "id": "957bed2d-e6f7-4fea-8497-0992445a34ce",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c3347e2b-35f9-4695-902f-bf60e64f3f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd30d6e-9aec-4756-9518-d416e16ec9b5",
        "cursor": {
          "ref": "116ac4ed-48bb-4aa5-8616-ee97147daca6",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7549fe5e-3f8b-4bcf-8d10-6a4c5dd42716"
        },
        "item": {
          "id": "cbd30d6e-9aec-4756-9518-d416e16ec9b5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "637d0b67-cd01-4741-8be7-2f9f1b2f5f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b8f7ac-ce2e-46e5-97d1-0d5426ac12b8",
        "cursor": {
          "ref": "677d31cd-3f9d-4581-befb-b5782a493459",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8adaa4a6-b3a9-4729-a952-020dc3b04dab"
        },
        "item": {
          "id": "01b8f7ac-ce2e-46e5-97d1-0d5426ac12b8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0815733f-072a-48c8-ab08-3c46b61094ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afabebd7-2312-46a6-9daa-de9dab2ddabc",
        "cursor": {
          "ref": "a52d5c92-5c4f-4713-a4c4-66ff54487161",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d193a888-a89d-49dc-aefe-d3959fd5d25d"
        },
        "item": {
          "id": "afabebd7-2312-46a6-9daa-de9dab2ddabc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bdf1e1b7-9b94-4d9e-afbe-1775af8ffeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6078b07a-7ff8-4409-a915-f4e4d033f22a",
        "cursor": {
          "ref": "d872fefb-0bde-4ddb-9132-0e3576b00f1b",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c7422b11-d7a8-485b-bd7a-02022d5e9f62"
        },
        "item": {
          "id": "6078b07a-7ff8-4409-a915-f4e4d033f22a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "12f85848-03c4-4afe-baf9-b026d6981788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d014ccef-f0cb-4b73-b15c-76e6ebf0c6fc",
        "cursor": {
          "ref": "aa6def7a-b4ce-414a-97a9-1e14e3d181c7",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ee874cec-5ded-4b76-8d20-b1502515c73b"
        },
        "item": {
          "id": "d014ccef-f0cb-4b73-b15c-76e6ebf0c6fc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "07b09cdb-5b2c-42e1-9d1f-2c8ae9cb0fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186b7e85-2fca-4b8b-a723-7307fea8465e",
        "cursor": {
          "ref": "a1637912-9f9c-4acf-9cd2-f0309afd4a4b",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ecf280eb-13f2-42a6-a3dc-a14ea73c151d"
        },
        "item": {
          "id": "186b7e85-2fca-4b8b-a723-7307fea8465e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "67fbbfa8-d364-4d32-8755-b14940347ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adc17b7-c819-4bd4-97c2-84654c25f623",
        "cursor": {
          "ref": "3b3a63c2-883a-4e48-8f50-0cda4be33e19",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e8fd2e6-b9c4-4e17-b0b4-c15972e63431"
        },
        "item": {
          "id": "8adc17b7-c819-4bd4-97c2-84654c25f623",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8aa4929e-6e22-40b2-a4d1-220eb43d202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3615da-d0b4-4e0c-8c02-a0d84d403885",
        "cursor": {
          "ref": "1d0427ed-1644-4457-8518-a79a3044f344",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dc650f46-3a7b-4c11-ad28-7bbea17615fc"
        },
        "item": {
          "id": "3c3615da-d0b4-4e0c-8c02-a0d84d403885",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2b4604b3-06f2-4c80-b0df-57b5ab3db839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e06364d-898b-459e-bfeb-140e98ccb838",
        "cursor": {
          "ref": "35833d34-4566-463d-a1bc-e91b36c7563c",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e4472d7d-b309-441e-9a4d-d2c7ab176f3c"
        },
        "item": {
          "id": "5e06364d-898b-459e-bfeb-140e98ccb838",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a3d951c2-abf0-4f88-b4ab-1f0da6d0a816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487f9e4b-ebad-4700-a362-ee5b00a127cc",
        "cursor": {
          "ref": "a2f7c4e2-4ff4-472c-ac49-29d80fd308ce",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f2fc5c02-133f-431e-a513-ded4cf376301"
        },
        "item": {
          "id": "487f9e4b-ebad-4700-a362-ee5b00a127cc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9ca3528b-62e1-4c87-83b4-cc1c475acf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9498a8c9-5123-4564-b827-c8b9e5a3cae0",
        "cursor": {
          "ref": "4a440068-a7a8-44f0-afeb-72d1271ee2e0",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c6b9d20c-3604-4462-a7db-a8d6d783a593"
        },
        "item": {
          "id": "9498a8c9-5123-4564-b827-c8b9e5a3cae0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ffc3e0c2-0dc4-41c9-954c-f43ce5433f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a708a-5896-4acb-8176-d6c43f8775c3",
        "cursor": {
          "ref": "5144d117-6eaa-4936-bc05-63ba1c284e24",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "abcb0a61-1307-449d-8ae6-56af8db0edc4"
        },
        "item": {
          "id": "910a708a-5896-4acb-8176-d6c43f8775c3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cea4f051-b08c-45e9-9e7c-43dea6b8ac5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3510a7-8dfb-47de-b631-ef67db29d0e3",
        "cursor": {
          "ref": "ad2dc750-bacc-47e9-bdac-67459a2a9b4e",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "310f91c3-52ba-47d5-87f1-b1cc51e82138"
        },
        "item": {
          "id": "0b3510a7-8dfb-47de-b631-ef67db29d0e3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3be9eb6e-572c-411a-8ff4-9b4bfc26a3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20235fb-fad8-4a6a-8e3a-77ccc9eab9e6",
        "cursor": {
          "ref": "18fcb079-2515-4223-8f7f-1fece6cbefe0",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "21795157-5600-423a-87d6-2977fd856c7f"
        },
        "item": {
          "id": "b20235fb-fad8-4a6a-8e3a-77ccc9eab9e6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d8563896-37f9-48a9-b463-beaa036198e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673d918a-43e6-4fc7-86c7-e60883a31d15",
        "cursor": {
          "ref": "0cc55295-5c40-4cee-b09f-a5de4879a7b1",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d93118eb-0e0c-47ae-8013-1a42cb70074a"
        },
        "item": {
          "id": "673d918a-43e6-4fc7-86c7-e60883a31d15",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "23bcd368-9d2a-4251-b03c-a0837be2fe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdf4bf7-49db-4f94-9d5b-9bc11cb64a11",
        "cursor": {
          "ref": "92a3d798-78bf-4213-bf38-2ca2e03575ea",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dc1d9d43-c0b8-43b7-a798-4af8c8b14798"
        },
        "item": {
          "id": "fbdf4bf7-49db-4f94-9d5b-9bc11cb64a11",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5c006861-a191-4217-9296-500b1eb98b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745e7f3a-4128-4c73-87ad-61e2c8f50ad4",
        "cursor": {
          "ref": "b66eca1a-c685-4ca5-89b5-64ce99b6e74d",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9b53392b-f754-492f-9d13-fa72167d1772"
        },
        "item": {
          "id": "745e7f3a-4128-4c73-87ad-61e2c8f50ad4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "90318d69-3f5e-4d7b-900d-578d0ff48d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae92c858-a430-4bb3-ab63-1ff2bb6e0080",
        "cursor": {
          "ref": "a1475476-7b6e-417b-ac4c-e7c9d9b8653e",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4e8a8acd-a8f5-4c34-9a1d-c0a0b3ecbc17"
        },
        "item": {
          "id": "ae92c858-a430-4bb3-ab63-1ff2bb6e0080",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a6c2a9b6-173c-43ee-8b1f-8e61df3eed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6665cb4a-d664-40cd-9df1-f388bee61240",
        "cursor": {
          "ref": "8056996d-43d5-4c13-92b6-128bc645181e",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "682b0430-7888-4ff5-ac93-a69c912bcde1"
        },
        "item": {
          "id": "6665cb4a-d664-40cd-9df1-f388bee61240",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0d365ee7-427d-4dc0-ac47-f356fb218408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70365f47-16ef-4a23-bb0b-66190f6c6e0c",
        "cursor": {
          "ref": "faea7331-80b2-4de6-8796-75b9e7afa337",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e7a1fd2b-006f-46a3-8bf8-873d8c5cc6ac"
        },
        "item": {
          "id": "70365f47-16ef-4a23-bb0b-66190f6c6e0c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dd09d59e-b6af-40aa-bc01-ed2689f63aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92b0eac-da5d-4e37-898c-2d69a947b6bd",
        "cursor": {
          "ref": "643b1068-66c9-4097-afdf-4349de6f6a82",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a37d7c6-8011-4f32-8a04-6a4259eeb369"
        },
        "item": {
          "id": "a92b0eac-da5d-4e37-898c-2d69a947b6bd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "154be425-d1d7-41d1-b967-501488a27e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528d755c-6dbc-493d-abab-52fbb695ea6c",
        "cursor": {
          "ref": "fd556799-96f2-4650-9dc7-684dc001d565",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5f4a2978-59a9-4f84-ae20-4b0b3dab8fe8"
        },
        "item": {
          "id": "528d755c-6dbc-493d-abab-52fbb695ea6c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "736b4ac4-be2b-4c19-8866-5413b1b4f342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004e7192-0139-4f3c-b2b6-3bdd6ba2fdde",
        "cursor": {
          "ref": "30fd5c75-4ca1-45ff-a0e4-2191bb0a474f",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "47f6f6f0-ebb6-4273-b654-3b8cfd12930a"
        },
        "item": {
          "id": "004e7192-0139-4f3c-b2b6-3bdd6ba2fdde",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "61d9543a-6a8c-4ee1-86c5-407af8769c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e600a9b8-b9f9-40e7-8d6f-117b2193eb5c",
        "cursor": {
          "ref": "a87f503b-12cb-4465-8811-8da5706fb780",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "81936b93-4c9c-4991-9828-2be074bcf779"
        },
        "item": {
          "id": "e600a9b8-b9f9-40e7-8d6f-117b2193eb5c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "54088d21-f81b-4dda-956a-9d2c926aaa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdffd55-d0bb-4bb8-b738-e9944e5ba98e",
        "cursor": {
          "ref": "e5d80f5d-fc28-4ede-b7b6-c6d7578e6fce",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e562054c-77a0-4e9b-b873-82bb43eea27a"
        },
        "item": {
          "id": "3fdffd55-d0bb-4bb8-b738-e9944e5ba98e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2b366e1e-10ca-4747-8c84-9aa19ec3e6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df55bc7e-ab87-4112-8e23-9d0efcbeaeb4",
        "cursor": {
          "ref": "3c8bad37-a977-4ba8-ae8e-03dd80e0ac51",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a117a12b-e3e6-4068-ba23-cebf7d7c9f06"
        },
        "item": {
          "id": "df55bc7e-ab87-4112-8e23-9d0efcbeaeb4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "68788d71-5ba9-4eba-8f5b-fe67826300a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954ebab9-d2f6-4d10-bcf8-3436b1cc1a44",
        "cursor": {
          "ref": "97fdf261-324d-499d-918d-fca2cd61d8ec",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f8a53cb3-41b9-4a0c-8e82-b967daeef1fd"
        },
        "item": {
          "id": "954ebab9-d2f6-4d10-bcf8-3436b1cc1a44",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bdf0f5a8-ba2c-48b2-928b-41b4919b26d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79efc83c-37d5-45a9-b313-37887c761713",
        "cursor": {
          "ref": "866195ab-ec2f-49e8-9f4b-9e01e87a3048",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f3f12099-9467-4d85-804b-1a44b9c32364"
        },
        "item": {
          "id": "79efc83c-37d5-45a9-b313-37887c761713",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b5416ec7-c015-41ab-bc9a-ca74b40fdb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96be9e3-436e-406c-9334-e4fd09c89d63",
        "cursor": {
          "ref": "2846377a-ed08-47b1-835c-4e1b3227b94b",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a53353ae-88a3-4131-a0ba-73be4a5d75fe"
        },
        "item": {
          "id": "f96be9e3-436e-406c-9334-e4fd09c89d63",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4bef20a9-79aa-4160-ba2b-f681f367e47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45286f51-cfbb-4239-97e8-b0aedfa60502",
        "cursor": {
          "ref": "d219cef8-f8f5-4b4a-8282-94722208efb5",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8435e853-1dcd-40f1-a335-4859cbdfe8d4"
        },
        "item": {
          "id": "45286f51-cfbb-4239-97e8-b0aedfa60502",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c4ae4628-49b2-4fdc-843f-0b6a93c950e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc86401f-c66d-4a7b-ade6-b9668f27bb84",
        "cursor": {
          "ref": "88fe0a00-d36d-4a90-84cb-0418a16e909b",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2616eb09-759f-4c05-a5d0-f1268f4ec2b2"
        },
        "item": {
          "id": "dc86401f-c66d-4a7b-ade6-b9668f27bb84",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b808f566-58f0-4f9c-9374-4ce29125db39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a22532-e353-434f-9ff0-e3fd05f8f035",
        "cursor": {
          "ref": "22850fe6-772f-4b86-8b97-5e2bdcf1f339",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "df806484-3729-4c9a-8978-5e57dd8ab5e1"
        },
        "item": {
          "id": "42a22532-e353-434f-9ff0-e3fd05f8f035",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4de8aae9-2355-40eb-a188-9ba3b0e9a0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c74ada4-bab1-40dd-ade2-fe0975fb2d2b",
        "cursor": {
          "ref": "3e92433b-c33c-4089-8faa-f9907e62e95c",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bf1d6ba3-d78c-487f-89c3-75a50560d254"
        },
        "item": {
          "id": "4c74ada4-bab1-40dd-ade2-fe0975fb2d2b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "09f16234-8718-4401-aa21-3fd67e3c9396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01d1498-ddf0-474c-be88-f1c93a715580",
        "cursor": {
          "ref": "9344d362-b0fa-46b3-82c1-af35f4d3fce4",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5a6df528-96bf-419a-8a6b-0275bce611b0"
        },
        "item": {
          "id": "b01d1498-ddf0-474c-be88-f1c93a715580",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4c572ea9-f771-49b4-99f1-4f438a261353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f208c4ab-858a-4191-a84b-9382e57564c3",
        "cursor": {
          "ref": "595acf7d-baa4-47e7-8314-3f260067db98",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b051944e-1e6a-46a6-842e-1549ffc7a2b1"
        },
        "item": {
          "id": "f208c4ab-858a-4191-a84b-9382e57564c3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5d506f46-a9be-429e-912d-41c315c0fbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2558c6c-373d-4681-8e8b-b30ee21fe7af",
        "cursor": {
          "ref": "05f972f6-671d-4fde-936e-6cac6b6bcf57",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bd23dc74-de61-4117-876d-36441c22c602"
        },
        "item": {
          "id": "b2558c6c-373d-4681-8e8b-b30ee21fe7af",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "085abd94-3459-4286-bcec-effb1c6afd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b111b4-cb62-45b8-be50-b801fe2888e7",
        "cursor": {
          "ref": "26a6b909-ceba-41d2-b293-9ec6b50ae92b",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "14348430-f100-489b-887a-94565583fdd9"
        },
        "item": {
          "id": "63b111b4-cb62-45b8-be50-b801fe2888e7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1377365d-8472-4311-91b1-2d8ac0fee596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e68f99-f068-445a-b8a1-6d74349afe7f",
        "cursor": {
          "ref": "b1906581-06cd-4f7e-b0d9-45760e6274ce",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3b9470b9-6497-4cf6-970a-344b7e51d80e"
        },
        "item": {
          "id": "d3e68f99-f068-445a-b8a1-6d74349afe7f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1c2dacee-4e22-4df2-a597-1d7f3ee7a089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd71ef0-5dfc-44f9-a132-5ea984da1264",
        "cursor": {
          "ref": "2a93f825-a061-4dae-a4d9-de85f0016c26",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6d99a44c-fa0b-4004-aaaf-bbc0df7e5237"
        },
        "item": {
          "id": "0bd71ef0-5dfc-44f9-a132-5ea984da1264",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "81ddf581-daac-4468-ad3c-5daa12ea4d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6862ffe1-9435-441c-a210-18f1b7b76c92",
        "cursor": {
          "ref": "94c79acf-975c-4838-bf71-2af1ddeb79d7",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1d62f20b-ee9b-4c51-891b-29314973ec07"
        },
        "item": {
          "id": "6862ffe1-9435-441c-a210-18f1b7b76c92",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "41a1d6c0-db2c-44ec-9e14-91e5f9dd7b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed112f81-5fc3-43ae-affd-97e2d4f2dd39",
        "cursor": {
          "ref": "fbd0bc3d-49d8-40a0-ad79-8343862b85ea",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "159fa0da-77f2-4b37-b931-0f4da307f5b3"
        },
        "item": {
          "id": "ed112f81-5fc3-43ae-affd-97e2d4f2dd39",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dd08e69c-806d-4175-913a-85e5427dfca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f29c426-5cd9-4602-bf01-66df8d855eb2",
        "cursor": {
          "ref": "5829a04c-b8c4-460e-8ff0-6e8a4bf171ca",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "44d88c64-cb32-4005-a057-a43c524db2c4"
        },
        "item": {
          "id": "3f29c426-5cd9-4602-bf01-66df8d855eb2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "44d7fed8-2296-4848-87ff-44cfbd5af34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa272dda-8109-4f4f-8166-124471c09b8e",
        "cursor": {
          "ref": "0add50fe-660e-40fb-9f48-2d3da6050e33",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "484cf451-ef0e-49cd-9810-ad8015dce289"
        },
        "item": {
          "id": "fa272dda-8109-4f4f-8166-124471c09b8e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0bf9afc7-b062-4861-bcde-08338d580c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee8d838-1a1e-43cb-bc5e-3d107bb92cac",
        "cursor": {
          "ref": "c24f7fc5-35a1-496a-9e3d-e3c61fb40048",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c130bc0f-38aa-4271-ac2d-97f74082a233"
        },
        "item": {
          "id": "bee8d838-1a1e-43cb-bc5e-3d107bb92cac",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ae810bee-d2cc-4369-9844-dcd0f49d0018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a343e9-6a25-4a6d-b407-5b7dac2cf277",
        "cursor": {
          "ref": "1c7893be-1814-4588-a9fb-d4b631d3c7f7",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6cc64e9c-cbad-413b-b38a-dd89b3637ad6"
        },
        "item": {
          "id": "96a343e9-6a25-4a6d-b407-5b7dac2cf277",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8c0684dd-ce6e-4326-9d50-5bccbc78c544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb717ac-8c29-4f72-89e1-ec05bb3a4461",
        "cursor": {
          "ref": "7c69ad8e-bb57-4312-9c97-f5038f038481",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3f67310b-de1c-48a9-97a9-62be07988dce"
        },
        "item": {
          "id": "9bb717ac-8c29-4f72-89e1-ec05bb3a4461",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4b5af5c3-16a2-4a48-9466-704bc89e1538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfcac72-27df-41f4-b392-511b60dce27c",
        "cursor": {
          "ref": "7270d5be-e456-41f2-88e2-5f28d786ea28",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "722f6f94-4dcb-4ddd-8a64-bc265ea48381"
        },
        "item": {
          "id": "4dfcac72-27df-41f4-b392-511b60dce27c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "41082121-94e5-4520-9591-69b429ee7f39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956e028f-f568-4a9b-bac6-ea1312d11011",
        "cursor": {
          "ref": "9bbe4acf-3733-4dd6-94fb-05cb118f4f96",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8d95d2eb-9cb6-456c-aa55-3e06c3cacec2"
        },
        "item": {
          "id": "956e028f-f568-4a9b-bac6-ea1312d11011",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "14af60cc-c644-44e9-92b3-f743f9f0aeb9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 251,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c136e0ed-6ace-49d2-8f90-40e46dac7a06",
        "cursor": {
          "ref": "1dd9d315-a631-46b2-9dd1-786bd81c236b",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a6733cbc-3963-4e77-bc78-8da19a710f75"
        },
        "item": {
          "id": "c136e0ed-6ace-49d2-8f90-40e46dac7a06",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ef27f8f7-370e-4981-b44f-84b7bd4ac45d",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "907bdd49-45ed-4839-b7c3-043b19b1d0f7",
        "cursor": {
          "ref": "740aa17a-a427-4ab5-8ba1-30ccd70c2a6d",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "945343fd-26a5-43ab-beb7-b358c0d4643f"
        },
        "item": {
          "id": "907bdd49-45ed-4839-b7c3-043b19b1d0f7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8dc3031f-1e20-410c-bb5e-00c62d68b6ad",
          "status": "OK",
          "code": 200,
          "responseTime": 328,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e716aafd-b9b4-4131-ab12-4ca378888757",
        "cursor": {
          "ref": "0f5f7293-758e-4802-a191-f54c268fcb8a",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "20dd461a-6cda-4b0a-92d9-c7f9ee639ac4"
        },
        "item": {
          "id": "e716aafd-b9b4-4131-ab12-4ca378888757",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "394dd198-9f3b-4c53-a614-db76602b40a3",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b4aa7a-c59c-4f69-9497-a4bfa5bcf63f",
        "cursor": {
          "ref": "0764aced-927f-4211-9f0f-c7cc28d23b01",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "57cd1e78-5ea7-4542-a16d-9e5ee7ef90ec"
        },
        "item": {
          "id": "a3b4aa7a-c59c-4f69-9497-a4bfa5bcf63f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ddf33bbf-f407-4cbc-ad07-da611415475f",
          "status": "OK",
          "code": 200,
          "responseTime": 316,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c8c928-1a31-4eaa-8c20-9bc696718ac1",
        "cursor": {
          "ref": "938bcd46-f21b-4e61-b0a3-e0865db0639f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c1d4dae1-27c6-43c6-8c93-6a7ec818cbb2"
        },
        "item": {
          "id": "48c8c928-1a31-4eaa-8c20-9bc696718ac1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4731f241-e42a-4a62-9741-107060caabf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c8c928-1a31-4eaa-8c20-9bc696718ac1",
        "cursor": {
          "ref": "938bcd46-f21b-4e61-b0a3-e0865db0639f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c1d4dae1-27c6-43c6-8c93-6a7ec818cbb2"
        },
        "item": {
          "id": "48c8c928-1a31-4eaa-8c20-9bc696718ac1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4731f241-e42a-4a62-9741-107060caabf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c8c928-1a31-4eaa-8c20-9bc696718ac1",
        "cursor": {
          "ref": "938bcd46-f21b-4e61-b0a3-e0865db0639f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c1d4dae1-27c6-43c6-8c93-6a7ec818cbb2"
        },
        "item": {
          "id": "48c8c928-1a31-4eaa-8c20-9bc696718ac1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4731f241-e42a-4a62-9741-107060caabf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18ed5ab-6be7-4155-a490-4c38e9e6a1fb",
        "cursor": {
          "ref": "1c381c54-d7c6-4889-9a05-7676bc878bc4",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6766b2bb-3407-431e-83c7-26d30b9219e0"
        },
        "item": {
          "id": "e18ed5ab-6be7-4155-a490-4c38e9e6a1fb",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "75a1e3a3-e1e6-4e3a-88cc-8021e0b48c46",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 251,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f786b442-22cf-4ad8-9b90-78d333e51f45",
        "cursor": {
          "ref": "0af0515b-d6fd-4098-b7b3-bbb83c3030fd",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "377fcb92-9b79-4d56-a24e-d76c7ea5073a"
        },
        "item": {
          "id": "f786b442-22cf-4ad8-9b90-78d333e51f45",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "581a00ba-96ae-4efb-9c00-8f65884176e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f786b442-22cf-4ad8-9b90-78d333e51f45",
        "cursor": {
          "ref": "0af0515b-d6fd-4098-b7b3-bbb83c3030fd",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "377fcb92-9b79-4d56-a24e-d76c7ea5073a"
        },
        "item": {
          "id": "f786b442-22cf-4ad8-9b90-78d333e51f45",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "581a00ba-96ae-4efb-9c00-8f65884176e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f87bc93-b0bf-47a3-9d1a-d177f6c9eb29",
        "cursor": {
          "ref": "34bf0769-35e4-498c-81b1-c9a627ada79a",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2091f997-36f7-4b66-880b-b13ac6a38aac"
        },
        "item": {
          "id": "1f87bc93-b0bf-47a3-9d1a-d177f6c9eb29",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "2a827e14-65f5-4a4f-a9c3-d0cfc5e07f13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 490,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbf7197-0bcd-4656-9c05-fcc67d6e0fc1",
        "cursor": {
          "ref": "5a3b74e7-8469-4ebb-8dee-c957bd8165dd",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "972b899b-fa8e-4b0e-b255-2681bfcdc22a"
        },
        "item": {
          "id": "2cbf7197-0bcd-4656-9c05-fcc67d6e0fc1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c42904e5-4600-4d4b-b2c4-9f511aabd522",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbf7197-0bcd-4656-9c05-fcc67d6e0fc1",
        "cursor": {
          "ref": "5a3b74e7-8469-4ebb-8dee-c957bd8165dd",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "972b899b-fa8e-4b0e-b255-2681bfcdc22a"
        },
        "item": {
          "id": "2cbf7197-0bcd-4656-9c05-fcc67d6e0fc1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c42904e5-4600-4d4b-b2c4-9f511aabd522",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5867696b-64f4-452a-ab14-ee72afdeb4cf",
        "cursor": {
          "ref": "9aa9348f-a6e7-4f50-9569-39f216f3f9d7",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6cad46a4-fc15-4064-90e9-75eb234cb215"
        },
        "item": {
          "id": "5867696b-64f4-452a-ab14-ee72afdeb4cf",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "294b839f-40b7-4592-a02f-2220faa9ac05",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 478,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}