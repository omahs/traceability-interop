{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6fa66ed4-578f-4c5f-8e43-3853481a49e7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2bb7af7b-1fe5-4953-936c-627198bc0ad5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc29e417-08e9-4513-9422-155aefaf003d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "913327c8-1427-4541-808a-50061284599c"
                }
              }
            ]
          },
          {
            "id": "63960933-655b-4aca-a8b7-f280a0d43970",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa8cc2cd-0542-4044-b01c-384473ece138",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a7b47655-db4f-479b-a65b-a9962ce15d81"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f08770c7-0de8-4b56-8db7-4b7871b27082",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6474d13d-7544-41f4-b432-9a0a65038ae1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3cd1f287-5b81-45cc-999e-9d41ce9ec419",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8a36c2c-6a95-41ed-90f4-6c0dc9ad4627",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d83ead4-5df2-4d0c-a330-10daaddcf6f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0daf7e13-8336-40dc-bca0-b8c4b2b69f24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19b4cb1f-7616-43dc-8472-bfbc14bb46ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07a0bf32-5a1e-4e69-a1dd-d6c4dad465dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4ea0150-83ea-4860-97a4-c05e0089fece"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b07d549c-32ca-46b3-8b3b-96a5ed57b105",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cdb0d1d8-20d3-4514-a459-1ee490212745"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d302710-7f6c-43ca-8806-0d502241ab6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7a5408e-4bbd-4519-9449-340b5e7d0789"
            }
          }
        ]
      },
      {
        "id": "94df82e1-f541-40b4-a653-f9db40cef234",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fa395ce0-5dab-48fe-afe3-a6481e7043f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a532323-f75a-4c75-abc5-dd35685721c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56862869-a73c-4993-9115-1b6d4abe3125",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f1cc96-090c-4297-b7b4-ea202fd2cee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "396d6db0-0cb8-4960-a1c2-aac4151af825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c47f5c-6219-4fa6-af5a-e243a9408516",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c25636e-7c67-4e02-9649-47a75442a2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a072b6c-b53a-486c-a9b8-0c01b01fec6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae692ce3-0578-4fb5-9054-9bac49961982",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc29237-adea-457f-813a-8b0e217b74dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d59dceb7-be40-49e4-be7a-357c22307804"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7382119b-eec8-4e73-aebb-2751b1e7ec01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc135b66-f51c-40a0-ba90-5b392b056d8b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f5bab4-e9e1-4ced-ac0b-e6895aa2e366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ab1bc79-2fe1-406b-8873-5c6e250e960b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4005ee-fdcf-4dfa-a601-3fe49ae4a46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c32a964-89db-4c7d-b825-c465ed970c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acfed9b-1767-4b5e-ae58-7d56d4b015de",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137a2deb-2ffc-411b-af95-19978c500f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f45b052e-89ee-4e21-95c3-264053719694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5d0b52-9838-4108-b505-dac644ec4e44",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "82b2d6ed-c551-48c9-a2a0-81e8deeaa8df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7302b378-e487-474c-a915-6dfc7960df52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ead5ca6a-b90b-47a5-9dcf-9e4b58e891ba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26c826eb-39c0-44dd-b8cf-f38ebad15de8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "76131fbc-a8b6-4664-bb41-5fe7d51b83cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc0024b7-fa24-465b-8c13-7968c2d08e61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8765c843-59c6-4a10-9b7d-910027ade0f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31732357-700c-48f5-a64b-40f715fa7d96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4baf7bc9-3fdb-4bf0-8d6c-676c3021cef8"
            }
          }
        ]
      },
      {
        "id": "196da64b-af7f-42e2-83f8-c7ccf63ba05d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3a2c41b9-6140-4986-98a4-b8cde5ea38af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b96055b-c9c5-4431-8b33-4b02d62ab9a6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "177058ea-7894-4420-b267-69e5c298cccf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccefbc30-dd1a-4430-a64e-b2275e856c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e550654-da5a-4e48-9369-241b0ae26231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d4d9b3-1f0e-489a-850f-c7e7773b0f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88692962-63eb-4a5f-a230-2ca151940da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b0bd92-ad02-4f8e-8d13-698b7fe0f086",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9fbf2b-22b2-4e85-bc62-71ffe146fd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9f5628-7a4e-4742-97bb-5f9eefcf9ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aac890-abdd-405b-84ef-d3d7c2ee4e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c43ce8-93db-4721-95e9-1026a3f85b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263fa8e9-717a-400e-943b-3d8bbcaa1917",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5cf69d-8be8-4e5f-8981-f9f29130d6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc0c548-d8bd-4b2a-8eaf-4e7739f290ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36ac5e4-5c44-4016-8f51-f0c8095026c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71c73deb-f8e5-47e2-b5b3-d2cc7bb612bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bde24cf-bfc6-4c65-95d5-a5e3dcd1654c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9686e427-e910-4836-9d5d-21c49deba936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85732a2f-1763-4b3d-a3df-ba4b131172de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388fc11b-9276-475c-8b1d-ebc7345afe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7dd07c3-7c90-4160-ace0-368db3ffe794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574a8276-e51b-41f9-ba7f-6a649ee41d97",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85ae14e-ed7e-4549-be34-f3f7326ff562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc21f8e-b1fd-456a-ad3d-03a96c6f96b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c2c2a2-7e6e-491b-8a14-9fe94adb043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "097f5444-423e-4714-90fd-7b58973f5faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93637c9a-dd7d-4d80-b313-b9197a652974",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3f7c88-46b1-40ae-874c-2a047985f4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d167bca6-75ec-4f92-8553-57e5fb237ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ecdce2-d409-4414-89a3-1b990bdaf70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c79c14c-8dea-4830-a9ad-998f2e626482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceae389f-e0fa-4200-bad4-c58177b51ee0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b73d660-d6f0-4960-86d5-64a22324c9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc5a8ac-95b8-4df7-8e03-4d05a972e921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e6578f-90f7-42a9-830f-c27820273ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "491752ca-283d-4176-8ad1-6513ef4b92cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43360f9-075b-4cf2-8179-a01538b5b698",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971dcde7-1cdc-4b18-b4b7-21819da1ef6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f165c2b-52b9-4f22-bde1-a0e8e636477c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2623c2e9-6a5c-4d30-8dbc-4a260fc28e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae496e48-07b5-4d8a-9620-677af50d75e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c11410-12ab-4418-a9ad-982e4bfc6151",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c7dd0c-28bf-4dc6-af2f-af208885a5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2999074f-9830-4f33-bc82-8df45c7da85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5930db92-912f-4b0f-b651-b2e5a6e88499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e9913f6-46d9-4e55-9689-b60db5828126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84379242-6dd0-41b7-8972-d4e66cd3ccd7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e181b96-99e2-4268-aa30-e2139fe926ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c548a8-d6f9-433a-9fc0-38100759e741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79366adb-8456-4543-807a-718353ace930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "263ee919-b583-4ad8-9d4c-43d8c09ebd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff24c2ec-2844-4a66-bf7d-fdcd7c22ae2a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a953f9-33ef-4f86-9594-96ac22b711e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0381e8-93bf-4178-a4ea-8e224604d48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60c79bc-7f4e-4f24-9503-e2a790b70457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81b3ee5e-0cd9-42b2-906d-e9b526a2e5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3059a676-c633-4820-9c87-90eb9eca679d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8579f9-791a-47ce-bf5b-ef7f564a505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e97cb12-3b3b-4bc2-979b-721eac62cbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7005b6a5-fe8a-434c-8678-1af9d3de0e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3f7eced-bef9-40d4-a665-d6ff616fbabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad4b13b-d236-4b5a-b8bc-d2a9b6287cb2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8c2dc6-ee49-4bc3-a8c4-09b7094de064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0482e92e-0b51-49ab-8cb0-3c6f36c88d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe9bb3b-4a63-42f6-a4ae-7a1e2a3da731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7840d9e-b665-483b-9909-19d1da82cc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739f0b95-6238-4a84-9ff7-133a8e8679cd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f594453c-abb3-4848-96f7-12658b2e88b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a080285-8286-4ee2-acd1-82b133d8c4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718e4f65-f162-4d03-8314-073a548bed5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "097c6050-4362-4853-b0bd-855bbb2780ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5864aa0e-e9a8-47b4-a311-5eb7d4c8579f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edb6b62-c754-4268-b37a-15732dc2cc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de340a3d-0c61-4e38-a384-289a855e621c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cdc15b-436f-4b5d-a51a-1537b0ecdd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bbf33c7-d8dd-4bf8-8d0e-b2e4ac23662c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3e2283-5d45-4e9a-a257-78edca42bfff",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988628ea-7a8d-4874-b60f-680082c9f45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5eb6ced-5198-4bfa-93f5-451286fc6c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf29f49-159c-40f6-8a08-7b0801b5385b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cf890aa-87e3-42d4-b791-545fc0d7e49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ff3ba2-b9df-4160-bdd5-4de8d551ddae",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc88e553-22c3-45e4-ba92-2efb81225b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f787f04b-9c8b-4d43-9af0-bb5d240e7e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdfc257-239a-4917-9e72-a332ba6dbf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27ff4c2d-0569-454d-aff0-e765ede2cdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79664c2-c91b-4e1d-973f-7a819a477870",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7293f2b1-72dd-4bdd-9ea5-12bdf5659e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7920c3fe-82bb-498c-a055-3b15c7ade1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595eba09-623b-49d3-a627-b47e4bab7e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0452ab-a761-4274-9644-4585810996c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3e38ee-16d2-43a2-ab9f-4b5b0433c82a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f01ea3f-ed83-4775-a747-003ba46899a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7d235a-2439-4977-92c0-d3b22c538988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2dba9c-2d1e-4b45-8b7d-12da3867cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6caffe79-aaee-44ea-ba9d-e34d30ba7854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb98b1a-6dfc-4f08-bd54-f4b13873b525",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b2d854-592f-40c8-b489-43e91ccc7c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73013e6a-d085-4bae-a7ed-7d379ecc40a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d3d8a3-3666-4fb1-8450-9928b4c921e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b409e28-9096-4a33-97ec-3327da91b0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc492368-c986-44e5-9539-c7d4441df7da",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3959f4c3-ff89-49bb-975b-89915d0305eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effcec8c-7082-4ff1-9594-636a19705a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40392749-27b7-4ebd-83cb-6ba2dce55bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a84ab39-f973-40b9-bd71-285002623f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77ca13d-34e2-4588-910c-a2f4f831e69e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f6428a-6be0-4efa-b4b8-25003d62056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2334cfa3-4146-46a1-bdde-93f4a214107e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06a59f2-c039-4e6b-aac8-88ee4cd8d0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e410860-69ff-47ff-aa1a-b738ad36fe82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bad810-88b7-41d1-9aba-7a4c6fc3dcf8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a932deee-b522-4ca0-9431-4e6cf5bf202b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb4a12c-681c-4109-8770-e0ec29d7f6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e7af19-6846-4a4b-8534-de58b1c53178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59d6ed72-8b65-4ce1-948b-f49c02be1a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7d51c4-4761-4368-b11e-92da68dfc1d1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee040d0a-30ec-41bb-bf28-d582dc6b3ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b834477-0b4a-4f55-9935-5500d3e24f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7526490c-af30-4f3f-868f-7fbabfcb6fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24d11d80-0857-46e8-84de-abf30135b60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcc9892-0fb8-43ef-b1eb-d0cf97a6be36",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c6d468-13e7-4ded-bd86-8324ad20b02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6a8295-17ad-4414-8282-182609b3d718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d42629-ea4a-420d-9e7d-98f7847e943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "024ce482-0ebf-40cd-9f5c-4f92d6e85478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a4ddd-1073-49d4-ab2c-6f60505301a8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6d6aca-102b-491f-a306-b37ef215ccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f45b11-d40b-4fda-8aeb-214759a78083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dfd751-0536-4c12-ad40-1561e24e2ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3044cf-3ffe-42b3-abdb-7939ae2e8fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f801e94a-bcbc-410a-964a-2cc184a93a55",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc68892-8e49-4b78-b0df-1fdc3b2f9b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4f9b82-5f60-4ca6-8798-26da9a9eae42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9161f3ac-3237-4125-b590-61b45711cd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7018a79-f33c-4821-aa4a-7bfc84d0edef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d5d142-1903-46ac-93bd-3b3a3457dfa8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c48836-2a00-4664-a1dc-00c0fdd2bd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b172eb2d-b584-4ce0-bfe6-0c9cb8b0232e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d128c5f2-9ca9-4e68-add3-e10050298176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6953edb-165b-48eb-a434-739616256ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a20c88-f9e9-4aa9-b8ec-85744d1d0c74",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508770c5-3c8d-436a-b262-b5eea93c3080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec133888-d6f0-46c8-a30e-2e959f8f9f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac52ce2-b18e-4010-a499-3e9996e9d146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dc96d6-4a70-4eb3-8b2d-4b03a2a1cd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc15b4b-7ee8-47ee-bba4-b1f6393390fb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c4da94-39cb-4854-afca-d70891292e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159b8bb9-029e-47da-ac03-c014b0bff4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83d6a0e-82db-4959-8af1-23439341ba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac35c8f3-4f8a-409f-9d3f-deac6c9d35cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789c25dd-cb06-4ba0-8e66-1a61402439ca",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7e63e7-cc8e-490f-8926-f4ff9bf7c8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de739d0-3410-448b-a8c6-a911933c3f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cdcb90-5c57-4938-8c86-989462d45ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede147a8-776d-42e5-baa0-c350c50b5cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94886a83-6cc1-43c6-8a3b-644dec4f4196",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae49510-5651-4c5e-bf1c-04128f12dc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88754896-a591-494b-b964-8dbed4d2a3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac19157d-790e-408b-8e9e-bdf64ef2c595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9ba989-e255-420e-b438-d06296bb18fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbceb6b-f725-4997-b320-a4dc8297ae0f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6e0607-d167-45a8-8ff6-b83ecb984b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd841a61-df8c-4a6f-ad2c-9fc189e16ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5365b9-5eb7-47bc-b61f-e37b8957b58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc358417-0adf-4dca-9c95-ad3a807f723f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9c56ce-73ee-4f74-b388-aa3a48243dc7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3e5e69-d34a-4d8e-a79b-0af92e5a9f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0787dfc-1eb1-46fd-bc4a-5cb14e517756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d14e4b-cf7b-4591-a5e0-f9d474e36321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78a23d7-46a1-4920-8427-7028e8df24f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3ed741-a08f-417c-8b1c-3ee2c7506eb5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edcd59a-687c-4fa2-aaa6-c21184550942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10916b6d-8b97-4996-bf07-241cbee5f5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9cba1d-332c-4595-b600-c9774c70c2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "87ddb7cf-0018-4dea-bf99-5d69fba5d408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873490b5-5bb3-477c-95e5-df5921ca5e86",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5440ab79-b474-4975-a1e7-0ac8ec18e58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6080148e-bdc7-4d20-84aa-eed24743c8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1e26b9-6036-4ea9-94d9-514c9cecaba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d59afbd-6a4d-4631-a24c-6a444040ac4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30db1a2e-bad5-4211-b52d-0ed554e1b2c2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcd1e85-ad36-41b1-9965-8cc9c1e5bd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4db96c-e7b2-4534-94ab-18b681f82dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec14f67c-4cf1-4fec-872c-01f604b39e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e7b8d4-0520-4edf-bc2b-49f16e58160d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1c2463-c7ca-47ba-a5fc-6685be60a8b8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d318f4df-1e0d-4050-8382-47387d4a1fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f097cdda-cd40-4877-85ca-effa73b02805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adb1586-c4fe-41e8-91a8-62c7d7d422ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b660e7dc-e593-4e2f-bb18-dd95838f879c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd275873-0bb1-435e-adca-dea96d783d5c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb828ec-3d1b-4409-9ad0-8e0815003119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae60dee5-bb36-4cbe-9e29-e49a5eae4e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa3a3cd-b81b-43fe-96dd-bee9a806df3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4bf5b2-bc84-4638-95eb-2f9591a7adb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dac1c37-5949-4612-9b2c-d4213fa47947",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d13888-974a-4409-a059-b9c0319d68b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d358c83-9a3a-4303-95b8-7651a175893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37239af-2227-4c53-8e05-1baa9f5dd88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4224903e-9ca6-44bc-a027-52f8c351ec36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1db49d-a3b9-4df1-a3fc-785001754351",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9c8c0d-501f-457f-b83b-346b3083f5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b30572c-075b-4871-a46a-e700faa844f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b6d951-df8f-463d-bbad-57acfc19c9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1cc848-bcb6-4ead-abc5-32060ab93a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7962d1ee-9e8e-42c6-9764-dcc4c13be328",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9b86c7-42c4-4194-a3ec-1b9c1b13ecae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4538a3d9-5c18-4277-95cc-54a3cbfd32a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33e3a12-2459-4ff2-9a4a-8450200cd781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b71306f-c500-48e8-bbb2-e9479b2b0528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa13885-efc0-4d99-8211-2a4a79e68599",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed30df6c-b702-4c74-b829-c23cf95c597f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8288b084-b55a-43f5-be2a-8308b08f7f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47707f8c-88a0-45a2-8d81-8fa9f04bf56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "480f57a6-e3f1-43df-9df8-37f5f8f50575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41296cf1-63a9-4cfe-aaf7-27783a360bf3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27704fb3-4781-4016-9f54-d4c87fd4280c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cacbbd-7ee8-4f8d-b7d4-a7d5e39b3fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c34bc51-412c-497b-9904-9e271331640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2a4e85-041e-4e03-b60e-cc3fa271ef4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8323e68f-210c-434d-a175-367389b55d5e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dce854-9f04-4c2a-88f0-55589c3da220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088db313-8d3c-4faa-b569-a42c57b44625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b838fa46-4b6a-4ddf-b202-13fba0014f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e20381-bdc0-44e4-b781-13d0429bc027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505826ac-3996-47f6-bd14-e9e42380cf4e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7011d82e-7302-46cf-b4f5-9fd4518e490a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c79466-c555-4a12-9ad6-793b4ebb3d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5a4bb8-9052-484c-93b6-14d2cc8673eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52f5c5f9-4154-4286-9ddc-252bc52922cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94481938-defe-4ca8-a5a1-e093f30dfb85",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be964980-3c2a-4789-9592-04a527734985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0220164d-1ffb-4943-b75b-0ddf262bd1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acad2959-c3a9-405f-a45c-e9135bb0390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a99bb1f4-029d-486e-9668-e0bd3ff91223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647f75e5-7858-488d-a8b3-57dd371620b2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42915083-cb1a-4b5a-b8f0-f8ac015cf0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bbdc5b-55c2-4052-ba64-f0bc9abc99b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7d4975-b3cd-43b8-890b-89a65be51944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "552943f1-f15e-4242-b9e1-86d10273267e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3bfcd9-afcf-4027-abcf-750d059dab6d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ee8f2e-6005-49fc-9521-9d7c97de2ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c175623-cd75-49e8-93e7-914f1ed8cbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d0eb91-6fd9-429c-9a43-933ffe7396bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc38656e-59bc-4f67-b88b-d68dae022129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7df9275-fe94-4327-b6e5-48a7d36b0892",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893cda68-c75b-4d77-bebc-3067d90c72d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a92d3d1-25b8-4ae7-9c74-6b6191ad4e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e18a2d8-6480-42b2-9e2f-ec0977daa35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "935f68ff-0520-49ba-a8bc-352d373351a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be358f2-1b70-489a-a596-e4ac3194cdb9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c307bfa-43e0-4a7e-8787-9fcbd9bae485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e231541-945e-4d64-8da5-aefd1c430b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496c5039-eac6-4beb-84a1-1db93de42947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7dfbc2-34bf-4bbd-8614-1206e3f117be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2df236-7610-484c-9745-70a989fac48f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9786d7ff-d7f9-41ad-b683-7eddb85854a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff10fa95-efd4-4c59-aa57-c9dc5a43e1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29c62da-d627-4eec-814b-1457354b7126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e73b7d15-adce-4e09-8890-3b3150f0c8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a43cf7d-ff0d-4c26-abe6-54eece1c6e3e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb364439-087c-4f67-868b-0f22636f56c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c39da3-699d-40cb-a269-e5b94ffa8917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82261e1-daf1-4b41-adf8-a48d863d3724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "386ffb74-2d8c-4492-95e3-b59f0cfa2691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a221b3-d2e2-4301-b213-db7fd71618dc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdab312-9ab2-4ecd-b820-61aa634c09dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d16598-c543-474f-a026-ee54763f5c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86090ce0-e132-45f4-aaf7-13efa38ba49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb072f1e-c886-4857-a982-dac816d71ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfd5bbf-4252-4e5d-8bd8-9c67c02b6dd5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e980299-f13e-4e29-9c2a-163837934c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd1f177-4b48-46cb-81e2-f7c5d5eb7d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e38c7f4-2f6e-48d7-b47b-9a69b6fce5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "775b6c7d-9cc3-4710-9089-07297fcfb2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecdb702-5841-438f-b69a-536c6740bb49",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42f62e3-36b5-4ccc-8d0a-34baed9e1212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e2f458-c5d1-4e63-86c5-522820974bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d8913c-1fa3-4a57-956e-e177d20bf8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cdbaf8-13b2-4cb1-8087-2c2dac590137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbba885-7ba6-413b-885e-d06301ed2dd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df4df20-5dc3-4118-838f-ad3c01f466e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd6c098-18c1-4940-b90d-77f6b91c3db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1177be9b-0d8f-41d9-87e7-c85080abed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "316a1b0e-b631-48b1-98d9-37754e4712a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee30c5e-a80c-4897-a480-51a7f992985a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20403e47-0f24-4ec5-8469-a4af0491fcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e63490-efd2-488f-b2fa-cfd2fbcb0641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501ae606-deb0-4519-b21a-c10fb10cb254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "611d264c-4a25-481a-92ff-8911f7a6260f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb667c15-2002-448f-9578-41998278c28e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de6edf3-790c-42f1-a053-50b3471e331d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892bae22-4395-471e-8694-8d96a3bf9073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c61939-69cb-4a84-844a-a0126c0de3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "055513b6-bbfc-4108-a3e1-0b52fc51388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1680403e-969e-4fcc-ae0a-0de61c8a7f79",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae18cf7-ebb1-4038-bf3a-c88aac3a380b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b070741-f580-4f0a-915f-4c7b4790977c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58157cef-5eb1-45bd-a4c9-6fab6bc3c73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea0b811-5be0-43bd-bd85-243a805c180b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921d94ed-b252-47bc-bbcd-280e68db9c38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5988fc0-5176-4210-ade6-fe190295e47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cfa392-2535-4e53-abac-b45f656ada57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8d63ae-d45e-4a3e-bba6-ff39c4a00565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "436e9dba-66c0-4782-899f-4ff33ec7016e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5b56f4-769f-447f-8ea8-acb881fdb0ad",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c853e6-6ccd-4d32-b905-9018a442dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93652529-dc1e-4a4f-a3ea-7b04ed2189fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86213934-e99f-47f2-abb3-0ad36364fa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b25aca-6668-49c4-a073-580e9dcaae0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01917061-a6c2-49c6-9025-9d0ce420f1ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1adec92-33a0-4f59-ac82-7f5bf7dc626f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01e0c5d-cd02-475c-84bb-4232b83cd316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55529e3b-b5d8-4a0c-bc93-e36e6b1572d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a692d84f-4510-475e-890a-e3e2d6bdc1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff3be94-3d31-49dc-b8d9-b2034659da0a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14726a09-c30c-4657-bba6-72c3411d4e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47294481-43ea-4bec-b8fb-6f303fcbfd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d77527-6e46-4d98-9b16-32a3964f8ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "653e90a4-9464-47ad-a3bc-e66b1e87ea90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0429148-c316-4d5c-8c55-1b2a41dfca44",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2420bb-8690-4035-a8fd-69cd98d6a004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230cac98-9366-4829-b242-badc479f68dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e81b29-6040-4cd6-86fd-016858814fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1b8a22-8db7-496a-8989-c9fcc129e747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0fa2b0-ca4c-4265-9cb6-3f09b6a8813d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d05bf7-0be5-4873-a0f8-b8060170ed60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f651c63-bfb8-4225-8675-b0a67c623c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12283a05-46ce-4561-929e-e93e7638de54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc0a069-cb16-43b4-b159-4f906d2eb498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c143d643-32dd-48b9-822c-5f94f2088da0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b60c0d9-d022-42fb-990e-0856f8ca10e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3087238f-c3cc-47ef-8a7f-f360a57d6833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de61cb0c-efbe-4563-94c5-46749e092118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e34e0a73-041a-403a-98aa-a59bf5d1e9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8944946b-c2f4-48d9-b08e-58824d560d03",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b8e64b-024f-4d54-9180-d3c47c0bf2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5e1145-6b1d-4f2d-90b8-ddb48cf7360d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e72d59-8eca-49cb-a48b-3a7ccce5016f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "66bea42f-0176-4d5f-9b7d-21071dd6b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f056ab2-c4ea-4e08-891e-8b41917a45e9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53f1b9a-9c55-4bbd-9c3b-5bda390ec075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b94826-10e5-4e18-967e-65fc0b3c9451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca68338-a808-4c15-98aa-051e4bb372a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "228176d4-bd79-46e6-a0a5-d544a4e622c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9af42e6-6b5d-46a0-8754-f665befed874",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fff50a-0d40-4066-884b-2bf5163393ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f30e078-b226-44ab-a1d1-5aac2d97e593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa466518-7ddf-40fd-8a00-9ad5fd1094c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dca56e0-9349-434d-bff3-ed14a0e6dddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a23ea5-f2b1-49ab-a684-765b9136650d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53a44f8-599c-4c3c-82f0-16c6764d1933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98135321-30a7-4ca5-8ce4-e9d7c9a7f970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5ccb73-9519-42ac-b2cf-fa39e940ccb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "004c45b1-222e-4a70-9761-497b183b4bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559540c8-e622-421f-a676-52686a0db942",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fcf595-a29c-409a-b02a-fddaf3b8acdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cda25e-79df-4398-8e7e-b624adabae4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b8338a-6da4-4634-8b8c-dcf1f46f76ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89ff8c2-8097-4b7b-b1d0-1d27ec9112f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b857c4a0-ab91-4898-ad95-8e521101a6a8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcc0ef4-8f40-49a3-a6a3-05034b5984a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c186871-31d0-4552-8f50-3339495cfb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2df90b4-eff2-42ba-a537-3babc1254e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ae24b0-cb05-4b27-ac89-4ecfbc33064f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac013e13-1632-46d6-8d75-a2890b733b24",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c780eda5-bbd6-4353-9d82-0cb11d072f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866d4df5-0d9e-47c5-8e69-bd4a8ae5863e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db42685-09d4-4e1a-b92f-d888e19971f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbb3766-128f-4916-87e8-56820ee40177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d07c01f-83a0-4410-bbae-607f5945871f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0088a7ee-dcd2-4fa9-a0c5-327a5ddd83c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ac73c6-ffda-494d-a48d-8579d8fcc73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ebb8df-15b5-4b38-add7-192f31973e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7276b0ab-0b2d-49ed-a1c6-7c6d39e3999f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5005558c-42a0-4c8e-a892-30bf97bc5352",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f801f0e-5874-4098-857d-52993f6f6a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0126104e-f560-447f-a0ba-d53279e9ee7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8222a33-ad02-428e-a4e2-91bec090968d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b46c878f-d371-4f40-9e70-f4615d4b0080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903e5f66-df91-4f37-8090-6f2a90c8fe6f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eeac01-9e33-4b2f-bf18-3ee03f09ac4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c67f43-61c0-4427-83d9-f0cc681e1d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415dec54-b470-4a41-a8ec-b846482c7c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3873d6-92c3-4afc-8132-977bb66e49c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f3eb82-a5f1-4d7e-94a8-6e5e4e984895",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9493671-4ebc-4c9e-91ab-c8d327c7e22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5ea320-b8db-463a-a32e-ef644368de22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606aec34-3a5c-4a29-9b19-9d886cb50cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded7e74e-45af-450e-8244-77d8dcab1eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a160daaa-d8a3-41cc-830b-1dde2eea628e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b4edb7-41b1-4364-bb81-3cea15406806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb45a5c-5987-4890-a2b2-414dfae7436e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9a2401-2bb6-45f5-a955-2215135a0dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "160daa35-61b1-4d5f-a099-112a7a301a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ec13ba-a9de-4b7e-bd85-21b5983f3e7b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42769886-73fb-4c8e-9aa7-c4d15f656245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5860b8cd-d5f8-4276-ba0b-f44377346c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e2657b-abba-467d-9005-3e6cb1d63935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d54c3f7-3dee-450c-b47e-97bc1c8427f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c353e95e-5cf0-42a6-85b7-30072b4e7afc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c914891-d953-4812-8256-b1d97e70c071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467c9b67-01bb-4df7-8a68-70ccb4c7e800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49169957-18e2-4d17-b998-49badfe455ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5f980c-7778-4fc6-b64c-4535db04978b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93c977b-a1f2-4ccc-a101-6002479ba9af",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8231fc-b6aa-4f3d-a8c0-0d37ebef8c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53451b33-0dfc-4e6c-96dc-a04c826a6e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906339da-08df-4764-b335-a2962773431d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4000a3db-f3d0-44c8-85d5-d89acff7d67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ca52be-c86a-4791-9d06-56378f0f8f01",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa486e3-0b5b-41f2-be1b-30976975fc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3aea01-02f0-4c1a-9367-91cdf428817b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd2dcdc-6093-4f9e-aa6e-b857dff2f575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffa8788-b048-47d2-ae70-add385b1fc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976b3c36-c6be-49c3-a6e3-58c8a8e85556",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a055cda4-de10-4088-9a40-a0ebc7f7aa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611af917-4798-475e-b72f-8f7628655de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f88ab6-8b23-4f29-bc89-501309bdcdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6711a6-6ab7-4824-9443-4699182d5fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a31404-1fd6-44e6-ae7b-f15e99855378",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a018fd-cee7-49c2-ada2-6013d5c6f6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601c95e8-09f2-4961-8ce3-446d315ee573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddd027c-980c-41c0-850d-2442e7cac054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e38f4318-4e83-46ba-9ae8-e8ce3c1d325a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da381b5-2af8-4d19-b874-dea9f5127d42",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755498be-2cbc-47d7-8325-de2dbc796f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cb3726-b95f-4052-b002-50620eb91da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2abf50d-b990-48c1-b65e-fe77e14a475e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2033cc-d04c-4cbb-8956-473d124cdb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7684d7f0-1cd0-4ad1-a858-11bc60b97858",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d553132a-cfde-40df-85aa-1851b39a2eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afbaf0f-6faf-405b-bb27-de18763d2d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78168578-6449-460e-bc85-b4be46ffa596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8165b5e-2dc8-4c12-9f8a-954656c01eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd3aeef-e66a-4d57-8505-2b1b79dc4425",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07b38b8-943e-4d73-b3ad-93817e2484da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c573c9-82c2-40f1-87b3-ddd2ebfdd666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500151ba-06f4-46b7-b189-4c1accd57011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a73fd7-dd0d-4ec0-a649-6d455fb918dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5142babf-9677-43ad-9c30-b7857b5722d5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accaa3bf-a9b3-4d1d-80cb-f308ea7b9e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad944b4-8c5b-471c-9b08-0cd2219b9638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6563f1-a20c-4afd-bb20-bc299e4ba3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d45db67-2101-4adc-abe3-1bff0ae93c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa813743-e5bc-44d6-8ee2-bc4a1da6cb54",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325ba599-4736-49b8-9445-4eb183d8bddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb047155-3c5b-4f3a-9de2-3223bf070400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1e9cf9-cd8b-4304-a8b0-507e4474a023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9edf2dc-a3f2-4cae-9325-18b15a1ebcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f80139-e646-4401-bb0f-04109d7795db",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674befe6-77cc-400b-96cd-bd20e39553f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87611ad2-c4a3-4ccc-8b4e-2d41bef4e97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d04941-117d-4cf3-9fcf-51310314de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df0763d-1b2c-46a9-a37f-5208eed214b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82db8f05-83fd-4534-a3d3-bef62315814f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f90d16-de8e-40bc-8b77-59a0eb879c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "74c62e39-a059-4666-a16f-5c23f893b9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d920a188-4914-4b5e-a3d4-9c585f0b0e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3973ab-b0c4-4f0d-a20f-07c2d69911b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42716da2-afc8-401d-b3c3-4b585a9264b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "849def2e-ea0b-485a-8341-abdf6701ee8d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e862507c-1d69-4f0d-a565-76d3225c85c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81baa615-42c2-4420-85db-634e14308f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf4da68-565d-4775-ba42-f55112eb9195",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5c64ccae-c0da-4e18-b4ea-dfb479912609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec0e5f5-f757-4675-8d66-7be33c01c2ac",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6cfd63-2aec-4b41-aa5d-8a400f86252c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac524eef-0a93-4127-b070-b581b1f845e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5597c8c1-5588-4638-acb5-24fb19941dd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "47d30740-7c9b-4b8c-a7ed-5e9fff8aaf0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54c681ca-9821-4181-941c-2aa85e25dd31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3dfb2b5-0c31-4710-acb4-2dde0c54502e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91a06864-3c49-41ae-8915-488a5138eee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12ab05a8-69e0-4518-b527-7b99dd01e610"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "381711bd-16a8-4d6d-9a3a-081b42ca3b8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ace4b0a-cc89-4a52-aa71-04f26ea7b5d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c33246e-aed2-4512-b752-28b0fd81b48a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9b9b483-9dc2-4bef-8e65-c5d410cf8468"
                }
              }
            ]
          },
          {
            "id": "c809ce25-0ad8-44f1-bb82-0fd4fa6f988d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a5d5b19c-ea54-4d0b-b9ce-3e90f3d055da",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c045437-2182-4a1c-a046-5e48a35f83e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "737a15e6-ec75-44e0-8f85-350df05c6c33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6087958-8275-4ead-afa6-edadd8767312",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "952d8616-9ca9-461f-8fe9-3d0825ef4b54"
                    }
                  }
                ]
              },
              {
                "id": "95e3da7f-3f88-4988-ace3-c40147beba92",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09959086-0a3c-4cce-ae6c-aaf60d38aa59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2af76e6-bb73-4c52-b3e5-ca1b433c3c14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4b529e8-79c5-4e65-97ec-8f7f62ec4b30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99d93c66-c113-4eb6-b168-b1d39f7d5842"
                    }
                  }
                ]
              },
              {
                "id": "8b7790e0-773c-4b2c-b565-c619bc682e1e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8daaa270-7de2-4248-a6ee-1309feadec44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fd4a1bf-cba4-4e03-aa53-f47763803b1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5268b2ad-053e-49b5-9ed6-76bc0043a26a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bb87314-da00-4cea-8ba9-41072876192e"
                    }
                  }
                ]
              },
              {
                "id": "f04bb553-0a50-45b0-9b06-214c33781139",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "324c9d6c-b56f-4ee3-808c-3a4a00d12624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccb85041-1e5c-4373-b12b-261bb18238bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a8f0dfc-caa2-4d9e-9d1b-4acdb319d227",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2ef0ad85-5782-4ad0-a82d-928c59371510"
                    }
                  }
                ]
              },
              {
                "id": "5b8c68bb-c590-4fad-8393-0c732502d82c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f600f09c-a56e-4a06-a87b-ef84ef309aa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "290af30b-9d1b-4a97-b1de-8e2ce190ba6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f3cd921-386a-4d13-8ca3-156017a91325",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca468c03-e10a-4249-b329-352bf862b22b"
                    }
                  }
                ]
              },
              {
                "id": "a610f74d-c5eb-4c6e-a144-232ee6c00ab6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f790c982-1acc-448e-9d18-326e3d23d3c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e272e10-85e4-4388-936a-7211da560c41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dc00e3a-632e-4b9c-b446-9000130affb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "441f516f-2702-4fc5-89d3-6a537e5775e1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6eab952-723e-4a3f-b572-933fa78ec899",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cf9ed4d-8710-4162-a3ad-aa0ff321594b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96eadbda-061a-433a-b5c1-47d54cc4d69f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b53f22b0-11f7-4e25-82ab-9aeecc667d7a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a932e4b-b9cd-4df3-9424-d709fa6c4682",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "da8c9a72-e980-4c43-9dbb-dfa97472f5ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32a39241-ad8e-4cdd-a51e-3d2266fbd1fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45d4013a-c481-4332-beee-e6a41c28d547"
            }
          }
        ]
      },
      {
        "id": "ec6365ee-ddaa-4a9c-a91f-867e6db4f7fd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9e86462d-4381-44da-9248-1a89cbed5967",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91c5a220-07f2-423b-9eae-4a378fdb47e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "192b8e88-2a75-4167-af40-248bfb7ee87d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ba767c-9b76-4773-85e6-3cc8c0694797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8c52f4-ae8a-43ed-968a-25b6291f9854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccaecd0-9502-4c25-8ca0-d1affd96cf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc62375-bb00-4583-acb3-95b43e98bd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4e674c-267c-44b9-956d-1f73d9f40da4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ae5c3b-c849-4687-9b7e-109b5a249040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec6c22a-151f-417f-8597-f13c7795394e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e751f3f-f885-4d91-9ed0-9812ec87a56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a98dfad-9fc5-44d3-bf61-4c4418be999b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcbbf87-eaa1-4bcb-9f2f-6197859d110d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed6fa0-0c5f-46a0-9868-f6df137938e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24f4853-eb1b-4fa2-9060-3011a87e1748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6393301c-90de-4de2-90a1-8b0410626f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c5ef34-30f8-4675-933b-a6ee2034e64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbc04e6-290f-447e-9059-7063ef13a4d9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11fb9b2-2543-4b71-9dbb-170144337beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12df6616-496d-402c-b6b2-1606a9435b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e8745-e134-4503-8ded-828a9349aa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eefef731-a1b9-4e56-9611-721472c6289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7478d4a-b755-4e47-b875-e8980dafdde0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d839cd8-81b7-45a9-9866-db2236eae7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d9cae9-a7e8-4a2f-aa5e-9128b6c54547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76ad71a-a4d1-4bd9-a028-2a56678ace80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "770feca2-f31e-4ecc-8611-d09808e27518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e402b5-19b1-46b6-b475-8a9bd5027c54",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1847796-1a37-45d2-936e-e10b7ef16285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efee1e7-63b1-4419-abe5-454ca8482c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b640472-2a01-4e1b-a1aa-a77d663105de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5887bfe2-4c76-44f4-80a3-6c4f5665dfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc283ff-e7e1-4954-95a8-3968ef7ac6db",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11912c42-cc63-4751-af0f-b9f9db1bc351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2eda09-bd65-483a-9c2f-18b6f590e516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f215e4c-8c6a-4358-b7e7-447186a1d6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1279ec-9e72-4934-a6cd-675165c91c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1924841-5e06-4b1a-af74-f551fcb51d26",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd8936a-26e4-40c3-a755-9cf61962d304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfc599d-032b-4069-9606-e8e6198a25ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34e5e7b-e40b-4ad0-b893-0df6cb0a1923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "449492c7-3bdd-4a7c-94a5-c2ee902862b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f2e11d-60aa-4bc6-8ac5-1d504a756bf9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d2e86f-fc0e-4050-a130-f8214b7f053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e7ab5f-6529-4934-ab68-bf3fa0b85c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8843f3-e240-4f2c-95cf-bf5bab285a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f93e195-72a8-45bf-8f27-146a15a6af0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0a9c0b-2a2a-4411-ba01-b0d37e24dabb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e80f38-dc17-4f4a-96ca-da6e0ab9a186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e76009e-249f-4429-8d88-ee2e0f8d0637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d5fd2f-b0f0-48bb-a286-615f585c3dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cea6fc-5ef6-441e-8d8a-f3547154713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0638a22a-fc82-4f64-93be-3d2cf4405b59",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ae625e-6dd5-4378-b8b8-12bb201419fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb130d56-e1ae-4f9d-8fe5-127c845944c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54dc714-7a16-4d5b-8abc-c944cc0f6a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "227b7d20-08bc-4cb0-b98d-1c31594c12a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2a6cd8-f61a-4e1d-8e66-4e06805cd6e5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e7cfa7-fa9f-44c3-85b7-ee966bab480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99d93ae-2721-4f45-94e6-7e300f8cfe00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50e70b9-bb98-47bf-a533-4142cbbf787f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc526312-539b-4b30-9355-56d51baa7d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c454f2e4-7ffd-4ef1-966e-7470b71e1a59",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a26330-d212-4a6b-8373-11d5d59315b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b77d44a-1c1f-4a9e-985c-4255b601701e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c75b902-bfe6-432f-82b8-e272af1513da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a8af7e-20d6-4909-adad-d3eb804c032d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e601fbcf-83f0-45dc-8de4-a83ca8b53c45",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571f9199-bff8-44db-b064-904f1ca615eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a89023f-1a1a-429b-865e-17f498615e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb44316-6cc7-480d-a1fc-226596f876af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "12557185-5394-4a19-a339-3c7468639cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed71f6d-3cfa-4cd7-8cf4-f14622c32015",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c351c5-01d6-4d47-8c7f-6981f50119e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09b6689-13d1-4c1c-a44c-e56df787d5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710cda31-a0e1-412f-9b29-97a41f75a70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d335d2-be9e-4db2-978d-e673504864bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baeb20d-ca06-4ee8-a955-cdcbed699e81",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e3c25c-d1c2-4b3a-999c-a5433a929701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fff01ad-903e-4d87-83a9-bab1cfcc64e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b07a0a-bd6d-445d-a46b-23d06ac197e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a267b1e5-97e4-498e-8397-9ebc16240d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5454116-152a-4b39-95f5-abbd36d1418f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f894dc-067d-4818-8364-556653877ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd5fe55-6afa-4eb5-88a1-a2c80f390e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f4ea34-3720-48d5-a5f4-8eec72369b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "688f3840-ef8f-4e01-ac98-c3f7121b7cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf19424-b816-4862-b528-56d234eb0db1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dae90b0-d225-4d73-a04d-e1c8e0a0eab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc4c027-7df1-45d6-84fd-bccbd08ab3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c54375-5499-484d-8309-318c9870c566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "972656fd-13e3-4a48-9ecb-0e7d29906243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6c5d12-7656-41b2-b234-6185b263afa4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58919e28-0d96-4847-b800-bf8f4a049121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603ada36-6d7a-4277-8738-7391d5ff41f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bd6055-290e-4b16-9489-67c024bacb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0de814f-eebc-41b1-b74f-2f20140dd6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549c68b0-df42-40f2-be38-897a6f78eb23",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a060fb9e-8d8b-400e-a43b-8e906f76ae50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0f0bdb-b646-4969-8bcf-e69ede071d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2649735-6ef9-4dbc-95e8-36cc03e55e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcab58d-a021-4d3c-b27d-6ca861158d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2abbe78-35b8-49f5-afb5-aa95ba0a9517",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4657929-bd40-4bf2-8d9a-791609f4bcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f931a38d-9918-4b36-9552-d5502b3d1643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e46eead-f50b-4567-984b-63de40af96c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51151a6e-814c-4afd-9337-8e35a37039f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1614814-13cb-4ff6-9806-45d9201b4c58",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aabfa2-9253-48f9-8eef-8e62eaf117b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a48b25b-77d1-4820-8461-8151b5c700b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3654a940-7340-4ea9-9061-c73862b9d4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58acbeb-bbc8-4117-9b54-324856b3eb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51607373-af46-43c7-9194-3963b40f389c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1493bb-77f0-4114-a2c3-029728d46b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4f0558-9177-4b19-b6fa-c7a945017cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158f063e-90c8-4d0a-8c0d-f34dab6d602c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1986325-bf22-482a-bc61-6413bfa64792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d3f6ec-1b27-4491-9ce8-0dcaff7ad5ff",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b635751-1cfe-4626-8e90-4f5fda2a9a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacd273b-7de3-4a39-945d-72d546433992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714063f0-ea9b-47a5-ac4f-a68157be6d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b076ea-d96c-42bd-a357-734164b0826f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764d78da-5a74-43e9-9810-209c9fb54424",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b1bec5-c13b-4651-8d0d-86f3758045d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d478806f-8ebd-4633-b4f8-79de25a339e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c7ab02-fd47-404f-94bb-ec383aab2d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff50d7f2-bfe2-4c82-991a-19c7cd68f006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35e7bcc-a29a-46b5-a7cc-1ff22dce78db",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4c40ab-0f11-42b6-98c3-37d2d6138c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97663364-4663-4126-82f3-6a5607bb079a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e84da8e-ca44-4ccf-a75d-c843e4f30e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8604fa34-153a-493f-b305-0597c5b08a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446c4cb7-95eb-4d3c-a543-49af34cdc85d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8656a2bb-b2a4-4a3a-beb1-e2ccc053fa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b8ba96-bb71-4f68-bcab-f2fce45cd328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33306e32-b4d2-4e5d-9d44-3d20cfd2110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "297c5a15-82a8-4516-b42e-8374fdf09eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8117f8-102f-47cb-b53a-7f644b9fbb51",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ebed26-b0f6-4a96-84e3-8f0e5de53cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8419f7-b890-4300-b7ce-a794de20ef6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0fd100-2937-4568-9d1f-71a05b9fb31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8976b8-60d6-406e-9b40-519a9092ca1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51877f66-50c3-4ae9-a1c4-5c8ef3181240",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93073c79-960b-4ca3-a2ce-bf0b0dcc642f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbe4b82-fa62-4b93-8868-6746caceac62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed1e058-435e-442a-b213-f54034797281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c32634-f0ad-48bd-9712-e018d8a9cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db43a7c9-5e39-4b74-ad5b-f294f996d04b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299a0a86-7e0c-4c4e-b5b6-251e8ec7caa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a129ae72-0af7-4518-8cdb-1b2004f1a439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214f9ba4-e88b-477e-8d53-7ef92ebae9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6b2c39-1c1b-4e98-a073-ce3e2fab144a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d9fe4f-83db-4307-857b-40e363300214",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d0db0-a0b6-4000-a432-a5fe66e4fbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8746afa-5262-4dc4-b68c-43c0124844eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6a3b8c-db47-4cc5-8ddd-ed035b313988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8f5a5d-9ee6-46ad-9a07-22091e5eeed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255e287b-f40b-4564-8039-f42c7e19d9d2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d772b786-f76c-46cc-b863-e8af4199cd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d242b428-8d23-446a-8fc3-4e1d6858799c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d092b3-d8a5-41d9-beba-a92d6b3718d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e848274-7479-4cee-8553-1b5bfacbd6aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf27c032-6438-4611-817c-9a94ec737c7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eacc9847-be9f-49c9-a355-5a05a68e705b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8bbc5f-ce6d-4217-9a5a-bb3efe42ad80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5847d558-0fb2-4d9d-91e7-50fc8bc7b96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337d8121-eaa9-4a8d-b309-0a108695e524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dce7a87-83b2-4860-aece-0c13a9c4498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf4b0cd-e7fe-4ac4-b5e4-f4e78c566cc0",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6bd9fa-a2ea-40e3-b8bf-e4c73631b982",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "12ca9548-b664-4c15-9fff-55fc9858b94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22410f79-8e8c-4f24-aea0-00795b45a664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8fc64cf-22d5-4542-99ef-c7c97c3399e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81c86420-4676-4b44-935b-f1ead4a650cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aa1338f-052e-4e35-a563-ff4b1d424ef4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a1d8788-826f-4b1b-9675-8203105b8086",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40787d06-3b22-474a-8048-f01be1fc5c0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb4899db-44ee-4555-8c01-d699faa026a2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e07c9555-095d-49aa-814e-8a9d5828a9bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b25f32d-c4f0-44aa-8257-8d3e465e5ab9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "875afc91-bdf1-4d91-8853-45f9530fd2c7"
            }
          }
        ]
      },
      {
        "id": "e19ae5df-fa10-4682-b91b-67053e30ba0b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "13251e5c-53db-4a77-9967-d0f5fb4efc7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aba88d1b-f936-4618-a9c5-e6efc6a8cbe4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9a9bf1b-0b5a-435c-8c58-8923bd3b73b4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c78d373-012f-418e-b5e0-3f13bb15056f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e37ede9-209d-449b-af31-f353af189b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cc8e2a-9b24-470e-8b5b-624c0559fa60",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b167830e-15d3-428f-a4e1-42665afffcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ca2623-80cd-44e9-9b48-f74599cc03d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f8d2ec-6423-4a30-834b-28a622fb317d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f9a8aa-bd0e-44a7-9ff5-949c51ccafb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725f972e-2feb-4089-b68d-e7395654ba6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb9c5d6-aa78-4df2-ac8a-124b9c2e0f76",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a2ab1d-3ba0-45a8-8890-ca5674031e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245da893-cc42-4dc8-a919-022df82b962a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7630b74b-1625-413d-b06e-6cb083c2ef28",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f71ae12-2dd8-4b1a-ac3f-80b3e89f90ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0386420-ed0d-42c6-98fd-ba61dffe2b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23023e2f-0a58-40a6-ad3d-26799c6141a2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0913df55-b6cd-4493-be77-fd9c355a9743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df5cf85-1a66-44b6-a6fb-9d5dcebbae00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4e8bbc-478f-4f06-9fcd-c05d7863aa6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0400d1-605c-4e26-bb22-24d242af025a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c930108-1801-4e30-a85c-4230aced60aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff12c288-7233-4907-a7a2-79f37367f0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73bd53c-adfd-4e6c-855b-e9cea2262824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf5b1ec-87f6-4fb2-8c55-c49a7713944f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99205df0-1793-4f20-b9ad-e2d89b792530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3235b1d9-b202-4a78-a22f-f8f96ce7a53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5962e83-1d71-4abd-9ba3-b9f066f618b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28bf5c9-e10c-4918-9f38-8332f8795ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8101115-c7b3-4519-bd40-7a36a5be1223",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c4917f-d66f-4a91-a4d0-65f995134594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e3e2ce3-322f-4217-a866-ca530af9c050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341242e5-6148-4111-b397-bda7c41ef291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392dce54-6c9e-475f-9aa9-5b7835cf06ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fbc1dc-0162-4186-b5a6-180ea62f0b78",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d156dbc0-cb6c-48d7-b698-98a5523c9608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4210bb72-96df-4ff0-9571-b37e8dd8b011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c97e1f-d99e-4769-8e3c-9ac39a0b48d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5343b1-5ebf-4853-a24e-085788323d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c68d13-e59d-43ca-b982-d560c2f2f504",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490ae91e-da31-4cfd-a734-3431905b17e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adc7130-b744-4ea0-9a35-153a863501fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bc276a-44de-412b-b0a2-8457df6ee422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0917619-056e-4489-afce-23c41c1771ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f6245e-c6a4-4520-a148-415ba52182ce",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd8eb6f-0a50-4ecb-b76b-25f8c887a35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5eb563-51fc-422e-b3f9-d420f267804b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466cdf9c-e29e-42c4-80a6-cf010ed50380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cd8323-8a71-475c-8460-68ac29271473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe37a1d7-c0f7-4e4b-b1eb-0bd24538cf43",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf84091-4b6a-4581-9c95-c05f2a7a5516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2fe297-5b25-4106-817e-77413b549eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73762328-686c-4e47-af63-709c6fb52ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345889f0-88d8-4966-98d6-592f5d406263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e81af5d-0492-41ee-bd2c-a0e3e29da59d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817de91b-6494-487e-82a3-581a6cc87ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78800cab-3cb7-4a2a-8d52-0d80581ae518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820a3509-a3fa-4693-9359-6f1e380e4255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84593a7-7989-4252-8657-c266a7e1fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06956047-bb3b-4733-bb99-b40ba4476cdd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ba4ba3-75c7-4fbb-b2c2-0fcaa1a01117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff0a77d-0c86-4e9c-9da6-84a371114167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0f77f3-8d2a-4eff-b94f-946efd5ed8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38601226-66fe-41ed-8bb2-e68e79b16b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0391e3a8-6402-4a42-86ba-ad1a3f007fe8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cff8033-7797-4ba2-800c-eb81c6c0a8cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c2e8a6-d8ce-4f35-bad4-84c71ebe81dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610c1e67-43ab-48db-9ae0-aaddf1528a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd09d797-4b9c-485b-90ad-22eb5e3268d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d7f4fd-f590-4684-9b15-dabae9360b86",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02993404-0b33-4633-8a9e-e46f5256bf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4302486f-9ab1-4ee8-a56f-2a38948887cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a003b6c-a8ec-4af9-94fb-22daaca19686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab532d7-52af-4b8e-8a9b-f76f9ef474d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf5ed72-7c62-4637-bde5-e206c8da9234",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8175ee-42ca-493f-8075-22073c10225f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c93f34-4d0a-4ab1-bea2-ec23a1f54413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78576534-2f45-4cf3-9ccc-394e9a43f089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e605f940-685c-4ebb-9f67-ff1d028c2f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7245f7ea-a823-42f2-88cf-9b454233acfd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdbcd2d-227a-4432-a37c-83cc803f0b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8715e5c2-c129-4cee-b5c7-42563060567d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625ca9f0-a5b9-4078-b987-7fb1a66c6780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfe3f0f-0ca5-4998-a1be-fbd0b601dbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669896d3-0134-4e85-8fb3-c427f29d94fd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103f8e1c-7b77-4788-83a3-5fcc42b2471e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a260712f-0fca-454b-aa17-4e695670e1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d58dde0-82a1-408d-9723-791de4af877f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb0ee19-c1cf-4c6a-ad80-50a2379adf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e9612b-186c-43e1-a23a-f16be6ec5275",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e7e4da-939c-43e8-be4c-7043c62f04aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9af22a0-0627-4f1c-b009-3a0b54148559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3148dd32-31b4-429c-8eee-49a5548aaec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5d7274-68b1-4960-ae2e-18f865107927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4839c2-aabc-400d-bf14-07b8ac02dfe0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837a808a-a68c-4825-8a4a-3a1b5f1a2370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6678055c-bf65-4607-acc5-c1566dbcd4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095c2019-bac9-45dd-8024-531af0e1c4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d9a00f-14d1-406a-a6eb-73ff64fd6240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f180fe5-bae1-4bd3-aa57-e909ee619bc5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd571ae-18f1-4929-af53-7be37d90c0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95380948-c59f-4292-a82c-18799b93d593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e573825-7ee2-446f-975c-244c9ee35d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b49d158-ba00-4e2f-820c-2279cd63459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9b2026-b308-43f6-889b-9ac753f7ff6d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2e80cb-f676-4317-8508-cd1ec9e1ca52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c127bc72-66b0-457d-86f6-9a219eb6dac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77f2d11-6751-4103-998f-c4e38fe4b25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b733dce-27c2-41cc-9100-4f4c32032001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b0406f-c78b-4c5d-bed3-87802b7edd0f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1eac76-3e58-4ce4-a7fc-3a6d75bc5560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6874fac6-c6df-40b3-ba60-1011a8e9d276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23561ea3-1780-4d03-9b6f-e4fd97982e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c971481-890b-4f5c-9096-92d28ea8044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34169bc-45ae-4e4c-8b5f-e1fcf1cae28d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadfc176-8fd1-4f2a-bc57-26c15365951c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca98dee8-78a6-4be8-bbfe-3480a125d59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d12e9d9-957e-468d-a17d-74b8f01bb7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ade8854-6802-4630-b40f-be09ba270f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b647bf28-4105-4637-b89d-8cf18df711bc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d6951d-78d5-443f-89d5-f162b54dd5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af1d34db-fd77-4950-ae35-90eb30d831ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007887da-890d-4e5c-89d1-02c55b228a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f5fdad-9f29-40d0-bfa4-cf293ed716ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71e1ed2-e57e-4163-80d2-05955e90e016",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681244fc-c953-42fe-86ca-7e9fa6f60764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b63e7f3-f066-4d50-84b8-9467af8309c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71b07c4-8adb-412b-9777-5199ef45d5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d37f37-e56a-4c0f-9021-bde1973d55da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bbad67-d977-4363-b99d-f1b5cbfe8bcc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed515ed-cb80-4193-93d3-8a58669b8f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4658d987-93ce-4086-b24d-84dde6f64891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7024b4-31b1-4057-b9b4-a5f71dd60415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731a7d15-1c11-492d-84e4-8cda26aa2e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52966055-5d7f-43ff-b465-f46b8324658c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71eafcd1-96f2-434d-8a89-c1a46826fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f43cea6-e1cf-43f9-9a5c-cb9fc2749a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d1bb5-06c9-407b-9fe0-6e0d0d497dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c1f57a-1a69-47de-b972-dba4d5fa5c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5151a3-423d-418f-bf58-be9e053bd4c6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d797fb-e39d-4c61-9a00-8eda84629369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48780c64-27f1-462e-b45c-be86126cf7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e363720-6793-4520-babc-5f8061c782db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b7aeae-a613-4bf8-a0b3-043b37aa3cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a97912-5001-4d5c-a0c9-aa0c2e6cd229",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afb685a-c243-46ed-8939-e636ac71510c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b582e943-c3c6-4d7a-8edc-cba7fedbc63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2dcde7-100d-4821-aafe-00987a6a3174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b522e2-ec5c-4e24-baf4-8d01c0858d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255a8cda-1abf-4195-b5e8-763078825808",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f7e58a-c283-4fa9-ae39-927d5b124678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb10cfd-f247-4a4b-bb3f-3ee6f81ea8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215ecdbc-c18a-41d5-9c41-21d4b10c299f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833858e8-7575-40bb-bd4c-36176319fb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f64cb7f-3311-4f50-8fa4-63ed1f3a4d1c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1592d25b-69c8-4ff9-bae1-839a8a1f4ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9cd88b9-d292-4f58-9336-61947a3d0399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f0bafb-e677-4db6-b893-54e5c2cc6b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4646bb08-f2af-4fde-92c3-b6b1df631c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c79f2d-3eb7-4e98-bed2-2fbcee45ad64",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef81bca3-85c7-4bc1-b816-d474ee708d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f516feb7-843a-4da6-bdb4-f9bdd88b54fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a512dd3-b4e1-4a80-9682-9a33a5da0311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80de3fe9-bbe0-4b84-bfa7-789e6b2bcfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919cc685-c446-4020-a732-a702c592f90f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb0cc09-c9f6-4f25-8795-eabae480176e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94312e48-9808-45ad-a221-dd2eb9686891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27421d01-d513-4d3b-8493-24b8ae6efa0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f6501f-4dc6-4c9e-bbfa-b7fe50aa8c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05063967-c123-4e6f-8b55-2f748dc3b31f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b871460-e690-4e2d-9522-0ca48c2409bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10e69c5-457f-4c36-be50-bbd9c4f1044b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033aaa4a-2b20-4c8e-888c-16ec167dda61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3127b4-dc27-4dc2-bbfe-5fe3c3849d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d9c0dd-4dd8-4df4-8fe6-d9678958e122",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0055ef-4489-4bb5-befe-cd948746a640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fae7ee-fb8f-4e18-a2c0-05ff2689e11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c793f67b-5b52-4292-b17e-87efc5483964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134778c2-2ab0-461f-a249-1671fabc501a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0425f1e2-70fb-4d2f-9c29-3c0ba32f9ca6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3481eef-3ca8-43a8-8bbc-5cf38ac17557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2135d51-2b15-4814-87d1-dafe77737f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13a012c-b626-498c-a295-4367bd87c0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff82bf60-4009-47e3-af44-70ffef3de727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546216ef-9637-4cad-a823-d72b7c419f3e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ca3fac-1bcb-4eda-a227-104a74615f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c20442-a224-4738-91ed-fc8ab5257110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf1858a-eba4-43bb-a3c8-1415122e09a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485046b7-6c62-41e3-8c50-3cfc761cbfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e791aef9-d90e-41c5-abf0-66d16551c745",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceddaaa-a753-48fa-b5fe-ec4dece86b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a2ee6f-467a-4a0d-a735-51c354f30774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3756afb-0873-4c34-a6ea-8dc353629593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba83af9a-0ea2-4c63-ac52-be1b9497f91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9732fd9b-ca91-4598-bbb8-35fba55d9dae",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e65b34-3893-4e4d-99a5-fa45ff1942d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a823ed3e-7bf9-462e-a2a8-3367b0983736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3805017a-2a8d-40bf-839e-b70687796847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db90f554-9852-4822-bd12-4efd5f8c39ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81a31e5-b2c1-4db5-9791-491b1ed63833",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f758789-d562-4c21-bd1d-7a6c18cd6097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f9e97b-a124-4a42-922e-5832f0e76f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835fa04a-75ef-4de0-b275-2875c32ac00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132b454f-41f7-43da-834d-ecfb0d3aba4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce82efbd-be57-4ece-abb7-8300ab29fa75",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bd563b-2384-4d82-8222-3eff658d31e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4086af-051f-479a-b3e1-0b220f961ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e57939d-1615-49ca-aaf1-81338dc80fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed605b4-8208-4227-a217-a829bbedac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a33c25c-edd7-4234-96c6-72357e7cb93f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c023ca3b-1ab0-4f92-8396-98423c448b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c22a36a-3113-48f4-88e2-bf4571865d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c525545-8134-4130-abfc-638895bf130e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c477b384-c6ea-462e-ba79-8d1c995b201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ca5a98-7079-4557-9f3a-e235091eca86",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a5a806-c0c2-4bc0-a6f9-7cd13e6cbe12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a66a55-332b-4754-b646-099b4c2cc1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ffa049-81e1-4cb1-b0d7-cd99fc303b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659506f2-d305-4c89-8d66-7774961712fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc5b43d-e300-44ec-8dfb-1a2e6aa666b4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b3ff17-a4d4-45d5-bfe0-e8b04851d207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3d8158-725f-4196-aafe-4dc54546bb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ce7154-e645-4bcd-998c-2d8a9e3c1fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b975031e-f256-4a67-87f9-45190229844f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096506fc-b5eb-44d9-869a-7294a2bc949e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35881e2-46ac-48c2-a460-2ecd075a6ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccad958-5536-43a3-b1c9-223b11afbf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c06950-6d9e-4e6d-963f-4a8657bd0e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b9b3d6-8fa0-4bf5-92d0-a7c518c75d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc89e22e-5b5b-4fdc-8f21-4334acbb3a50",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697ad892-37a4-4761-a09e-c10443f8129b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669d6326-2bfa-4854-83ae-305640071afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47984b1-344d-49a0-9f54-a5f1469adee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bccabdc-0bb7-486f-b2f9-c57064772220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917378a5-c026-4ef3-8f3f-953de794e634",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc643088-7e9c-43d7-b484-2e991356f52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13ee86f-da24-456d-a6ca-c909ac190ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf5a110-c57a-44b0-a126-7bbda81c3e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e78575b-c219-41f3-9f79-39b5d74d9848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc5269f-43d9-42c5-9b99-7f0d26dcef5a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d9fe37-0808-4d2f-a2b6-24caf85354a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a87a48-5884-4db7-9b7c-35dae4f3c56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87d7d4e-4191-4424-a906-2a3336bbe410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a9f471-bfca-4dca-9f27-73652e0bd0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b5c0d9-b2dc-4123-8e4a-f594c8b05082",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46575ac2-b057-4331-b13b-86aeb9ed43cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dafa3ef-955b-489f-9407-a49ae6657c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e155e413-0c88-42c9-ad3c-7cf25bdd956d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5da7a4-3aeb-4b47-8a45-efaa81867772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6973888d-1036-48a1-a383-c6f1087bb452",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f11ba0-a01b-4991-85d0-644b38468e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496139f9-99d5-440f-9b72-b716c17bab38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3857a15-1708-4dbc-994a-e697192f93f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e7b430-00f6-4c0e-9261-7372434402d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f09ee0-58da-49b4-b37c-8985c41b77a9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed135a8-dc5f-46ce-90df-16fccf99e44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64a4dd5-320d-44b2-80b7-17a4c232c4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bea9463-bee6-4db0-a8ff-a336c30ddf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29e653e-857f-4b9c-a07c-3b9977b63aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bdf62e-70d3-4ccc-ad18-145d24082cc3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74163829-e0ee-4be5-815a-6ff06679c89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93635c2-b1a1-49d3-ba8d-8608e5a76293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5f8c69-1645-4959-bd83-b45afd5a1472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589fedf1-61d7-431b-b276-72d668bd0930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa3c0f6-c061-4edb-bbc0-b9bf41b4d58f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ddb795-80d3-4fb5-a5b7-004b4eafc8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1946dda-b969-4e69-a03b-90717d55cb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd9a745-6f18-4eb0-b76d-8fda8a50e206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58899505-6a49-4b9d-8141-4298730d51ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e830ea46-1ce1-47e2-965f-b1a93235d120",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50436882-fef1-4589-abc8-fdaa60d90d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c2b39a-04d1-4fbd-8fcc-9b938037f7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355d6385-88ed-4f4b-9888-9282032e7ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7afa25-b8af-47ef-a834-897d9d345d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1252da2d-5529-43bd-95e3-40e219e2ada8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b9e708-a9bc-4904-b132-410de2829d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38271efb-12eb-4d4d-b362-f9b13a2d38ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798de592-ce15-4761-a1df-0909bf82a404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179271a5-db28-4b1f-8a0a-d198cf0b9317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7c7bc4-4be9-4006-9b61-32d7307da4c9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07532b4f-e7f6-48a8-937c-68fc23146610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4df78d5-bb9d-43bf-ace8-6ebcf133bd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf9a498-29e5-4723-b748-a1bdebed56b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98ea05e-0449-48f7-964b-06f70f43eef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987b708e-707b-4eb5-9926-4b77b037dfd0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d78490-2efe-409f-9387-f4e8aa33c671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f45b39-df4f-4afa-b35d-b5cc7d75a25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e0712-709a-40e2-b8d6-3cf1e616bbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0bda37-7cc0-45a3-87a7-18c5527ab438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79ccba1-df63-43b8-b023-cfbb44150d0b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85d8f3a-d9f4-453c-88d5-4e983b22ff97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77e2c0a-bc1a-4d95-9710-5ab8f0e09426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817e453d-5fc7-4317-8606-163da1800346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36beb65-07f6-46da-9048-ec68496fe9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5799e1c-ae77-4127-b4c1-fea257758022",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1b737e-2e69-4eb0-b987-601064aca37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80428534-5391-4b27-b646-7e28c429bc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea26ea0a-5634-44a5-8438-7b509052edcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bedbf3-4cd9-4133-b2dd-d006d5ade124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c345e3-292a-4971-9c2f-83ca131a4eed",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89c8755-8d82-4314-a2ba-d276f89ff9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8cac0c-c31e-47ae-b224-7fc1d48e028a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c1549a-baf4-4e65-88fc-70ec4c335e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ce04e7-02cd-4492-b9d6-3764fbfdfb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14f7071-284c-45cb-a542-3c9aeef3e16c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7226c1f-b5aa-4fb5-a1d3-bd33949b19df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc9a5c2-5d36-4e83-9a29-5415979a05fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa37074b-96b2-41e7-80c7-413c775ffab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70be746-5129-49b0-890d-655e517bb206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d560133-f78c-46b5-8d98-b43a34a1cc94",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fd5a19-de68-4cd8-a439-9a24a004d526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a695ce-3d1b-4079-a337-38f5489feab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef09c0f4-25d9-4822-b780-4e09a1c223d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d36284e-c142-4056-b069-3f99f71958d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16add03e-37d9-4d95-91b3-ac5a1ce9e1d0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54135bbd-2c48-4f27-b0ce-0a13c0599843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13db493f-ad6d-4ab6-bd6a-15d298c764c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c20bfc-b2b9-4923-a057-02b76ffb76e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5fbd33-bde2-492f-9bce-69cf84aa8533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21610ff-4569-40c6-9164-be46a2aa8625",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8888274-4905-4ca1-beda-4d5d0b9bf667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd1e9a51-7392-4a0d-b3dc-a689c849119f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31199e0c-28af-496b-8e7f-d981f8e79973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378251e7-29e3-404e-b0b2-7df975ae76f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a93544-3419-4dda-9108-edfc352ccf88",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd33dd22-e0a6-4f89-b7d8-447fdac4a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25839a5d-3039-47ef-a5c4-a8243d348801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c629ee1a-8740-4e15-9ecc-ccd2f055a9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520f1b18-331a-4fae-8059-7e5300aebce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b964be66-78a9-4988-ba3a-5b650da185f3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92108b9e-534f-43c3-b633-d9006ef6054f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f229d0f-4a57-4deb-9a7b-2bf15a6bf88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89de2a0-b6a9-40af-95b8-478416e0a938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2313cf-c2a7-4825-829f-f6fb9a9a690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b25bac-41fd-4056-879a-1cb0cb708196",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e4e1b1-a2f4-4441-b8bf-959220f57983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f6f927-ca69-4e52-ad90-4d80d95e1abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f37fbe-c30b-44b4-9f38-c71bb74b5e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1fe6c9-1ba3-4f6a-ab1f-8bea6957dd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeabac36-928d-4f4c-87a8-39c4c8025619",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5882ed5-61f1-45fe-b38e-686eba316bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1cbd5e7-4759-4e5c-a098-5c59bd7fed4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cf2269-61c1-4d14-aa6d-d53cec3c400d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0e27da-c9c6-44b5-9817-9e09a2e0ba62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d9ac0c-5418-419e-b143-7671505a9c2f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee76ad35-0cde-41fe-896a-2941a072727d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373bd2a5-3e1a-4931-a08f-1a119c826f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ce6e00-228b-40a3-8b5d-826d3700abfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96316c6-f8af-4340-8c9e-c2b6619701e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996cbd2d-a842-4963-b9bd-3b5ea4df521c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9d6cd9-35b5-4fda-a8f9-bff97b7b1c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a4a528-98b8-4bd0-9ca4-31487710c6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d927d53-4265-42f3-8b6a-19ed25e61dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91888d8a-0ec2-49cd-9389-987cdc929b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a7946d-b4da-48c6-bf79-9eb846c96119",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a024e0-1968-41a1-9a8d-32e4d1fe4e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522b071b-ce23-4a14-815e-8fbb9dd718a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4302b2-f5ce-451e-a4d9-0a00835684ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a771593e-eac2-4666-b180-a6fac4dc18fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be296ea7-0bbf-46ef-91db-6d1d94614f49",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd85576-bec5-485f-939b-064c0b387383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ae1a3b-adb3-41d1-b176-b61e8e381f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c44a7a-ef4b-43f2-9e1a-2f9901a6be73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79888ade-84a5-4dfb-a1da-4b410563b828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724aee46-4661-46ca-a9a9-10595a0699a4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4b9559-c504-41c3-ab8a-4e58006d53d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29e652a1-0ee0-415a-810d-9011b9b55eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2551e0-0e08-45d1-a7be-4b75350a0826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6add5a90-7454-48d8-b378-f66b0452a066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7b869e-b5ab-4410-ad60-2fbaf95f17ed",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c337b87-dca8-4608-9377-0f5d2e8a649d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a757185b-98e6-4b9b-996b-f8632e099d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083c8cde-9198-4d82-9ba0-f84643e94397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1389d3-fb2e-4c89-a525-ba71eadf9c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116fe699-c92c-4f08-b023-029f1c88a815",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfabb37-174e-4a61-8bc8-efc4b3215e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ba6025-cf84-40bc-9957-404f969d29d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca66d53-0dbf-4f08-91b0-1124e9bc706c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26358495-f592-48ac-9b6b-e20afe450074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e004913-8524-44da-bf18-462d0f966b42",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e9692-8ac3-4c27-9122-317cb5e14081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea6e942-dc73-47bb-a13b-79bb0a2eb210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb7c8f5-f2bf-46db-983e-d98fdcdae93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e0f965-e2e3-422b-a000-7cb3f67eda0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9144e0f-fbe7-4738-a0b6-96d371b0bf53",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1aff22-7de3-4943-b4bf-b37c54621fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8102c83b-75d1-4a5f-adb3-81aed9037900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8c30ee-5466-4162-84ac-cf6c9e649b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d8ea30-cd0c-4f56-8bc8-185ac8dbc249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a177cf7-c5bf-46f2-8b42-03a037fd12d9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d47a138-12b0-4d73-ac7f-9a5413c5f91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b2456b4-f474-4c97-861a-736e7629db5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9aa0de-5d10-4a99-b93e-3f233256f60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2775e0fa-d95a-42cd-92ac-93f3270bc01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1142f768-6be9-4eee-92af-5573d80c185c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40313241-289e-44a5-81d4-823a5dee8b73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c4d80f-5f9f-4e28-87a4-a011ec2fa554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2692d690-4940-4be4-b55d-3f010779695b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6ec920-87b6-41b0-a5e0-7d31f99c3048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3769c33e-a10c-413c-9ae5-5d61b0337520",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be47ccff-a36b-484d-a6b6-30aec114e0c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e663f47d-b95e-440d-b7d0-f71817f0838a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9ac7f3-7abb-421a-aadf-d27993e3a181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b19e3d-7695-461c-a16c-1a3977cb8c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28624634-81a9-4566-950f-acb503ef478a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da4f3a9-0b38-4082-a9c3-add35f8282ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94248048-eaa0-41dc-886f-92ebd1d5b151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0b757f-c8f7-44d8-bf97-81c75ad0c70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717383eb-175e-419d-a2d5-e71b25ed3f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c5bf36-4cf5-42b7-8316-15bcd569e403",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae517c9-fe93-4fb3-95a6-3683ccd331fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f582dfa-dde9-445d-a623-9155701acf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28edbae5-e55d-476a-9ffc-48624ebec604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0dfd16a-0967-44dc-a2ac-d45c69cc335c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915baf33-e36b-44a7-ae30-884a1509c4ea",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013ca538-dd90-4a4d-9e7e-52cf6e98bd38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0115e919-c5bc-4a42-8e84-24273d3581ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1b1eb8-1755-4ab8-a917-6f9389b4963e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748addeb-0d69-47e5-ae39-8256ab50252d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f69d39-03f5-4269-9041-86a0df2496d5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ae1fa1-0a83-4141-b2f3-688a5d86375e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9365c6a3-d135-4f68-bbcc-d59795dbfe57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8092cc7-f0bc-4530-b18b-e73bb198de88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2818c3b1-a91e-49d7-8249-8b0b1d6b5f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae50d188-3966-405e-a14b-f62ad2a087a5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617ae1d1-afd5-41d4-abf7-f4b40e91f380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db2fbec3-f734-4624-b5dc-6cfd1fb4fe18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b19eeb-b611-4c2e-a8e4-5422ae5bcf00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d809f60-622e-480d-99ad-0aeccfc35899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95067c3-a9a1-413d-8b00-0abc157ccebd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54561068-35f9-46b2-9dd3-d569d98c4d7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d21fcdb-ad9e-4933-b050-4e962c9f9f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfde2ce0-a6a2-4220-a766-987417d72a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de25c09-30d4-4ed2-85be-1f1da718b034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd96d5a1-49b7-4f63-9c29-efdb1516fa1d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51fd57a-7b85-4d57-9b1d-5df4e2cdb3a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf4b828-a36b-4b9a-8d6d-de1015de7d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d967f8-f320-497e-83e1-2dc0f266dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2b401b-b58f-4276-9967-e79225fab794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db22e4de-cd23-4148-a667-a15aed8ef209",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c7938a-74c7-46e6-8c6a-7fe8c835016c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46529dfa-9b16-473f-a263-095819bc2097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff132f3-1e36-41d8-a2f0-798484102590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b4c9bf-12ae-419c-bed3-171b5dcb6ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13fcf95-2205-4702-85e4-53b5a9279c54",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0246772-388f-4246-8a36-c205dfe1278e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d0489a2-4bc5-4b3b-b2f6-e1a7ca602e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3579137-548e-4da7-ad6d-c1bc07fd43b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fdc7ad-6ae3-466d-87ed-5007728c8978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba664cc9-ef5c-437a-9b8a-5ec9e3eb28b1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24750798-3926-46da-b669-c0eed1c371e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a83c90-686f-4333-9940-a8265100ef43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed617ff-d925-4ef1-a8de-9c8ae944d603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c72fb2c-708a-48f1-a5bc-b5f962843766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e2fe7d-f271-46a4-beb3-c526f03549ad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07b467e-7ea8-4a7a-91d0-4e034d4d666e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4617cd3-4f65-434b-99d2-96c9148d4857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44bd260-8278-4fad-bb22-4d217e392295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b1724e-ffe3-4d48-bd91-d91580caf5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6407208e-0119-4b0c-8d53-e6a7de79a6be",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e106e06-9d41-4141-803c-bb71fc911788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12e880b-0053-48a7-aab2-cc7fbcdcddf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cba057-3d11-4aae-ba6e-a1686119a050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84834619-7166-482f-948e-e947dc35b3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8889e823-3646-4685-8153-4c78f5c16a1f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a49fe9-45ad-4049-a3df-dfb2dd0edd6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87530db-cc52-4357-aec9-295e6473dd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55db8f85-8111-4c8d-b587-1e4458f3ad0a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1a69ed-3991-44eb-b397-66b4cbaf6954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa9fbdd-6354-4a96-96f7-eb83bbebd4bd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f200c671-668b-4726-8594-2d4a9acc2cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e160e3-6166-451b-ba33-286252c4b781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c372d810-3236-4d1f-8b74-97c8ee859845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20c06ef-5acc-4167-996b-2ac2b94724a9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a00b9b2-b629-43f8-a3ac-74d3e5273cff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af672ca4-4573-42a1-8a7c-cc9cfd13408f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "882e1fe4-6671-4868-a680-ba4c42f96bde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c82e4acf-7975-4622-ae74-842289d9385f"
                    }
                  }
                ]
              },
              {
                "id": "258b4674-6a16-4502-84d5-93aeab12c38e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fff97e45-ce9a-44a8-aa4c-f06c5cab52b2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028ed787-6e01-473e-93aa-3155427c0012",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ec3451cd-d87d-468f-93df-8a55fc3154d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3407b00d-8d2e-4ef3-b6ef-06306fd5c0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0392bf2d-291e-44d5-bb2b-3a6bd894aa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66cc01d-3ae2-4e28-958b-dbc6c726c8d0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799d54aa-a230-4ac4-b1d7-6c06ce327856",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "43e1c8fd-cc42-4627-b204-e4db087b5f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf3b31a-32a8-4645-8940-c0d6b87d939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69f787c8-126f-468e-a6a8-9743026a4727"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f375e52-820a-421d-8870-9d8200a56513",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "299c1ba9-2207-4c5a-9800-4d8e1c34ab8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32c81a6-cad1-4b05-bf05-a18abdbaecb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de09b3b5-34d4-40d3-bc77-fe6d6559522e"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "a2ac9941-5fdb-40e7-96af-980642c7e965",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2afb6de-8568-46c1-bcb4-1db897b4c42e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2468d165-24d0-4f28-8daa-611c7c5621a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cefaefe-e27c-40da-ba2f-a4899917e45f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3debfade-179e-485f-b139-e91c73fa854d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5711712a-c1ad-4e2c-8813-19412070fd40"
                    }
                  }
                ]
              },
              {
                "id": "2b2cb740-e5f0-458f-97f5-76adb950fc3c",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eae03407-531a-4cca-847d-c8fa77b19524",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78b997ce-bff8-4603-be9d-48f7032cff62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad5948c4-7c46-413c-8c86-d027e1f7cfca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5081b43d-2229-44c0-8541-77e4f0ba9d44"
                    }
                  }
                ]
              },
              {
                "id": "4f4d0e01-debf-4f8e-b2fc-ed04c3917ac9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99b8a23b-3a49-42b1-b039-354a38e65346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d405ce04-5da9-4b33-b250-af39f310c7fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3364200e-0650-4167-bc1c-be19c295cba2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "945dff6a-1cd1-44f2-9ad5-ef472f6b97a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ac6e403-d31b-4b5c-89d2-7cd69cf32e6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2f09b490-71c4-4a6e-9666-ea1a17f6d4ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc6fa960-17b4-40c1-bf58-8c4f1fb6c4b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "777fb77d-6cf2-45a4-af0e-3014b3dd40ba"
            }
          }
        ]
      },
      {
        "id": "836ae63a-53bd-4600-b023-2300331e866e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fdf3b16f-60d6-404f-b46f-7be6597e514b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "277a65b3-ead3-479f-a366-6dd43a3c6131",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17a13b0b-0c78-4aaa-91a1-bb2bdd665ab1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4987765-5581-4666-8991-9ca792b64241",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "738f8f80-f83c-4238-b2ed-3e8a0ea07e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673c11aa-9073-4492-a2a7-ab819f3790b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89ab1476-71b0-43c9-a476-34af5a7e951c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20855a93-467e-4f04-8407-eea098cc212d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e808bff-5deb-4736-a5b1-c84f35b5d753",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "90447eb9-8168-4af4-80e8-51034d5a0304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74ceedf-dfca-487a-a299-cfba9ba98faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06873b2d-b168-428a-8882-6cfa816a0250"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96445b35-9f10-4e42-b688-c46f82d6bbef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f35617b1-2374-4940-8e64-0d1482619fd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46634475-4043-42e7-ac10-95a4a1b7a78a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cae60183-6401-413d-be33-912ad37f78d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d83a1c81-1bcd-4d9b-83c1-3cfbf828def0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3e2e6bce-d9b5-4ccd-878b-8108675518e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1153c0b1-cb7b-4d8d-818c-fcfe74461c4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5405b15-cdbd-4038-b092-4d4c267ce6cb"
            }
          }
        ]
      },
      {
        "id": "6884764c-4d28-4978-9dc7-7be9f456af03",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "312de0ac-8241-44b8-88b7-7ccdd2260654",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b7e1e06-1e18-4851-8ba4-fc70ff0c39ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "103ab2bb-d864-4192-95f3-228d46632f57",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53a6c74-ff2d-463a-8591-62b8c79ca421",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7b7e6e8b-6da9-4af4-b2d3-9383a2597123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e5b5f6-e6ad-4f17-be8d-a2c533342954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8ecb46b-03fb-443f-9838-b793378b2e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbddb32e-9665-49e7-ac06-2c247bbbb2b6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d56953-5e67-48e6-a9a7-233a703ea29b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b822ea04-4f2d-4d5c-988d-9f0bfec18420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0f13de-ab28-4c52-b9f2-e6e0449d2fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72fe8dad-63d5-4958-97c8-453583eb9f1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f443d48-4be6-4825-8e80-1321508eba83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5c58ee7-e9c6-47a4-bb7b-cae0b2afe4a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3713d5bb-015f-49fd-a4eb-e11120f80f41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4198f769-6457-4215-adcc-9f90c49e8a6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba7dddb6-8332-4a98-92de-30d79144e0f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ff31fdc1-bd23-4711-a698-fdc370994157"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c032f490-b0e3-44a0-b00b-0b1e291595e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72f7c2e2-e34a-4613-ac4a-04059bd2b2d6"
            }
          }
        ]
      },
      {
        "id": "403e4912-e1d9-4e5f-99bb-e568de40d148",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ea0dd06f-5454-4265-ac93-b5e439425051",
            "name": "Negative Testing",
            "item": [
              {
                "id": "deb3497e-789c-493c-a280-2291c821ec74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "149dc913-f5db-444c-b80f-ce6d2c31998b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a8b91d-059f-43dd-9ed4-406fef87fc94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "598cf45c-a32c-4a58-9fba-040db8f77b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4579fa-8583-460f-8a5d-8b130e44f0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5beea6e-3131-4e5c-a2c0-e8da7f0f3d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42e384f-c356-4e66-a7c8-8b78ee88eaba",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984e604b-b049-48f7-9067-dd4766e78117",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5d79b369-5c9b-4c8f-972d-856ce76fa037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ac7578-dc95-4e78-b0d5-fd0768991a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d56cded5-f7c1-4535-9833-e9b4deadd1fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e9da836-f279-4865-be25-62e2c46e9d2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bef51654-3e4a-4f7b-b1bd-c7af664b9b1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82d532a5-51b3-42f8-9c1b-5b2a1e1ecd9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb65a9fd-26f5-447f-8115-db05d34514b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63baa7a7-eaed-42bf-9273-8c89accf47c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "10700223-0c27-42f4-8d05-b64f0e411121"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdcbaaf0-8f63-4487-8d4c-f6fb9548528b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d77cee4-5066-4963-aefd-ffed0f1ab351"
            }
          }
        ]
      },
      {
        "id": "268bc41d-2727-4ff2-9cdc-1548ada455bd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8da68d68-5649-4f4d-9797-eba4540190d9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8b62617-e1cb-4692-acd6-53c6d4de4437",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a06d2600-a3c0-452b-a7b1-7dc5f4d2e1c0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c59960f1-704b-4fef-b121-c9c5f2d18ccb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0746c02b-d407-4411-88e7-4197b9a2e62b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 500.00384615384587,
      "responseMin": 10,
      "responseMax": 5571,
      "responseSd": 449.87415760133996,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668127875732,
      "completed": 1668128016466
    },
    "executions": [
      {
        "id": "2bb7af7b-1fe5-4953-936c-627198bc0ad5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8fee455e-935d-4464-8bd2-173834db3ca5",
          "httpRequestId": "a51f4e54-32ae-4005-994e-6f615b79c288"
        },
        "item": {
          "id": "2bb7af7b-1fe5-4953-936c-627198bc0ad5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6d34f622-258d-4b72-b218-f5282ee4ba47",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "63960933-655b-4aca-a8b7-f280a0d43970",
        "cursor": {
          "ref": "073f7d43-952d-4743-bce0-7b52534b3272",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d4b2e6b2-0a21-4c36-9750-a1116f4f241e"
        },
        "item": {
          "id": "63960933-655b-4aca-a8b7-f280a0d43970",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dc7e1e70-8183-475c-8177-a918aecf7c40",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "3cd1f287-5b81-45cc-999e-9d41ce9ec419",
        "cursor": {
          "ref": "c6599213-0085-4646-87f5-bab6f057cc03",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e841da73-6c0e-4872-b217-629dce7f918e"
        },
        "item": {
          "id": "3cd1f287-5b81-45cc-999e-9d41ce9ec419",
          "name": "did_json"
        },
        "response": {
          "id": "7aebe0c5-f669-4c6d-b623-aab9bd7c0b69",
          "status": "OK",
          "code": 200,
          "responseTime": 472,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56862869-a73c-4993-9115-1b6d4abe3125",
        "cursor": {
          "ref": "5c5ff437-33e8-47e3-833b-725cf1c4d28d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2fd2bac5-99c3-4117-a262-3e453be51e83"
        },
        "item": {
          "id": "56862869-a73c-4993-9115-1b6d4abe3125",
          "name": "did:invalid"
        },
        "response": {
          "id": "1924cc63-a679-400d-8ae5-237d798ec8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56862869-a73c-4993-9115-1b6d4abe3125",
        "cursor": {
          "ref": "5c5ff437-33e8-47e3-833b-725cf1c4d28d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2fd2bac5-99c3-4117-a262-3e453be51e83"
        },
        "item": {
          "id": "56862869-a73c-4993-9115-1b6d4abe3125",
          "name": "did:invalid"
        },
        "response": {
          "id": "1924cc63-a679-400d-8ae5-237d798ec8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c47f5c-6219-4fa6-af5a-e243a9408516",
        "cursor": {
          "ref": "8face4fc-fe1d-4511-bec0-e1cd8f91941d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0648e8d7-ca59-4c9a-a858-fabc94899bea"
        },
        "item": {
          "id": "03c47f5c-6219-4fa6-af5a-e243a9408516",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6d4dbe46-68ea-46f3-a63b-a2c5890c3392",
          "status": "Not Found",
          "code": 404,
          "responseTime": 604,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae692ce3-0578-4fb5-9054-9bac49961982",
        "cursor": {
          "ref": "6f361eb7-f7ec-46bb-917d-21f0ec758392",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "40f5189e-68d6-4a3a-b58e-f88659d32ca4"
        },
        "item": {
          "id": "ae692ce3-0578-4fb5-9054-9bac49961982",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "abf716b2-2982-402a-badf-75b5e440f092",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc135b66-f51c-40a0-ba90-5b392b056d8b",
        "cursor": {
          "ref": "429e7c89-4adc-4094-b41a-dad418270892",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7d9917c6-051b-4d45-a652-eea3b8eed897"
        },
        "item": {
          "id": "fc135b66-f51c-40a0-ba90-5b392b056d8b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e6091f27-6968-402a-894a-71ea017e04b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acfed9b-1767-4b5e-ae58-7d56d4b015de",
        "cursor": {
          "ref": "08cd1886-49b6-4254-a09c-4d2937b6491f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bc5b8783-7865-4d97-9ee5-95e8e7d85640"
        },
        "item": {
          "id": "1acfed9b-1767-4b5e-ae58-7d56d4b015de",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "39df968f-0810-420e-a962-3180c315da11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 467,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acfed9b-1767-4b5e-ae58-7d56d4b015de",
        "cursor": {
          "ref": "08cd1886-49b6-4254-a09c-4d2937b6491f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bc5b8783-7865-4d97-9ee5-95e8e7d85640"
        },
        "item": {
          "id": "1acfed9b-1767-4b5e-ae58-7d56d4b015de",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "39df968f-0810-420e-a962-3180c315da11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 467,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead5ca6a-b90b-47a5-9dcf-9e4b58e891ba",
        "cursor": {
          "ref": "a807c1aa-18b0-4972-b1d7-0c18872284aa",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b8ba92a9-d167-4b51-8319-f9f55d39a113"
        },
        "item": {
          "id": "ead5ca6a-b90b-47a5-9dcf-9e4b58e891ba",
          "name": "identifiers"
        },
        "response": {
          "id": "3cabeb1f-88a2-46f7-bd33-7359e653a104",
          "status": "OK",
          "code": 200,
          "responseTime": 772,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177058ea-7894-4420-b267-69e5c298cccf",
        "cursor": {
          "ref": "d8207c66-16b0-4d30-8818-4e294ac1b796",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4df2c65-cf0e-4014-aef4-07540ca3645f"
        },
        "item": {
          "id": "177058ea-7894-4420-b267-69e5c298cccf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "81232932-061b-48cf-9c62-4cb786804314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177058ea-7894-4420-b267-69e5c298cccf",
        "cursor": {
          "ref": "d8207c66-16b0-4d30-8818-4e294ac1b796",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4df2c65-cf0e-4014-aef4-07540ca3645f"
        },
        "item": {
          "id": "177058ea-7894-4420-b267-69e5c298cccf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "81232932-061b-48cf-9c62-4cb786804314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b0bd92-ad02-4f8e-8d13-698b7fe0f086",
        "cursor": {
          "ref": "9ad190b1-0aa7-49ed-b7f4-95420a5cc322",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0c772e29-5385-4883-b4a6-760baa9559a0"
        },
        "item": {
          "id": "89b0bd92-ad02-4f8e-8d13-698b7fe0f086",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ff1ed111-137c-4a84-9928-4e2ba3f3c376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263fa8e9-717a-400e-943b-3d8bbcaa1917",
        "cursor": {
          "ref": "0ffbafdc-63ed-4810-99ed-0285f374ce3a",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d544f628-0a73-4491-9dc2-8fa0d6ca4722"
        },
        "item": {
          "id": "263fa8e9-717a-400e-943b-3d8bbcaa1917",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "13ecbc38-0c92-4eeb-b685-a21c6919471a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 922,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bde24cf-bfc6-4c65-95d5-a5e3dcd1654c",
        "cursor": {
          "ref": "28a38e2d-2817-4f0d-9abc-f6b050c0f7dd",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fb865502-df14-4886-949a-ffd3b220984e"
        },
        "item": {
          "id": "4bde24cf-bfc6-4c65-95d5-a5e3dcd1654c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "297093bf-0b27-4e61-846d-bf7d5b20ca8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574a8276-e51b-41f9-ba7f-6a649ee41d97",
        "cursor": {
          "ref": "b63ef0b2-8259-4eb3-b151-1ad7a9112d75",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8a4d28ad-181f-40f3-92c2-394146cbac6c"
        },
        "item": {
          "id": "574a8276-e51b-41f9-ba7f-6a649ee41d97",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "95e6e315-ea92-4c28-8a7d-5b3bf0db8c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93637c9a-dd7d-4d80-b313-b9197a652974",
        "cursor": {
          "ref": "8e602bd5-fa43-4882-8b98-648cfd67e896",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "993c3480-d2d7-4146-b79e-6f8ad76d5673"
        },
        "item": {
          "id": "93637c9a-dd7d-4d80-b313-b9197a652974",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6ec23861-bc30-4042-a40e-249b8ecb6d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceae389f-e0fa-4200-bad4-c58177b51ee0",
        "cursor": {
          "ref": "05ff6e9a-3b70-4f3c-b9ea-c05ccbd30a76",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b6eebcd6-05b7-42ae-9f14-5dcb42049927"
        },
        "item": {
          "id": "ceae389f-e0fa-4200-bad4-c58177b51ee0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "62cc8e2a-300a-45db-b96d-99f1e535d54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43360f9-075b-4cf2-8179-a01538b5b698",
        "cursor": {
          "ref": "da22b24d-8efe-4ceb-bca2-fd295f4bc7d8",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cd1a2e86-92ce-463d-8e2a-a70aca555eb9"
        },
        "item": {
          "id": "a43360f9-075b-4cf2-8179-a01538b5b698",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c8bbad85-abeb-47a4-840d-24fb4c563a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c11410-12ab-4418-a9ad-982e4bfc6151",
        "cursor": {
          "ref": "946b9de7-f75d-4354-80c1-f568661f0661",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2d0fb4a0-433c-4653-96e7-57ed9b69768f"
        },
        "item": {
          "id": "a9c11410-12ab-4418-a9ad-982e4bfc6151",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9a58ada7-c583-4980-a401-bcff7d3376e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84379242-6dd0-41b7-8972-d4e66cd3ccd7",
        "cursor": {
          "ref": "b78a323a-c7b4-4cbd-93df-0ffc03130939",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4d65ca47-9a7f-439c-ae78-eeb056a148fc"
        },
        "item": {
          "id": "84379242-6dd0-41b7-8972-d4e66cd3ccd7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b9b0790b-fb19-46d0-99f1-3828d25cf787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff24c2ec-2844-4a66-bf7d-fdcd7c22ae2a",
        "cursor": {
          "ref": "95ac2fd8-c84e-408d-ad41-5fa1a4c24dd1",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c55cd86c-6010-4bbc-9530-ca582a5b010d"
        },
        "item": {
          "id": "ff24c2ec-2844-4a66-bf7d-fdcd7c22ae2a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0b21ab58-4b39-4b8b-9d92-daadeca78789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3059a676-c633-4820-9c87-90eb9eca679d",
        "cursor": {
          "ref": "a7c7c4ff-302e-4d10-b6fa-dbb2f5558af3",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ced8e8e1-761f-408f-8adc-1999b034b901"
        },
        "item": {
          "id": "3059a676-c633-4820-9c87-90eb9eca679d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f819fc8c-df1b-4bf7-9c59-2989530db991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad4b13b-d236-4b5a-b8bc-d2a9b6287cb2",
        "cursor": {
          "ref": "bfd01f02-511a-4a36-ac41-ff37c8b9c7ad",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1300a3ad-63cf-4a97-b6c0-a48f03293cd0"
        },
        "item": {
          "id": "3ad4b13b-d236-4b5a-b8bc-d2a9b6287cb2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "28a95bb5-f8ee-406b-b2e2-abbc535917d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739f0b95-6238-4a84-9ff7-133a8e8679cd",
        "cursor": {
          "ref": "1475bb5c-bb46-46ca-b5b5-6f9b9ee1954a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "17b27c63-e8ce-479f-87cc-1b75b8f8a194"
        },
        "item": {
          "id": "739f0b95-6238-4a84-9ff7-133a8e8679cd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7f19f3c8-2646-4b1e-94d2-a07b323279e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5864aa0e-e9a8-47b4-a311-5eb7d4c8579f",
        "cursor": {
          "ref": "5e0a60c6-a7d9-409f-86fa-7f70e4f55168",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f08c816e-302a-47cc-b6af-5ca1dd335cc9"
        },
        "item": {
          "id": "5864aa0e-e9a8-47b4-a311-5eb7d4c8579f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "82785536-2797-47fd-9e0b-3f5a318065cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3e2283-5d45-4e9a-a257-78edca42bfff",
        "cursor": {
          "ref": "c7851dfe-047d-40ab-a792-a8d6fb793057",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "13f11b53-172f-4a86-9abb-094512bb4a28"
        },
        "item": {
          "id": "ab3e2283-5d45-4e9a-a257-78edca42bfff",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6b3970b6-725f-417c-87f5-d65ade253b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ff3ba2-b9df-4160-bdd5-4de8d551ddae",
        "cursor": {
          "ref": "d2d81322-06db-4b40-9bb6-9ffc24b729f5",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1a69d54d-ccd2-4ef3-8734-32e3ca8c65c1"
        },
        "item": {
          "id": "30ff3ba2-b9df-4160-bdd5-4de8d551ddae",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "22660142-25d4-47e8-9316-824da6e92324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79664c2-c91b-4e1d-973f-7a819a477870",
        "cursor": {
          "ref": "72f35440-ae83-45a2-8485-cd744e06eef4",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7cd78930-176f-406b-b758-828823aa050c"
        },
        "item": {
          "id": "e79664c2-c91b-4e1d-973f-7a819a477870",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5aad14b7-42c0-46ae-8a0e-7968109d7bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3e38ee-16d2-43a2-ab9f-4b5b0433c82a",
        "cursor": {
          "ref": "38411218-58f5-4b1f-9d1b-13348a26a5fb",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "91db7193-d93c-4fca-a305-6815935753cc"
        },
        "item": {
          "id": "7b3e38ee-16d2-43a2-ab9f-4b5b0433c82a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "75137ec3-45fc-4b1f-819c-90308100e7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb98b1a-6dfc-4f08-bd54-f4b13873b525",
        "cursor": {
          "ref": "5aa0948a-fd75-4b88-a514-b8756b1df851",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "74a99020-d5e7-4ef4-9090-8c5a2676cc22"
        },
        "item": {
          "id": "deb98b1a-6dfc-4f08-bd54-f4b13873b525",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "80047989-f6ad-46a6-9b86-83155814983e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc492368-c986-44e5-9539-c7d4441df7da",
        "cursor": {
          "ref": "d1fb20ed-da68-4bba-813a-e8be5b9ab82c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "938b9903-6334-4083-bea4-bc2d70d15fa7"
        },
        "item": {
          "id": "cc492368-c986-44e5-9539-c7d4441df7da",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9ca12e01-d1b1-48f1-b231-d08abc9029ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77ca13d-34e2-4588-910c-a2f4f831e69e",
        "cursor": {
          "ref": "bc4bd9e0-17a9-4ec2-9a7b-3d120582f7b4",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7f552bb7-69be-4e72-a29c-33faffcb34eb"
        },
        "item": {
          "id": "b77ca13d-34e2-4588-910c-a2f4f831e69e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eada5c1f-9e07-4dfd-b701-4ae9550f80c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bad810-88b7-41d1-9aba-7a4c6fc3dcf8",
        "cursor": {
          "ref": "a9ac92e9-ea0c-41e4-9e59-4cd253d54e60",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e3040936-6484-4675-bdff-2736d760c50e"
        },
        "item": {
          "id": "30bad810-88b7-41d1-9aba-7a4c6fc3dcf8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f5848951-614e-4970-9110-46c968066814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1160,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7d51c4-4761-4368-b11e-92da68dfc1d1",
        "cursor": {
          "ref": "8f4da47f-f065-4be7-ad2d-00157f51a0e3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d2636779-fea4-4145-af4b-3ec9a43f797a"
        },
        "item": {
          "id": "1e7d51c4-4761-4368-b11e-92da68dfc1d1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "273566f6-9d61-42a4-8601-4bedecc2d191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcc9892-0fb8-43ef-b1eb-d0cf97a6be36",
        "cursor": {
          "ref": "8e4a348d-d0a0-4f34-9a0b-48b9f43013fd",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b2b46f45-64fc-48b1-9044-045d27a182b5"
        },
        "item": {
          "id": "3dcc9892-0fb8-43ef-b1eb-d0cf97a6be36",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2a40369f-ba76-4b86-977a-6c9887ead9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a4ddd-1073-49d4-ab2c-6f60505301a8",
        "cursor": {
          "ref": "59a448f0-8089-4b25-97c6-7574507e227d",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8dc8d119-57c4-40ec-b6da-81b6ff744cd0"
        },
        "item": {
          "id": "2e9a4ddd-1073-49d4-ab2c-6f60505301a8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8e47f645-e813-43bc-95bb-f78bd1cbd1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f801e94a-bcbc-410a-964a-2cc184a93a55",
        "cursor": {
          "ref": "5317dbd5-2d93-4c30-8c72-5bea2b469616",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b050e561-7cd3-42a3-a07f-e7d064c4e332"
        },
        "item": {
          "id": "f801e94a-bcbc-410a-964a-2cc184a93a55",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "64c389f8-fc43-4b84-b6b3-a3c2bb7c32bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d5d142-1903-46ac-93bd-3b3a3457dfa8",
        "cursor": {
          "ref": "6c3667b7-6b41-427d-b2dd-f1fcabd5d182",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b4096b72-b75d-4c6f-ad1a-0e0343204248"
        },
        "item": {
          "id": "69d5d142-1903-46ac-93bd-3b3a3457dfa8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "366df50a-8d92-44d3-a171-42aaf90d8abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a20c88-f9e9-4aa9-b8ec-85744d1d0c74",
        "cursor": {
          "ref": "76f68cfc-144c-4f77-a171-b28d1dc765d7",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ba49aa6e-865a-4d80-85b5-897c77ecc024"
        },
        "item": {
          "id": "13a20c88-f9e9-4aa9-b8ec-85744d1d0c74",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b493c2d1-8b18-432c-bd25-e5544cf02b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc15b4b-7ee8-47ee-bba4-b1f6393390fb",
        "cursor": {
          "ref": "97e47a30-a53e-45d4-b14b-9668aa75f366",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1e575dc6-4d2b-4a9e-a0ca-6f0fa03e14c0"
        },
        "item": {
          "id": "2bc15b4b-7ee8-47ee-bba4-b1f6393390fb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c4650d0b-4ad0-4f52-ad3b-3f717188b0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789c25dd-cb06-4ba0-8e66-1a61402439ca",
        "cursor": {
          "ref": "ed74d1b6-8e03-4cc9-add2-4c40c2098e26",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "722785de-3b12-4aeb-842e-0b48576e0acb"
        },
        "item": {
          "id": "789c25dd-cb06-4ba0-8e66-1a61402439ca",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3fcaa756-800d-4740-affc-60549cf73b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94886a83-6cc1-43c6-8a3b-644dec4f4196",
        "cursor": {
          "ref": "deb7b0ab-9588-4b00-96d6-b831be7c9ad5",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dad572b7-ddd2-4514-ad03-b1464728d128"
        },
        "item": {
          "id": "94886a83-6cc1-43c6-8a3b-644dec4f4196",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f178468f-3742-4b61-97ee-e162f297c555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbceb6b-f725-4997-b320-a4dc8297ae0f",
        "cursor": {
          "ref": "fb76a2f5-40bc-46bc-9af8-f8b923e9542c",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2591025d-0794-4529-89be-5c991d85bb19"
        },
        "item": {
          "id": "ebbceb6b-f725-4997-b320-a4dc8297ae0f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8f330c98-6170-446a-b2c2-686b6a7a2c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9c56ce-73ee-4f74-b388-aa3a48243dc7",
        "cursor": {
          "ref": "2cc4e82c-fded-4998-9e65-4881f692b244",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1039d52d-b5cf-4699-a8bb-859b4532772c"
        },
        "item": {
          "id": "6d9c56ce-73ee-4f74-b388-aa3a48243dc7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7d8bae80-de27-4fb8-b87c-30fe3ff3464b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3ed741-a08f-417c-8b1c-3ee2c7506eb5",
        "cursor": {
          "ref": "bfac4942-591d-4cdb-a49b-2d9c152b092b",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "021e6478-c140-4f85-8e60-afe252ef97f6"
        },
        "item": {
          "id": "7a3ed741-a08f-417c-8b1c-3ee2c7506eb5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6d259e22-a73e-41e3-bd35-09abef02ad8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873490b5-5bb3-477c-95e5-df5921ca5e86",
        "cursor": {
          "ref": "89e23584-2fc8-41c8-8f79-fb31f7a44543",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e0fae520-8854-460e-9b85-dd86c20bd91d"
        },
        "item": {
          "id": "873490b5-5bb3-477c-95e5-df5921ca5e86",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "21b4388d-cbae-4337-a380-817501034b6e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 521,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30db1a2e-bad5-4211-b52d-0ed554e1b2c2",
        "cursor": {
          "ref": "0b9c0f27-f4f7-4144-a3bf-1fbc477b1cb6",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "acc4a7db-0474-4e37-aca2-8e0e102f9ee9"
        },
        "item": {
          "id": "30db1a2e-bad5-4211-b52d-0ed554e1b2c2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dfa61a92-12b1-4bff-9827-7ec5f016701a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1c2463-c7ca-47ba-a5fc-6685be60a8b8",
        "cursor": {
          "ref": "647f9772-f3a1-4b1a-94cb-04738af46f3c",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b1dea070-5836-49a2-941c-91097620dccf"
        },
        "item": {
          "id": "4f1c2463-c7ca-47ba-a5fc-6685be60a8b8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "79c61a80-09cb-455a-8e9a-423b26eaa3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd275873-0bb1-435e-adca-dea96d783d5c",
        "cursor": {
          "ref": "c32f0e0a-6e69-422a-a889-678a10cc4302",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1401f659-b035-4d23-b2c1-1d3eccd98f11"
        },
        "item": {
          "id": "fd275873-0bb1-435e-adca-dea96d783d5c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "670d4586-b9d7-47fb-b413-6600f598a927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dac1c37-5949-4612-9b2c-d4213fa47947",
        "cursor": {
          "ref": "527517aa-b2e2-412a-bf8a-6e6683151394",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "50b99cd9-c1b2-416a-bb61-c03a77c3e7c5"
        },
        "item": {
          "id": "7dac1c37-5949-4612-9b2c-d4213fa47947",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "597898e7-9c8d-45f0-b692-6887bf31197f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1db49d-a3b9-4df1-a3fc-785001754351",
        "cursor": {
          "ref": "4879e3cd-25f3-47df-8506-a5f2464ac994",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d9383ea7-fb26-4285-826f-fb86a2076213"
        },
        "item": {
          "id": "5d1db49d-a3b9-4df1-a3fc-785001754351",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "654f20a2-b7d8-449f-8d6f-87fb8e43c33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7962d1ee-9e8e-42c6-9764-dcc4c13be328",
        "cursor": {
          "ref": "7bdc86b9-df26-461c-938a-6a28fd4c4adb",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6a014ea6-d8a6-4aa8-a19a-99d8848c27fe"
        },
        "item": {
          "id": "7962d1ee-9e8e-42c6-9764-dcc4c13be328",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cd1848ce-25a7-4a79-a13b-54d145f7adb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa13885-efc0-4d99-8211-2a4a79e68599",
        "cursor": {
          "ref": "211fac09-8a0f-4895-8782-6342b2affb06",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dffb90e5-0142-4d47-8889-1e710907c65d"
        },
        "item": {
          "id": "2aa13885-efc0-4d99-8211-2a4a79e68599",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "df539e5d-83d7-456d-94de-96feb7a8b0b8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 525,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41296cf1-63a9-4cfe-aaf7-27783a360bf3",
        "cursor": {
          "ref": "a0b1376e-a1d1-445b-be76-eb3d2db37cbc",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "79b0ddc4-5220-4fd4-b69f-5a7c9bf1698f"
        },
        "item": {
          "id": "41296cf1-63a9-4cfe-aaf7-27783a360bf3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0986f91-d3b0-4451-9305-dde6cea19eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8323e68f-210c-434d-a175-367389b55d5e",
        "cursor": {
          "ref": "e31c6bd3-d4e8-408a-9b7b-f39a8924d756",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1d70b1d1-2175-4ae0-8fb1-89daa59a37c6"
        },
        "item": {
          "id": "8323e68f-210c-434d-a175-367389b55d5e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "00e31a66-e6b4-4afe-9a40-30b40ac609b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505826ac-3996-47f6-bd14-e9e42380cf4e",
        "cursor": {
          "ref": "4e183741-11cf-42ae-b820-ee5831216fc0",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f2298f58-b0bf-4340-9fcd-377ee91d71c0"
        },
        "item": {
          "id": "505826ac-3996-47f6-bd14-e9e42380cf4e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "95d7c6d1-abd0-47a4-9b7c-ca2b3e80ec05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94481938-defe-4ca8-a5a1-e093f30dfb85",
        "cursor": {
          "ref": "d385d863-64aa-4ccd-bc3c-451c9646940d",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5b495844-0faa-412d-81f2-9ef7775ee4c6"
        },
        "item": {
          "id": "94481938-defe-4ca8-a5a1-e093f30dfb85",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6c2e5de5-4265-4a9c-a39a-20d0edcf18dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647f75e5-7858-488d-a8b3-57dd371620b2",
        "cursor": {
          "ref": "483cd931-a8f3-45c9-b127-11a63f38a2ff",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "69e10955-d5c2-4e9f-8be5-d9062c00cdae"
        },
        "item": {
          "id": "647f75e5-7858-488d-a8b3-57dd371620b2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4164ae35-7348-40ff-93af-ca1f4c0fb06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3bfcd9-afcf-4027-abcf-750d059dab6d",
        "cursor": {
          "ref": "8f8be891-09a2-42e3-a66c-c657a3bd24bc",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e951664f-3174-4d79-b31f-d85940c8265b"
        },
        "item": {
          "id": "fe3bfcd9-afcf-4027-abcf-750d059dab6d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1bff543c-22d0-4e18-9d39-7c6d4bdb2e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7df9275-fe94-4327-b6e5-48a7d36b0892",
        "cursor": {
          "ref": "f22ff1df-c7c1-4ca3-bfeb-a399f2bc2ef4",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ee4c2652-23e3-4029-99ce-0518b1b64007"
        },
        "item": {
          "id": "c7df9275-fe94-4327-b6e5-48a7d36b0892",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1f9887a4-320b-4fd4-a7b7-3dbda25474a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be358f2-1b70-489a-a596-e4ac3194cdb9",
        "cursor": {
          "ref": "f2c26c1a-266b-423f-aeb3-0ad9020f0799",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4344a2b5-f1fa-4009-9fdf-dd7d5905cb61"
        },
        "item": {
          "id": "9be358f2-1b70-489a-a596-e4ac3194cdb9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cb6ff963-b4f8-42d9-9536-9a56849a654a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2df236-7610-484c-9745-70a989fac48f",
        "cursor": {
          "ref": "12e4e3ae-db18-4f84-ad91-ea653615b505",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f09c6c80-5aa9-46e3-88f8-defc6a9405dc"
        },
        "item": {
          "id": "1a2df236-7610-484c-9745-70a989fac48f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5da4ba4a-8da3-4cd9-a716-bde32cedde14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a43cf7d-ff0d-4c26-abe6-54eece1c6e3e",
        "cursor": {
          "ref": "ea2a0210-76fd-4737-98a8-ba239669dcd7",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "da46a2fd-db1c-4430-886c-6780199bb142"
        },
        "item": {
          "id": "6a43cf7d-ff0d-4c26-abe6-54eece1c6e3e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c9ac313e-8b9c-4eb4-af82-7497fdc97a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a221b3-d2e2-4301-b213-db7fd71618dc",
        "cursor": {
          "ref": "eb8db3b3-e5d2-40b2-93c8-6913df03dbb8",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "35536f84-0f29-44c6-8efe-805257b8a2fe"
        },
        "item": {
          "id": "85a221b3-d2e2-4301-b213-db7fd71618dc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7c3e3c19-173e-49e4-b654-8630a028e1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfd5bbf-4252-4e5d-8bd8-9c67c02b6dd5",
        "cursor": {
          "ref": "450a8112-b2a7-4f30-99e8-121955103812",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d9ea56ba-3e9a-4b3f-adde-c48b7354938a"
        },
        "item": {
          "id": "3cfd5bbf-4252-4e5d-8bd8-9c67c02b6dd5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "65762a80-5f18-4b39-8745-eafa91de9004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecdb702-5841-438f-b69a-536c6740bb49",
        "cursor": {
          "ref": "66d60637-97d5-42b7-9c6d-0c26a7268f59",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cced7b14-9a6a-4032-a0eb-e92d7d194098"
        },
        "item": {
          "id": "0ecdb702-5841-438f-b69a-536c6740bb49",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "44693a96-f51c-4256-88d6-9808e6715c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbba885-7ba6-413b-885e-d06301ed2dd8",
        "cursor": {
          "ref": "bea7aff5-e6de-43c5-82cc-9de13b0f5ab1",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c0f1cf8e-ef8d-434d-9994-895b1e468ab8"
        },
        "item": {
          "id": "7bbba885-7ba6-413b-885e-d06301ed2dd8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "17f65ca4-7499-44e4-8edc-19fb464f12a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee30c5e-a80c-4897-a480-51a7f992985a",
        "cursor": {
          "ref": "ebcc5991-dbb1-42bb-ae9e-046113561741",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1c0eea37-add2-439d-8113-0484272493c7"
        },
        "item": {
          "id": "fee30c5e-a80c-4897-a480-51a7f992985a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cfbdb982-43d2-4f69-8692-e8255b73ba7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb667c15-2002-448f-9578-41998278c28e",
        "cursor": {
          "ref": "778bcabf-8c6b-429c-acbb-6cc85dda2161",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "67c46875-8f00-422b-9e29-f27a31cc5d06"
        },
        "item": {
          "id": "eb667c15-2002-448f-9578-41998278c28e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "85b3f45c-ec1c-41ab-8a97-820f6bde9234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1680403e-969e-4fcc-ae0a-0de61c8a7f79",
        "cursor": {
          "ref": "dd8bddb9-9368-4703-b48e-7017e232a6ca",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8abdc34f-846d-4f9a-ba0b-25fc767d412f"
        },
        "item": {
          "id": "1680403e-969e-4fcc-ae0a-0de61c8a7f79",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "79f3608d-e994-457b-a2ad-5d8dc9627ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921d94ed-b252-47bc-bbcd-280e68db9c38",
        "cursor": {
          "ref": "7be9b177-08f1-4e23-9ed8-4a7be70c0ec0",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0bce2857-ccc1-4dd7-b527-1c8088c7eede"
        },
        "item": {
          "id": "921d94ed-b252-47bc-bbcd-280e68db9c38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "68d40020-13a0-414c-bb10-1a64b9379dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5b56f4-769f-447f-8ea8-acb881fdb0ad",
        "cursor": {
          "ref": "e3557f18-77de-419b-baee-4c8e2cca6bb9",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "68df25b5-6b58-4028-96f6-13beea7fcc03"
        },
        "item": {
          "id": "7e5b56f4-769f-447f-8ea8-acb881fdb0ad",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c49b7fa4-a467-4029-b7c5-b909da2a2751",
          "status": "Created",
          "code": 201,
          "responseTime": 2274,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "01917061-a6c2-49c6-9025-9d0ce420f1ba",
        "cursor": {
          "ref": "4701c949-b2b3-4284-bfd0-87fb293a432b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6d90a362-ed0b-42d4-941f-d7112590a15b"
        },
        "item": {
          "id": "01917061-a6c2-49c6-9025-9d0ce420f1ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4aadfb72-a6a4-47a3-9517-4f1e1f227b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff3be94-3d31-49dc-b8d9-b2034659da0a",
        "cursor": {
          "ref": "6f0d9a42-6871-4d5a-88d4-744cb3baddba",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8b035b3c-ee9d-4bb7-8fc8-c7cb2b6a1249"
        },
        "item": {
          "id": "bff3be94-3d31-49dc-b8d9-b2034659da0a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dba92621-3379-4426-a1fe-c8887b32cff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0429148-c316-4d5c-8c55-1b2a41dfca44",
        "cursor": {
          "ref": "043d957f-6659-4f45-b27c-d758931eac5f",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e9ebac98-0f7c-4ad5-bbe9-71e17e0a66d3"
        },
        "item": {
          "id": "b0429148-c316-4d5c-8c55-1b2a41dfca44",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "21e0e50b-db88-4e80-9923-de93b0717c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0fa2b0-ca4c-4265-9cb6-3f09b6a8813d",
        "cursor": {
          "ref": "a5d37d68-ba6c-4c88-a277-c6b99f924e5c",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "24769266-3711-4f6d-9ef7-d47707da4847"
        },
        "item": {
          "id": "2d0fa2b0-ca4c-4265-9cb6-3f09b6a8813d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "55a0ae00-63f3-4897-b5bc-e1c418720656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c143d643-32dd-48b9-822c-5f94f2088da0",
        "cursor": {
          "ref": "0820f4e3-9a28-4464-abe2-f8df4d9773f5",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "adeab8be-82fb-4cc2-8c3e-1fe9617fc794"
        },
        "item": {
          "id": "c143d643-32dd-48b9-822c-5f94f2088da0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ba7d4a1f-933d-406e-adfb-aa377a422d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8944946b-c2f4-48d9-b08e-58824d560d03",
        "cursor": {
          "ref": "797a1d16-cd6a-4526-a50e-2d7f4347fa4d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "851d91ec-d401-4ccc-976e-b1c7f6ca0342"
        },
        "item": {
          "id": "8944946b-c2f4-48d9-b08e-58824d560d03",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0e32ae47-87d4-4092-9096-289d2bdf6807",
          "status": "Created",
          "code": 201,
          "responseTime": 1998,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "9f056ab2-c4ea-4e08-891e-8b41917a45e9",
        "cursor": {
          "ref": "612f7d8a-016a-45e0-b8ff-afae6b43246d",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2c15558a-4526-4d90-9400-f20cf993a8b9"
        },
        "item": {
          "id": "9f056ab2-c4ea-4e08-891e-8b41917a45e9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2f0dfc23-55bc-47fd-a3e3-3a87b3dd35b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9af42e6-6b5d-46a0-8754-f665befed874",
        "cursor": {
          "ref": "365ccc8e-7ca6-472f-87bc-0016ab3e7552",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "73d2bde6-a126-4fe2-ac6c-faf49d0ddd48"
        },
        "item": {
          "id": "f9af42e6-6b5d-46a0-8754-f665befed874",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "62974d85-230e-49f8-bd4e-5f006220e213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a23ea5-f2b1-49ab-a684-765b9136650d",
        "cursor": {
          "ref": "12d3b6f9-03a1-45dc-81d2-620d1828312b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "51e2e68d-fb84-46b2-a936-c0497bbc4f24"
        },
        "item": {
          "id": "54a23ea5-f2b1-49ab-a684-765b9136650d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "75bf6db3-61fc-40c9-b48a-bada63dab489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559540c8-e622-421f-a676-52686a0db942",
        "cursor": {
          "ref": "d1bf5b91-cd80-4afd-ad0a-c6f950fafe67",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "187e629e-ddcd-40b4-8f44-69d8f998e6d7"
        },
        "item": {
          "id": "559540c8-e622-421f-a676-52686a0db942",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2ef0b695-3a92-4869-957b-11e7c6e89e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1117,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b857c4a0-ab91-4898-ad95-8e521101a6a8",
        "cursor": {
          "ref": "ed1ded05-7cc0-4e8d-88e7-041d5363ddff",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "184b8597-1257-4e13-b3bb-9734b23b4466"
        },
        "item": {
          "id": "b857c4a0-ab91-4898-ad95-8e521101a6a8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "24e6f404-557e-4b22-a85c-36c344230d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1078,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac013e13-1632-46d6-8d75-a2890b733b24",
        "cursor": {
          "ref": "031bf83a-c3cd-457d-b479-efadb29003ba",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7e8c4e6d-ef11-43c0-93dc-3a53bcff316a"
        },
        "item": {
          "id": "ac013e13-1632-46d6-8d75-a2890b733b24",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cc7ad3b6-2ab5-4d63-88d5-c29469a6164a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d07c01f-83a0-4410-bbae-607f5945871f",
        "cursor": {
          "ref": "20c60a8c-9c7d-42f3-9b7a-93f7a8e94799",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b0b2b09e-c545-45c6-a240-555a4934e3e0"
        },
        "item": {
          "id": "2d07c01f-83a0-4410-bbae-607f5945871f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e3da90dd-5bd2-4e38-8709-1c9b36b892a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5005558c-42a0-4c8e-a892-30bf97bc5352",
        "cursor": {
          "ref": "a044c96c-bfc7-4cd3-9563-d53b4f935422",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cabfd25d-1c9f-48ea-b1ed-174530777f7f"
        },
        "item": {
          "id": "5005558c-42a0-4c8e-a892-30bf97bc5352",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "65f05485-bf07-43b1-86b1-e5e54fd79119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903e5f66-df91-4f37-8090-6f2a90c8fe6f",
        "cursor": {
          "ref": "0a85ba63-d76b-48e0-8afd-bce06067e272",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "819f29c1-8bff-4f28-9127-0ae9757ce648"
        },
        "item": {
          "id": "903e5f66-df91-4f37-8090-6f2a90c8fe6f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7195ed8d-34bd-41a4-a0a7-0cebdbfe18d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f3eb82-a5f1-4d7e-94a8-6e5e4e984895",
        "cursor": {
          "ref": "8ec4a386-bc79-4dc1-b2d5-fff352eb4145",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1984c167-0982-4687-b338-269c91e134b8"
        },
        "item": {
          "id": "f5f3eb82-a5f1-4d7e-94a8-6e5e4e984895",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7cf7a45a-fb18-434b-a723-a6bf7dc97c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a160daaa-d8a3-41cc-830b-1dde2eea628e",
        "cursor": {
          "ref": "af82ddbb-9fe4-4e9f-8a30-2e038689d379",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8ba2f56b-a343-47f4-8514-976133632ec5"
        },
        "item": {
          "id": "a160daaa-d8a3-41cc-830b-1dde2eea628e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bd81d8a1-a5d6-4d41-9795-4b163af8c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ec13ba-a9de-4b7e-bd85-21b5983f3e7b",
        "cursor": {
          "ref": "1b34fc65-ac0b-4d12-bcb6-992f92b53414",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "654423dd-a723-4df5-919e-f5004d2c4f21"
        },
        "item": {
          "id": "53ec13ba-a9de-4b7e-bd85-21b5983f3e7b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "26fc4210-3baf-4064-9096-1f17eeeb79a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c353e95e-5cf0-42a6-85b7-30072b4e7afc",
        "cursor": {
          "ref": "a264f314-2379-4711-9dd4-fbc8e3f30ab2",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f63ea610-91ac-41b0-9fe8-18cf622cf96c"
        },
        "item": {
          "id": "c353e95e-5cf0-42a6-85b7-30072b4e7afc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "940f8b51-145f-4f10-b30f-2f2c7f5e5fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93c977b-a1f2-4ccc-a101-6002479ba9af",
        "cursor": {
          "ref": "9bb3213d-9f5e-43ce-947a-aacb31272bec",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f577b49c-4cd8-4389-9e8c-32dd5713e9d6"
        },
        "item": {
          "id": "f93c977b-a1f2-4ccc-a101-6002479ba9af",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dec3da14-d517-4960-80dc-6a1259855384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ca52be-c86a-4791-9d06-56378f0f8f01",
        "cursor": {
          "ref": "47e82839-9d3d-439b-90f2-be0454fc26a2",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a4da5467-67bb-4014-bf39-313e11d71e5f"
        },
        "item": {
          "id": "46ca52be-c86a-4791-9d06-56378f0f8f01",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "710121c7-c9e7-43ed-8916-6c16df2f302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976b3c36-c6be-49c3-a6e3-58c8a8e85556",
        "cursor": {
          "ref": "c6d88f7e-ac87-4a5f-91fa-b55397087413",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e98a0281-e555-4a04-bcb2-53bc17112352"
        },
        "item": {
          "id": "976b3c36-c6be-49c3-a6e3-58c8a8e85556",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99ab05f6-f7a8-45d9-8446-9cd8f45a5cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a31404-1fd6-44e6-ae7b-f15e99855378",
        "cursor": {
          "ref": "f3dce1d7-38b1-4c6d-a787-4d5ec5969607",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "935300ad-3d58-432d-8424-34937a6d05fc"
        },
        "item": {
          "id": "88a31404-1fd6-44e6-ae7b-f15e99855378",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d78fe3ed-45fd-4a9e-bbfa-bb1353ba2b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da381b5-2af8-4d19-b874-dea9f5127d42",
        "cursor": {
          "ref": "35f15da2-9a84-4f01-8f0e-67941cf195a2",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "656601af-a140-400b-8015-599bb9d2afaf"
        },
        "item": {
          "id": "0da381b5-2af8-4d19-b874-dea9f5127d42",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3648aaa2-3e06-401b-b3ce-0ca5115374fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7684d7f0-1cd0-4ad1-a858-11bc60b97858",
        "cursor": {
          "ref": "2b7bdae6-7c58-4c22-9658-a4e524134cf1",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "26d05c27-6341-48bb-a5c0-4d8049fcf9be"
        },
        "item": {
          "id": "7684d7f0-1cd0-4ad1-a858-11bc60b97858",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "92272eac-0480-411e-a574-527d83cd9458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd3aeef-e66a-4d57-8505-2b1b79dc4425",
        "cursor": {
          "ref": "36fde9f3-3f30-4c0b-acc1-ce755a521f3d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9fd24334-5380-425c-9dc1-03c53f0d5c30"
        },
        "item": {
          "id": "0fd3aeef-e66a-4d57-8505-2b1b79dc4425",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aac1fb34-4144-4cd5-9ab4-d63acc673c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5142babf-9677-43ad-9c30-b7857b5722d5",
        "cursor": {
          "ref": "53de1b41-7938-43a4-b862-42c4b3006160",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4f474c94-af1b-457b-a790-c03d5c5c475d"
        },
        "item": {
          "id": "5142babf-9677-43ad-9c30-b7857b5722d5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f1607dd8-05b1-4f80-a359-3db72c1178d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa813743-e5bc-44d6-8ee2-bc4a1da6cb54",
        "cursor": {
          "ref": "13509399-aa6c-44cb-9490-b77e104ae671",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d8dc9fbb-3c4d-4e6f-bee7-7d79eec91c2f"
        },
        "item": {
          "id": "fa813743-e5bc-44d6-8ee2-bc4a1da6cb54",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f7682106-8d91-46e5-8748-3608d3d4b318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f80139-e646-4401-bb0f-04109d7795db",
        "cursor": {
          "ref": "853e8280-4e6c-4c83-bbb7-9343cf78a4e1",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c2f68ea6-f5a9-461b-90eb-73900355ac3c"
        },
        "item": {
          "id": "a4f80139-e646-4401-bb0f-04109d7795db",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8a8c60d5-4286-4549-b209-ec0a6b8233f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82db8f05-83fd-4534-a3d3-bef62315814f",
        "cursor": {
          "ref": "d3771564-fe50-49e0-b965-ab4393761091",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa8777c4-c7c1-4f8d-a851-21d85f50a358"
        },
        "item": {
          "id": "82db8f05-83fd-4534-a3d3-bef62315814f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "759d063d-d21a-42fa-a42a-c3362c3100f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849def2e-ea0b-485a-8341-abdf6701ee8d",
        "cursor": {
          "ref": "2d18a08a-dbc4-437e-b4a5-d18351975cd4",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5088fd77-61e8-4109-a11b-ff0cabe4d893"
        },
        "item": {
          "id": "849def2e-ea0b-485a-8341-abdf6701ee8d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2dc10ea2-0ae5-40b6-8aa9-21bdcc65fbe7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec0e5f5-f757-4675-8d66-7be33c01c2ac",
        "cursor": {
          "ref": "71874b7f-b691-4cc1-bee5-243a3c202582",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "58979b5b-368b-4ac7-b989-4c924c0e75db"
        },
        "item": {
          "id": "0ec0e5f5-f757-4675-8d66-7be33c01c2ac",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "93111b2c-8cf9-45fc-bfd3-19c997b4f676",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 497,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d5b19c-ea54-4d0b-b9ce-3e90f3d055da",
        "cursor": {
          "ref": "13298675-9595-4944-a8c6-a1badc616b9f",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "050ffd38-e742-4237-a854-a5bd35ec0108"
        },
        "item": {
          "id": "a5d5b19c-ea54-4d0b-b9ce-3e90f3d055da",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a38bd5bf-3ace-4ee8-91b8-5163b180bf66",
          "status": "Created",
          "code": 201,
          "responseTime": 2033,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e3da7f-3f88-4988-ace3-c40147beba92",
        "cursor": {
          "ref": "71aee548-c837-4c52-97fc-1c47f1188399",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "70687e3c-7c7d-4dd6-b716-0debb68006dc"
        },
        "item": {
          "id": "95e3da7f-3f88-4988-ace3-c40147beba92",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "45d94e4e-b340-4217-aa27-0c61299236c3",
          "status": "Created",
          "code": 201,
          "responseTime": 1897,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7790e0-773c-4b2c-b565-c619bc682e1e",
        "cursor": {
          "ref": "08ab22ec-783c-40db-8c09-da7317adf43c",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7d30d33b-ba8e-463b-b931-484bfcd2c2e7"
        },
        "item": {
          "id": "8b7790e0-773c-4b2c-b565-c619bc682e1e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ebef586a-3f8e-4132-babc-8c827643c4ef",
          "status": "Created",
          "code": 201,
          "responseTime": 2069,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04bb553-0a50-45b0-9b06-214c33781139",
        "cursor": {
          "ref": "4d145695-e44d-4488-94a2-a9c8cb500bc7",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "81a296c4-d175-434b-af59-8b0a3117bb35"
        },
        "item": {
          "id": "f04bb553-0a50-45b0-9b06-214c33781139",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5e51a90b-6d29-4eff-8160-212ee30c9c5d",
          "status": "Created",
          "code": 201,
          "responseTime": 2013,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8c68bb-c590-4fad-8393-0c732502d82c",
        "cursor": {
          "ref": "ee5a78a9-4622-4912-af95-801b2afa80db",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a071f12e-f769-40f7-98ba-08d74b123e88"
        },
        "item": {
          "id": "5b8c68bb-c590-4fad-8393-0c732502d82c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f04afd7d-8a52-4ab1-8dba-d331ba2c3d31",
          "status": "Created",
          "code": 201,
          "responseTime": 1894,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a610f74d-c5eb-4c6e-a144-232ee6c00ab6",
        "cursor": {
          "ref": "2a6751f0-b484-4983-8ce5-32b9a2aa3cde",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6bff0c5c-94e2-4ce6-b1f1-d2bebfe945e8"
        },
        "item": {
          "id": "a610f74d-c5eb-4c6e-a144-232ee6c00ab6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "070730e4-0beb-44d3-a6bf-13b439dbd9e0",
          "status": "Created",
          "code": 201,
          "responseTime": 5571,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192b8e88-2a75-4167-af40-248bfb7ee87d",
        "cursor": {
          "ref": "5bb54f60-04a1-4ce2-b77b-47d980e847cb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "aca7e5d0-5209-42bc-9fcd-3398b27ff3f8"
        },
        "item": {
          "id": "192b8e88-2a75-4167-af40-248bfb7ee87d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec9a5b8c-87b2-4ecb-ace9-59a70d109222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192b8e88-2a75-4167-af40-248bfb7ee87d",
        "cursor": {
          "ref": "5bb54f60-04a1-4ce2-b77b-47d980e847cb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "aca7e5d0-5209-42bc-9fcd-3398b27ff3f8"
        },
        "item": {
          "id": "192b8e88-2a75-4167-af40-248bfb7ee87d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec9a5b8c-87b2-4ecb-ace9-59a70d109222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4e674c-267c-44b9-956d-1f73d9f40da4",
        "cursor": {
          "ref": "289fd6b4-fcd7-4db7-bdc7-21755c5f80c6",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c9c65d7c-06a6-4608-b913-3dbd6bac067b"
        },
        "item": {
          "id": "0f4e674c-267c-44b9-956d-1f73d9f40da4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d6fc13cb-901f-4f2f-af75-a798e60eaef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcbbf87-eaa1-4bcb-9f2f-6197859d110d",
        "cursor": {
          "ref": "7815b7a6-8932-4e1e-9e1f-7480592e1283",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7effb035-1fa4-4fe8-9799-2b862eb030fa"
        },
        "item": {
          "id": "3dcbbf87-eaa1-4bcb-9f2f-6197859d110d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bb732bc6-f5bb-4dc4-8264-021f12b35eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbc04e6-290f-447e-9059-7063ef13a4d9",
        "cursor": {
          "ref": "05690334-409c-4f10-bf9e-e3b9a4146a1a",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1f71e894-9eb5-497e-88da-03d2f948d7ae"
        },
        "item": {
          "id": "fdbc04e6-290f-447e-9059-7063ef13a4d9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "60e7374d-ca93-49e2-a337-cba9f4026d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7478d4a-b755-4e47-b875-e8980dafdde0",
        "cursor": {
          "ref": "a9f62388-fe02-4d80-acdb-c8d5a257580a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d3c9d011-4a52-4bbc-8dec-ec3d24ba9df0"
        },
        "item": {
          "id": "e7478d4a-b755-4e47-b875-e8980dafdde0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "414eb556-08ad-41fe-9bd2-ca8d16cfad00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e402b5-19b1-46b6-b475-8a9bd5027c54",
        "cursor": {
          "ref": "08d3a253-1edd-4595-a072-433aa0ea6801",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "84511000-3cd0-4d02-b644-83081c9b91ff"
        },
        "item": {
          "id": "02e402b5-19b1-46b6-b475-8a9bd5027c54",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fcfcabac-63df-4cb8-a666-b87cc569fde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc283ff-e7e1-4954-95a8-3968ef7ac6db",
        "cursor": {
          "ref": "790aa38a-167f-4a1e-a70f-b74262f775f5",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6f48a19a-e645-4c7f-9f4e-f439d0611683"
        },
        "item": {
          "id": "6bc283ff-e7e1-4954-95a8-3968ef7ac6db",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "352f824d-b76f-4e78-870a-966e33c01570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1924841-5e06-4b1a-af74-f551fcb51d26",
        "cursor": {
          "ref": "b4d2313a-6732-43f0-8056-0e5a63bef9d0",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dd19cfd5-f716-4182-a10a-ef21327b468f"
        },
        "item": {
          "id": "b1924841-5e06-4b1a-af74-f551fcb51d26",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f65908b-fdc1-4b8f-a172-1f5531e8922d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f2e11d-60aa-4bc6-8ac5-1d504a756bf9",
        "cursor": {
          "ref": "88f9c014-dad7-426a-9d3e-d56a32d7bff6",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f3da106f-9863-44ed-96c0-78959b2b9193"
        },
        "item": {
          "id": "06f2e11d-60aa-4bc6-8ac5-1d504a756bf9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b5a3a615-a5b8-41d8-9dac-8dd24ef13971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0a9c0b-2a2a-4411-ba01-b0d37e24dabb",
        "cursor": {
          "ref": "a3e7ac21-2a89-4deb-bc09-685e6be85f29",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "16b0c675-82cd-49a6-b9b5-b665837b14f3"
        },
        "item": {
          "id": "cd0a9c0b-2a2a-4411-ba01-b0d37e24dabb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "795523bf-ef2a-440d-830b-f720283d9f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0638a22a-fc82-4f64-93be-3d2cf4405b59",
        "cursor": {
          "ref": "5caa7711-fd58-42d3-bc90-6538d8e6a66f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "10842e1a-d311-47ca-842c-418f5be5e18f"
        },
        "item": {
          "id": "0638a22a-fc82-4f64-93be-3d2cf4405b59",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eee2d8b5-6fed-4e32-807c-fdec04be4279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2a6cd8-f61a-4e1d-8e66-4e06805cd6e5",
        "cursor": {
          "ref": "816197f5-608c-4e17-ac2a-b6fafe4b458a",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cca9faad-bcde-4e35-8e9e-ba624ea144bd"
        },
        "item": {
          "id": "8b2a6cd8-f61a-4e1d-8e66-4e06805cd6e5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "41849802-527d-445b-9b23-f18adb4b76a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c454f2e4-7ffd-4ef1-966e-7470b71e1a59",
        "cursor": {
          "ref": "30ff0820-a96a-4066-ac5b-92d7f50a4717",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ca9e8108-3029-43cf-a3ec-436c3bd57dc5"
        },
        "item": {
          "id": "c454f2e4-7ffd-4ef1-966e-7470b71e1a59",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a25ebdfc-483d-4148-a438-c0f5e0c72ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e601fbcf-83f0-45dc-8de4-a83ca8b53c45",
        "cursor": {
          "ref": "4d66d91b-592e-417b-b618-d819bd2c7459",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c9ebfd60-9577-4371-a505-0ba4e6b18f9a"
        },
        "item": {
          "id": "e601fbcf-83f0-45dc-8de4-a83ca8b53c45",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "771bbbac-baab-4dfd-9c65-cace171b48e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed71f6d-3cfa-4cd7-8cf4-f14622c32015",
        "cursor": {
          "ref": "2259799e-65ef-4ce5-af27-1fdf626c9d73",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3bd37b33-9de8-4b32-8e9c-089ccf476bbc"
        },
        "item": {
          "id": "6ed71f6d-3cfa-4cd7-8cf4-f14622c32015",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9018de42-c90e-4c30-beda-0dde810e1abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baeb20d-ca06-4ee8-a955-cdcbed699e81",
        "cursor": {
          "ref": "77802877-e568-4530-aed4-62ca243c9809",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "68d63cff-fa3b-4f3e-8e8e-cc70a4063f7d"
        },
        "item": {
          "id": "9baeb20d-ca06-4ee8-a955-cdcbed699e81",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "de8ea57a-888d-4701-bbc4-df9dd83c4d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5454116-152a-4b39-95f5-abbd36d1418f",
        "cursor": {
          "ref": "ae7b045b-67b4-41db-b32f-67488675fc72",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6fac39f6-b7e7-4ce6-903b-94f76cf26b74"
        },
        "item": {
          "id": "d5454116-152a-4b39-95f5-abbd36d1418f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c32ab23a-4783-4c6a-b455-a21e0afcf266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf19424-b816-4862-b528-56d234eb0db1",
        "cursor": {
          "ref": "42a9e3ea-b178-48a0-a4bc-5f0426ec64d4",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2eb2143f-db11-4d1e-a21f-ef498ced96b6"
        },
        "item": {
          "id": "4cf19424-b816-4862-b528-56d234eb0db1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bbbe7db3-2fe6-45b3-ab83-258277da9bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6c5d12-7656-41b2-b234-6185b263afa4",
        "cursor": {
          "ref": "f2ae8ac0-50fe-4e4e-ab94-f24f37cf1faa",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "524e5f0f-1ad9-48b4-8c8c-9db2734b8a43"
        },
        "item": {
          "id": "af6c5d12-7656-41b2-b234-6185b263afa4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a6df8408-0ba6-4d60-82e0-b232eaa907ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549c68b0-df42-40f2-be38-897a6f78eb23",
        "cursor": {
          "ref": "d3a4c6d6-4d49-413a-a89d-0b9cca606b60",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e9ac0c33-8423-4039-b315-f8bb1ef171a9"
        },
        "item": {
          "id": "549c68b0-df42-40f2-be38-897a6f78eb23",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "32913217-5e64-4f90-befd-b68b7320ba4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2abbe78-35b8-49f5-afb5-aa95ba0a9517",
        "cursor": {
          "ref": "2c4f8bf6-ca9c-40ac-87d7-67bf21f8084f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7cf89b73-842d-4f1d-8a65-ad36adcdf746"
        },
        "item": {
          "id": "e2abbe78-35b8-49f5-afb5-aa95ba0a9517",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5a570c30-b178-4bea-a063-f97c2c63741a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1614814-13cb-4ff6-9806-45d9201b4c58",
        "cursor": {
          "ref": "1c29cdbd-648f-4d33-83c9-d3f53ca06467",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "aab17164-8c39-4106-bc65-c4f3f31d8de7"
        },
        "item": {
          "id": "f1614814-13cb-4ff6-9806-45d9201b4c58",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0929a39b-1730-4d02-b453-8d3cb9fc470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51607373-af46-43c7-9194-3963b40f389c",
        "cursor": {
          "ref": "8ecc7564-841a-42b3-b41d-4c66a995787e",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "999add96-03a0-4c50-aa92-3d61a77aa503"
        },
        "item": {
          "id": "51607373-af46-43c7-9194-3963b40f389c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "945163c9-fc83-4add-83a3-f18cc194d3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d3f6ec-1b27-4491-9ce8-0dcaff7ad5ff",
        "cursor": {
          "ref": "341e88a1-0f86-4821-9927-345c14f0e88b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0e247c49-9be4-4654-b0b6-11e3d1754d81"
        },
        "item": {
          "id": "29d3f6ec-1b27-4491-9ce8-0dcaff7ad5ff",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fc2f5dde-c88c-4b0d-a7c5-523141bb6109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764d78da-5a74-43e9-9810-209c9fb54424",
        "cursor": {
          "ref": "c3480600-f769-4b2e-98b3-6cd14800401e",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2ac3d5d8-4775-487f-a4da-b4e48f79fb9e"
        },
        "item": {
          "id": "764d78da-5a74-43e9-9810-209c9fb54424",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "412e1a05-1016-4c90-9e27-aa2793d0f987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35e7bcc-a29a-46b5-a7cc-1ff22dce78db",
        "cursor": {
          "ref": "9b712081-d408-43e3-bad7-6781e3691880",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3fd3eebf-008e-4924-a9ff-75e91c21d80a"
        },
        "item": {
          "id": "f35e7bcc-a29a-46b5-a7cc-1ff22dce78db",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "07e17592-9d75-412d-b424-676c6bc93669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446c4cb7-95eb-4d3c-a543-49af34cdc85d",
        "cursor": {
          "ref": "e66de969-ccce-4cc6-9b2d-3ee61e53fc0a",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6d24bab7-8c5e-48af-8c33-a9de4224b4e6"
        },
        "item": {
          "id": "446c4cb7-95eb-4d3c-a543-49af34cdc85d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f263f068-f0b1-44ab-be8e-994511a2c3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8117f8-102f-47cb-b53a-7f644b9fbb51",
        "cursor": {
          "ref": "95b183c4-6c30-411b-b67f-9439f968184c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "be3c2270-19d4-421f-b08f-74f4579d5fc3"
        },
        "item": {
          "id": "4c8117f8-102f-47cb-b53a-7f644b9fbb51",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "42a5f5fa-a012-4537-8759-deb843e63dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51877f66-50c3-4ae9-a1c4-5c8ef3181240",
        "cursor": {
          "ref": "e165186f-e68d-4906-8fc6-08b763857a97",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5afae042-4378-41e6-aec9-433645b6ea59"
        },
        "item": {
          "id": "51877f66-50c3-4ae9-a1c4-5c8ef3181240",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "78a6208c-adf2-4f4d-8149-f5cd9efb5525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db43a7c9-5e39-4b74-ad5b-f294f996d04b",
        "cursor": {
          "ref": "d2de8d88-c83b-48c2-a6cf-75ea4477de3f",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4458eb95-e423-4ff9-8465-49ed5a9a3208"
        },
        "item": {
          "id": "db43a7c9-5e39-4b74-ad5b-f294f996d04b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "91530592-f66b-4521-9990-86419ffc8fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d9fe4f-83db-4307-857b-40e363300214",
        "cursor": {
          "ref": "615b33fd-c725-4f19-a455-987deee27f09",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ff3394c0-0a18-4c59-9f7a-cab420a419bd"
        },
        "item": {
          "id": "c9d9fe4f-83db-4307-857b-40e363300214",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "28a3c79c-aa5c-47f3-857d-1a117139c776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255e287b-f40b-4564-8039-f42c7e19d9d2",
        "cursor": {
          "ref": "9bbeea5c-3880-468e-98ec-76760007525f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bda3c9fd-c464-4fde-9b4a-5472445dd076"
        },
        "item": {
          "id": "255e287b-f40b-4564-8039-f42c7e19d9d2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "47240266-1a2b-43fc-acf3-a96b4471c02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacc9847-be9f-49c9-a355-5a05a68e705b",
        "cursor": {
          "ref": "0b5e2044-2fdb-4014-b9df-5ac4e454eae6",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4d8ae3f6-dfb5-4e74-8e5d-1008ff15c924"
        },
        "item": {
          "id": "eacc9847-be9f-49c9-a355-5a05a68e705b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9a023724-b7b3-4865-b5b2-2db5f936dd4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf4b0cd-e7fe-4ac4-b5e4-f4e78c566cc0",
        "cursor": {
          "ref": "c85b3ee7-27dd-422c-b50e-1b85bb5147c3",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d38d0520-3007-4862-b080-b8a7b751e5f0"
        },
        "item": {
          "id": "cdf4b0cd-e7fe-4ac4-b5e4-f4e78c566cc0",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0ff5388f-c685-4ff5-9b7b-d1638ff6d430",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a9bf1b-0b5a-435c-8c58-8923bd3b73b4",
        "cursor": {
          "ref": "50f34754-165e-4f3d-9ef4-ac5e38d827af",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5cf50f47-2634-4142-a6ba-b36858151944"
        },
        "item": {
          "id": "f9a9bf1b-0b5a-435c-8c58-8923bd3b73b4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6f041615-54e6-439a-87a5-b7bf01405a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a9bf1b-0b5a-435c-8c58-8923bd3b73b4",
        "cursor": {
          "ref": "50f34754-165e-4f3d-9ef4-ac5e38d827af",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5cf50f47-2634-4142-a6ba-b36858151944"
        },
        "item": {
          "id": "f9a9bf1b-0b5a-435c-8c58-8923bd3b73b4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6f041615-54e6-439a-87a5-b7bf01405a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cc8e2a-9b24-470e-8b5b-624c0559fa60",
        "cursor": {
          "ref": "367b0e94-8200-43c1-977f-7b2c1b01e594",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b2108335-838c-4b34-bdb7-1fa37e80b180"
        },
        "item": {
          "id": "46cc8e2a-9b24-470e-8b5b-624c0559fa60",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c16f21df-0d86-415d-8fc0-cf322bdc0f85",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 251,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c1f8d2ec-6423-4a30-834b-28a622fb317d",
        "cursor": {
          "ref": "cacaded9-4587-473f-8689-58014aab8f61",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7bb819ef-312b-4664-92d7-a752d4762449"
        },
        "item": {
          "id": "c1f8d2ec-6423-4a30-834b-28a622fb317d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3139d28c-6227-4e44-bd66-4a78db22d759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb9c5d6-aa78-4df2-ac8a-124b9c2e0f76",
        "cursor": {
          "ref": "aa3d1281-e5cf-4b56-a03c-c429bb6db3ed",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f93a546d-a0ed-4e14-83da-0c4df28fa840"
        },
        "item": {
          "id": "fcb9c5d6-aa78-4df2-ac8a-124b9c2e0f76",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "886db37e-ccc1-41b6-87b7-20ef91cb13f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7630b74b-1625-413d-b06e-6cb083c2ef28",
        "cursor": {
          "ref": "f83ea110-2eae-48db-9c68-bd123cd52933",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2d75b972-5a6f-46d3-8004-2eda574be22e"
        },
        "item": {
          "id": "7630b74b-1625-413d-b06e-6cb083c2ef28",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "331ca79e-aacf-4992-b3af-a09d79a04d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23023e2f-0a58-40a6-ad3d-26799c6141a2",
        "cursor": {
          "ref": "e2ea9510-02e6-45f7-a929-c175efaed235",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "466d3289-31bf-4981-8a35-ac86c0d3510e"
        },
        "item": {
          "id": "23023e2f-0a58-40a6-ad3d-26799c6141a2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cbaff320-7b39-4b42-975b-8c063dc6f86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4e8bbc-478f-4f06-9fcd-c05d7863aa6b",
        "cursor": {
          "ref": "58f783d6-fa75-4185-bbcb-58da49f95057",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c4d3f1c3-9082-4173-b3af-8258d2f9d429"
        },
        "item": {
          "id": "1b4e8bbc-478f-4f06-9fcd-c05d7863aa6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4c83cab0-11f8-4dfc-b045-65c8d0f6d0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf5b1ec-87f6-4fb2-8c55-c49a7713944f",
        "cursor": {
          "ref": "1894c44e-5372-4bd8-af15-ef7552871e0d",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dff3619a-e112-4824-8ae0-8293b114dbaf"
        },
        "item": {
          "id": "fbf5b1ec-87f6-4fb2-8c55-c49a7713944f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a348bcc0-4217-476e-9d38-ed3d0504d059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8101115-c7b3-4519-bd40-7a36a5be1223",
        "cursor": {
          "ref": "71496778-2573-4fc4-a432-6fd7ba276c85",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a0a58ff8-f0f6-4b5c-a594-bf30a7e063e0"
        },
        "item": {
          "id": "a8101115-c7b3-4519-bd40-7a36a5be1223",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "742ca5d2-063d-41c9-a688-b5ec8f1cfb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fbc1dc-0162-4186-b5a6-180ea62f0b78",
        "cursor": {
          "ref": "4869e239-fd89-49c5-8272-27d717543de2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "62cf6c24-7688-447b-9381-6680fec12c6a"
        },
        "item": {
          "id": "83fbc1dc-0162-4186-b5a6-180ea62f0b78",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "19b04f22-2f99-4492-bba0-f8194e2d7126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c68d13-e59d-43ca-b982-d560c2f2f504",
        "cursor": {
          "ref": "e69fd616-f566-4388-9a16-433025b8759c",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a43c9ebe-da8d-4ba0-9e30-26633993c48a"
        },
        "item": {
          "id": "58c68d13-e59d-43ca-b982-d560c2f2f504",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e5f9eabf-c907-44a4-986e-ea2956afb0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f6245e-c6a4-4520-a148-415ba52182ce",
        "cursor": {
          "ref": "cee51b7c-4a95-4062-ac09-ad29f2d38ecd",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5f7b8536-b5e0-45cf-a565-65249070efa2"
        },
        "item": {
          "id": "e5f6245e-c6a4-4520-a148-415ba52182ce",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ab28915d-cabe-44b6-82f2-0f8cb25a1530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37a1d7-c0f7-4e4b-b1eb-0bd24538cf43",
        "cursor": {
          "ref": "3f8acd84-b59b-48c5-a782-9f662ae4fcb5",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3a8f4325-7cfd-4eec-9312-f2ee5d16a010"
        },
        "item": {
          "id": "fe37a1d7-c0f7-4e4b-b1eb-0bd24538cf43",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "48a89368-a25f-4cc4-9205-9092562dcfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e81af5d-0492-41ee-bd2c-a0e3e29da59d",
        "cursor": {
          "ref": "ec464e9d-43a8-4103-a43c-0e2a87ff00c1",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5a6db49c-7481-4311-9d99-e1b6bf3af538"
        },
        "item": {
          "id": "3e81af5d-0492-41ee-bd2c-a0e3e29da59d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "24138f78-9ede-49ff-bbf9-a8b72a283a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06956047-bb3b-4733-bb99-b40ba4476cdd",
        "cursor": {
          "ref": "466de630-a704-4b3e-bad9-71d2f3c5221d",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "764f0598-bed0-4a09-96bd-786a0627d81c"
        },
        "item": {
          "id": "06956047-bb3b-4733-bb99-b40ba4476cdd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1329a42d-44ac-4cfe-b843-2761c82e6037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0391e3a8-6402-4a42-86ba-ad1a3f007fe8",
        "cursor": {
          "ref": "5ad3287c-8597-4436-835a-4e39092f7713",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "14a88363-c394-47c1-b60d-7fe33a689afc"
        },
        "item": {
          "id": "0391e3a8-6402-4a42-86ba-ad1a3f007fe8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "18013609-816e-4e11-828e-f2ba03081f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d7f4fd-f590-4684-9b15-dabae9360b86",
        "cursor": {
          "ref": "abbc7095-8b20-4f43-aca2-ad2115bb01be",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c9486466-c89c-4b5b-bc29-335fbdc29ee1"
        },
        "item": {
          "id": "51d7f4fd-f590-4684-9b15-dabae9360b86",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5f5ab499-80f4-4275-8b0c-7b86e33119fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf5ed72-7c62-4637-bde5-e206c8da9234",
        "cursor": {
          "ref": "6ab9d6f3-daa9-4b10-9d74-6404447fb0de",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e81144b6-793d-41a0-96d8-bc23cd9f56c6"
        },
        "item": {
          "id": "ccf5ed72-7c62-4637-bde5-e206c8da9234",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d6846a2b-3160-4b18-8c6c-27624b80f5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7245f7ea-a823-42f2-88cf-9b454233acfd",
        "cursor": {
          "ref": "81f1608d-c82a-4cbc-b625-0b4ab0a430c1",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "54709a7f-2346-40a0-9f2d-5b2ecc8465df"
        },
        "item": {
          "id": "7245f7ea-a823-42f2-88cf-9b454233acfd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bcf713d0-2f3e-4daa-877a-1d8f42ef0003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669896d3-0134-4e85-8fb3-c427f29d94fd",
        "cursor": {
          "ref": "e3895fe8-66cb-456d-ae50-db5dfccaa480",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "84b87057-2e4a-40f8-addd-f58e51c9bb10"
        },
        "item": {
          "id": "669896d3-0134-4e85-8fb3-c427f29d94fd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "df0ed099-f86f-42af-80a1-5befa848b725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e9612b-186c-43e1-a23a-f16be6ec5275",
        "cursor": {
          "ref": "fc3b03d0-f7ee-40c7-a414-a7bbdccc3b3d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f5515608-d714-4d91-9768-cab5e7be89c2"
        },
        "item": {
          "id": "30e9612b-186c-43e1-a23a-f16be6ec5275",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f1584b2e-2b29-4757-80d8-01e4945de5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4839c2-aabc-400d-bf14-07b8ac02dfe0",
        "cursor": {
          "ref": "6a29697b-9562-45b7-a59a-429dd83debea",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a21f347e-6537-44a4-80fc-eeb58b208260"
        },
        "item": {
          "id": "6c4839c2-aabc-400d-bf14-07b8ac02dfe0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4499f00d-b1b6-4990-a531-80b2374fcf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f180fe5-bae1-4bd3-aa57-e909ee619bc5",
        "cursor": {
          "ref": "3b78fdd8-b808-4656-b02f-134713f780c2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7ceb65cd-df00-4111-bf5f-865eddd61908"
        },
        "item": {
          "id": "3f180fe5-bae1-4bd3-aa57-e909ee619bc5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ba365748-498c-459c-9c59-45194fb695e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9b2026-b308-43f6-889b-9ac753f7ff6d",
        "cursor": {
          "ref": "124ba70a-e49c-42c1-93ea-5fb784cd5b5c",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "55cd8c24-228f-4887-81b6-a90604170288"
        },
        "item": {
          "id": "dd9b2026-b308-43f6-889b-9ac753f7ff6d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "95fb0d8f-af6f-4b8a-b77b-0368778ecc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b0406f-c78b-4c5d-bed3-87802b7edd0f",
        "cursor": {
          "ref": "14d61ed6-dcfb-4714-a3e3-5c7e05780f0b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2744026a-643e-490e-aeeb-71e9a6cab77a"
        },
        "item": {
          "id": "e2b0406f-c78b-4c5d-bed3-87802b7edd0f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "21afc973-be60-4679-a0c8-d2f191344cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34169bc-45ae-4e4c-8b5f-e1fcf1cae28d",
        "cursor": {
          "ref": "c07f59cc-cd1c-4a92-baa9-d6228cff6d28",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1ae7529e-1a84-484a-9329-e2c1d30a6ef5"
        },
        "item": {
          "id": "e34169bc-45ae-4e4c-8b5f-e1fcf1cae28d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d9cd4046-de95-4be0-ae0e-d5da3f7f239c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b647bf28-4105-4637-b89d-8cf18df711bc",
        "cursor": {
          "ref": "582e1e55-63df-4603-8a33-9c47e2b2697d",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f68db860-3792-4558-8c63-caabc7b15f0e"
        },
        "item": {
          "id": "b647bf28-4105-4637-b89d-8cf18df711bc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cd5c64cc-3e68-4039-a17f-c4b9d01ef85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71e1ed2-e57e-4163-80d2-05955e90e016",
        "cursor": {
          "ref": "2e060f11-5c9b-4e84-8976-4a0cc3cf9ff3",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6ba2f470-dedd-4ca4-a0ec-fef9a1b7608e"
        },
        "item": {
          "id": "f71e1ed2-e57e-4163-80d2-05955e90e016",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9d9a0ff7-77b3-435f-b42b-324ffd1aae55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bbad67-d977-4363-b99d-f1b5cbfe8bcc",
        "cursor": {
          "ref": "16e1ef70-a2f5-4f35-8797-b0178cf0e390",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "95dbd009-7df5-4743-9256-dde5f44aa951"
        },
        "item": {
          "id": "a9bbad67-d977-4363-b99d-f1b5cbfe8bcc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b7e7d727-d70d-4452-9dd9-879c9e279636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52966055-5d7f-43ff-b465-f46b8324658c",
        "cursor": {
          "ref": "b996f2d7-dc9e-4075-9cbd-1a8e5dab0430",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4aadb990-1d54-48d0-8cc3-9c1f479c0a0e"
        },
        "item": {
          "id": "52966055-5d7f-43ff-b465-f46b8324658c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0c9033e3-c146-4dae-955a-377ee0423508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5151a3-423d-418f-bf58-be9e053bd4c6",
        "cursor": {
          "ref": "2ecc1328-0e13-4861-803a-07143491cf04",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b5ab0062-8948-4d7a-abd5-f6b9caff33bb"
        },
        "item": {
          "id": "3c5151a3-423d-418f-bf58-be9e053bd4c6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a72a15db-f9a7-4ada-a043-83770ca9a247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a97912-5001-4d5c-a0c9-aa0c2e6cd229",
        "cursor": {
          "ref": "c7c82f73-8e8a-48a0-939a-5a4e1e9597ae",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e839f7c0-5c8f-439c-a011-06ab518e8681"
        },
        "item": {
          "id": "82a97912-5001-4d5c-a0c9-aa0c2e6cd229",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7af3f36f-7bdd-4a41-8829-5789d44c68ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255a8cda-1abf-4195-b5e8-763078825808",
        "cursor": {
          "ref": "b18a454a-4944-48cb-9d17-c8b3f290fc9a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "37db6025-34eb-44bd-9c1a-d4c9d8e668e7"
        },
        "item": {
          "id": "255a8cda-1abf-4195-b5e8-763078825808",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "42d74d25-561d-489b-bfde-3c4fbb805104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f64cb7f-3311-4f50-8fa4-63ed1f3a4d1c",
        "cursor": {
          "ref": "dcbbb5b9-5fed-409b-8f6a-9a728b69103b",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a03a7abe-5111-4d4d-a248-70c84e7b1e63"
        },
        "item": {
          "id": "1f64cb7f-3311-4f50-8fa4-63ed1f3a4d1c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "972f2b86-4ecc-4d01-b00a-0cfec00f4c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c79f2d-3eb7-4e98-bed2-2fbcee45ad64",
        "cursor": {
          "ref": "3e0bd66c-1140-4498-ac59-8d1414761e93",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f095abe9-a71b-4ee8-a57b-0a96cf567674"
        },
        "item": {
          "id": "c3c79f2d-3eb7-4e98-bed2-2fbcee45ad64",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "706ff274-b5e6-44ff-8c25-7859f003d461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919cc685-c446-4020-a732-a702c592f90f",
        "cursor": {
          "ref": "d959ec41-7723-4e3a-b7f2-e64c1e41f082",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d043a82e-0843-476c-9115-2281aad24ecc"
        },
        "item": {
          "id": "919cc685-c446-4020-a732-a702c592f90f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "91a776dc-c71f-486e-99b5-fdc42dec9d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05063967-c123-4e6f-8b55-2f748dc3b31f",
        "cursor": {
          "ref": "38262b9d-dd2b-4cb0-8995-2a7b3ce68afd",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "17e9e3d9-c390-4d2a-b28b-fe7e8e72cf94"
        },
        "item": {
          "id": "05063967-c123-4e6f-8b55-2f748dc3b31f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "de1ec702-5bbe-418b-989d-6f7422e867b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d9c0dd-4dd8-4df4-8fe6-d9678958e122",
        "cursor": {
          "ref": "007f4342-5399-43e8-a888-219e14d7794d",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f7a3a521-30fa-45e1-8bdb-bb68295df944"
        },
        "item": {
          "id": "c0d9c0dd-4dd8-4df4-8fe6-d9678958e122",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9aa73759-9c92-4b25-9716-0e3f506c3cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0425f1e2-70fb-4d2f-9c29-3c0ba32f9ca6",
        "cursor": {
          "ref": "5c566001-396c-4955-b3ec-8bfc20a75dd0",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "795887b6-58a2-43fe-b12a-dcef79e008bf"
        },
        "item": {
          "id": "0425f1e2-70fb-4d2f-9c29-3c0ba32f9ca6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4c2f9058-9f59-4a39-9f69-33af038d85a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546216ef-9637-4cad-a823-d72b7c419f3e",
        "cursor": {
          "ref": "840a25fc-c50f-439a-8dbb-8a3cf76d1a2d",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "824e2fea-f53e-4344-8a87-1a9dd166310d"
        },
        "item": {
          "id": "546216ef-9637-4cad-a823-d72b7c419f3e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a3e7de02-e49a-464c-8890-4e709bfc4983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e791aef9-d90e-41c5-abf0-66d16551c745",
        "cursor": {
          "ref": "b658d9ec-9652-4be5-b1f8-a3840e69002c",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1fc09f8d-0ddc-4337-a059-dffb5d155af4"
        },
        "item": {
          "id": "e791aef9-d90e-41c5-abf0-66d16551c745",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3cfc9cb7-225c-4ad8-91f6-dab38a995c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9732fd9b-ca91-4598-bbb8-35fba55d9dae",
        "cursor": {
          "ref": "3ed605ea-01d4-4449-8f52-2f786e40dfcd",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cb648ca8-3db8-4246-a638-ad48921fe65b"
        },
        "item": {
          "id": "9732fd9b-ca91-4598-bbb8-35fba55d9dae",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9015d550-05a1-457e-8cda-334bbcae4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81a31e5-b2c1-4db5-9791-491b1ed63833",
        "cursor": {
          "ref": "c080ef34-a754-4e88-90b3-00c587ae4444",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c8bf8da7-82fe-414f-bb15-e69b032a5811"
        },
        "item": {
          "id": "e81a31e5-b2c1-4db5-9791-491b1ed63833",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f7339789-7e13-4163-84f6-b8b49e1aebbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce82efbd-be57-4ece-abb7-8300ab29fa75",
        "cursor": {
          "ref": "feef70e1-673e-4ce9-b782-1e4ddf4278c7",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "46bc3c58-e0c2-41f6-aaf5-3ac26f615487"
        },
        "item": {
          "id": "ce82efbd-be57-4ece-abb7-8300ab29fa75",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "33c2f8bf-7345-4f75-bb3a-72bfab798cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a33c25c-edd7-4234-96c6-72357e7cb93f",
        "cursor": {
          "ref": "718a9c55-cafd-4f45-b287-8163a108d291",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e34c6cbb-d84c-4536-adc1-34244a57fd41"
        },
        "item": {
          "id": "5a33c25c-edd7-4234-96c6-72357e7cb93f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "87964eea-8d2a-49d4-bb59-22bca3bf138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ca5a98-7079-4557-9f3a-e235091eca86",
        "cursor": {
          "ref": "0f2afcae-ba85-4f35-ae39-4319dcb504c2",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6ba005a7-7bbe-4d60-a9f1-f0514876f80a"
        },
        "item": {
          "id": "30ca5a98-7079-4557-9f3a-e235091eca86",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "16c741ab-6a2b-465c-a17e-f1d4cd84754f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc5b43d-e300-44ec-8dfb-1a2e6aa666b4",
        "cursor": {
          "ref": "e5688753-52d7-4771-a4d6-9615bae3e83a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f1d58d09-0df7-4373-991d-9309f933251e"
        },
        "item": {
          "id": "0bc5b43d-e300-44ec-8dfb-1a2e6aa666b4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f322a574-bbd3-4a82-ac27-46e79c883baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096506fc-b5eb-44d9-869a-7294a2bc949e",
        "cursor": {
          "ref": "ada2416e-fbfe-4629-aa76-d6d669343e41",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4792947f-8c0a-495e-a7e1-c0527a72d1c1"
        },
        "item": {
          "id": "096506fc-b5eb-44d9-869a-7294a2bc949e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5e836c4d-6ebf-451f-bde8-279b0149450e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc89e22e-5b5b-4fdc-8f21-4334acbb3a50",
        "cursor": {
          "ref": "16984b41-6b40-431b-911a-22e2b925142d",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7633199c-8cbc-4d60-80cc-0d3791dad14c"
        },
        "item": {
          "id": "cc89e22e-5b5b-4fdc-8f21-4334acbb3a50",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ad160901-8114-4d77-99d9-f24a5cc85c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917378a5-c026-4ef3-8f3f-953de794e634",
        "cursor": {
          "ref": "c167df6b-540c-4a70-bdaf-12caeca23acc",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a81bc77b-445d-4d6d-875b-b6aea178dfeb"
        },
        "item": {
          "id": "917378a5-c026-4ef3-8f3f-953de794e634",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "479ca164-ad58-4d46-8248-c57a48ca53f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc5269f-43d9-42c5-9b99-7f0d26dcef5a",
        "cursor": {
          "ref": "78213c3c-f5d4-477b-ac19-544927656e10",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7fbc277e-6db2-4435-9191-25914312cc3d"
        },
        "item": {
          "id": "5fc5269f-43d9-42c5-9b99-7f0d26dcef5a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bdb5dc26-d26e-455d-b4f3-6c11b975b66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b5c0d9-b2dc-4123-8e4a-f594c8b05082",
        "cursor": {
          "ref": "350670d5-982f-4774-b628-ec5cb2af0273",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0cd5a679-fd30-4677-b0b4-3bd44fcf453a"
        },
        "item": {
          "id": "e0b5c0d9-b2dc-4123-8e4a-f594c8b05082",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9cb318f4-2d08-47ab-990b-98f4238e133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6973888d-1036-48a1-a383-c6f1087bb452",
        "cursor": {
          "ref": "f15ab51b-f448-4ea9-a844-970d892a2d0e",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "51107f4d-9612-46a6-9481-2be639c66350"
        },
        "item": {
          "id": "6973888d-1036-48a1-a383-c6f1087bb452",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cdd3b054-6612-4009-8340-2c3dafcbd6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f09ee0-58da-49b4-b37c-8985c41b77a9",
        "cursor": {
          "ref": "40ee33f7-be5d-4462-9030-326dfe16face",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "48ece68b-ea50-4022-86f0-7db456cf1a0b"
        },
        "item": {
          "id": "c4f09ee0-58da-49b4-b37c-8985c41b77a9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6418680e-61a3-41e1-ae8b-60060125ba02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bdf62e-70d3-4ccc-ad18-145d24082cc3",
        "cursor": {
          "ref": "9e5e5777-2325-464e-99a3-55e82915cadf",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7ea025de-9d63-4dc0-9d4d-0e26023e0abc"
        },
        "item": {
          "id": "87bdf62e-70d3-4ccc-ad18-145d24082cc3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "910e4520-868a-4434-8b23-0e662b185751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa3c0f6-c061-4edb-bbc0-b9bf41b4d58f",
        "cursor": {
          "ref": "94cd483f-d62a-4582-bb7c-3cabf955a413",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "940eca01-25b8-47af-a916-80bdc37b029e"
        },
        "item": {
          "id": "3fa3c0f6-c061-4edb-bbc0-b9bf41b4d58f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9b3f8cca-9f32-4366-ab7a-2e243cf945ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e830ea46-1ce1-47e2-965f-b1a93235d120",
        "cursor": {
          "ref": "8beb406e-7837-4947-9a16-7909df49169d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8a1417b5-2cf3-49ec-9f51-1a098e09eff5"
        },
        "item": {
          "id": "e830ea46-1ce1-47e2-965f-b1a93235d120",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aa93d660-3c55-4832-8aa8-86191f45301c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1252da2d-5529-43bd-95e3-40e219e2ada8",
        "cursor": {
          "ref": "9a6008df-a64f-4fc4-95a5-f37ca2f757bb",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "efd4340c-8b30-49d3-a7a9-c75e9b9230b6"
        },
        "item": {
          "id": "1252da2d-5529-43bd-95e3-40e219e2ada8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b92500d4-917e-4a9d-ae19-06679f26520c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7c7bc4-4be9-4006-9b61-32d7307da4c9",
        "cursor": {
          "ref": "5f26dd9c-217f-457d-b0cc-db51de448c0b",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3abd7fe4-dd9c-40b8-924e-2db464dc4f96"
        },
        "item": {
          "id": "8c7c7bc4-4be9-4006-9b61-32d7307da4c9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3dccb8b0-3a71-415a-bc66-121c90bed1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987b708e-707b-4eb5-9926-4b77b037dfd0",
        "cursor": {
          "ref": "55b71340-6dec-4144-88a8-489779220589",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c7e8bb17-d157-4bd7-96ee-c4cde2f5bba7"
        },
        "item": {
          "id": "987b708e-707b-4eb5-9926-4b77b037dfd0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "842c40fb-4a44-4f15-98cd-768eecfa6a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79ccba1-df63-43b8-b023-cfbb44150d0b",
        "cursor": {
          "ref": "09341991-0527-44d6-bd0a-c120de8adde1",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6e1c62d4-67b2-4ca8-a8cb-8c59fa101d2c"
        },
        "item": {
          "id": "b79ccba1-df63-43b8-b023-cfbb44150d0b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "19170888-8f34-41e3-8688-59717fcb8940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5799e1c-ae77-4127-b4c1-fea257758022",
        "cursor": {
          "ref": "bebd2b83-0cc6-413e-be8b-c5b2cbeeaec1",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "acc250d1-000f-4423-a242-26c52d429c4e"
        },
        "item": {
          "id": "e5799e1c-ae77-4127-b4c1-fea257758022",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1de772f0-5bac-4d60-a21c-338eba420bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c345e3-292a-4971-9c2f-83ca131a4eed",
        "cursor": {
          "ref": "e08eef11-0ce5-491f-8c7b-3c2cddf4ef7a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "677ca576-0996-44bb-b9e9-5bbbd5ea9ff0"
        },
        "item": {
          "id": "26c345e3-292a-4971-9c2f-83ca131a4eed",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6e7d42b0-4c2d-4ce3-a370-3ff2fdecd17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14f7071-284c-45cb-a542-3c9aeef3e16c",
        "cursor": {
          "ref": "06acbc85-832e-47e2-844c-b72f84fd83aa",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "77112f5a-5814-4ee2-b890-bb33789612f9"
        },
        "item": {
          "id": "d14f7071-284c-45cb-a542-3c9aeef3e16c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7fe9a264-7e61-4033-9d1a-77f6e6ab9aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d560133-f78c-46b5-8d98-b43a34a1cc94",
        "cursor": {
          "ref": "6768b425-3891-4818-8ee0-91e488e649db",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d5d6b543-bedd-4704-ad43-ed827696a537"
        },
        "item": {
          "id": "9d560133-f78c-46b5-8d98-b43a34a1cc94",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "168bde7d-3ea1-460d-bdd4-2df3a1c3d7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16add03e-37d9-4d95-91b3-ac5a1ce9e1d0",
        "cursor": {
          "ref": "f5780acc-64f2-4228-8e62-75904997f6e9",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "955dd056-fa0d-41a3-ac4e-0cd2782889f3"
        },
        "item": {
          "id": "16add03e-37d9-4d95-91b3-ac5a1ce9e1d0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a5a3b0a5-7458-4c18-8757-35b0f01a05dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21610ff-4569-40c6-9164-be46a2aa8625",
        "cursor": {
          "ref": "c79a4cff-9f76-4c59-8130-90258b056c09",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "faf18909-8202-4c2e-b656-cf0143412188"
        },
        "item": {
          "id": "c21610ff-4569-40c6-9164-be46a2aa8625",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "791fa5c8-af4b-458a-8648-5e875c73e478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a93544-3419-4dda-9108-edfc352ccf88",
        "cursor": {
          "ref": "71391634-7aa6-49e3-8ff9-91e9d9945e3f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0bcb004a-3c54-426c-8fde-e269f0e4fda6"
        },
        "item": {
          "id": "29a93544-3419-4dda-9108-edfc352ccf88",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "be0df323-6932-4cdb-937f-67248f6b286a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b964be66-78a9-4988-ba3a-5b650da185f3",
        "cursor": {
          "ref": "72f7d8f5-5c14-416b-ad5b-3111dbb2c10e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "395c737a-6cb5-4417-95a9-822333d7a56c"
        },
        "item": {
          "id": "b964be66-78a9-4988-ba3a-5b650da185f3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1851beb6-476d-496b-8ae7-02c91d1b4214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b25bac-41fd-4056-879a-1cb0cb708196",
        "cursor": {
          "ref": "8697cae1-950d-442a-96fc-9ed03ec23133",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f68e55d2-9966-463d-837d-f8ebc9d4b46d"
        },
        "item": {
          "id": "c4b25bac-41fd-4056-879a-1cb0cb708196",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "013f87a0-3682-42a0-bba1-5d7c18aab207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeabac36-928d-4f4c-87a8-39c4c8025619",
        "cursor": {
          "ref": "00b0aac1-5fd0-487e-8f97-40926b65a85d",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6380f760-95d0-4da5-81fd-2ca8906a1ed6"
        },
        "item": {
          "id": "aeabac36-928d-4f4c-87a8-39c4c8025619",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "88fa5562-550c-48ed-9018-41d16ff2366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d9ac0c-5418-419e-b143-7671505a9c2f",
        "cursor": {
          "ref": "f03732bd-6598-479c-a08b-fb43a48b6206",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1f98da94-73db-4efe-a3d1-27037814655e"
        },
        "item": {
          "id": "34d9ac0c-5418-419e-b143-7671505a9c2f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f2d3309c-f80f-4e1a-9c79-d985cc5d0c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996cbd2d-a842-4963-b9bd-3b5ea4df521c",
        "cursor": {
          "ref": "396a9e7e-0f49-46df-883f-ab4be12af4ad",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3c437401-c715-4d28-9a86-5aa3e1733456"
        },
        "item": {
          "id": "996cbd2d-a842-4963-b9bd-3b5ea4df521c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "97e3c8ba-d06b-42e3-91a4-b3d0b56fe8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a7946d-b4da-48c6-bf79-9eb846c96119",
        "cursor": {
          "ref": "a09caf05-d143-4799-ac4c-6e8fc87e4cbc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f29a5d3-1457-43d2-8390-a8296475f273"
        },
        "item": {
          "id": "53a7946d-b4da-48c6-bf79-9eb846c96119",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5d8a4b49-d18b-4176-b7cd-d9d0c316f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be296ea7-0bbf-46ef-91db-6d1d94614f49",
        "cursor": {
          "ref": "d0c1fade-6e26-4ff6-b39f-e4819430fa7b",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7c82d648-432a-4676-a6dc-3892bc0a92a6"
        },
        "item": {
          "id": "be296ea7-0bbf-46ef-91db-6d1d94614f49",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2fcc1298-0e77-43b7-b4fc-cecd89c2a6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724aee46-4661-46ca-a9a9-10595a0699a4",
        "cursor": {
          "ref": "47c7de9e-d532-40d8-b019-b85f54397e23",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3e2b96d1-b375-41d4-b2cd-ee28264e202a"
        },
        "item": {
          "id": "724aee46-4661-46ca-a9a9-10595a0699a4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c9e547af-ec40-438c-88fe-2f34f7d02d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7b869e-b5ab-4410-ad60-2fbaf95f17ed",
        "cursor": {
          "ref": "cbaa21da-31e0-4c0a-92aa-e3a4856472e7",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "db206cfe-c7ca-42d1-a6eb-452b12daaa38"
        },
        "item": {
          "id": "de7b869e-b5ab-4410-ad60-2fbaf95f17ed",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b2051969-08a3-42f5-8189-35b786e2b310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116fe699-c92c-4f08-b023-029f1c88a815",
        "cursor": {
          "ref": "17ea5b5f-c59c-4b82-b40a-b4905c521e12",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "aaf38012-97c2-4ce9-b0a4-9465932953d7"
        },
        "item": {
          "id": "116fe699-c92c-4f08-b023-029f1c88a815",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "993d8428-3ed2-4af5-8dd7-d8e7e76b565c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e004913-8524-44da-bf18-462d0f966b42",
        "cursor": {
          "ref": "3b02ae33-f3ba-4993-b800-62c31eeb1308",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "412704f1-c73f-43f7-a858-3c4530994327"
        },
        "item": {
          "id": "4e004913-8524-44da-bf18-462d0f966b42",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2eb2ca6f-c98e-4800-87da-db22464f564a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9144e0f-fbe7-4738-a0b6-96d371b0bf53",
        "cursor": {
          "ref": "3de8cc25-532a-4c5c-a55d-e064f06a6975",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2894f004-02f1-4639-a495-7b97124b53b0"
        },
        "item": {
          "id": "c9144e0f-fbe7-4738-a0b6-96d371b0bf53",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e8319a46-3d9a-40ee-a09a-24a03f935a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a177cf7-c5bf-46f2-8b42-03a037fd12d9",
        "cursor": {
          "ref": "5a405c1f-6a01-4e1b-b407-40d95de69373",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e6367f89-d986-47cb-8d1e-86ef8d1b3f67"
        },
        "item": {
          "id": "8a177cf7-c5bf-46f2-8b42-03a037fd12d9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0b38c5be-d8dc-4dea-b709-cdfc4df9360f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1142f768-6be9-4eee-92af-5573d80c185c",
        "cursor": {
          "ref": "d8a29a8c-a056-4dfe-b799-b3e9b0a1d488",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a09659c9-4ab8-4bc5-9be4-0de73a00fe95"
        },
        "item": {
          "id": "1142f768-6be9-4eee-92af-5573d80c185c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9c098e40-90f2-4f18-aae0-22595570a36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3769c33e-a10c-413c-9ae5-5d61b0337520",
        "cursor": {
          "ref": "a93b60e9-4886-4f04-89c8-4b5d6c166e36",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5a3e46c6-7d61-4d0b-9ace-3ee6ddd76cf8"
        },
        "item": {
          "id": "3769c33e-a10c-413c-9ae5-5d61b0337520",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00703fef-721e-4ea5-8774-373bc49f3b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28624634-81a9-4566-950f-acb503ef478a",
        "cursor": {
          "ref": "30c526bb-9c68-412c-8d9d-6a768e6f6804",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "776bad51-989f-4b49-8d77-fa5439b11ed0"
        },
        "item": {
          "id": "28624634-81a9-4566-950f-acb503ef478a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "03f18205-ed89-4b34-abd0-89d779990ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c5bf36-4cf5-42b7-8316-15bcd569e403",
        "cursor": {
          "ref": "79f56c2d-cd14-44bf-8d13-e75df8187716",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a5459532-3feb-4e6d-a638-7a7fdfd311a9"
        },
        "item": {
          "id": "93c5bf36-4cf5-42b7-8316-15bcd569e403",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f0768b07-2d11-4d11-a42c-423e1a1d235b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915baf33-e36b-44a7-ae30-884a1509c4ea",
        "cursor": {
          "ref": "ba048a9d-d8f5-426f-b81d-f23e54e5daba",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "add62e0f-f087-43a3-99d6-b8ea5730b5f2"
        },
        "item": {
          "id": "915baf33-e36b-44a7-ae30-884a1509c4ea",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cb53e802-42dc-4cf2-a843-311b8c5437aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f69d39-03f5-4269-9041-86a0df2496d5",
        "cursor": {
          "ref": "7ffe2e27-c9de-4f56-bb15-14ca9fcfdb85",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a8037fcf-6b3a-461b-9694-f25a58aa16a0"
        },
        "item": {
          "id": "b7f69d39-03f5-4269-9041-86a0df2496d5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "efb2c929-58a3-4322-bebd-a77bec873b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae50d188-3966-405e-a14b-f62ad2a087a5",
        "cursor": {
          "ref": "9577e67f-d81a-4246-8666-496a21be3988",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "32172c61-ead5-4527-bc06-cd710a662143"
        },
        "item": {
          "id": "ae50d188-3966-405e-a14b-f62ad2a087a5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "96438334-f9e5-4f8e-aec0-dac894aa9658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95067c3-a9a1-413d-8b00-0abc157ccebd",
        "cursor": {
          "ref": "4eccf862-a1f8-472b-8479-664e72ed7046",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "22b2ddd1-a67c-4537-b3f2-b8767a6126ca"
        },
        "item": {
          "id": "d95067c3-a9a1-413d-8b00-0abc157ccebd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "91b21ef7-0843-410b-8099-16cd6aa5f911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd96d5a1-49b7-4f63-9c29-efdb1516fa1d",
        "cursor": {
          "ref": "75b8af3f-cf8a-457d-8c13-b9b3be9f7596",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dae7182e-3cc9-454e-8263-c5fad41322f9"
        },
        "item": {
          "id": "dd96d5a1-49b7-4f63-9c29-efdb1516fa1d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6cafd978-0061-4560-bcfa-f461ff193a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db22e4de-cd23-4148-a667-a15aed8ef209",
        "cursor": {
          "ref": "decc7e7f-d995-48ca-8ce6-1db1e348bd50",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7da6c249-19d6-4844-bf9d-cccff62afc87"
        },
        "item": {
          "id": "db22e4de-cd23-4148-a667-a15aed8ef209",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6ede753a-f16a-43c5-aee0-a9f5be3839ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13fcf95-2205-4702-85e4-53b5a9279c54",
        "cursor": {
          "ref": "ee4dd2ad-ac5a-4bf7-b3e8-dd1b4390f709",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "878ec670-27cb-4dea-ab5e-75f752db76cf"
        },
        "item": {
          "id": "d13fcf95-2205-4702-85e4-53b5a9279c54",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "88aac073-6e5b-47dd-880f-150c4b45e951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba664cc9-ef5c-437a-9b8a-5ec9e3eb28b1",
        "cursor": {
          "ref": "063e8030-1b73-44c7-adcc-f79024aae880",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0eee3da3-7ad4-4ede-9c85-99c0ee757ddc"
        },
        "item": {
          "id": "ba664cc9-ef5c-437a-9b8a-5ec9e3eb28b1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e7dadb31-7096-4296-be3b-f58c5c623819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e2fe7d-f271-46a4-beb3-c526f03549ad",
        "cursor": {
          "ref": "beca3720-9ed9-491f-9d2b-c2dbbebe90c2",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "781086e7-275b-4a15-a037-47dc66a4ae22"
        },
        "item": {
          "id": "29e2fe7d-f271-46a4-beb3-c526f03549ad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2a496ec5-bfe9-4bf2-8244-743c301cc710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6407208e-0119-4b0c-8d53-e6a7de79a6be",
        "cursor": {
          "ref": "4596641f-7206-49d5-a2ba-8f1442b67c86",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "821aff5c-1840-4708-bb2a-c5d008679c6b"
        },
        "item": {
          "id": "6407208e-0119-4b0c-8d53-e6a7de79a6be",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "326664cd-c212-4aed-9d01-801a6b506d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8889e823-3646-4685-8153-4c78f5c16a1f",
        "cursor": {
          "ref": "c1e42c8a-af92-44aa-9f82-dfc3eb4839ff",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "65e8a69f-6168-41f7-ad45-038d4a3165b8"
        },
        "item": {
          "id": "8889e823-3646-4685-8153-4c78f5c16a1f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "15aafa3e-4990-4ad1-9686-977ac4312f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa9fbdd-6354-4a96-96f7-eb83bbebd4bd",
        "cursor": {
          "ref": "bb64247b-107c-4e15-84d1-0baa6751bbd5",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a1ef9fc8-6075-4600-88e6-70b2a3db0532"
        },
        "item": {
          "id": "6fa9fbdd-6354-4a96-96f7-eb83bbebd4bd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "29658b88-1caa-4cb5-a032-5b38c822f017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff97e45-ce9a-44a8-aa4c-f06c5cab52b2",
        "cursor": {
          "ref": "14a6a03a-e93b-46ce-a43d-e8e59e304897",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cbad1299-3253-4727-a503-41d9c7606a79"
        },
        "item": {
          "id": "fff97e45-ce9a-44a8-aa4c-f06c5cab52b2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "77d6704b-e062-431e-82e0-593863ef2a4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66cc01d-3ae2-4e28-958b-dbc6c726c8d0",
        "cursor": {
          "ref": "bf004e99-f886-45f9-8bd3-a55719006dd4",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9d47a2f4-a105-408f-9fbc-3e9bf25d5cbe"
        },
        "item": {
          "id": "b66cc01d-3ae2-4e28-958b-dbc6c726c8d0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ab344d88-1ea2-4f7d-bd98-1eb95c30ac17",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 262,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2afb6de-8568-46c1-bcb4-1db897b4c42e",
        "cursor": {
          "ref": "2e5ed2bf-e07f-4dd2-8453-52d0f7634a6e",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d523a3c2-2345-4b67-8066-4b2935875add"
        },
        "item": {
          "id": "a2afb6de-8568-46c1-bcb4-1db897b4c42e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "193d2168-9700-4785-b8d8-69739e434b44",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2cb740-e5f0-458f-97f5-76adb950fc3c",
        "cursor": {
          "ref": "7815c7b2-426f-4c7a-84ab-f36b26aab677",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7d471200-c1aa-4f00-9876-4e7a7f3e5671"
        },
        "item": {
          "id": "2b2cb740-e5f0-458f-97f5-76adb950fc3c",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "6d2f9a28-c71b-4b1d-bc1e-171108dbfa9b",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4d0e01-debf-4f8e-b2fc-ed04c3917ac9",
        "cursor": {
          "ref": "c90d23a0-9461-4518-808a-0a3bbf4a1bb7",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b34ff975-ca8e-4236-bcbf-78c68cf6c9bd"
        },
        "item": {
          "id": "4f4d0e01-debf-4f8e-b2fc-ed04c3917ac9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "28e79def-be2a-4782-a46b-f77ac32f5a9c",
          "status": "OK",
          "code": 200,
          "responseTime": 378,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a13b0b-0c78-4aaa-91a1-bb2bdd665ab1",
        "cursor": {
          "ref": "3e9ee25a-2c87-46d4-8235-06a2b53c4c20",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "af221e4a-8d91-4694-8b47-93c196e1c4b3"
        },
        "item": {
          "id": "17a13b0b-0c78-4aaa-91a1-bb2bdd665ab1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bda3443f-f279-4fdf-8453-ee57c1351510",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a13b0b-0c78-4aaa-91a1-bb2bdd665ab1",
        "cursor": {
          "ref": "3e9ee25a-2c87-46d4-8235-06a2b53c4c20",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "af221e4a-8d91-4694-8b47-93c196e1c4b3"
        },
        "item": {
          "id": "17a13b0b-0c78-4aaa-91a1-bb2bdd665ab1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bda3443f-f279-4fdf-8453-ee57c1351510",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a13b0b-0c78-4aaa-91a1-bb2bdd665ab1",
        "cursor": {
          "ref": "3e9ee25a-2c87-46d4-8235-06a2b53c4c20",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "af221e4a-8d91-4694-8b47-93c196e1c4b3"
        },
        "item": {
          "id": "17a13b0b-0c78-4aaa-91a1-bb2bdd665ab1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bda3443f-f279-4fdf-8453-ee57c1351510",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20855a93-467e-4f04-8407-eea098cc212d",
        "cursor": {
          "ref": "b032a68f-68d3-4756-af3b-f4c783efa0c9",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e3fd5eea-6ec6-4d09-9533-e283dd75dba8"
        },
        "item": {
          "id": "20855a93-467e-4f04-8407-eea098cc212d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d73b95bc-e13d-4d61-a65b-6bac54c44bfe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 313,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103ab2bb-d864-4192-95f3-228d46632f57",
        "cursor": {
          "ref": "9f388a0a-2854-411b-9409-def0d0999124",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e33d83c-57c6-44c9-8e30-91d57a14f5ef"
        },
        "item": {
          "id": "103ab2bb-d864-4192-95f3-228d46632f57",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9fe641b5-a7c2-43bc-a7e3-a90752fe1977",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103ab2bb-d864-4192-95f3-228d46632f57",
        "cursor": {
          "ref": "9f388a0a-2854-411b-9409-def0d0999124",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e33d83c-57c6-44c9-8e30-91d57a14f5ef"
        },
        "item": {
          "id": "103ab2bb-d864-4192-95f3-228d46632f57",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9fe641b5-a7c2-43bc-a7e3-a90752fe1977",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbddb32e-9665-49e7-ac06-2c247bbbb2b6",
        "cursor": {
          "ref": "215df851-64e9-421c-a37b-750a8b7cb689",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8ea3a7ec-f6f5-492d-a288-e4f035ea5d4c"
        },
        "item": {
          "id": "fbddb32e-9665-49e7-ac06-2c247bbbb2b6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4ac14fb2-c1e2-47b8-b3db-71fa9040820c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 476,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149dc913-f5db-444c-b80f-ce6d2c31998b",
        "cursor": {
          "ref": "d3e69cbf-9563-4bf4-b9a7-57a1c2c70d26",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4353106e-6b08-4417-8d50-660f7b203297"
        },
        "item": {
          "id": "149dc913-f5db-444c-b80f-ce6d2c31998b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0a8ede8-a35a-4491-b21b-daf4a7502f6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149dc913-f5db-444c-b80f-ce6d2c31998b",
        "cursor": {
          "ref": "d3e69cbf-9563-4bf4-b9a7-57a1c2c70d26",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4353106e-6b08-4417-8d50-660f7b203297"
        },
        "item": {
          "id": "149dc913-f5db-444c-b80f-ce6d2c31998b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0a8ede8-a35a-4491-b21b-daf4a7502f6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42e384f-c356-4e66-a7c8-8b78ee88eaba",
        "cursor": {
          "ref": "a0cb7ba7-a813-45c2-bd82-bfcfde3dbe2f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "291fde07-62fd-47a6-8f83-5bbb7b8d6b98"
        },
        "item": {
          "id": "b42e384f-c356-4e66-a7c8-8b78ee88eaba",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c266a0ca-7a07-4cbb-a3f3-cacd4dd0762d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}