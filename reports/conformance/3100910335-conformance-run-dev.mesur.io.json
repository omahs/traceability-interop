{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "991c25c5-141d-4589-b843-1b4004351903",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ef650f8f-dfe6-4c43-b74c-7293ead1a60b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c8e88a7-5c47-4f6e-9f74-60000078afd3",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47f80568-6100-46c3-a3a8-5ce6d22eb321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b0c3452-f255-4661-b586-c295b7ff384b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "778f5390-6468-42b0-960a-6da8d9b52562",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4fe6f263-b452-4a58-89b7-ca4b018e3170",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ea53112-c40b-4296-bdca-180a18b54b61",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b60cc7ec-2253-40d0-ab44-a571594fa4e5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaf61db-28e8-4882-91ee-306f6c59f56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adae7801-9e2f-47f7-937e-f8bab4514b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fdaa6d-6640-45df-9ae3-7af4d3c635be",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb3ada8-820e-486b-a9b0-5706614a9158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "969fdf1c-7f05-41f5-83b0-99356e002edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad61ca0-8f6e-4c17-ab85-df4dac6808b8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ba63e6-cb22-4057-b2a3-3cf5c1f2b08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "892e6220-bc54-48af-aa84-cafacdec6c4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fe7ca840-0200-4342-8e88-deff33fee294",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "020bf7f7-7986-49ec-9a2a-eb4b255c8b31",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5825fe3-0d5a-4221-991e-319e5bd852d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b6d919f-34da-449e-b3ab-d517d6ccbe25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fc29cf-7166-495f-ae5e-764d21020d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbb8c18-f5dd-4e2a-85d9-8bd1a90880d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c28bf9-02f9-4428-8fcd-53b690bb2deb",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afb003a-56eb-43ca-8b31-de4908be7d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfe18b17-ca37-4972-8631-d895e5460eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1287cc9-0fbb-4a68-a418-458fff5bc5fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a9e6cee7-9c23-47d7-9546-376118faa164"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3d4e3a6e-da41-4c96-bfe8-f4f3db41b170",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a76c9508-c460-4ebe-a3e3-a1cd023ab4b8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "574a50c2-a001-4b81-9755-c17da9496e62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1c7185c2-a865-4282-b64b-08ccd6763c51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d815e02-0ca1-407b-a42e-12f3465ec4fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c0c57082-96c2-4ab4-b911-5b0ab5b7e608"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "775ead5f-b9e1-4afb-961c-8127f594669b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c392b647-98f7-46a9-9969-d2a57cd4eae8"
            }
          }
        ]
      },
      {
        "id": "d53e0514-cbe7-46d8-8e0c-b18b70bbfe6b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "468c3e0b-05be-4e81-9834-9280ee754777",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8fb36a15-a04b-4daf-a60f-c3e7c4cfa1f3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3e1a9ee7-a805-40aa-8eda-21c15d74051f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8f6ff0-c6bd-49bb-b474-df13aff63979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c044c33-fac8-4c8e-983c-59ab01949202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad728f9a-7a3a-4e54-b559-23b4eb2b3f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5700169-e580-4e14-8ba3-902bf5b03286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bb5880-778d-4527-adef-0e9d24849b87",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febbc2d9-325e-4d89-bcd7-f29d7ab18742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28d0178-5e49-4dd3-bfa8-70e3f7a42e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f36b27-e8cc-40e4-9acc-02c888f90c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a16894-9f32-4816-94b6-69b40bca0881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebde247-097d-49bb-859c-f1f2ec138e1e",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1d0627-907b-4016-ba9e-2e0ee862094f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86d2586-aff9-4876-940f-70c484367e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9951323-0194-4a46-b6b9-5a0365430fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "146fded4-ed89-48cb-848e-cc12d7409805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58baf04-0cfb-4a78-bb4f-5aeaca48f9d1",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be9f1a1-8188-4399-a0e6-b1ba510ef8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfff7974-b215-4cee-9385-f9de0e135484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42b57a9-afb7-4294-b9ea-2ab0f11476cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac0d72e-dc02-4ad6-9ffd-0db829eaa680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef1d866-f2cb-4547-98b0-9be611b044d5",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174a9d41-5098-4c2c-ba23-cbb887054b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c075826-0db3-4632-9f70-35097d7c50d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6aaacf-f27d-4b59-8cad-8076246db134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2487ad84-edba-4dc1-89f3-67a747cd5614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9105e2-dd3c-47af-87fd-8b8a54ec7c21",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ef1d71-7f66-4713-a60d-c4b8c769d5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8294a534-0e45-4c1f-81df-1ea53a397525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b48645-7e51-4834-94e5-9e04747270d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f95c0c-c318-41eb-9956-483dbfe0dcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5f5859-b063-446b-ae60-4b70cbed7788",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986208be-58d8-4435-ae42-5acd41b2fa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b835d45e-a6ec-4e21-8fa5-64abdc55a9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f101b0d-eab6-4fe0-9286-99828329b377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59227a60-1e2d-4429-a9e7-450371dc116d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106a450b-77ee-411f-a50a-156998d9d9ac",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8463e0e-b840-4215-a41d-ed01048097e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984defa5-664a-4e92-9534-a8fa1e2ce795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189519b1-0117-4f95-b0bf-52d7e93c3199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae0d5d3-50ed-44dc-a7cf-2cdea73ecf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91db541e-d2a3-4b85-a4aa-17ac909ffa98",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f858a3-bb2c-4740-a3ba-c77340c48e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c2e8f2-8ea5-4522-8558-5eebee360ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2717f632-41bd-4617-9cc2-bc2de4211041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada3b129-46a8-4ddd-bfa2-d4d1308f717d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9db2bf-7d86-4949-9ffe-554c64cbf352",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123d3bd5-a914-47d4-945f-ff3690e1e72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17465dc1-d147-4cfd-b897-15d01f48e0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c47b3d-6472-479a-8ef8-369e62e4f8b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0868020f-25a3-4433-bd18-169f2803067d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57eac4bc-37f1-43ac-9ca2-1e927ec4abea",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d433ae9-4032-4e35-9a96-6bb15726d2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a331003b-8e9e-4bea-b7a7-8d5a74c3cf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b7ce6f-3238-4745-9fc2-60c1a45cf205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "4033f752-259a-4941-b12e-fb8fa796a2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d2c5f7-07f8-4ff6-8065-1383b7c9c0c6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfd014d-3601-4bda-bb73-90b2465b2939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9e1efe-7895-44a5-a718-969f6c3809e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff81040-5935-4e08-87de-42b3dd4acdde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "ed8f8d61-369a-4911-be7b-fd2087b2875c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1b0606-3c70-4797-8828-ab7cb0e274e4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe8b467-3cd9-4384-9ae2-7e17a2479f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9748ede-e17b-4e93-a435-5c039f64eaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18a00a5-259a-4ff8-8bed-11b4b740aed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a503f3-0c5e-496d-be43-289c5d508ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ae4019-76fe-4486-87ea-67e0e6a3b0d4",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1bcd34-6053-42d1-b983-37b650265a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32468ffc-16ad-4d8d-b0bb-7452d6394871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7077f74-8376-478a-b096-460aeb1fa816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "289993e2-4efc-4f60-86ce-60f7bc45c307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a1ecd7-089f-4e4a-b47a-1aa0a61127f6",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8141eb-d1f5-4c00-8795-44733e623a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd312968-d0a8-4905-8058-599c12601eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7791ed-c0cc-49bd-9d3c-090d2baf7f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "9451c9c3-1db3-483a-aced-61efad1b5b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86596ed-edd6-477e-b922-e4fa4acacd0a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b0cc5c-c6ee-4447-b482-d5f0dafa32be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba481fe3-57fb-415c-bd68-51b39f3f588d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210e8955-6b1a-4ab0-844a-04683ebc07a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "b484beba-6655-4247-bfe1-1120f3cfd669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6a5ea9-0a35-48e4-af2b-2500f5e1fb68",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9768d88c-e352-49f0-b256-17d451d064ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecad3935-647d-4382-88b1-d9a16814e070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e52f71-a0ea-4ce5-b688-348268a3bb59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc5ed80-c9d3-4b30-9802-f2810367f0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549fc133-5111-4c55-9def-5c9c880c60c1",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cad5aa9-c9b8-4e08-bec4-61e30f0cbca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5075a201-c914-42ea-b68d-248277f8281b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940ff1c7-a442-4dba-9580-4c38cabc35ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66404fab-cc9f-4bb2-99b6-e78517cfc6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ece166-0a0b-4c51-a56d-cbec24432974",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904238b6-dedf-4c5a-9bcd-e21cffe9b541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192d70f4-c14a-4a65-9286-8a8e7d5cafa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e8b4cb-2e6f-4f28-b343-8f469051d04e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823866a1-dc87-4d25-916b-db03f8ec9385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2c704a-60a0-4cd6-ae7b-a1b417056fe5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1577b07e-b134-4cc1-8c53-28b3ed73eefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e65b2d-9e3b-4ced-9b35-c099899d2eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f11a107-13ca-444e-8374-549d189199b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace81555-b5dd-469d-a1c2-8315579b9776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c0afd4-d02b-4c85-9f94-8d55489dce3d",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9728fec7-b53f-4ba1-911f-f3b56b905787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9419fbb-7336-4ff4-b9a4-c9eaa3c0a3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a5ccd3-c2d0-46c4-a817-ecde060bbbc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a41ece9-3d0a-4735-9c0b-41473f812215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bb0394-b0c2-4f0b-9d66-f6e8de609b4c",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eb5ed2-01b6-4e4a-b356-a4f32697fa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f1b057-a7b3-4f22-a0a4-9b7baf822d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd420079-0978-4da4-b52e-9d5db3c6cb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d1abf4-deba-4da1-a09a-b7c3aa4437cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9bb8af-c6d6-46cc-a0d0-40588a1b90b3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8b68e2-c153-4964-bc36-1463784ae957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f054ef-359e-4687-9e82-44b7202a777e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbd9caa-9fbb-430d-9c0c-1a2596831be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "894a7053-a7ac-4a17-9a7d-5857e67062bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaf6d11-a28b-4338-84c4-ca6789a77791",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512de8d0-7464-4f8c-81f2-b399e84d0160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36685ff4-2ab1-431d-adc7-6419f1fdae31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94170e4-b496-43ac-9834-40bdd009fae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4561ce-f6a0-410c-be0a-5b67195a35e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7949f2a-5a15-4c76-859b-8324ac78f782",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0354eb09-1e85-41bb-9257-6edfd91b286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d125a65-7729-4bc4-956f-a5f39a799f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c8615c-72d3-4af7-be1d-a14f484e8bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf799af3-50c6-48ab-94ef-36b58dadf080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ad8721-b06d-4d6e-bc0e-e41a9736ae98",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd24c2da-1839-4333-8c58-7ca33230df9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db0ed61-7177-4873-89e2-11e36d191b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ac36ae-8ff4-4e52-b284-fb095a8c8ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "672f9c32-e5c6-40f5-aa3e-28ace977cbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d643306-0913-4d43-8761-aaba0f52893f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a882f1-7b9f-40c4-b53a-0fb45e9c66dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89feffc-bbb2-4cfa-b73f-8092eb11a06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5859fbc1-622e-4627-8058-7aafcff79562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b617eb5d-4636-46d0-845b-aa294928f430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1b725b-e880-4226-ae7c-af64043f1e37",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc63e8e-90a1-4681-a07d-5d42147c0992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d19765d-4283-4898-8989-869821d1abb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b44c0a4-4cf3-4ec3-9865-2a0ffbd460aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05894b50-28d0-4ffe-b5f0-36d0a565b46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3cc03a-b7ed-4e42-9fea-b6950663843f",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90788475-95cb-4bd8-a498-7e318b4e4047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0409ae-b541-4742-a505-6a404ec0fbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cb6f3e-50b4-4c47-b336-cef4a31c67fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c10845-7344-4fc3-a0f7-d0c29d79aa36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383548df-1e5f-4cd8-bd9e-b3a9f4e0e472",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b25322-b37e-4f02-827a-a0059b6bc239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0ba1bd-88d4-4b18-ae8d-9a47bdb47d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fafbb2-f02b-4671-8bcc-e78b378f5ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc0ab28-3eaa-4905-9663-d8e1a4de6490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d2a056-3a48-4456-8e32-5a5554ff5be1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b068919d-2f68-484c-bb69-05cb68b3c949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0754e06f-e092-47f8-9863-3f15bb51fafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb3d860-203b-4ed2-83ed-a3ff4d0a9edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e847616-dcbc-45a7-8e6c-e00c2dc4082e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e4df35f-5428-40ec-98ee-e494054f82e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcf95989-520c-4112-b37b-e283860f9815",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecc771c-fcdb-4958-8789-ba120c52e234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d69a5769-50cd-4773-8180-e779ab073b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8082430-670d-4881-ba13-9ea99bf896bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "82a63656-fa7c-4394-a608-b79185339350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c693b4-519b-46ce-b241-7b88fe49a749",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec56e862-5360-4472-b8e3-9862fe2980b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "988e2539-41da-42a6-ac2f-41030e44a9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d099cd5-eea3-4cfa-93c7-cfc3186153bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "275336e9-ed0e-43e0-9e9d-c464943faac7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5cb3144-b78a-441e-8bd5-bf650d5164cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "681e7bda-9fe9-4c9d-bd50-d6af7f5256b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e455afbb-f7ed-4fe6-80bb-57c3c0409eea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "172a2300-47e8-4195-9112-b562136c99f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a02100b-8c1e-4809-83ec-401b56b54ad5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1a6ca38-4b72-485d-8d44-7242b1e7d97f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53087de6-c5e8-43fc-8ab6-05fd128baada",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7fd1df3-c9cf-419e-a3be-d474548d956a"
                }
              }
            ]
          },
          {
            "id": "059b16a5-8fb1-4c42-8b46-b63a44d7d12e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2d82065-33d5-4f42-ac88-bfefbd32f958",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a153538-07ab-4c09-bd02-2ac3d3e453d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40ed60f2-33f0-4121-9055-95dab7bec0a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49625c7b-a8de-4e41-b850-b9e31b5f2489",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "6579d85e-1c23-49f5-9ca4-fe4dcc7b737d"
                    }
                  }
                ]
              },
              {
                "id": "bdd55186-5ce5-44cd-a972-544424a2ea8b",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d24673d-8d06-47b8-a273-b2556a097335",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ffd0565-4559-4a65-96b4-7ef76bf3fb25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "073d900b-23e2-4181-aa10-9b546bee90c0",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "415f39e4-b091-40cf-aa17-67f74236df46"
                    }
                  }
                ]
              },
              {
                "id": "81dac4a6-63f9-4e2b-9fea-00e109290efe",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e74c4b76-8054-4257-9a96-e7d98ab0e323",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ae1d4cc-052c-4482-aaab-612582a9eebd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0091771-ff40-4076-8912-40be2b984240",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "2db459f7-81fe-4ea0-9be8-bbd352c26291"
                    }
                  }
                ]
              },
              {
                "id": "35a7733b-fd59-43d3-8849-aa9824fa9be6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b660756-8c9c-420d-bc38-01cdca1208d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "707e5b11-729f-464e-86ec-61c5abaab57a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "422d720a-f3bd-4b4f-9222-827b7a1a76ee",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "56a85b2c-8db1-4a70-95b6-17e365edf15f"
                    }
                  }
                ]
              },
              {
                "id": "43cfd53b-5328-4a90-b00d-78d06a62451d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae8d011a-b0bd-47a4-857e-53382a807b02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7f5395b-5f81-4b16-8624-614e57cc003e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0490bf30-b9f2-4275-8738-5b472caab25e",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "fb253282-ad12-46cc-9d49-5a950b27e801"
                    }
                  }
                ]
              },
              {
                "id": "30db5e35-2d80-4ac1-9b40-c35ace9bf8ff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77d51cec-1027-4adb-b246-2f2f3fa98a94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b00f49d2-a6b7-45b4-bd34-f18989a25b13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "176a374c-2978-4fe8-9bef-e3aced9a9f39",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "e3ad041c-f07a-4d5c-8719-d23318ff2df6"
                    }
                  }
                ]
              },
              {
                "id": "79f7f2cb-3392-46e9-b65d-9d3fcf29379b",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "256059b9-a5a7-45d3-b970-6360f254ab41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8d340d2-cb9c-4ba9-864e-4e95853c4b9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e2a9fe7-af4c-4bb5-a802-da4c71f5ae48",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "aa62d858-cfcd-4f69-a7ac-952341dd0aad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "406808e7-a584-443f-b3d0-8aca2d0db6ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e40d31fa-66be-44bc-97be-a0a39435e70d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "111f42f5-70e2-4f42-ba71-5cb8dd415ad8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c347f927-e5a8-4088-bfc9-16573c1bc9ec"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3db5784-cbe9-4702-9c8e-48cf4a4fd6d5",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "557f39aa-38f3-4a3c-8468-ca497f540bbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faa316ec-f4d8-440d-b852-8b2e3b22abd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f9e193b-f5f6-47dc-9c44-6837f0514a46"
            }
          }
        ]
      },
      {
        "id": "d13dfd98-dcfe-47bb-9bdc-a84120146879",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "760951d6-5bcf-46f4-8aa6-7e28851ed03e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b2999f7-acf1-48e7-be46-4172e98a91fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b66c616-eee3-48c3-8488-769adfcf005b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800aee1e-dacd-4e1f-a5c1-42a8b34bdad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8881d5f6-2a78-4cb8-82b1-1db15ed4d03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ba76e0-d138-4451-b932-346b6e898841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f96ae93-0d61-49fa-ac7e-186fa62003ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dcf1aa-1050-417f-964d-9898665b409f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c401bee-1294-49b8-8d7e-70d9d9b5102b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "65a2a7ca-c04a-4f3c-9cc1-ae78dd347292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caae85a-bbe0-4758-a2e6-603d9c40a69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69e6a174-cce0-4b63-92f0-3a6d7623de59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "380f4697-1df1-45ae-8932-99da0cbeaec4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30a979f9-a61a-4ff2-bb7a-9268cd1fd186"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b59d9511-ca05-4e83-ad14-292eb789c834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c83a2042-27f1-4a74-8f1f-e97affd2aaa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88accc39-9ce2-48c6-880e-5ec17a87e444",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "e97375d5-7ca8-4fea-914a-a0435484d754"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd0b9d37-2711-4ba8-b871-13f29c1ef673",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46541df9-20d4-45e8-898e-d73335f579ca"
            }
          }
        ]
      },
      {
        "id": "d3c692d9-f47b-4729-861f-e498d8faad64",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2e7349a0-818f-485f-b027-b7019f70b747",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82aa9170-1c51-4fe1-9c29-af6e39f2e4fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ecd348ef-6d68-4907-96d9-5ab7214d9a73",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0945fb-eb09-43ab-aa5d-f5450e6b91e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb4ef25-afed-412b-adaf-628d9afbc5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c820b30c-1c26-4480-8922-2afb1924bcb1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e2c26b-eff2-4cc5-add1-ef856e3c61b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd24c45-b831-45f2-a90b-e2c868c0e884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9324ae72-6783-4640-96b3-7154f4b1d5d3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d88293b-c1f2-45cf-96c3-a4b3bf575f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18aa6ec2-5eb9-45a4-978a-b79af29420f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7c6c75-36a1-4b15-8f20-3e02c5a81bea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccf2f4d-2b7a-409b-bc42-deb6b52f1ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b7b8d7-13b8-4933-ad22-98a9814e591f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efd27ad-2efd-4e29-99e4-5a693cc2fa35",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7aa8be7-47fd-492b-a772-87f6c54b96a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02fed55-d3d3-4ab8-8d6a-ee455ba48de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acae67e-9275-4ce8-96fd-e6c2f28e294e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ecfb02-a608-4928-853e-e95fe2d0baf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ed5795-3558-4800-820d-1b4862fcaf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec4bb9b-228c-4ef6-baba-16782b501f00",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc194fa-613a-4789-9de4-3c5b8edbb846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7615f8e-ba59-444f-9102-ac06348f72c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385627fe-6ffb-45d6-b26c-43f2ae4bf8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c067b2-47f7-4a60-b123-a79f5d39f627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c4be61-d08b-42cd-81ce-bff71d481687",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b630ac0-51f3-47c5-a931-d53c1380a417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd2aa25-ccac-4b47-b411-347a21989997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c61bee-712c-484a-a6b7-6151f71df2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfaa319-d495-4c40-aed1-61c1481e5a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb5180e-a69c-4831-abb1-ebcba6fb2e1b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0de5292-5620-4108-ac5d-71ef201bd5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f63cbb-cce0-4740-95d2-dbe1dfd1ee76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6082ba-a106-4edb-b95f-0c108e494245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c59992-4c58-480d-834f-f126384ac91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5fc36a-e1aa-40f5-9f03-f6690f261cbc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5c1356-b04d-427f-986f-9bfb8f7652e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d61a31-2da8-4402-8473-12a6c1b645bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1945f327-b699-4d02-9386-200de912b5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a66259-5111-4ee3-b9ec-a8e4e3ca4385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5047edee-cd20-43df-a623-13c44ff59344",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..RJunbl8K6pk5JyKv0VkmdJT4I8sfatEPdbup0RAYKU6F1fDvEZ8j0xFlr1ocpNQGIi4H5cufTCRE3Fi45ZQ-CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad3d38f-2057-4ef5-9180-df72348c84bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bbd8a0-1fc8-47ae-98a1-c40c1fe25577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a0cf48-d75d-4be8-87ba-4aade317b66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457a30ad-67c3-4383-b263-e10ff399d6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd613f3-03ae-4635-967e-cc570d5ba88b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f3ddf0-579f-49de-bf39-cd067c95394e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516e3889-d40c-4f34-acc2-16ddf702aa4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0750dd-a313-4374-bb6e-265d4742f4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6abcf8d-43a7-4d32-81a3-d91fe81b08f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5176fba9-e31d-4c81-930e-31e9bc9afdf1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729a1054-a8a0-48d0-8978-5fdb2eaef0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a80d05-a27c-470b-bb54-e37957ebd571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b92dde3-24b0-40e8-bf9c-509c905ce618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3206ff6f-5531-4207-8120-fe6e3bf482c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceaccf4-143f-443c-a66a-ba5d7cf02a65",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17d9b25-786c-4c8f-998b-33e22ded7a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0a04ea-be61-4204-ba4c-1b3363d863dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32dc994-d8db-46d5-9ab4-418ba6013db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31be3161-4df3-472d-8d6d-6ecebd7c27c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125fca75-bd61-4075-b8ad-3123c14b2829",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1bd3c9-e87b-4cda-9b94-11587327b7a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8dd3b5-6462-4766-92e0-d5631019853e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e433e5fc-a289-4130-ae74-b018c30c7fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8932c53d-27ef-4f6c-bcc9-4b4e2f9a809c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b00d183-2693-4d9e-bf2f-939afef4eb33",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08197c72-797b-4fb4-a13b-c02ba9f6cd0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e378dbd-4cea-4ec5-89db-5bbb9ee1911b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb74095b-52c1-4841-9d3b-4cfb2b80d693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1e518b-5962-43aa-a2da-3538d72edff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618cf3d3-0dd5-4e09-9f94-82b88248cb6b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8ff693-05af-417b-8e21-da9ae360ccc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1c1e0a-c575-4c2c-8a1a-8344a6ebb915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bf3d23-1b11-4222-8d37-90f03eba9881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0d6c4a-d677-428e-9fe7-3309ce5d51b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27e6f6c-e266-4243-adbb-596b98f70e89",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..CaZ2UcTNDOTCXaDXAclLPy7_3rpuf2sbL5xwaMnN2abolieE_C7fB7RsmZ7i5_6CoKRhGnrM3_YkAms8IlObCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7618c9fa-1fde-4231-9eef-b02f4d978b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449eb9d7-b07d-4ab3-86c5-0988273b0f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfb7429-5574-4a35-9c4e-f699c001288a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720d5d93-227c-449d-973a-ad21ef396e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2273a803-7601-4384-9cd4-ae0cc58127c9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..yonwdW7r7YFAAjZZxjVrYPkLVrbLR5TMZ3bkWN1uo2UbUi5tgtlikoyyHlj8QD0MPA7xd4Jv-1PlryIVOqtUCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12ed3d6-a7d1-40ff-8dfa-d9a44a396a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea20793-9c0f-4ce6-a18a-a3f485ebda6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5def07ca-9eae-422c-b040-a82da76f0505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec250e36-997a-470a-9e0d-929cf8a277dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b776dce6-7d06-4316-b54d-70ff82b895c5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TRCl90uRMmkycDvfeHw1S7yxyAVl1-Vc2SfwwDzXkn1SqfCJxptwVsgJWwr3gQRAqveZR0xrxQczy4tWHq2FDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3e4be4-958d-40f3-aaed-7ab46b34abda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edae181-5c23-43b3-9475-ec75b185dd1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ca62eb-16e5-4be7-93f5-a105a89405e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5c2390-0f59-4e4c-ab89-e87bc5a3805c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a56f08-7320-4b60-a49e-568e359cc17a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bb5b17-a455-4c64-b382-026b2306e015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08288dc0-2b6b-4ecd-b063-bc46fe594ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3884ce-57dd-4f92-8b1b-e150d6999a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fe6aec-e2df-42ec-bd96-74558815449e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cfbe15-16a0-4f7f-addc-70db990d82c4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ymo0kNnQ9mVHr1RKpfCuR_ekUAXzNEM7stSEtbbFv4ZPZb6NK7kUBkckgwrZyBp8re9RQEedJ9yiyfzTL41dCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d56c3c-5af0-4431-955c-1f3e566ee607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769e1815-a61a-42b9-8f3f-e29c2da026f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3408c7ec-65b5-4fac-b6b3-856e1e7a6609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e54c21e-3c9c-4ec1-a775-bfbf3677c037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db262db-456c-4571-9e23-5458d22083aa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba13a7e-7213-4e38-93cd-fefb947d3ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57c4e87-ce33-4e57-94b0-83a503ac9368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a49952-1c7f-414c-92d8-e14ea6b54d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b295b178-d674-4a41-9cfd-b8f4ea0e1446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5304e4-f044-41e7-a2d1-82f24e9738fd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaef6342-6b58-4de4-babd-1d81a2d7e3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23ce58f-4817-4d9f-9cb0-bf5b5a1d4d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d8a827-39a1-4704-8187-d0327463aa67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44af5fdf-8b94-4a76-918d-d7c91ab13b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435b3404-9917-44ba-9a59-d63a24db0ef1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2b5b2f-430a-4cf8-a6a8-1564f0fa5a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d45b3b3-d977-4c02-95ae-9ac0e3bde414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a230db9d-de83-41a1-9ee2-97dbf5727a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68206bfb-41da-435f-bbe0-9579f52dfbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8518aec-7013-48be-af3c-4c4ae698bba6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c311c7e-443b-4884-b6b3-259bda5d6820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1cd51ed-7860-4766-952b-81aa34179c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab61bab-0eec-41b1-b95e-06626505bdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c11161-d08c-4b84-bc9c-2ad66c2e58a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0a8982-5798-46e6-82ed-794753f07174",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8a1803-b4fe-4527-b20c-aafe30c819c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d29d942-9e25-45f4-8802-ea564142c8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a024ba1d-b21c-4d18-968c-ced94d93265f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c887da25-91b2-4ad4-b26a-8c613032b765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff0cada-493d-4ccf-8e3d-4f2ec25c5644",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fca548-e6de-4f88-a602-0894ed58b008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcac50f-562c-44eb-8a42-023d2f943101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add94523-a87b-4faa-b669-c0c0f7c900f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505417b1-1252-4319-b34e-2cba7fffccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd6db2d-2225-4caf-a920-5dfb9af3e9e6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765318db-53d1-41fc-aef3-f4996973f586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6e28a1-a7b6-4c6c-aa71-881047b851cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b80134a-299f-46de-ba64-646c8cda8e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1361b39-e65c-4564-ab4c-84f19dd34db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f3fd8b-d259-4f5c-b0c2-c599c85b1be0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17a24f1-49c4-413d-8d27-1cf6d6554ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c4985b-7c77-436d-88dd-f1cadf3b1146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57103a1e-3374-498c-8f79-a11ec25653a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953c8658-2a03-4a85-80aa-5a3de6d53115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b31d90c-0eef-4e98-9328-f6ae5ab7f80f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85d2723-3758-45de-863c-245ecd747e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194240e5-989a-46b0-8bd0-75fc4ee10fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb16947-6aeb-4054-92c2-49d99550a4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1de8c87-f6fc-42f7-bca0-abd8d0440c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2ac92d-00bb-43a1-80f1-65197bb2bc85",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7918eff-1457-406a-82ac-9496a6e3b32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5afa41f-ef62-4030-a457-ca85c4025dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d752ba-e07a-4177-adf0-94e566022415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aaa8e1-8a6e-4275-bdc2-cdbb549a22c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca158efb-069b-487c-bae5-14896e19dbe9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edffc05-9cb4-48f0-9e36-74582c00796f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e87e6f-bf94-47ae-9b6a-63f8dc1adfdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b2ccfa-e239-491d-893c-aa032dc6707c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7d8b3b-3744-4dfc-beb7-5e6d3c1d0d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16367e9f-522c-488b-a9ee-6b23cb527c9f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbbdaeb-6f01-4964-92d3-6426837c9b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017df53c-49c9-4d63-9436-c923a9eec4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05be148d-b1f0-4614-804b-226b0aea9448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4a0d95-9b64-4e52-b9d5-286ef68131e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a362fa9-6758-4ce4-8249-6c75f4e8711f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bgY03ZzK02APUHCDiqUVMYbbvu4mSPNC1sGY3lTC8ko7j5oZDB4rB8FRzsXCc9L0O4nHx4UNJURCsRZUErbRCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd594d0-1ae4-47a1-b3e4-f1e0bf1f04ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f40b784-5c83-4b3e-8270-25cc43b66782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28f84ee-10a8-49e7-92aa-e6149aa7a6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d1b6d8-45b0-4f23-8a0f-d7d735e28de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58ad629-a96a-4a7a-a41e-ccbe5d9403d6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2Mu6q2PaIBjmfXHqLuT7XIFthDHboV4bdlIdLFY9KxapUXic6uhoefYFrarss-AN_5dUHdjWnHEMCoWYjW4MAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d2cf16-f0bf-41da-8b54-2f333f8ec3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d6523a-30ec-4928-b44c-35fe4c78520f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d3dce6-54fe-4f5c-8c5f-dc74556fb4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7167e27b-8168-4ca7-9db2-bfb01dac310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f29fbc-27ae-461e-bae8-eec9f4dc42b0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..L3RWLJfQzaffmRy3vXZF_7gfdlR-iQbA_8TjGFaBCmaOqm8R7Qi0B6JivEqshh8MZWufDitgO-r6ASk2iaGVDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d38214d-138c-4493-a0bb-f21350865dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6dd827-8b16-48c1-aaa6-2580f0b4be6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b13a97-721a-473a-b8ba-dc8849530c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14292b97-e87c-4198-89fd-03ac6faa5663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e8b2c1-6128-4a64-9296-4fa294dc6d60",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b5fa10-7a95-4baa-91bd-b1a076ca1605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac8d910-b1fe-460e-a82b-04e88a39fa89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d1c224-cf34-49d5-8bc8-d72c4039ac1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535fdd13-bf9e-43a9-bcf2-8a8dcfd1b1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be0becb-e66e-4095-b4fe-927a09df8d63",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321500d7-7fe1-4c16-8941-8c448a7b1b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b0b641-635e-4ec4-a244-2864d7bcadd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d56d7ce-4737-48ae-ac1b-f604ad7f5684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec192b9a-2d4a-4295-97d0-01de244333dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3342ee58-d2c3-4da0-9651-dfe36248d68a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..E4WypAOLo4KNTnvHucei_9yLEMdlq_UwhS7mexlp5i3hF8SfBAlLv2scHANd3Ikhtqr9JIyaXuDnIN2LsaVFCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e002600a-bda9-4f3b-91bc-af27f55e3d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7758ef-fe01-41d2-8094-656d7c51e8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd70c2d7-e339-4ad1-820f-9b48c4066090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18f1cee-ec26-4712-a09e-2e28de86ae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce70a77-e425-4326-90e6-7ee21614a5d7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rnEgkKo3EQPiGixl67oPIFuZ7H9zueq0ELswP2p_FdahgJooIojScCnp-AcxeC_G6YDtLUbsNlVy0SkDvTnwBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effa0742-3d12-46c9-80e5-b22a6861c546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f7afb5-e7ad-4020-bba6-3cf03b5e362c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9b3a9d-e9c9-43e7-8287-91665fb07af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22b5bb1-1c06-4463-8095-c4dd01819f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35298f7-1159-4a8f-90d2-6418c3579624",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..nK8J_eHLw18__7Byp9ohgpDCHY1-Wfpw8vk-8k-nw4ezzjlwYoYjbo9x_xx3ES0WY0aCN2Xr9SbRoZHr78P0CQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f0046f-bbcc-4724-8242-f57edc6ee5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175da6dd-a9cc-4a9a-9b91-bb27d3e5631f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8e75b-1bf3-428b-9b0f-bb406e7d1dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6e5429-e267-46aa-a450-0d830daabb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631b3798-6b4c-4446-abd4-11eed13218b2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b1e684-3b6d-4d4d-9d1f-a7e5a92393c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ffc4a4-3762-4eb7-a4aa-0bb5063c71b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1ca00a-370f-4cd5-8de9-83f31b9a8860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28490457-0fdd-4e5b-bd0d-a300600ecfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa72819d-5632-4b20-8806-63592dc89a5a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GEyy2tqmKf8AzHhXY06veUbSRVk9uoQIu21GZlYtcdMGh-VrTjvfVg2R8DAFtCBe6tEUL4dnsM87mT-20nG5Dg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2514a85a-4083-4c99-a7cf-64b9c5a2f4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c778acd4-fcb9-4568-b0fc-fca6bc0f0826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3021b77c-e294-4bf8-ab44-26b0e8af37d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3496faed-26e0-406a-aede-35e868c53d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7939bc0-3c5d-4b73-9b9e-3dddac883cea",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a6547e-081a-4ce5-a301-3585f31c9eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a88c625-f3a7-45fb-8031-f244f07b17f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95815ce9-c130-47af-804f-8ed8892e2d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea72182-d7f7-450f-ae3a-2507deb7ea78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ba65bb-7217-43aa-b466-4cd18440fce7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vuVI_mdt7bpVwmKIsmIusWlCbj-wk33p6_FC2COcGBKzh9m5jxydHlDRIM6YoJQJWpS8_EavVFKwQvPuLuwNDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8b6c7f-6f84-418a-b9c0-fae74ed9d7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727d35b9-6893-4fa8-ac03-e2de68ea98ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4735c7be-b1b5-4867-b260-bd35d9cbb217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95dc6f20-04cd-4abd-a802-90fa13a03815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b43a90-917b-4d56-961a-67df7d972874",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jurLQ2KXgTdIxIAB1dwcysrBFVMT95g3Mn2SuyxAubRWS8Rbe-dFsoVG24kxo5wE6EZVYEuES8uHwNX_SSrvBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90d3d72-c6e8-4bbb-8588-257850d9a256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d89c67-559f-4541-8c34-37e6d37cadc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725d23c8-e3f7-4d7f-9aec-743d5bebfd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6db2eb-bb65-46d3-99cc-27cd2b4a3795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d13c19-00e9-4530-9493-b13bd5fb2060",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HyTRfrVnRzNCXO3qmmbQnmtXYV_bAdmZg-27bnuBGqQScL87kkmPfY3CpSTLN_8aV72mVBkvy1-uvYhkQotmDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7597a5a-e0ac-4f1f-a99f-ca0608c7de87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ff7e95-87cf-46af-9cc5-e5fa8409bd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f612012-33d4-4186-a927-322b8f24227b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e731e1a9-eeb1-45e4-8b45-d94f6b52e9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3709e7-903f-4aba-ae13-212de03f5308",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5950faff-998b-4827-aadb-82e3a3356118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98461c1b-c601-4721-81a4-3fba6d1ce74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84796ea-b556-4a84-9235-faf72548d12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a84e575-f953-442f-82ea-f6e080087c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d8b891-a75f-4c49-9b5a-599af82c08e6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5NhiK8XqFDY7TB3l0Mli_VAhnflErggK8zlj71jNg6F5WD4eNAVufeVLhK8HtvGaC-7R7nQzQfzkCH9692DUAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214b679e-8ea0-4ae8-8b65-d87aa4366c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb2f9e7-4e25-46b1-8cca-7f395a410065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63df159-a438-4c4f-a60e-db095a4cc084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b4f309-7d95-41be-8f73-b145a7229c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d1e182-547d-4274-9e13-08b585ad6fa7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1phNak29yV9Dt7ljiilV_cD1b78U9dV8Zhwjgrocc4Nahxchof8QHmEAFjfupRQZ71WIBpW-VGUtW-OwUu6eDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17289221-3762-417e-b8ba-8afabb046938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897abb97-0b13-4802-89dc-c0de4bd83859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d485e734-92f8-40e7-8b45-aca338aab445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cbb3e0-e700-421f-acad-a260536d25df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a286d7-d3a6-4f07-a445-65ba5982f1da",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ce2938-8805-4127-856a-d4deca911626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96e7bcc-5dd4-4102-920d-16f41f0d202b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511f30c3-8ae2-4f44-b1a2-ba665381f662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5591dd2-af1f-4420-aede-fa1f58721349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ef24ac-4687-4e64-a04f-48444e082c9f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7705b52-f8a2-414f-a604-d78c35ef9f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787d3842-b133-4f72-b8a2-1d5bc0119a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2df7297-7b7f-4cd5-88d0-5dabaa43b844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09df7fa-7a7d-4c9b-b0d0-4244cc244970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d5d1e4-fd7f-4833-8817-d9103b8a164e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..j1W65DhMkwul7bodXfKrVNsT_27QIFO7rI-8TDk0-ef-wu4PU7OuA8MFAOXfx-HdVf5KdqVu0BB1ITE6WjIXCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b337f95b-22a5-4886-8045-7e551fb47f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174a8c89-3062-4914-8dcf-f604300b2708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305253dc-8609-40f3-bca5-0d224f05d3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8ff481-5ea9-4fa2-849f-553512b0c6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1c0606-1693-4e85-86c5-8d37a35d19aa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Wm4yBzXF87zLmyA0LMEwHSWs-2EfPpdN2yJstmvPJkPVLFdXKUdjh7lZuHNVtTkAMGNT8Wi_RZ5Q1BWAY054Cw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ef39f-8704-4ca1-8c1e-aa1d0964a8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ac0f86-8682-4f1b-918a-942a0cf3c81d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff0b08b-bc28-4112-b4d5-d68b9f675fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433e5bd6-1c85-4b09-9cf6-098251721213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e958ddef-7ded-480a-9eb6-f77641b836a1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ff35bc-d005-4b5b-959f-d2462a103d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74284398-f1a6-4be4-8d67-117335a29c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31863785-cef7-4fdd-9a06-aed39a83d92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd0d5f1-dc64-46bc-bdab-03361866cd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ed29ff-3fdf-4946-ac03-a924369d9c21",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f981f9-0ba7-43ff-b126-2c60b8b6f935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a1e0e2-3edd-4211-968c-4a729eb7bdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fc784a-37bb-4179-bf45-f14e9e81d876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7fadde-4a12-4717-9915-b8fa83daf052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb809a5-a933-48d5-8f00-f671b97321d9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VDVadt3rnBQ7P8dSYyZU5RHdfxVBWz3liR1wKbXbfBuaNT-rJYOoUCLQj-7IQ2elQaB4Fhp2nsgul9ZQmZc1CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e436413a-0a4c-4441-8b6e-2bfb932a19f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3800b509-ea3f-4ed2-b356-c0b88ff65134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ee7e77-ad5e-45ca-b238-09c0bc0f6657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d4536c-2150-4c20-b046-6f802cbe04dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e753e2-2098-43e4-b278-7f624c5759af",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Kz272GRCnCfgHy4D8txIaM1bY5O5vW8iFfQrL2B8a7OnaVTcq6nF-dhqnoMLHPEbrUNzHK7spVAZG05Njl6CDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed839624-e484-4aae-bc0f-a13a761300f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8096dc9-32ea-4645-a368-5702b45da3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95835a76-c50f-4d6d-9b68-a7be2ed775d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88b325c-644a-414c-ad61-5ec1ac24ddbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712cfb82-ab89-4be5-aec2-197fe6143a8b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..P9pVMuK8IN7B38_-uHlTyqAeQFcasIOW06wJWEZDZLPpaeLA4L-S6ee-tZsbGmM0QoSr8WTkbqkhiXpEhuIbAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567f6012-0228-4497-b8d2-9367197b6b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b41708-03a6-49f5-a44a-c08fe77e4406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc1084-1386-40eb-a715-1e23c7f64705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1824b4d3-0810-4ad3-b450-3e3d322d601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e230e900-1c93-431c-a779-1aad4bc6a398",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rdlyOsz8ZwKwD5_CacS7c9iPQnRUIywCc_sHdyJlADD9Cq4cRwRw0wwJ7OZtLDylbm512V0s3Cn69i1qMWc8Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539a261c-b879-4e2f-aa8f-186b5c308a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3718d196-aba6-49f0-a2be-07480650b286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb0285c-5050-41f8-a9f4-cf743f842ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5167ecd3-c2a1-461c-a11e-b4bef375f891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d20b57-74a8-4a31-a881-645791a0129b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YXI2e8nVY98qybXn64g4bOG063TH6yjKFmSF9gRq0MtX3q3cex1t5ayc38JjZSBEgoJTKQzUTbL71FOukoNrAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8928b0-d157-40cd-8539-26f098c5ffbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cfc056-2317-48ff-8836-0f98ca3c887c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e003a9-868d-4bd5-8d95-42b98e78f236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381cf49b-cdb0-46b7-8480-efb88f8a4566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c04f2f-02fe-4bb5-8635-b6aa3b16df0f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c72948-6ed5-4ab2-a3e7-0fc6aa1e2ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0effa8b6-775e-4130-bc3e-27e00d6a41f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86d736d-0838-4043-bf10-78d0155722cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656701eb-20bb-4509-850a-6e9da163b090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b73e234-e5d2-4cd7-bd27-5e3fb6ac892e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceff1416-945f-4eb6-bcec-9f34d6b87f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07dfa918-67ce-4165-91a6-4e872e630ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2633d9-f71f-4b00-bb82-101919b3e9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30eda5b4-f1ca-4def-bbdc-a3343d278b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5b41cd-6cd5-4d2d-8f13-bca91927d1cf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aa6aa1-8d50-4a31-a2b0-9552e6720328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a60e2f86-2558-4e33-a1fb-2691fa269d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c82a90c-29fe-4c67-985d-05c5abb7e51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3003ab-1252-4266-b8d0-1c9a2b081a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de611083-1313-4232-9599-5bebbe42aed5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcd4433-c907-4df6-9883-081565e57419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04164c41-8bde-433e-b12b-b1f3ea1f7f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5150e4d4-6604-495c-85f7-e19cf8db21e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4419a0-828c-46b8-9520-d445079d7f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d969316-e27f-4a4e-87dd-068ce79ec03c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775995ea-9b1b-40cf-ba44-d80580b970ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de9a2b8a-69a7-4094-9c04-49f4fda71f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba5e16f-ad0a-47e4-a0a2-73a6ec649fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d5400f-0e94-41cc-a202-d6596c26837b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeff023-2518-494f-8b13-00b6a5248444",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac8656c-aab5-4575-a6a3-685182e47fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee733fe-0404-4244-a51b-e76c689f3070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5307ec-239c-4243-870c-fc15ec4d9351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc36b84-1ea6-4d9f-b27a-24bb62c793ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac3dbd2-c800-4cbf-a06f-a7f58246816d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79fc655-655b-4a97-914a-b58ed1c5e89c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c79509-88c9-4643-8fa9-5ae2b85dddc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c04385b-66c8-4c9d-9a53-597c6b6be9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d7429e-e362-419d-93ba-1467364ef037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d02a7f7-5371-44e4-a5be-96b3b12450d8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e8664b-04c7-4f92-8e19-fa9c45ef8df1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a4e023-7f69-43e8-8b46-a6d0fdd65607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a85856d-7e18-4565-9ac5-920f6a7a1ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cb1bbe-e1ca-4d03-b29e-d090b3982072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db605b27-e568-46f2-9263-95390bae2814",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ef1117-eeaf-466f-8469-ce2d88468456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec1a7651-0512-4b83-96e4-5c5d925dd507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a185368a-6912-49b2-920e-cecac18f0b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1486657b-de8d-470f-a80f-0eb72b49af85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c791b19e-5755-4a3c-b831-b9c8dc22d2e9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6bbb78-ca7d-4486-b48e-30ea3eb163f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f348d094-7dcb-4245-9d2b-d470baf47f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9600df4-9d6a-40a3-afd1-ec1ba15a7ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9eecc7-f95e-42be-bbdf-4df12c2e7a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b237fb6-130e-496a-ae0e-f476bf627f0a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da42cf9-0743-4395-a55e-a9d3f2358bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43002272-bedc-420a-a4bf-b791af14e2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e95ccc-7468-40f1-9bab-2d4291367cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09951323-ceaa-4bf7-b571-dc709b1efce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a4cd99-dd6c-466f-92f3-884b3b5ac764",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45b9cc9-402c-4f73-8903-7126fad39d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd4140f-0c7a-4471-87c5-65859006aa82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a41da6-a11c-45f8-99c3-c8ea68062092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d582bc-248f-439f-95f8-d4856f188335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b4e154-3b7d-4147-ad2a-19fc60e62af6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15e3df8-9c27-4c87-87fd-6c516f7fb2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a46365-c2a6-4e70-b8a2-32315ba37df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5c5f63-ea74-4a40-b83a-07ed45818ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d3819f-bacc-4fa5-b88c-24c54e3e5f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8acf669-edb1-47ce-ad06-791539a82828",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece7c1fb-f0e7-4b1c-afdd-0e08a3c145ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a280c6ce-8d39-44f2-aa98-be4c1a6eeeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a232dc11-7774-4a9a-a60f-d58f5a28b300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538a5663-59c7-4c45-bd29-2120fdfe5ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cc74c8-dcc1-4e68-9ef4-091faf4e5679",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630b7dc7-e9e0-4bfd-94e0-b51c5fd9e433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0aca3a6-4cab-47d9-9793-8cff6d269662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a76c0d-3b75-4ab3-9ddc-ab01f5b982b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e53d83-910b-4f01-8b81-b7e33b2c3516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e246e1c5-5c4c-4a3b-b5c5-88fcf4c59e55",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3284adc6-48e4-42e7-8e9d-aec22a062b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71fd3c9a-5b6b-4530-b718-e6b0f2ce01b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f19706f-25df-492b-9180-48ec3b524635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd31f49c-ee68-46fd-9a88-34c9bca88d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4922cd65-f41a-4a2a-b2e4-603e6eef8444",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34980f66-9aeb-451e-b907-ebbdec63c515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dab08cb-ad9f-47a4-858c-93f9bad5cfb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da1c3fb-f6f2-43d5-b87a-cd920d579c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78bed03-d426-4e49-8776-d07cea6d2720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a8f47d-9c18-4ebc-ae04-5d40948dbe76",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e155aca6-7aa2-41e6-a37b-98992af285ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed7cccd-5887-4065-b13d-e8cc376cea4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0bed29-9721-4e9e-b3ec-c605119c2d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9f3a42-6f0d-4e67-ade6-163a8a75a093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99481af-4e0f-46dd-843d-aaa7f5cd01c6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4538c4d-7222-4279-a64a-d3758a50f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "538648cb-f939-4097-af34-bb5b641cc136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9950ef6f-7ff3-4044-98c4-10ad32463f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40603d3-5f32-4bb9-8a26-b5f39aeb7b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d1f5ca-717a-4523-9681-8d25130d6258",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b351793-75c9-4721-8f6f-49cd3f0be2b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab942fa5-1305-4f79-b51b-f6be3ac254a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0767d-f805-4908-8090-d945c97b6951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e2b3a2-23ff-427f-a78d-3ef792c9ef0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ab4c3d-d730-4f2f-96f3-cf27f78e3576",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103bdee1-fdcc-492c-b26f-62abd2f27d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7319c6-931a-456d-9e5f-850d21e7d8de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e299b1-45da-4478-960e-8e5c8a4557bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf96d09c-7ff0-4540-b8b5-08f8f59bb5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ada295-606a-4d2f-8907-e958b03b487c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d30b8a-2fb6-443f-960f-7cabf6180623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98e6100-c506-4eb2-837b-0b14d99b6520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5afa09-fe5a-4f06-828a-46141b101321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63da2715-e59c-42b0-ba20-6be1bdb4f659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f5af7e-a246-4e7b-a9db-980b8477d949",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5610de34-b651-422c-8846-482697c0b52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d108971c-0170-41f8-af21-7dc20872d341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8aff31-1f1a-48ab-a811-745574b6e159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9c08d8-5980-46c2-b1dd-220826f6f31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1252531d-ce30-442c-910c-1b9759add8a2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784f3412-2ccb-4543-83b4-10cb20504be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9999c205-293e-4efe-800d-ea310a2fc9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c88a065-8e13-4c2b-8c61-5799cb8b3d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdb3bbc-8457-4cbb-a907-d5668a483a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c283f64-7825-43b5-8c64-a0a2f6789804",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87fe007-62dc-4f00-b31b-ad7162654a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc9a7a2-c3d7-4e54-88ec-bb0236909ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe921f1-d23b-4328-a902-5ff9db309e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6102f34-82a1-4d91-a559-561c07c6ecf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bfe941-0f51-47c3-8cf8-e7e98a9ac6d0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc82c4f2-d839-45ab-a199-e5d87b673151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e431f0ac-d448-45d5-8538-eb818d6a9e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d49f589-eac3-483e-a1b4-6428f9b7f31f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67eb4f90-3af1-4438-a825-29ef42ecb95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7755e90f-beef-4662-9c05-e7bd795b3f34",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368b9c4b-84c8-449d-bdfc-78ab82f5ba1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10cb0f94-6a6d-4053-84f4-9727e2649248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59b3e9a-3b4b-445b-90b3-4f346307a6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a4ac66-977e-4d50-824b-058715f2ee61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5111795-8239-4574-b458-65e40e4c12b0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab7acfe-7fbd-4094-ac00-ae01b35a988b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1410986b-f08d-4369-a0c0-cb30867105a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6506b8ae-ef30-4264-9bae-4249a6964991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593ce039-361e-4a58-bbc7-992a04bfddde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1512d5d-906c-49fa-8230-d64f6e0ff2d9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab7e42c-7375-412d-a5b8-dde02793aeac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a728824a-98ad-4771-8774-78c109b2a165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295d083c-bd45-45e6-8b6f-99e35151d5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a2b1f5-f94f-4907-95e3-019877897bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6a481e-0782-4201-a09a-8ba35189b15d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f27f1e7-407b-4815-b7cd-31f5fe0f8e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75cb712a-27ed-46de-81bf-602a18042450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae7a7f-db77-4152-84ce-77c663ab71cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d8eb0d-c406-49eb-a854-ec95a58349ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cff729b-778d-4e8e-983b-45e680f6540e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bd0fb0-21cb-4213-b884-2b4944ecd48f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e0e6f1-7343-4731-ac55-215b626f6113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df75067-eab5-4c9c-a898-ae933d21edae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a177897-4b99-4877-b7a2-ef49cb8bf887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ff73a1-2af9-4233-8693-c10aaf8a9406",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4832fb7c-4494-4d64-b74c-3a83fd4c2b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0142c8c7-6cac-4ed8-9fa0-a41fd7d299f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f415b71-d526-4fdb-b0d3-47754a4fbdf4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0304d4-3058-44f0-90e9-80166eb82253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11f622f-6db4-4db6-a0e5-6fc893d398fe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d176a916-6ac8-4bb2-a73b-428ff0123915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e52574-5af7-4e44-b30e-9b6c6bc196e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168eaeed-45de-4583-9842-a334732022d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed3c68f-0f5a-4fae-81ff-008e3822aa56"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "224a81d6-fd50-4c5f-998e-682eb3469047",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2b41f9d-accb-444e-b61d-1c256958ba77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d194e34-8e73-49ae-8d66-26f3ba4c7f71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8158ab1a-e7ae-4492-b1a5-ef9a63b52318"
                    }
                  }
                ]
              },
              {
                "id": "1dd2d88f-1f9b-4833-8f1c-6ed8699ff1f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed3a92eb-c5ea-460e-836d-8fb1184b2cbc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8e647b-1f8a-4eb2-9ae4-f9b042309d5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0cdc8198-812a-4912-bce1-fa46ef9f5222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6875da6-6a4b-4f22-b50e-83ecd9f501d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84297fb0-bc84-4c71-a9ee-7e3163d124ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c60e33-8be8-4aa2-a562-2c26e700841c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91bc081-e4fd-48f1-a935-c097743d3b9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0c1c210a-0070-46ee-b8c3-32d6b3d65a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d82e83-65e6-4522-8cfd-035d7f21d462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8a0555b-ffab-4733-a1c3-75d416330d7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e293e6f-605f-428f-93a6-8c145414d78e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdb41a4b-a3d8-48df-9a1f-6e7090ffd814"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "369b3f0b-f2e1-47be-b65f-504a3544e681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e76a77c-58e4-43ea-b326-16d6dd0d01fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bc0fdc3-7d00-46f3-aead-0755835672bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "68625aac-1b12-4318-a87f-9ca4540bde88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be92cf6f-9584-4dee-9810-e043b3ed85fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7be31ced-04cb-4baa-932e-0e4ad9ef0989"
            }
          }
        ]
      },
      {
        "id": "66617af7-266a-4460-8184-b3069333619d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "688f8141-7f36-441b-8887-bf13788d2713",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46c22bcb-84f0-4803-9ef1-f1fbc347a532",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92962204-c685-43eb-ac04-4695251f6c95",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919ed4d7-5c03-479e-8d63-fcc88e4431f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ee8807-ee25-4acd-a2e6-9aeb7d51651e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9114b17b-5aa9-4456-abed-b13931a21a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f1e2b7c-0776-4ccd-979f-576959901793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b43bb4-546f-41cf-94e9-43ec8af5072e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d13d807-342e-4e1d-ba23-5557a41d67f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "aec34f2b-71df-41aa-a062-0d6b60f9957f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275378eb-761b-45f5-b950-d15b4d7a8ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16867690-14b8-45fc-b4fd-5cc687e5e9ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67164bf9-6660-4866-b342-f208bfcf0fd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed48f73b-e1b5-46e6-b1b8-ba086be313a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3116e7-a233-444c-9491-fca8c77534e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "959f9065-8053-4387-a5eb-798a1fd123aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce10d69b-f482-4991-90fe-ae90134c9002",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "100c015c-e5d7-467e-b977-11cc760caf6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3defd352-76ab-4055-b79d-1d3250f816b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abad38c5-6645-4fc9-bf22-1e9841b3a75a"
            }
          }
        ]
      },
      {
        "id": "3a1cdde5-89b0-4c08-8a63-cbb87e74a210",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f1a11da0-85b6-463d-ad5f-d9678cbd29bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfdb4033-77b9-48af-bd8b-6e884e441d33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49ad556e-d104-4773-afe7-9e402b7f71b8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f41d4f3-35cd-4958-b7e4-f3e4fc13918e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9aa8c67-b094-42de-89df-61f4cc3340b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4616e97a-8fc1-4fd8-80ff-43af29642533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1208722c-7c48-475a-ae02-3c7627ebd0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b0ee2f-0270-48a6-9d8f-e356e6b41429",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743ffc47-81ab-4c09-8331-72fb1bd8bf62",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c20ffd29-bf5e-4f75-9798-c86b3ddbedd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8a1cfa-47a1-4a39-a53a-601547aab521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bc7a473-4c92-4dca-9007-6886707dc91b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85e16bb4-40d7-4dd3-94ae-1d3b5ffb99b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "660577ab-ed69-4de3-a6ed-34d28da57f16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fac6d22b-4faa-493a-b603-b9b6c8f085a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1476e51-faaa-4d5b-b15d-3bc4770edecc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bb7f074-cf69-4916-ae45-09a26622ac8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "ca09a5f3-2f9c-4784-9ba8-6d6915498d31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a91b328-db94-4299-8996-b055f3f53ba8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f8b5268-e017-4dae-8c57-1e0ff36bfbe5"
            }
          }
        ]
      },
      {
        "id": "57d3b225-064c-42ef-bec8-7e61c75f5cd2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "49b2c692-7a14-4073-8bc4-155d8a0cdf25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8530806-4473-4226-8a54-17df853b1ddb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e19f9281-bc3b-4502-a9b9-290c418837bf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177ec1a4-bfe3-4a0d-9bff-a84a75f20afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8a3a99-e581-4bcb-ac70-641f051d3e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc245df3-c7c2-473a-955b-ae81c5fa80e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8d5bd2b-749d-410e-b054-49bee79eb277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d11b862-85cc-4fac-b01e-09911d68f9ac",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fddf63-0ae3-4a70-bd15-2ab80bf9eed0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "6c0d9ffb-8122-4637-a4eb-192fb6e0e036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73d6a65-cd33-47bb-84df-e9cbe771872e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c9df2e8-be31-44e6-ad58-cf479320d897"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e696f6dc-c2a3-4128-9644-4d6654cc465c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e4d5119-0869-44ec-8f2f-b2b2812cc89e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfec6e44-30c8-4850-9087-78e6b21d6fd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41a0046d-8f88-4d66-bb0c-c90da6f660d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d584035-2419-4e6a-935f-5bafe821186d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "a8df6534-be66-4d12-b712-fdae95da7f45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53f22191-a250-4183-8ae6-09c7e1e10bc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6ef7c06-6d15-4962-a91d-71da670545f6"
            }
          }
        ]
      },
      {
        "id": "8198cf56-c391-4461-ad82-4de4707885c9",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "99a479f5-67b4-447d-a6af-f0299b8f887c",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1193,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 200,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 309,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 602,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 591,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.57,
      "responseMin": 5,
      "responseMax": 544,
      "responseSd": 86.83187836273045,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1663792243440,
      "completed": 1663792260983
    },
    "executions": [
      {
        "id": "0c8e88a7-5c47-4f6e-9f74-60000078afd3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 152,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eb8668c1-f814-4b8c-9b08-cde30990891a",
          "httpRequestId": "c1327eed-d3f8-4d7c-9303-f224655f3aed"
        },
        "item": {
          "id": "0c8e88a7-5c47-4f6e-9f74-60000078afd3",
          "name": "did_json"
        },
        "response": {
          "id": "fd6b42c2-7d4d-48d1-bbe3-08e848dfe05a",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "b60cc7ec-2253-40d0-ab44-a571594fa4e5",
        "cursor": {
          "ref": "23f4e583-f369-4454-9af6-e01c1c6e584c",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "19589dce-5306-4439-924a-f221741a6599"
        },
        "item": {
          "id": "b60cc7ec-2253-40d0-ab44-a571594fa4e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d0a29ede-2b3e-4969-9af2-0106c7b09597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60cc7ec-2253-40d0-ab44-a571594fa4e5",
        "cursor": {
          "ref": "23f4e583-f369-4454-9af6-e01c1c6e584c",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "19589dce-5306-4439-924a-f221741a6599"
        },
        "item": {
          "id": "b60cc7ec-2253-40d0-ab44-a571594fa4e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d0a29ede-2b3e-4969-9af2-0106c7b09597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fdaa6d-6640-45df-9ae3-7af4d3c635be",
        "cursor": {
          "ref": "0ccd47fb-f892-4241-b2cf-c4aa7db39459",
          "length": 152,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5f02d2e4-067e-4fc6-845f-98fe0c8a8b7d"
        },
        "item": {
          "id": "a4fdaa6d-6640-45df-9ae3-7af4d3c635be",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4851275e-9474-407c-9771-1591ac836727",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad61ca0-8f6e-4c17-ab85-df4dac6808b8",
        "cursor": {
          "ref": "c695f0b6-ee24-498d-aae5-3b09c37b6cad",
          "length": 152,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "790769a3-12ea-4565-ae2e-a03794871445"
        },
        "item": {
          "id": "2ad61ca0-8f6e-4c17-ab85-df4dac6808b8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "94a9c835-0293-4f9a-81b5-7f3bf15496d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020bf7f7-7986-49ec-9a2a-eb4b255c8b31",
        "cursor": {
          "ref": "4aaa4331-d0a1-4f08-8c92-5edf68c66f9d",
          "length": 152,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b83fbd2d-db23-4534-8196-01737750aad0"
        },
        "item": {
          "id": "020bf7f7-7986-49ec-9a2a-eb4b255c8b31",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9b43f564-bb11-46b3-9923-ff6b918ca632",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c28bf9-02f9-4428-8fcd-53b690bb2deb",
        "cursor": {
          "ref": "2ffcc44e-e8a9-4fe4-9ce8-827045e396cd",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "daad4d37-f9a7-40ac-bfa7-617e61a19aff"
        },
        "item": {
          "id": "c3c28bf9-02f9-4428-8fcd-53b690bb2deb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8ba3b345-21cc-42e4-8f08-9971ac0ceaf1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 17,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c28bf9-02f9-4428-8fcd-53b690bb2deb",
        "cursor": {
          "ref": "2ffcc44e-e8a9-4fe4-9ce8-827045e396cd",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "daad4d37-f9a7-40ac-bfa7-617e61a19aff"
        },
        "item": {
          "id": "c3c28bf9-02f9-4428-8fcd-53b690bb2deb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8ba3b345-21cc-42e4-8f08-9971ac0ceaf1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 17,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76c9508-c460-4ebe-a3e3-a1cd023ab4b8",
        "cursor": {
          "ref": "7e7e692d-1b8d-4c24-91d2-9641012e1f1d",
          "length": 152,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3788aa21-036c-4277-a35b-659b6ff30b1b"
        },
        "item": {
          "id": "a76c9508-c460-4ebe-a3e3-a1cd023ab4b8",
          "name": "identifiers"
        },
        "response": {
          "id": "0ff61a53-bf30-4e8e-b803-6154ba9a5dd9",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1a9ee7-a805-40aa-8eda-21c15d74051f",
        "cursor": {
          "ref": "1a7ec45d-c811-411d-b2a8-5e266a5e7d6f",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "212c2511-b5f3-4aad-a06e-c1e36664d3fb"
        },
        "item": {
          "id": "3e1a9ee7-a805-40aa-8eda-21c15d74051f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "259c71ec-47b9-4f58-845c-77ce856b4c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1a9ee7-a805-40aa-8eda-21c15d74051f",
        "cursor": {
          "ref": "1a7ec45d-c811-411d-b2a8-5e266a5e7d6f",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "212c2511-b5f3-4aad-a06e-c1e36664d3fb"
        },
        "item": {
          "id": "3e1a9ee7-a805-40aa-8eda-21c15d74051f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "259c71ec-47b9-4f58-845c-77ce856b4c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1a9ee7-a805-40aa-8eda-21c15d74051f",
        "cursor": {
          "ref": "1a7ec45d-c811-411d-b2a8-5e266a5e7d6f",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "212c2511-b5f3-4aad-a06e-c1e36664d3fb"
        },
        "item": {
          "id": "3e1a9ee7-a805-40aa-8eda-21c15d74051f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "259c71ec-47b9-4f58-845c-77ce856b4c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb5880-778d-4527-adef-0e9d24849b87",
        "cursor": {
          "ref": "88029b38-6b56-483b-a5c1-f5e7aa578afa",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8f85d7a3-d3e6-4757-990a-1886818eef2a"
        },
        "item": {
          "id": "f2bb5880-778d-4527-adef-0e9d24849b87",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "797f612c-2028-4019-95cd-2aba18a76c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb5880-778d-4527-adef-0e9d24849b87",
        "cursor": {
          "ref": "88029b38-6b56-483b-a5c1-f5e7aa578afa",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8f85d7a3-d3e6-4757-990a-1886818eef2a"
        },
        "item": {
          "id": "f2bb5880-778d-4527-adef-0e9d24849b87",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "797f612c-2028-4019-95cd-2aba18a76c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebde247-097d-49bb-859c-f1f2ec138e1e",
        "cursor": {
          "ref": "26c36881-7312-495d-946e-c8644f430106",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35fc73ed-6337-4696-a42a-1703bea35e41"
        },
        "item": {
          "id": "bebde247-097d-49bb-859c-f1f2ec138e1e",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "d2dbb435-aca1-40d6-bfa2-504de81b78dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebde247-097d-49bb-859c-f1f2ec138e1e",
        "cursor": {
          "ref": "26c36881-7312-495d-946e-c8644f430106",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35fc73ed-6337-4696-a42a-1703bea35e41"
        },
        "item": {
          "id": "bebde247-097d-49bb-859c-f1f2ec138e1e",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "d2dbb435-aca1-40d6-bfa2-504de81b78dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58baf04-0cfb-4a78-bb4f-5aeaca48f9d1",
        "cursor": {
          "ref": "19cadfe0-1dd1-4080-804c-c18dac5477f7",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c5a4c3e3-7202-47e7-9d84-b969a6a3a682"
        },
        "item": {
          "id": "c58baf04-0cfb-4a78-bb4f-5aeaca48f9d1",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "ec170c42-68bd-43f8-a547-f84b8b022078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58baf04-0cfb-4a78-bb4f-5aeaca48f9d1",
        "cursor": {
          "ref": "19cadfe0-1dd1-4080-804c-c18dac5477f7",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c5a4c3e3-7202-47e7-9d84-b969a6a3a682"
        },
        "item": {
          "id": "c58baf04-0cfb-4a78-bb4f-5aeaca48f9d1",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "ec170c42-68bd-43f8-a547-f84b8b022078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef1d866-f2cb-4547-98b0-9be611b044d5",
        "cursor": {
          "ref": "ea78add4-80da-4d0a-ad87-82e1a4e77c1a",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5ce9f74c-81fa-4df9-9109-e3f5ec2966ca"
        },
        "item": {
          "id": "3ef1d866-f2cb-4547-98b0-9be611b044d5",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "da69a187-ec40-4346-900b-78377c206c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef1d866-f2cb-4547-98b0-9be611b044d5",
        "cursor": {
          "ref": "ea78add4-80da-4d0a-ad87-82e1a4e77c1a",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5ce9f74c-81fa-4df9-9109-e3f5ec2966ca"
        },
        "item": {
          "id": "3ef1d866-f2cb-4547-98b0-9be611b044d5",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "da69a187-ec40-4346-900b-78377c206c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9105e2-dd3c-47af-87fd-8b8a54ec7c21",
        "cursor": {
          "ref": "f11672e9-343e-4578-9ec9-4a87f078e348",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "804a091c-0310-4287-88ee-aba2d801f45d"
        },
        "item": {
          "id": "4a9105e2-dd3c-47af-87fd-8b8a54ec7c21",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "11ea6ca0-024e-43ee-8026-a9aecb9efd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9105e2-dd3c-47af-87fd-8b8a54ec7c21",
        "cursor": {
          "ref": "f11672e9-343e-4578-9ec9-4a87f078e348",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "804a091c-0310-4287-88ee-aba2d801f45d"
        },
        "item": {
          "id": "4a9105e2-dd3c-47af-87fd-8b8a54ec7c21",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "11ea6ca0-024e-43ee-8026-a9aecb9efd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5f5859-b063-446b-ae60-4b70cbed7788",
        "cursor": {
          "ref": "dffd2760-1a37-45d6-8729-fa29f75a5c33",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cd048570-f163-474c-b75a-512f57b660ef"
        },
        "item": {
          "id": "bd5f5859-b063-446b-ae60-4b70cbed7788",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "dac98512-fece-490e-98a8-9e2ea188b4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5f5859-b063-446b-ae60-4b70cbed7788",
        "cursor": {
          "ref": "dffd2760-1a37-45d6-8729-fa29f75a5c33",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cd048570-f163-474c-b75a-512f57b660ef"
        },
        "item": {
          "id": "bd5f5859-b063-446b-ae60-4b70cbed7788",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "dac98512-fece-490e-98a8-9e2ea188b4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106a450b-77ee-411f-a50a-156998d9d9ac",
        "cursor": {
          "ref": "b9774715-7480-4755-860e-aa3b59a31f39",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "881a8528-ac5d-4a0f-8e56-494dd56a0a04"
        },
        "item": {
          "id": "106a450b-77ee-411f-a50a-156998d9d9ac",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "4acb1f7c-63e3-48c9-af30-fc1bf15ea9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106a450b-77ee-411f-a50a-156998d9d9ac",
        "cursor": {
          "ref": "b9774715-7480-4755-860e-aa3b59a31f39",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "881a8528-ac5d-4a0f-8e56-494dd56a0a04"
        },
        "item": {
          "id": "106a450b-77ee-411f-a50a-156998d9d9ac",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "4acb1f7c-63e3-48c9-af30-fc1bf15ea9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91db541e-d2a3-4b85-a4aa-17ac909ffa98",
        "cursor": {
          "ref": "68ff5245-14e0-4184-9293-720be1ce7a98",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "65720d56-210a-4461-8f6f-1e267591c7fc"
        },
        "item": {
          "id": "91db541e-d2a3-4b85-a4aa-17ac909ffa98",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6b52c2fc-aa7a-481a-af59-6ddb8e17ea49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91db541e-d2a3-4b85-a4aa-17ac909ffa98",
        "cursor": {
          "ref": "68ff5245-14e0-4184-9293-720be1ce7a98",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "65720d56-210a-4461-8f6f-1e267591c7fc"
        },
        "item": {
          "id": "91db541e-d2a3-4b85-a4aa-17ac909ffa98",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6b52c2fc-aa7a-481a-af59-6ddb8e17ea49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9db2bf-7d86-4949-9ffe-554c64cbf352",
        "cursor": {
          "ref": "f0f4e7c9-840c-4fb1-85fb-029c2d12dc9c",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1f68d1a3-2571-492e-a615-cfd9393f86c0"
        },
        "item": {
          "id": "2a9db2bf-7d86-4949-9ffe-554c64cbf352",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "8ab2d415-c04f-4bc8-91bf-c57204fa08b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9db2bf-7d86-4949-9ffe-554c64cbf352",
        "cursor": {
          "ref": "f0f4e7c9-840c-4fb1-85fb-029c2d12dc9c",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1f68d1a3-2571-492e-a615-cfd9393f86c0"
        },
        "item": {
          "id": "2a9db2bf-7d86-4949-9ffe-554c64cbf352",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "8ab2d415-c04f-4bc8-91bf-c57204fa08b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eac4bc-37f1-43ac-9ca2-1e927ec4abea",
        "cursor": {
          "ref": "cb771747-37bc-468a-8c51-c0aa7678a8e5",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8382e9c5-5c61-449c-bde9-8a1380aaa0bd"
        },
        "item": {
          "id": "57eac4bc-37f1-43ac-9ca2-1e927ec4abea",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "ab96100f-bf35-4af6-b9a6-926af0b0d826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eac4bc-37f1-43ac-9ca2-1e927ec4abea",
        "cursor": {
          "ref": "cb771747-37bc-468a-8c51-c0aa7678a8e5",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8382e9c5-5c61-449c-bde9-8a1380aaa0bd"
        },
        "item": {
          "id": "57eac4bc-37f1-43ac-9ca2-1e927ec4abea",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "ab96100f-bf35-4af6-b9a6-926af0b0d826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d2c5f7-07f8-4ff6-8065-1383b7c9c0c6",
        "cursor": {
          "ref": "1428413b-dbbd-4e97-b2fc-70eafa62c130",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b1ad8245-273f-497b-9bbd-5a47f5b495df"
        },
        "item": {
          "id": "a0d2c5f7-07f8-4ff6-8065-1383b7c9c0c6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2a39b8b3-60fb-460c-9631-2231d0dc69ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d2c5f7-07f8-4ff6-8065-1383b7c9c0c6",
        "cursor": {
          "ref": "1428413b-dbbd-4e97-b2fc-70eafa62c130",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b1ad8245-273f-497b-9bbd-5a47f5b495df"
        },
        "item": {
          "id": "a0d2c5f7-07f8-4ff6-8065-1383b7c9c0c6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2a39b8b3-60fb-460c-9631-2231d0dc69ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1b0606-3c70-4797-8828-ab7cb0e274e4",
        "cursor": {
          "ref": "5e351097-e061-4641-a7d0-65251d08e5c0",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "43d34b3e-30cc-4daa-8dfe-37ba7243415e"
        },
        "item": {
          "id": "8f1b0606-3c70-4797-8828-ab7cb0e274e4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b0e4f4d8-dd03-4e3a-a86d-767ea1278e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1b0606-3c70-4797-8828-ab7cb0e274e4",
        "cursor": {
          "ref": "5e351097-e061-4641-a7d0-65251d08e5c0",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "43d34b3e-30cc-4daa-8dfe-37ba7243415e"
        },
        "item": {
          "id": "8f1b0606-3c70-4797-8828-ab7cb0e274e4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b0e4f4d8-dd03-4e3a-a86d-767ea1278e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ae4019-76fe-4486-87ea-67e0e6a3b0d4",
        "cursor": {
          "ref": "549782ad-0eea-42f4-bf08-78f312adf529",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1d6114f4-bb78-48b4-9df8-eb86416956bd"
        },
        "item": {
          "id": "22ae4019-76fe-4486-87ea-67e0e6a3b0d4",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "5610781e-cfab-4b05-89a2-3a7ff8692b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ae4019-76fe-4486-87ea-67e0e6a3b0d4",
        "cursor": {
          "ref": "549782ad-0eea-42f4-bf08-78f312adf529",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1d6114f4-bb78-48b4-9df8-eb86416956bd"
        },
        "item": {
          "id": "22ae4019-76fe-4486-87ea-67e0e6a3b0d4",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "5610781e-cfab-4b05-89a2-3a7ff8692b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a1ecd7-089f-4e4a-b47a-1aa0a61127f6",
        "cursor": {
          "ref": "2116d58b-f981-4cdb-8053-f7f4ad4806db",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f35c0079-07b3-4c6f-a4f0-8aa9b33566ab"
        },
        "item": {
          "id": "d3a1ecd7-089f-4e4a-b47a-1aa0a61127f6",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "9fce7026-46dc-4bd9-9f90-cd1c0bbbaf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a1ecd7-089f-4e4a-b47a-1aa0a61127f6",
        "cursor": {
          "ref": "2116d58b-f981-4cdb-8053-f7f4ad4806db",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f35c0079-07b3-4c6f-a4f0-8aa9b33566ab"
        },
        "item": {
          "id": "d3a1ecd7-089f-4e4a-b47a-1aa0a61127f6",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "9fce7026-46dc-4bd9-9f90-cd1c0bbbaf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86596ed-edd6-477e-b922-e4fa4acacd0a",
        "cursor": {
          "ref": "709983b8-3a66-4981-a64b-39a6e76ba000",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d592ea94-4667-4676-a76e-2e2b535013b0"
        },
        "item": {
          "id": "f86596ed-edd6-477e-b922-e4fa4acacd0a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a97fc7f9-583b-408b-9e6b-c06e3c19579c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86596ed-edd6-477e-b922-e4fa4acacd0a",
        "cursor": {
          "ref": "709983b8-3a66-4981-a64b-39a6e76ba000",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d592ea94-4667-4676-a76e-2e2b535013b0"
        },
        "item": {
          "id": "f86596ed-edd6-477e-b922-e4fa4acacd0a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a97fc7f9-583b-408b-9e6b-c06e3c19579c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6a5ea9-0a35-48e4-af2b-2500f5e1fb68",
        "cursor": {
          "ref": "b3d8f027-283e-4653-8023-29cd8539d12e",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e8a6609c-c0c8-4fd5-98bd-7204055975ff"
        },
        "item": {
          "id": "3e6a5ea9-0a35-48e4-af2b-2500f5e1fb68",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c2ebc137-8c15-45e6-bad5-a601ef7a8d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6a5ea9-0a35-48e4-af2b-2500f5e1fb68",
        "cursor": {
          "ref": "b3d8f027-283e-4653-8023-29cd8539d12e",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e8a6609c-c0c8-4fd5-98bd-7204055975ff"
        },
        "item": {
          "id": "3e6a5ea9-0a35-48e4-af2b-2500f5e1fb68",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c2ebc137-8c15-45e6-bad5-a601ef7a8d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549fc133-5111-4c55-9def-5c9c880c60c1",
        "cursor": {
          "ref": "75877b20-a8c4-4473-92be-a6b004f68060",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dcbc4e08-fcc0-485a-a4b7-5a77d871cb2b"
        },
        "item": {
          "id": "549fc133-5111-4c55-9def-5c9c880c60c1",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "30ef7146-e158-4ecc-be38-607833ab2616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549fc133-5111-4c55-9def-5c9c880c60c1",
        "cursor": {
          "ref": "75877b20-a8c4-4473-92be-a6b004f68060",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dcbc4e08-fcc0-485a-a4b7-5a77d871cb2b"
        },
        "item": {
          "id": "549fc133-5111-4c55-9def-5c9c880c60c1",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "30ef7146-e158-4ecc-be38-607833ab2616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ece166-0a0b-4c51-a56d-cbec24432974",
        "cursor": {
          "ref": "94509981-9016-4ae6-adf8-0ca20e2c9b1d",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1a8646b6-22fa-4550-8428-0696379c6255"
        },
        "item": {
          "id": "08ece166-0a0b-4c51-a56d-cbec24432974",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "863386fe-c280-4114-8bd4-88dba2e348e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ece166-0a0b-4c51-a56d-cbec24432974",
        "cursor": {
          "ref": "94509981-9016-4ae6-adf8-0ca20e2c9b1d",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1a8646b6-22fa-4550-8428-0696379c6255"
        },
        "item": {
          "id": "08ece166-0a0b-4c51-a56d-cbec24432974",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "863386fe-c280-4114-8bd4-88dba2e348e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2c704a-60a0-4cd6-ae7b-a1b417056fe5",
        "cursor": {
          "ref": "939047ac-15b9-4a9d-9616-f961070a12b7",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fb639ad8-ada5-4e72-9b06-9f6f77905980"
        },
        "item": {
          "id": "ed2c704a-60a0-4cd6-ae7b-a1b417056fe5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2228ee48-f409-45e1-abf5-1e1a745d318a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2c704a-60a0-4cd6-ae7b-a1b417056fe5",
        "cursor": {
          "ref": "939047ac-15b9-4a9d-9616-f961070a12b7",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fb639ad8-ada5-4e72-9b06-9f6f77905980"
        },
        "item": {
          "id": "ed2c704a-60a0-4cd6-ae7b-a1b417056fe5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2228ee48-f409-45e1-abf5-1e1a745d318a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c0afd4-d02b-4c85-9f94-8d55489dce3d",
        "cursor": {
          "ref": "b37fd45c-0dc6-4aa3-83f2-0d1f936ec899",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "11ced31c-436a-4c35-9c5b-59bf29c322ea"
        },
        "item": {
          "id": "56c0afd4-d02b-4c85-9f94-8d55489dce3d",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "d30f534b-a116-4035-8519-f7a1233ea196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c0afd4-d02b-4c85-9f94-8d55489dce3d",
        "cursor": {
          "ref": "b37fd45c-0dc6-4aa3-83f2-0d1f936ec899",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "11ced31c-436a-4c35-9c5b-59bf29c322ea"
        },
        "item": {
          "id": "56c0afd4-d02b-4c85-9f94-8d55489dce3d",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "d30f534b-a116-4035-8519-f7a1233ea196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb0394-b0c2-4f0b-9d66-f6e8de609b4c",
        "cursor": {
          "ref": "65da0b66-d578-4e72-abf4-ca04d04b1f03",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cf43ab20-cb6f-4ac1-b895-79206810efaa"
        },
        "item": {
          "id": "f2bb0394-b0c2-4f0b-9d66-f6e8de609b4c",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "9ace4818-fe67-4137-9e25-b90cd6f7ca2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb0394-b0c2-4f0b-9d66-f6e8de609b4c",
        "cursor": {
          "ref": "65da0b66-d578-4e72-abf4-ca04d04b1f03",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cf43ab20-cb6f-4ac1-b895-79206810efaa"
        },
        "item": {
          "id": "f2bb0394-b0c2-4f0b-9d66-f6e8de609b4c",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "9ace4818-fe67-4137-9e25-b90cd6f7ca2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9bb8af-c6d6-46cc-a0d0-40588a1b90b3",
        "cursor": {
          "ref": "fa6a5901-b670-4c61-b535-1de94a6698e6",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ba63865b-2a89-4dcd-8ae7-f7f2966aa90b"
        },
        "item": {
          "id": "cb9bb8af-c6d6-46cc-a0d0-40588a1b90b3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1f4b8fd9-7e6f-4552-9170-9d7d325ec2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9bb8af-c6d6-46cc-a0d0-40588a1b90b3",
        "cursor": {
          "ref": "fa6a5901-b670-4c61-b535-1de94a6698e6",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ba63865b-2a89-4dcd-8ae7-f7f2966aa90b"
        },
        "item": {
          "id": "cb9bb8af-c6d6-46cc-a0d0-40588a1b90b3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1f4b8fd9-7e6f-4552-9170-9d7d325ec2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaf6d11-a28b-4338-84c4-ca6789a77791",
        "cursor": {
          "ref": "2c9bd145-c556-4393-8dbd-d6b6e0e180a0",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "14cb3819-9874-47bc-98fa-f3303a0d6d35"
        },
        "item": {
          "id": "9aaf6d11-a28b-4338-84c4-ca6789a77791",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "568aae32-357b-44dc-8a83-e0960acba06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaf6d11-a28b-4338-84c4-ca6789a77791",
        "cursor": {
          "ref": "2c9bd145-c556-4393-8dbd-d6b6e0e180a0",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "14cb3819-9874-47bc-98fa-f3303a0d6d35"
        },
        "item": {
          "id": "9aaf6d11-a28b-4338-84c4-ca6789a77791",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "568aae32-357b-44dc-8a83-e0960acba06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7949f2a-5a15-4c76-859b-8324ac78f782",
        "cursor": {
          "ref": "be27b62c-c364-4d24-9f40-d6594ec61bf0",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9565d658-cbbc-454e-a8f5-6b83c945696e"
        },
        "item": {
          "id": "a7949f2a-5a15-4c76-859b-8324ac78f782",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "57589621-518c-4b2a-8377-bdac7584b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7949f2a-5a15-4c76-859b-8324ac78f782",
        "cursor": {
          "ref": "be27b62c-c364-4d24-9f40-d6594ec61bf0",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9565d658-cbbc-454e-a8f5-6b83c945696e"
        },
        "item": {
          "id": "a7949f2a-5a15-4c76-859b-8324ac78f782",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "57589621-518c-4b2a-8377-bdac7584b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ad8721-b06d-4d6e-bc0e-e41a9736ae98",
        "cursor": {
          "ref": "e0a061c2-bb9d-440f-acd9-b92218d1b96c",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "099fdd40-6637-4db1-8b29-5aae7975da51"
        },
        "item": {
          "id": "27ad8721-b06d-4d6e-bc0e-e41a9736ae98",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "74f59518-7ee8-4991-8699-be2ddd3988e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ad8721-b06d-4d6e-bc0e-e41a9736ae98",
        "cursor": {
          "ref": "e0a061c2-bb9d-440f-acd9-b92218d1b96c",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "099fdd40-6637-4db1-8b29-5aae7975da51"
        },
        "item": {
          "id": "27ad8721-b06d-4d6e-bc0e-e41a9736ae98",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "74f59518-7ee8-4991-8699-be2ddd3988e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d643306-0913-4d43-8761-aaba0f52893f",
        "cursor": {
          "ref": "af393621-1f66-4131-a5f7-45d52083b698",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0a3d5e67-3e3d-4f75-bdc1-f3b0072fa93e"
        },
        "item": {
          "id": "7d643306-0913-4d43-8761-aaba0f52893f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a7441e67-affa-4f6d-ad68-b9f518e42436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d643306-0913-4d43-8761-aaba0f52893f",
        "cursor": {
          "ref": "af393621-1f66-4131-a5f7-45d52083b698",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0a3d5e67-3e3d-4f75-bdc1-f3b0072fa93e"
        },
        "item": {
          "id": "7d643306-0913-4d43-8761-aaba0f52893f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a7441e67-affa-4f6d-ad68-b9f518e42436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1b725b-e880-4226-ae7c-af64043f1e37",
        "cursor": {
          "ref": "0c21e0c6-35dc-4e3e-bb4b-0267b78e5f63",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3080ba37-4f7b-4e01-b851-3f3badbe8127"
        },
        "item": {
          "id": "1a1b725b-e880-4226-ae7c-af64043f1e37",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "1775e583-479a-4062-9e9e-8116a8d6e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1b725b-e880-4226-ae7c-af64043f1e37",
        "cursor": {
          "ref": "0c21e0c6-35dc-4e3e-bb4b-0267b78e5f63",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3080ba37-4f7b-4e01-b851-3f3badbe8127"
        },
        "item": {
          "id": "1a1b725b-e880-4226-ae7c-af64043f1e37",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "1775e583-479a-4062-9e9e-8116a8d6e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3cc03a-b7ed-4e42-9fea-b6950663843f",
        "cursor": {
          "ref": "e313d79e-738e-4d51-b5e0-141ec477999c",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7fb540f6-ca60-47f2-9e3e-13638404438b"
        },
        "item": {
          "id": "8f3cc03a-b7ed-4e42-9fea-b6950663843f",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "155b15cd-6e61-4e32-a9b8-d9dc4937f9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3cc03a-b7ed-4e42-9fea-b6950663843f",
        "cursor": {
          "ref": "e313d79e-738e-4d51-b5e0-141ec477999c",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7fb540f6-ca60-47f2-9e3e-13638404438b"
        },
        "item": {
          "id": "8f3cc03a-b7ed-4e42-9fea-b6950663843f",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "155b15cd-6e61-4e32-a9b8-d9dc4937f9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383548df-1e5f-4cd8-bd9e-b3a9f4e0e472",
        "cursor": {
          "ref": "f582e296-afae-42df-8c93-6c83176b53c4",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6dfeafd6-8f1c-4602-a93f-c40aa7770978"
        },
        "item": {
          "id": "383548df-1e5f-4cd8-bd9e-b3a9f4e0e472",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "f0470586-b042-4e97-b2b1-9df50ccf4e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383548df-1e5f-4cd8-bd9e-b3a9f4e0e472",
        "cursor": {
          "ref": "f582e296-afae-42df-8c93-6c83176b53c4",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6dfeafd6-8f1c-4602-a93f-c40aa7770978"
        },
        "item": {
          "id": "383548df-1e5f-4cd8-bd9e-b3a9f4e0e472",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "f0470586-b042-4e97-b2b1-9df50ccf4e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d2a056-3a48-4456-8e32-5a5554ff5be1",
        "cursor": {
          "ref": "5059513a-f92c-468f-9043-9ac0b31af022",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "36c89837-4302-47c0-8f4d-7f31d50a8ab2"
        },
        "item": {
          "id": "71d2a056-3a48-4456-8e32-5a5554ff5be1",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "90c5b692-a4e6-4d93-95b9-435cbb05d359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d2a056-3a48-4456-8e32-5a5554ff5be1",
        "cursor": {
          "ref": "5059513a-f92c-468f-9043-9ac0b31af022",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "36c89837-4302-47c0-8f4d-7f31d50a8ab2"
        },
        "item": {
          "id": "71d2a056-3a48-4456-8e32-5a5554ff5be1",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "90c5b692-a4e6-4d93-95b9-435cbb05d359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf95989-520c-4112-b37b-e283860f9815",
        "cursor": {
          "ref": "86b24329-dd58-4ef0-bd10-aba2a494290d",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8227a6a4-c58f-4a32-bd47-837224711641"
        },
        "item": {
          "id": "fcf95989-520c-4112-b37b-e283860f9815",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0595165d-75ee-4ee8-9ec5-12b1dabde751",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf95989-520c-4112-b37b-e283860f9815",
        "cursor": {
          "ref": "86b24329-dd58-4ef0-bd10-aba2a494290d",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8227a6a4-c58f-4a32-bd47-837224711641"
        },
        "item": {
          "id": "fcf95989-520c-4112-b37b-e283860f9815",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0595165d-75ee-4ee8-9ec5-12b1dabde751",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c693b4-519b-46ce-b241-7b88fe49a749",
        "cursor": {
          "ref": "60d02531-d8a3-4150-9ea0-f2e3bda0fb33",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b0d8a67d-d99e-4e8d-a057-20bf470ec455"
        },
        "item": {
          "id": "14c693b4-519b-46ce-b241-7b88fe49a749",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d6406745-97e9-4709-8b67-e09461cc68eb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c693b4-519b-46ce-b241-7b88fe49a749",
        "cursor": {
          "ref": "60d02531-d8a3-4150-9ea0-f2e3bda0fb33",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b0d8a67d-d99e-4e8d-a057-20bf470ec455"
        },
        "item": {
          "id": "14c693b4-519b-46ce-b241-7b88fe49a749",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d6406745-97e9-4709-8b67-e09461cc68eb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d82065-33d5-4f42-ac88-bfefbd32f958",
        "cursor": {
          "ref": "67513d2b-52e8-46c0-a453-8f3701a1f93a",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6114e451-5b7a-4fd0-9125-ce130867e31d"
        },
        "item": {
          "id": "a2d82065-33d5-4f42-ac88-bfefbd32f958",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8167b7d3-f0f0-4351-b8e9-9c3ea5f7f99d",
          "status": "Created",
          "code": 201,
          "responseTime": 269,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d82065-33d5-4f42-ac88-bfefbd32f958",
        "cursor": {
          "ref": "67513d2b-52e8-46c0-a453-8f3701a1f93a",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6114e451-5b7a-4fd0-9125-ce130867e31d"
        },
        "item": {
          "id": "a2d82065-33d5-4f42-ac88-bfefbd32f958",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8167b7d3-f0f0-4351-b8e9-9c3ea5f7f99d",
          "status": "Created",
          "code": 201,
          "responseTime": 269,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd55186-5ce5-44cd-a972-544424a2ea8b",
        "cursor": {
          "ref": "1d08e9b6-9020-4ffc-8867-b3595598512e",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e02d8edb-4e73-4eec-a405-8a1267c55255"
        },
        "item": {
          "id": "bdd55186-5ce5-44cd-a972-544424a2ea8b",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "163b103f-5999-43be-bd95-50d43e129595",
          "status": "Created",
          "code": 201,
          "responseTime": 255,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd55186-5ce5-44cd-a972-544424a2ea8b",
        "cursor": {
          "ref": "1d08e9b6-9020-4ffc-8867-b3595598512e",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e02d8edb-4e73-4eec-a405-8a1267c55255"
        },
        "item": {
          "id": "bdd55186-5ce5-44cd-a972-544424a2ea8b",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "163b103f-5999-43be-bd95-50d43e129595",
          "status": "Created",
          "code": 201,
          "responseTime": 255,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dac4a6-63f9-4e2b-9fea-00e109290efe",
        "cursor": {
          "ref": "fe2e676b-e847-466e-b916-26815a41b85b",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f97557d1-01de-42e7-a509-683f921a13a4"
        },
        "item": {
          "id": "81dac4a6-63f9-4e2b-9fea-00e109290efe",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e8009b30-828a-40f4-bf13-f62d3300d2a2",
          "status": "Created",
          "code": 201,
          "responseTime": 289,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dac4a6-63f9-4e2b-9fea-00e109290efe",
        "cursor": {
          "ref": "fe2e676b-e847-466e-b916-26815a41b85b",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f97557d1-01de-42e7-a509-683f921a13a4"
        },
        "item": {
          "id": "81dac4a6-63f9-4e2b-9fea-00e109290efe",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e8009b30-828a-40f4-bf13-f62d3300d2a2",
          "status": "Created",
          "code": 201,
          "responseTime": 289,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a7733b-fd59-43d3-8849-aa9824fa9be6",
        "cursor": {
          "ref": "6446fa9a-ea6a-489c-9d9e-efff4a2dc0e4",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0e25e78d-db7b-4330-bb62-04ab7745ee0e"
        },
        "item": {
          "id": "35a7733b-fd59-43d3-8849-aa9824fa9be6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b5261765-3e80-4926-b905-2a1982f99f3d",
          "status": "Created",
          "code": 201,
          "responseTime": 289,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a7733b-fd59-43d3-8849-aa9824fa9be6",
        "cursor": {
          "ref": "6446fa9a-ea6a-489c-9d9e-efff4a2dc0e4",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0e25e78d-db7b-4330-bb62-04ab7745ee0e"
        },
        "item": {
          "id": "35a7733b-fd59-43d3-8849-aa9824fa9be6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b5261765-3e80-4926-b905-2a1982f99f3d",
          "status": "Created",
          "code": 201,
          "responseTime": 289,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cfd53b-5328-4a90-b00d-78d06a62451d",
        "cursor": {
          "ref": "49b8621e-4f19-4474-a9be-5187c21689c8",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b8e32464-f996-4b5b-8742-71e1ac31443c"
        },
        "item": {
          "id": "43cfd53b-5328-4a90-b00d-78d06a62451d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2d20d385-b231-4392-906f-27305d1699db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "43cfd53b-5328-4a90-b00d-78d06a62451d",
        "cursor": {
          "ref": "49b8621e-4f19-4474-a9be-5187c21689c8",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b8e32464-f996-4b5b-8742-71e1ac31443c"
        },
        "item": {
          "id": "43cfd53b-5328-4a90-b00d-78d06a62451d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2d20d385-b231-4392-906f-27305d1699db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "30db5e35-2d80-4ac1-9b40-c35ace9bf8ff",
        "cursor": {
          "ref": "657995a7-2236-4e91-9063-db93f9904c19",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e4377ba9-db97-4fd6-b91b-78e893e0eabd"
        },
        "item": {
          "id": "30db5e35-2d80-4ac1-9b40-c35ace9bf8ff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fffecc56-3430-4f97-bce2-d057b4740b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "30db5e35-2d80-4ac1-9b40-c35ace9bf8ff",
        "cursor": {
          "ref": "657995a7-2236-4e91-9063-db93f9904c19",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e4377ba9-db97-4fd6-b91b-78e893e0eabd"
        },
        "item": {
          "id": "30db5e35-2d80-4ac1-9b40-c35ace9bf8ff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fffecc56-3430-4f97-bce2-d057b4740b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "79f7f2cb-3392-46e9-b65d-9d3fcf29379b",
        "cursor": {
          "ref": "b0307507-42bb-413b-98d1-95c7b4c83690",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "adcedbb1-6a48-4eb7-a96f-772b77dafeed"
        },
        "item": {
          "id": "79f7f2cb-3392-46e9-b65d-9d3fcf29379b",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "c4ae1417-3bf3-4ddc-8b94-6e010c083099",
          "status": "Created",
          "code": 201,
          "responseTime": 282,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f7f2cb-3392-46e9-b65d-9d3fcf29379b",
        "cursor": {
          "ref": "b0307507-42bb-413b-98d1-95c7b4c83690",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "adcedbb1-6a48-4eb7-a96f-772b77dafeed"
        },
        "item": {
          "id": "79f7f2cb-3392-46e9-b65d-9d3fcf29379b",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "c4ae1417-3bf3-4ddc-8b94-6e010c083099",
          "status": "Created",
          "code": 201,
          "responseTime": 282,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b66c616-eee3-48c3-8488-769adfcf005b",
        "cursor": {
          "ref": "e3c011f9-232a-44b3-a554-fe46f33e2421",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ed16f410-5ad0-4a1b-bee2-801c5289ece3"
        },
        "item": {
          "id": "5b66c616-eee3-48c3-8488-769adfcf005b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3431ae34-1d33-4513-b26d-66056ec26129",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b66c616-eee3-48c3-8488-769adfcf005b",
        "cursor": {
          "ref": "e3c011f9-232a-44b3-a554-fe46f33e2421",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ed16f410-5ad0-4a1b-bee2-801c5289ece3"
        },
        "item": {
          "id": "5b66c616-eee3-48c3-8488-769adfcf005b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3431ae34-1d33-4513-b26d-66056ec26129",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dcf1aa-1050-417f-964d-9898665b409f",
        "cursor": {
          "ref": "f485d3b3-cced-47af-b35b-76918f242ff7",
          "length": 152,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b20d9e5e-9269-48f7-8226-fd11ec55db44"
        },
        "item": {
          "id": "65dcf1aa-1050-417f-964d-9898665b409f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d6d742b2-b313-4d15-806c-4367f591731f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd348ef-6d68-4907-96d9-5ab7214d9a73",
        "cursor": {
          "ref": "47d31ba5-a29c-4fad-a3e5-95225d0361e1",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a9c0a364-61fb-4418-bb8b-beb194145b0d"
        },
        "item": {
          "id": "ecd348ef-6d68-4907-96d9-5ab7214d9a73",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "64cb7958-be59-4dbf-8b86-b9daf5f94325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd348ef-6d68-4907-96d9-5ab7214d9a73",
        "cursor": {
          "ref": "47d31ba5-a29c-4fad-a3e5-95225d0361e1",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a9c0a364-61fb-4418-bb8b-beb194145b0d"
        },
        "item": {
          "id": "ecd348ef-6d68-4907-96d9-5ab7214d9a73",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "64cb7958-be59-4dbf-8b86-b9daf5f94325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c820b30c-1c26-4480-8922-2afb1924bcb1",
        "cursor": {
          "ref": "1fb3314f-ca7e-4e2e-a95f-35cb1fa174a8",
          "length": 152,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a713b02d-5923-49d0-8708-e191a7270777"
        },
        "item": {
          "id": "c820b30c-1c26-4480-8922-2afb1924bcb1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5858dca3-2366-4373-9e68-3030c56d97ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9324ae72-6783-4640-96b3-7154f4b1d5d3",
        "cursor": {
          "ref": "9ec274e2-60a0-481e-84da-2d176d3c7461",
          "length": 152,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1a335cc0-3183-498c-bbf6-294a8b93dd48"
        },
        "item": {
          "id": "9324ae72-6783-4640-96b3-7154f4b1d5d3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "463be93e-c1a8-4ce7-a41c-599121b0215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7c6c75-36a1-4b15-8f20-3e02c5a81bea",
        "cursor": {
          "ref": "64384e54-65eb-41fe-82f0-ff54ffdb5bab",
          "length": 152,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "03636fc9-c10b-4976-a43e-5b9fa35f953c"
        },
        "item": {
          "id": "ca7c6c75-36a1-4b15-8f20-3e02c5a81bea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "98eda800-7143-4766-b44d-7ce8aed7148d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efd27ad-2efd-4e29-99e4-5a693cc2fa35",
        "cursor": {
          "ref": "2d872b44-0eb6-4da7-ad22-8ab4cd60d893",
          "length": 152,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b09f00bc-1edc-41f5-a4be-b46d4a39ab09"
        },
        "item": {
          "id": "1efd27ad-2efd-4e29-99e4-5a693cc2fa35",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bc7547b3-4c8b-4c55-a22f-f39a27d4b810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acae67e-9275-4ce8-96fd-e6c2f28e294e",
        "cursor": {
          "ref": "d0494327-b0b4-4f1a-8b25-177fe7f10b00",
          "length": 152,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9b3b1b78-7274-4bce-ada4-3326393c6ad1"
        },
        "item": {
          "id": "8acae67e-9275-4ce8-96fd-e6c2f28e294e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0b8be018-196f-4acf-80e4-54d1d9c1499f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec4bb9b-228c-4ef6-baba-16782b501f00",
        "cursor": {
          "ref": "2bac8910-b1fb-4fef-88a4-54d8e34d73ad",
          "length": 152,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fd75d433-6188-47cc-a41f-128c30b50ff9"
        },
        "item": {
          "id": "8ec4bb9b-228c-4ef6-baba-16782b501f00",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0cb220f8-834a-456b-9bc0-d8512222e22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c4be61-d08b-42cd-81ce-bff71d481687",
        "cursor": {
          "ref": "82450c57-85d2-4272-8ae2-9cf56ebe0c31",
          "length": 152,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "465543fc-f3d5-4613-8666-d4eda77eb258"
        },
        "item": {
          "id": "a3c4be61-d08b-42cd-81ce-bff71d481687",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2505e040-3667-46c5-8a2d-6f8e204bf6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb5180e-a69c-4831-abb1-ebcba6fb2e1b",
        "cursor": {
          "ref": "8f0fbe9e-6b37-4a5e-a881-aac8fd6d2144",
          "length": 152,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ee522700-2ff3-447e-bbe9-767a24af1600"
        },
        "item": {
          "id": "4eb5180e-a69c-4831-abb1-ebcba6fb2e1b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "35a29f4a-869e-4ad0-9c8f-929e786a20de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5fc36a-e1aa-40f5-9f03-f6690f261cbc",
        "cursor": {
          "ref": "af1749f5-3fb3-4646-9973-283081216d83",
          "length": 152,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4e267ab2-d0e1-473f-b6eb-f37ab74db13e"
        },
        "item": {
          "id": "5b5fc36a-e1aa-40f5-9f03-f6690f261cbc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7eaa98e4-e319-47fa-8f4c-fdda6ad5ccec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5047edee-cd20-43df-a623-13c44ff59344",
        "cursor": {
          "ref": "3b8b52b0-5d29-4718-b7f2-e886b4f06c76",
          "length": 152,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9e763416-e33c-4644-90dc-64bb53135cbc"
        },
        "item": {
          "id": "5047edee-cd20-43df-a623-13c44ff59344",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b8c503f3-8411-4f80-9c32-5330451cccc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd613f3-03ae-4635-967e-cc570d5ba88b",
        "cursor": {
          "ref": "69157b3d-927f-4d57-9d44-e3a4cd543f87",
          "length": 152,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8d45132d-8e1f-44b4-8236-af0377ebc655"
        },
        "item": {
          "id": "fcd613f3-03ae-4635-967e-cc570d5ba88b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fdbde7c1-8e0c-4ae0-a108-eb78db48810b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5176fba9-e31d-4c81-930e-31e9bc9afdf1",
        "cursor": {
          "ref": "e119f1c3-765b-4deb-a7ca-a79acceced58",
          "length": 152,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b524d971-4d83-4239-9747-1064bc8bbac3"
        },
        "item": {
          "id": "5176fba9-e31d-4c81-930e-31e9bc9afdf1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fdfc5c86-17e9-4eef-b941-458a2c07e344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceaccf4-143f-443c-a66a-ba5d7cf02a65",
        "cursor": {
          "ref": "4117be86-1117-49a2-bb9e-f6465956a3e6",
          "length": 152,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c652a034-baae-4542-a7fc-baada45ab037"
        },
        "item": {
          "id": "bceaccf4-143f-443c-a66a-ba5d7cf02a65",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "70989907-3b59-4647-bb4d-cc8af32b1a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125fca75-bd61-4075-b8ad-3123c14b2829",
        "cursor": {
          "ref": "22d9a434-45d7-4fb4-b853-6ad5cc01b9f4",
          "length": 152,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ad3ded96-961f-45c4-9f5e-97f6db672016"
        },
        "item": {
          "id": "125fca75-bd61-4075-b8ad-3123c14b2829",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f541139c-b206-4790-8213-2bc636294da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b00d183-2693-4d9e-bf2f-939afef4eb33",
        "cursor": {
          "ref": "425d93ad-8042-4f97-a347-5f2eeb59f4b0",
          "length": 152,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e16446d0-dd1a-46db-9cc1-fde39fc5fc3c"
        },
        "item": {
          "id": "1b00d183-2693-4d9e-bf2f-939afef4eb33",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3a71176a-328b-43a6-a8f3-6a92c9bcff67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618cf3d3-0dd5-4e09-9f94-82b88248cb6b",
        "cursor": {
          "ref": "323c2741-e03e-4520-b2c0-05855af6c233",
          "length": 152,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9187a9d0-2c81-4ecb-93ac-203efb860d36"
        },
        "item": {
          "id": "618cf3d3-0dd5-4e09-9f94-82b88248cb6b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8467fd48-b6be-4471-8c44-aeb6d6fa9615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27e6f6c-e266-4243-adbb-596b98f70e89",
        "cursor": {
          "ref": "ba3c5505-f4ab-4cce-8e9d-d508c3eeeaaa",
          "length": 152,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9464e7d6-048f-466e-9255-ea28ba8bd348"
        },
        "item": {
          "id": "e27e6f6c-e266-4243-adbb-596b98f70e89",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0304fabc-3825-4c9c-a333-1641ce7bcc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2273a803-7601-4384-9cd4-ae0cc58127c9",
        "cursor": {
          "ref": "4ea22a09-51a0-47c8-8383-6f796b6df6f9",
          "length": 152,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e0141456-fccc-427f-b4aa-fa01280fb597"
        },
        "item": {
          "id": "2273a803-7601-4384-9cd4-ae0cc58127c9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4bdcb469-6866-45b4-b3e0-92ac5108c215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b776dce6-7d06-4316-b54d-70ff82b895c5",
        "cursor": {
          "ref": "1fd0560f-9f63-43b3-80d5-83877aa1e8d7",
          "length": 152,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "896ad28a-ed91-4265-945b-306a32683596"
        },
        "item": {
          "id": "b776dce6-7d06-4316-b54d-70ff82b895c5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "27acbb8c-f8b8-4a2b-8af8-b1fc7bde25e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a56f08-7320-4b60-a49e-568e359cc17a",
        "cursor": {
          "ref": "ae8688c2-fae7-416e-b593-44b3c169d205",
          "length": 152,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b9d31100-7ad3-4bc1-a0b8-e5416bbc3da0"
        },
        "item": {
          "id": "80a56f08-7320-4b60-a49e-568e359cc17a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f1b9fee4-a294-4846-93d1-11b4394a7118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cfbe15-16a0-4f7f-addc-70db990d82c4",
        "cursor": {
          "ref": "ea96aebf-40d2-480a-b8a3-5a2224922cde",
          "length": 152,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2f66aea2-5da9-4de1-89c3-6cb0de3375ff"
        },
        "item": {
          "id": "47cfbe15-16a0-4f7f-addc-70db990d82c4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7a6c731d-bfc5-44d0-981e-1fe7500d01b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db262db-456c-4571-9e23-5458d22083aa",
        "cursor": {
          "ref": "24252745-1694-4353-8719-7011767e926e",
          "length": 152,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f97618c-765b-44fd-8b8c-aed513f0244c"
        },
        "item": {
          "id": "8db262db-456c-4571-9e23-5458d22083aa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b8c8f932-3990-47d5-b529-1607cd050259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5304e4-f044-41e7-a2d1-82f24e9738fd",
        "cursor": {
          "ref": "d211f384-dc68-4ae8-803e-af419b95d349",
          "length": 152,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "68615d74-91e3-45af-88c4-991fb6d3ed1a"
        },
        "item": {
          "id": "fd5304e4-f044-41e7-a2d1-82f24e9738fd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "92a1be32-2c30-40b0-bc57-bd4a6e981ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435b3404-9917-44ba-9a59-d63a24db0ef1",
        "cursor": {
          "ref": "ed190d8e-6d6d-4195-bbb3-f9e3d471f229",
          "length": 152,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "40d9a6b0-4f82-4bc8-99ef-339861bb8111"
        },
        "item": {
          "id": "435b3404-9917-44ba-9a59-d63a24db0ef1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd33eded-3e58-4627-90db-6686eeda3995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8518aec-7013-48be-af3c-4c4ae698bba6",
        "cursor": {
          "ref": "0c1a1dcd-1905-4521-a9a9-02216ec49e37",
          "length": 152,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8a461253-1ca2-4d79-bc36-8a6b53239970"
        },
        "item": {
          "id": "a8518aec-7013-48be-af3c-4c4ae698bba6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d096a720-2fde-426a-885d-166b0f3e2590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0a8982-5798-46e6-82ed-794753f07174",
        "cursor": {
          "ref": "0f4b536e-e44e-469f-8007-c6d8e27c12c7",
          "length": 152,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e589a7c4-ec07-471a-8d1a-cb7eb9d0e91c"
        },
        "item": {
          "id": "4d0a8982-5798-46e6-82ed-794753f07174",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4bc11616-1ba0-41f6-a8d1-f4331eb9f1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff0cada-493d-4ccf-8e3d-4f2ec25c5644",
        "cursor": {
          "ref": "b9ef0f47-d0cd-43d0-bdd6-6efb9c2e3cd0",
          "length": 152,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5c0afbd8-b31d-4fcc-99c6-117179e65a15"
        },
        "item": {
          "id": "4ff0cada-493d-4ccf-8e3d-4f2ec25c5644",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "50cd18e1-8e23-4702-bc8e-bc511a80148b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd6db2d-2225-4caf-a920-5dfb9af3e9e6",
        "cursor": {
          "ref": "87957f03-1716-4a8b-a867-071fab597fbe",
          "length": 152,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a2f06c2a-531e-4a4f-8cfe-59571cad062f"
        },
        "item": {
          "id": "2dd6db2d-2225-4caf-a920-5dfb9af3e9e6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c11caaa5-d9f2-49a1-b763-a9af2c5051b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f3fd8b-d259-4f5c-b0c2-c599c85b1be0",
        "cursor": {
          "ref": "1e559af3-4e14-45f8-8855-8f16e9fcf1c1",
          "length": 152,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "89455e3a-7f56-45c7-b9d2-890c8eeb52ad"
        },
        "item": {
          "id": "f6f3fd8b-d259-4f5c-b0c2-c599c85b1be0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "140c5eab-fa10-48ba-9be5-02ac6664bc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b31d90c-0eef-4e98-9328-f6ae5ab7f80f",
        "cursor": {
          "ref": "c53dbb7c-5722-49c0-9782-0198d3e41838",
          "length": 152,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b842506a-50d4-47be-8d10-de96e7cb48b1"
        },
        "item": {
          "id": "6b31d90c-0eef-4e98-9328-f6ae5ab7f80f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2e571a29-979d-4d6e-8be9-625e878c7e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2ac92d-00bb-43a1-80f1-65197bb2bc85",
        "cursor": {
          "ref": "f57f8dde-dcaf-47b6-a9c0-64697ade1218",
          "length": 152,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "855d9d49-737b-4bc9-bb3b-1855a7364f62"
        },
        "item": {
          "id": "7f2ac92d-00bb-43a1-80f1-65197bb2bc85",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "68ab2da4-796d-4d5f-91b3-0c99c31b717e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca158efb-069b-487c-bae5-14896e19dbe9",
        "cursor": {
          "ref": "32ea8924-f4f8-4edb-84ff-addf5335ac4c",
          "length": 152,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1964c084-bebf-4408-9e75-460e157e6430"
        },
        "item": {
          "id": "ca158efb-069b-487c-bae5-14896e19dbe9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "02913032-2603-46b7-bea6-406b23479090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16367e9f-522c-488b-a9ee-6b23cb527c9f",
        "cursor": {
          "ref": "c7500b31-cbd4-40e4-b0cc-ee8fd169bb75",
          "length": 152,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e3bf2495-6620-4269-893c-56e5fc2d8617"
        },
        "item": {
          "id": "16367e9f-522c-488b-a9ee-6b23cb527c9f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d2571d55-e25a-4780-b903-ecdd3183173d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a362fa9-6758-4ce4-8249-6c75f4e8711f",
        "cursor": {
          "ref": "8c6f6c49-6c70-4564-accc-7e1b71240266",
          "length": 152,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6235b88b-b65e-4f9f-8df8-8eb89f2da8b2"
        },
        "item": {
          "id": "7a362fa9-6758-4ce4-8249-6c75f4e8711f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "899fa059-7146-485d-bf94-e46c33e9c79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58ad629-a96a-4a7a-a41e-ccbe5d9403d6",
        "cursor": {
          "ref": "ccdb5227-a4d9-4934-9c52-93fe4a4361ec",
          "length": 152,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "64e47cc3-ad49-4e63-9e46-005865157cde"
        },
        "item": {
          "id": "f58ad629-a96a-4a7a-a41e-ccbe5d9403d6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0407738a-2e60-447c-ae41-da810989076c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f29fbc-27ae-461e-bae8-eec9f4dc42b0",
        "cursor": {
          "ref": "d692a944-6984-4119-8b6c-11ebe34b4572",
          "length": 152,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "17e3b71e-16a6-4f66-a048-f03291372fda"
        },
        "item": {
          "id": "c6f29fbc-27ae-461e-bae8-eec9f4dc42b0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fe8ebe86-77c9-4ecf-9dda-614b56d2f16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e8b2c1-6128-4a64-9296-4fa294dc6d60",
        "cursor": {
          "ref": "e98def15-7609-40dc-ba17-47b8ba073268",
          "length": 152,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "af872ad7-dcc9-4218-b7a2-ac2a99a2580c"
        },
        "item": {
          "id": "60e8b2c1-6128-4a64-9296-4fa294dc6d60",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "881d51ea-9937-44e2-8bba-e21a82c1f80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be0becb-e66e-4095-b4fe-927a09df8d63",
        "cursor": {
          "ref": "24a859e3-5474-40e2-b849-bd1471105b1b",
          "length": 152,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1ee37323-a79d-4ab6-b77f-d86393a2e222"
        },
        "item": {
          "id": "1be0becb-e66e-4095-b4fe-927a09df8d63",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "61b6e7c1-f361-44fc-a973-993a1ec53c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3342ee58-d2c3-4da0-9651-dfe36248d68a",
        "cursor": {
          "ref": "c0cad9b8-fafc-4dca-a882-c81a0b9ce7fa",
          "length": 152,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "19a7b122-38e0-488c-9507-8ba4e238dfdc"
        },
        "item": {
          "id": "3342ee58-d2c3-4da0-9651-dfe36248d68a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "682cc0ac-e691-4d68-afa7-27551aea38cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce70a77-e425-4326-90e6-7ee21614a5d7",
        "cursor": {
          "ref": "9fb2ba84-559d-43d4-8325-9a80a450cbe0",
          "length": 152,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "05cd933f-f9f8-4f77-9b91-9e2e1241fcb9"
        },
        "item": {
          "id": "cce70a77-e425-4326-90e6-7ee21614a5d7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7ca1dcca-bf13-4de7-b956-e4c9f02700b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35298f7-1159-4a8f-90d2-6418c3579624",
        "cursor": {
          "ref": "4305bd43-d405-419f-8435-1201ddf87500",
          "length": 152,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d64f53e6-4034-438c-8cc2-474d94326295"
        },
        "item": {
          "id": "d35298f7-1159-4a8f-90d2-6418c3579624",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bc239e7e-33f9-4930-8d27-04c66a131c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631b3798-6b4c-4446-abd4-11eed13218b2",
        "cursor": {
          "ref": "8447aa0f-ced1-4153-a15f-fa5a411c8560",
          "length": 152,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "28e7c7ca-3de3-421c-abf4-e56a80126420"
        },
        "item": {
          "id": "631b3798-6b4c-4446-abd4-11eed13218b2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1e73515d-d182-42cf-a4ca-5feb7c77c057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa72819d-5632-4b20-8806-63592dc89a5a",
        "cursor": {
          "ref": "fa73957a-3298-482b-a74e-95a5cac2b564",
          "length": 152,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9bb31e4b-3ce4-4e62-9c4f-45bf444724f0"
        },
        "item": {
          "id": "aa72819d-5632-4b20-8806-63592dc89a5a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "740ccf68-95ec-451b-8b5b-e6e97d950e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7939bc0-3c5d-4b73-9b9e-3dddac883cea",
        "cursor": {
          "ref": "d9a817f6-0c69-450e-95ee-88e4278db9f6",
          "length": 152,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "835afdf7-3b76-43f2-8ccc-fe26902d2631"
        },
        "item": {
          "id": "a7939bc0-3c5d-4b73-9b9e-3dddac883cea",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e48ca570-f1c4-4716-a72e-8decb0b2a01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ba65bb-7217-43aa-b466-4cd18440fce7",
        "cursor": {
          "ref": "bd0e6c9e-8bf4-4152-ba8d-4214c1e315be",
          "length": 152,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c556b930-a2ae-40e8-8868-a59cac69f1f5"
        },
        "item": {
          "id": "20ba65bb-7217-43aa-b466-4cd18440fce7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de94d67f-78e2-493a-968e-690d4ffd7618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b43a90-917b-4d56-961a-67df7d972874",
        "cursor": {
          "ref": "da3f3c66-0953-4bc5-95aa-809c25a67fd5",
          "length": 152,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a44dc936-9a33-495b-8a72-c0215fdf3d62"
        },
        "item": {
          "id": "86b43a90-917b-4d56-961a-67df7d972874",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1354fb74-73bc-4265-a989-30dce0632b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d13c19-00e9-4530-9493-b13bd5fb2060",
        "cursor": {
          "ref": "77ec7458-49fd-4888-ae8d-48cd31362332",
          "length": 152,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ba66859e-922e-495c-b26d-caa699bc0af6"
        },
        "item": {
          "id": "50d13c19-00e9-4530-9493-b13bd5fb2060",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7015bed3-4a4a-44bc-97a6-511d4b29b513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3709e7-903f-4aba-ae13-212de03f5308",
        "cursor": {
          "ref": "56299b29-aa33-44ce-870e-a387b7ed505b",
          "length": 152,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0c9fbd50-28a8-4bd4-b06b-718b008a60a3"
        },
        "item": {
          "id": "0f3709e7-903f-4aba-ae13-212de03f5308",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "84f1011d-3350-412a-b656-81982523cc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d8b891-a75f-4c49-9b5a-599af82c08e6",
        "cursor": {
          "ref": "d4855c51-f9bd-4aac-a875-8be8b6578e14",
          "length": 152,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ef65577e-b3c3-488c-989a-60cf7aa02f26"
        },
        "item": {
          "id": "18d8b891-a75f-4c49-9b5a-599af82c08e6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6e8b62b9-ffe3-4327-af40-911a21399eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d1e182-547d-4274-9e13-08b585ad6fa7",
        "cursor": {
          "ref": "ccec7f9f-5ec5-4e95-a30a-769be18441a9",
          "length": 152,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1afabbd5-0de0-464a-a5b1-f3fb32086b61"
        },
        "item": {
          "id": "76d1e182-547d-4274-9e13-08b585ad6fa7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "accc6a06-f365-478b-8602-5e1ed9ae7f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a286d7-d3a6-4f07-a445-65ba5982f1da",
        "cursor": {
          "ref": "f61db12a-53b8-41e9-9f55-4ec7473bb7c3",
          "length": 152,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8ef5d598-a6ca-40dc-a7e1-65b48ca8f2d1"
        },
        "item": {
          "id": "09a286d7-d3a6-4f07-a445-65ba5982f1da",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "92857aca-420a-42f9-b11d-d596fb3c8f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ef24ac-4687-4e64-a04f-48444e082c9f",
        "cursor": {
          "ref": "fea33e9d-ab2e-410a-85b8-191d7d9f9908",
          "length": 152,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "296a7a45-1569-4f41-b27e-ec9171db81b1"
        },
        "item": {
          "id": "04ef24ac-4687-4e64-a04f-48444e082c9f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "57425873-4806-4096-9b94-c54e880dde64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d5d1e4-fd7f-4833-8817-d9103b8a164e",
        "cursor": {
          "ref": "d85decd6-893c-47ca-955d-823f5c485bd2",
          "length": 152,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7d3a4f50-5fc8-4202-b300-bdf520e81beb"
        },
        "item": {
          "id": "75d5d1e4-fd7f-4833-8817-d9103b8a164e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0a6a246d-d83e-46b7-b310-8a9791b6c062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1c0606-1693-4e85-86c5-8d37a35d19aa",
        "cursor": {
          "ref": "6a459daf-ce12-433d-b751-b175c1256aaa",
          "length": 152,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4c370c99-78a4-4978-b98f-fe7a3c9d430d"
        },
        "item": {
          "id": "bf1c0606-1693-4e85-86c5-8d37a35d19aa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f4c7fde2-7e79-45d0-bb3d-3e3cc5b82517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e958ddef-7ded-480a-9eb6-f77641b836a1",
        "cursor": {
          "ref": "d665ab03-b683-4887-963c-0f6a41fa27a7",
          "length": 152,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "055d3163-fb1d-4425-8e42-3eabffefbfac"
        },
        "item": {
          "id": "e958ddef-7ded-480a-9eb6-f77641b836a1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9d0cd956-fc85-4f2d-932d-8846e8886983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ed29ff-3fdf-4946-ac03-a924369d9c21",
        "cursor": {
          "ref": "e22deb15-9ac2-4564-adbd-261b6fdaf856",
          "length": 152,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fccbcb0e-1e27-446d-90d9-150ba878be54"
        },
        "item": {
          "id": "d0ed29ff-3fdf-4946-ac03-a924369d9c21",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3cf72ae5-7e04-422a-bd46-e741e745222e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb809a5-a933-48d5-8f00-f671b97321d9",
        "cursor": {
          "ref": "7c46c2b1-ff05-4f61-bc8c-83f0cab05b0d",
          "length": 152,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0065fda1-50e0-4df9-98ea-4fceb5b637d0"
        },
        "item": {
          "id": "7bb809a5-a933-48d5-8f00-f671b97321d9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e1b1da87-82f7-4ac2-a5f8-dc9587d03e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e753e2-2098-43e4-b278-7f624c5759af",
        "cursor": {
          "ref": "27eab49b-a849-4ea7-a295-c34668f02743",
          "length": 152,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "42e0ddda-d396-4c75-ab25-fd7141a24a14"
        },
        "item": {
          "id": "51e753e2-2098-43e4-b278-7f624c5759af",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6c0ecf6c-8831-4f2e-895e-30cb6200cb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712cfb82-ab89-4be5-aec2-197fe6143a8b",
        "cursor": {
          "ref": "2faf76eb-1a74-4a06-a577-a021b6ef21df",
          "length": 152,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "40e8513f-3eed-46c3-81b8-17650cf5b6f6"
        },
        "item": {
          "id": "712cfb82-ab89-4be5-aec2-197fe6143a8b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "434f7e65-8429-4ca1-9a71-a84b4eef5750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e230e900-1c93-431c-a779-1aad4bc6a398",
        "cursor": {
          "ref": "4e54237c-c669-475d-9073-fc6f55a6e7c6",
          "length": 152,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1d053735-4515-4f7b-92c6-12a3f6f0f29c"
        },
        "item": {
          "id": "e230e900-1c93-431c-a779-1aad4bc6a398",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0c280442-68cb-4fd8-b59c-c82489e4f247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d20b57-74a8-4a31-a881-645791a0129b",
        "cursor": {
          "ref": "8b34c826-b5cb-44ee-be10-8170e51a5951",
          "length": 152,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "936b93f1-4315-4a84-b239-ddc6faa7c222"
        },
        "item": {
          "id": "44d20b57-74a8-4a31-a881-645791a0129b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bff6c4b4-ef4b-4083-a6cf-f54b14cd78dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c04f2f-02fe-4bb5-8635-b6aa3b16df0f",
        "cursor": {
          "ref": "e525be75-9fd3-43cd-a39d-4c7c96e1f8b9",
          "length": 152,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "70eab763-fa16-4ceb-aa4d-6d664a48aa06"
        },
        "item": {
          "id": "35c04f2f-02fe-4bb5-8635-b6aa3b16df0f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4cbcdb90-0a07-4ff2-b0d8-c2c2fa2cede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b73e234-e5d2-4cd7-bd27-5e3fb6ac892e",
        "cursor": {
          "ref": "074962e8-22da-42b6-81f7-2bc4e6752bc5",
          "length": 152,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8cc34abb-99e3-4330-b300-860d2511a5ac"
        },
        "item": {
          "id": "7b73e234-e5d2-4cd7-bd27-5e3fb6ac892e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "adaa0838-5d5f-4aff-b653-7fccbbe1444e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5b41cd-6cd5-4d2d-8f13-bca91927d1cf",
        "cursor": {
          "ref": "6f54cb83-93c2-4b71-84bd-985df7c32a97",
          "length": 152,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2007874c-7d22-4ac2-9e47-1be0f4907454"
        },
        "item": {
          "id": "6f5b41cd-6cd5-4d2d-8f13-bca91927d1cf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "728ee633-3608-4762-82bf-af88d75cc51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de611083-1313-4232-9599-5bebbe42aed5",
        "cursor": {
          "ref": "a416ad3a-f910-4b35-9aec-abe27e222349",
          "length": 152,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f1509e8-3e05-410d-93c3-5e5959d0185f"
        },
        "item": {
          "id": "de611083-1313-4232-9599-5bebbe42aed5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a2a4c668-fc93-47ed-8a56-96ab83066d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d969316-e27f-4a4e-87dd-068ce79ec03c",
        "cursor": {
          "ref": "5dff6fe4-9e49-4097-9ca3-5bdc69cf0973",
          "length": 152,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6f708dfa-ebad-4f9f-94ef-43a5c7723936"
        },
        "item": {
          "id": "2d969316-e27f-4a4e-87dd-068ce79ec03c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4f6324b0-1baf-47c4-8c15-e5a1c7179218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeff023-2518-494f-8b13-00b6a5248444",
        "cursor": {
          "ref": "6fa711ef-dc93-4f62-9de3-aa45ee9a2c89",
          "length": 152,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c706f2d8-2ef2-4dd7-a418-503b61e23ecf"
        },
        "item": {
          "id": "ffeff023-2518-494f-8b13-00b6a5248444",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1e505431-d2e7-491f-a4bd-7e763322f7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac3dbd2-c800-4cbf-a06f-a7f58246816d",
        "cursor": {
          "ref": "bbae790d-b664-4f5c-94ef-d2c883f23ea5",
          "length": 152,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3c083caf-f473-460f-8f25-c1a3368a97f5"
        },
        "item": {
          "id": "5ac3dbd2-c800-4cbf-a06f-a7f58246816d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "841a6fe2-50da-4acd-b919-806747b0b85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d02a7f7-5371-44e4-a5be-96b3b12450d8",
        "cursor": {
          "ref": "e994a1fd-643d-492d-b9d3-4270f27bbc40",
          "length": 152,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1c720c32-c18f-471a-a144-7514dac4b975"
        },
        "item": {
          "id": "5d02a7f7-5371-44e4-a5be-96b3b12450d8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "aaf63cc2-f202-42de-bad7-1b8dfed1585f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db605b27-e568-46f2-9263-95390bae2814",
        "cursor": {
          "ref": "003200b7-84b4-4236-adb5-0e1908b93487",
          "length": 152,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "32480774-a7ab-4e3c-afcd-f94f3bb11a7d"
        },
        "item": {
          "id": "db605b27-e568-46f2-9263-95390bae2814",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "69ffadd5-c939-40b9-8d98-e701c45bc032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c791b19e-5755-4a3c-b831-b9c8dc22d2e9",
        "cursor": {
          "ref": "a32e29bd-d30d-4d6a-ad04-057558944a18",
          "length": 152,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4861f364-7625-4074-a959-ca4424bd6863"
        },
        "item": {
          "id": "c791b19e-5755-4a3c-b831-b9c8dc22d2e9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2eff085e-3f49-4f3c-b2c3-10624d205ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b237fb6-130e-496a-ae0e-f476bf627f0a",
        "cursor": {
          "ref": "3e827240-6928-4811-80af-0ea23f3bcaaf",
          "length": 152,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "59b729d7-8810-47a1-826a-4c50abaa0a1f"
        },
        "item": {
          "id": "5b237fb6-130e-496a-ae0e-f476bf627f0a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a73bfb1b-b03f-493e-91ac-ede95d7b40df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a4cd99-dd6c-466f-92f3-884b3b5ac764",
        "cursor": {
          "ref": "1c5ad4e7-d6e2-4968-b44b-53eecccc1eec",
          "length": 152,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "62c4fb5a-1fc4-486e-bf95-770aabaa487b"
        },
        "item": {
          "id": "51a4cd99-dd6c-466f-92f3-884b3b5ac764",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b305d8fa-309a-4493-8ebd-ea6c7ed8059c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b4e154-3b7d-4147-ad2a-19fc60e62af6",
        "cursor": {
          "ref": "39afe3d5-e4db-4d23-9ab9-5d821f44052b",
          "length": 152,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fc6def44-3bb4-4d26-933f-3b5e36d95885"
        },
        "item": {
          "id": "78b4e154-3b7d-4147-ad2a-19fc60e62af6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a94c68c8-f117-4a81-b4b1-1cf969d2095d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8acf669-edb1-47ce-ad06-791539a82828",
        "cursor": {
          "ref": "38257946-31da-41be-9e9a-115a6135fed7",
          "length": 152,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "385dbab5-a144-4daf-b936-50534a5fffe0"
        },
        "item": {
          "id": "f8acf669-edb1-47ce-ad06-791539a82828",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0aedff8b-03d9-4dfc-8aaa-aea4a2c82b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cc74c8-dcc1-4e68-9ef4-091faf4e5679",
        "cursor": {
          "ref": "e302a81c-d2f9-49e6-b41c-30e14f98fc53",
          "length": 152,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a6c2ee5d-5dcd-40c2-aee2-98b9362dd89e"
        },
        "item": {
          "id": "18cc74c8-dcc1-4e68-9ef4-091faf4e5679",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f77eebe5-bf81-4c18-9b1d-8527e80d7e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e246e1c5-5c4c-4a3b-b5c5-88fcf4c59e55",
        "cursor": {
          "ref": "65aac09f-068c-4741-999e-5d88b02b379b",
          "length": 152,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0075c749-7e18-408a-ad3d-96cdcd207dbe"
        },
        "item": {
          "id": "e246e1c5-5c4c-4a3b-b5c5-88fcf4c59e55",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4f3605a4-aa30-4a4d-a3da-e8ce32675b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4922cd65-f41a-4a2a-b2e4-603e6eef8444",
        "cursor": {
          "ref": "9ebca81a-49aa-4aa6-b467-dedbf2b3619c",
          "length": 152,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "74f97e9c-2713-4faf-a5f0-5b207e87e6ec"
        },
        "item": {
          "id": "4922cd65-f41a-4a2a-b2e4-603e6eef8444",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "621a2bab-84a7-4de8-90fa-44d14dc85137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a8f47d-9c18-4ebc-ae04-5d40948dbe76",
        "cursor": {
          "ref": "d71d7281-5cf0-4347-b1b3-0ef2fb763b62",
          "length": 152,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a2d109a8-45e2-422e-bedb-b377cf9b8a41"
        },
        "item": {
          "id": "78a8f47d-9c18-4ebc-ae04-5d40948dbe76",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "758c2e44-1332-4f4a-a847-6e5a9b93fac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99481af-4e0f-46dd-843d-aaa7f5cd01c6",
        "cursor": {
          "ref": "ee868df0-0ce6-412b-b875-d06aa1e987c0",
          "length": 152,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1265874f-ccd7-43c0-9195-49de71ac1d37"
        },
        "item": {
          "id": "d99481af-4e0f-46dd-843d-aaa7f5cd01c6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8dac6982-4d53-44c7-ba53-a7562da07ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d1f5ca-717a-4523-9681-8d25130d6258",
        "cursor": {
          "ref": "c9c7bde7-2f84-4193-bdb3-a2c876e83d65",
          "length": 152,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4fa9d62c-62d0-4e0e-b5a8-1966b85cda23"
        },
        "item": {
          "id": "f1d1f5ca-717a-4523-9681-8d25130d6258",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f9cc4ef0-903a-4021-960d-473f59bbdd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ab4c3d-d730-4f2f-96f3-cf27f78e3576",
        "cursor": {
          "ref": "f8c971d6-6f8a-4997-9a10-f0473e6d81c4",
          "length": 152,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4f003850-85a2-4c27-839c-fbd7ae0aaacd"
        },
        "item": {
          "id": "25ab4c3d-d730-4f2f-96f3-cf27f78e3576",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6a86063d-d6ec-419b-bf47-6bcc27a4d4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ada295-606a-4d2f-8907-e958b03b487c",
        "cursor": {
          "ref": "308fa1cb-0615-449d-beb8-936712d11007",
          "length": 152,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6cb29f09-4f9b-47bc-afb2-7b0ca3f2f84f"
        },
        "item": {
          "id": "a8ada295-606a-4d2f-8907-e958b03b487c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "795e304a-0181-495b-907a-abfedc23dcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f5af7e-a246-4e7b-a9db-980b8477d949",
        "cursor": {
          "ref": "e6b7abc2-9149-4836-b39e-753296acf180",
          "length": 152,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9ef566b6-0f3c-4d8b-a36d-5dbdbf8a02dc"
        },
        "item": {
          "id": "04f5af7e-a246-4e7b-a9db-980b8477d949",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "92537e7b-19c5-46fe-b8e6-ceff79b7f889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1252531d-ce30-442c-910c-1b9759add8a2",
        "cursor": {
          "ref": "d31df87b-f9d6-40d9-92df-8593e006e03c",
          "length": 152,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "869c4fb7-e382-4b11-a450-15b8a97a2509"
        },
        "item": {
          "id": "1252531d-ce30-442c-910c-1b9759add8a2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e11d7c6a-807b-4e0f-bde4-f5e6246ee528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c283f64-7825-43b5-8c64-a0a2f6789804",
        "cursor": {
          "ref": "9f9ef0d9-e252-42e4-9cf7-6f24844b2c54",
          "length": 152,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f3de404b-410c-41ef-bc85-bf3e0fc4bddd"
        },
        "item": {
          "id": "0c283f64-7825-43b5-8c64-a0a2f6789804",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6e6329f-f0c5-43d5-8ea5-a6d76eeed159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bfe941-0f51-47c3-8cf8-e7e98a9ac6d0",
        "cursor": {
          "ref": "964c44a8-814f-4d7a-8c01-e7c4799b739e",
          "length": 152,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "625608dc-58c1-43dc-ac77-eea4ec2638c4"
        },
        "item": {
          "id": "64bfe941-0f51-47c3-8cf8-e7e98a9ac6d0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c7172f8b-0d34-431d-8aea-78a32ac5e012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755e90f-beef-4662-9c05-e7bd795b3f34",
        "cursor": {
          "ref": "d852259c-59cd-4ca6-87c8-8ec35e7644fa",
          "length": 152,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0e9ccdb5-8d94-4a4c-9e3d-b992d3f9ad30"
        },
        "item": {
          "id": "7755e90f-beef-4662-9c05-e7bd795b3f34",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "de16b881-171d-44ed-a1fc-f3bb0c36150d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5111795-8239-4574-b458-65e40e4c12b0",
        "cursor": {
          "ref": "fc275e2c-cbbe-4428-80e4-140c850c7b79",
          "length": 152,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1e595660-9ca7-4895-be0a-7ecd13f0a8d7"
        },
        "item": {
          "id": "e5111795-8239-4574-b458-65e40e4c12b0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7e039304-e89d-4fdc-bb64-eac30c9e5130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1512d5d-906c-49fa-8230-d64f6e0ff2d9",
        "cursor": {
          "ref": "20b2d04f-9a41-4b8a-9bdf-37924bdc82db",
          "length": 152,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "162b730d-d0b0-497a-8f5f-d5d4aa9830ee"
        },
        "item": {
          "id": "e1512d5d-906c-49fa-8230-d64f6e0ff2d9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "96a9a3ab-8fa8-4331-950d-9787384ff26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6a481e-0782-4201-a09a-8ba35189b15d",
        "cursor": {
          "ref": "f5038b95-b9a5-48a9-a820-86a914b929d5",
          "length": 152,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ae6ca622-76d0-4b09-8ea5-bbafa65acd20"
        },
        "item": {
          "id": "1b6a481e-0782-4201-a09a-8ba35189b15d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0dbe78ac-5b4e-4345-90e1-7f380c71e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cff729b-778d-4e8e-983b-45e680f6540e",
        "cursor": {
          "ref": "2cb41134-e7cd-496b-9c34-9569a109a0f9",
          "length": 152,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1bb19912-d256-4073-80bd-8b9ce60fd828"
        },
        "item": {
          "id": "5cff729b-778d-4e8e-983b-45e680f6540e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "09b3318a-587f-4c7c-82c4-7922d5bf5de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ff73a1-2af9-4233-8693-c10aaf8a9406",
        "cursor": {
          "ref": "e6755ea1-8cef-4ddd-99ad-f06df2f30f59",
          "length": 152,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5912dd12-3eb9-49ed-a843-5988b36e02bc"
        },
        "item": {
          "id": "b9ff73a1-2af9-4233-8693-c10aaf8a9406",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a35053e4-d68e-4c3e-8516-695846ac9531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11f622f-6db4-4db6-a0e5-6fc893d398fe",
        "cursor": {
          "ref": "9234d475-281b-420c-a218-c2e785d01d7c",
          "length": 152,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3074e7f6-f0cd-43ee-81e1-a5fead0aa555"
        },
        "item": {
          "id": "a11f622f-6db4-4db6-a0e5-6fc893d398fe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8ba061e0-020c-4a33-97c4-5a017b45723f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3a92eb-c5ea-460e-836d-8fb1184b2cbc",
        "cursor": {
          "ref": "9f984175-d62d-4660-aeb8-09de835b863b",
          "length": 152,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b98b5241-763f-40bd-bae0-90ff84c2e5ca"
        },
        "item": {
          "id": "ed3a92eb-c5ea-460e-836d-8fb1184b2cbc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6659e411-51f4-40ed-9962-91fee76811f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c60e33-8be8-4aa2-a562-2c26e700841c",
        "cursor": {
          "ref": "ab9db71e-323e-4c6e-86bc-dedc97e82598",
          "length": 152,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "32ae0ba0-dd0b-45f1-a071-ea8ca3ee92de"
        },
        "item": {
          "id": "a9c60e33-8be8-4aa2-a562-2c26e700841c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "476cd624-bb35-48dc-bcff-3b8f367f6e1b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 12,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92962204-c685-43eb-ac04-4695251f6c95",
        "cursor": {
          "ref": "3ed49b8b-b7d4-4e05-a52b-7db873a8c677",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3cd5f67b-9edf-4e4b-8e26-ca7f4c12f0ed"
        },
        "item": {
          "id": "92962204-c685-43eb-ac04-4695251f6c95",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "254eb388-7eb8-4b89-9957-cb8050fbb219",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92962204-c685-43eb-ac04-4695251f6c95",
        "cursor": {
          "ref": "3ed49b8b-b7d4-4e05-a52b-7db873a8c677",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3cd5f67b-9edf-4e4b-8e26-ca7f4c12f0ed"
        },
        "item": {
          "id": "92962204-c685-43eb-ac04-4695251f6c95",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "254eb388-7eb8-4b89-9957-cb8050fbb219",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b43bb4-546f-41cf-94e9-43ec8af5072e",
        "cursor": {
          "ref": "649a542a-a56a-47c2-8aed-723d0ea172a3",
          "length": 152,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "065ae863-3900-4418-a911-68b3764f6b33"
        },
        "item": {
          "id": "31b43bb4-546f-41cf-94e9-43ec8af5072e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1f814efe-dd5f-4d3b-a2b1-0cadb7e0d360",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ad556e-d104-4773-afe7-9e402b7f71b8",
        "cursor": {
          "ref": "182c9dcf-c04a-4942-9f21-7607ef17d200",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a8d4f705-d2dd-48cd-8961-55771b75019f"
        },
        "item": {
          "id": "49ad556e-d104-4773-afe7-9e402b7f71b8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1e136d10-97d0-4bac-8b89-60c89a406de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "49ad556e-d104-4773-afe7-9e402b7f71b8",
        "cursor": {
          "ref": "182c9dcf-c04a-4942-9f21-7607ef17d200",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a8d4f705-d2dd-48cd-8961-55771b75019f"
        },
        "item": {
          "id": "49ad556e-d104-4773-afe7-9e402b7f71b8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1e136d10-97d0-4bac-8b89-60c89a406de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "b9b0ee2f-0270-48a6-9d8f-e356e6b41429",
        "cursor": {
          "ref": "81e55ddc-fc0e-4fdf-804f-bf5c9f9fd679",
          "length": 152,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7a843b4c-3167-4ca4-8cee-b59bb297ff7a"
        },
        "item": {
          "id": "b9b0ee2f-0270-48a6-9d8f-e356e6b41429",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4d1256e2-16ec-45ef-8de0-956238091e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:150)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:150)"
            }
          }
        ]
      },
      {
        "id": "e19f9281-bc3b-4502-a9b9-290c418837bf",
        "cursor": {
          "ref": "3841a1da-3713-422c-87ba-95cb8e1dd115",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b301af5f-bbd1-472f-bf54-38988690f91d"
        },
        "item": {
          "id": "e19f9281-bc3b-4502-a9b9-290c418837bf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "053787ed-b201-42c9-a99b-9ad4efde399a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19f9281-bc3b-4502-a9b9-290c418837bf",
        "cursor": {
          "ref": "3841a1da-3713-422c-87ba-95cb8e1dd115",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b301af5f-bbd1-472f-bf54-38988690f91d"
        },
        "item": {
          "id": "e19f9281-bc3b-4502-a9b9-290c418837bf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "053787ed-b201-42c9-a99b-9ad4efde399a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d11b862-85cc-4fac-b01e-09911d68f9ac",
        "cursor": {
          "ref": "1b0e0871-b6bb-404f-a1a3-cea66045e409",
          "length": 152,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "285b96ca-9f98-4a10-bf44-32545e021e14"
        },
        "item": {
          "id": "6d11b862-85cc-4fac-b01e-09911d68f9ac",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "df0d386e-08e5-4a1a-abfe-bfa6d8b4aee5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}