{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2d1aef49-3b5a-414a-8a1e-661da4e91aa0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "89437885-b37f-4ead-b5c9-7947584f3b1d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9ce079e-1d93-4bdd-90aa-339c12e0980c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "86cabd26-53a4-402f-a8ae-55f5a7845ffc"
                }
              }
            ]
          },
          {
            "id": "72c3326c-a038-4700-b60f-06d48fb70688",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23becd49-6a04-4b66-ac06-59f4f8fb6281",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1c294f9b-eef8-443f-b511-7ac3b837bea2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "29613bc2-d61c-45f1-8166-8f82165be296",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d0f5444c-5312-486f-b025-d8b30a45bb29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6446c86e-0115-42ac-a629-f5cde8c0e16d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5502d712-e8cd-4fe4-91cd-f171c55cba7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e3c19dd-47dd-4e5c-834f-01ff24113f6b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af8f8626-b7c1-413e-907e-f857df2e756d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b97671b4-a26f-4a77-88ae-018f66246298"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f55ac66f-828a-4c85-a385-912b29bc0483",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37b5e73d-3501-4bef-a84c-4f275d1d7214"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ead8b2fc-a3e4-4b97-bfd3-ae4555b8cea0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f7026fee-5e61-438d-a9ed-1843e251a482"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8cbcf98-4538-4fea-b5eb-8937e028e628",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02e3f912-8c43-4aed-9899-f84f44f62174"
            }
          }
        ]
      },
      {
        "id": "39b7c518-aca0-4f3c-a24e-31f28a3cdf89",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "416e0972-b55b-4954-86c6-aa061e5c9ed9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f23a253-b546-4bcf-a45d-91f10bc54ff2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d845cd5-a6a5-4c01-970d-b438e4d32304",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1e256d-d075-407f-a5b9-6f583cb0cd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "346655d8-6775-4c40-acea-4b54e960eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd941ebf-ad64-4c7e-bce7-8386706d36b5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e62491-04f2-4bdf-a523-271ba782177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbae0e9f-8fc8-49cf-ab3f-839930bdb104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56945e68-5cb7-4455-97b7-e51896f131bb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4aa884-f5b9-4c39-9486-8252771dd9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a03ee1c-7088-4221-9615-9298dcf8fea5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e8d22c3-68a9-4e68-8394-817071d6f209",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18a11490-2867-460d-9b67-bc62f75bb57e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcdbf13-7e0b-4924-a17a-d3aeadfc6c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54ccaa95-7d9c-461f-a657-cb793fa3e0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e032f4-fc43-4af4-9ddb-d52587d0607f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a5d4af-0948-4b5b-a739-f997f42aa4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8f76ca-d2a3-425a-bb1d-19df1056af6e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be296018-edfd-4fb3-9746-a9e89294ce35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb94f6c2-c0b3-4fcc-b0bc-39b03a3c38bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d18c7f-a138-4e29-a341-967c79441ab7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "83fc3f24-0bad-4ae0-83af-43d25507e2c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af6c29e9-a2af-41f9-9d6f-c29442c5b7cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e751b989-b070-45ef-9474-e02f19f280e8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee513e7c-9f2b-4c50-aaef-0669b4571873",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f9dd5678-f0e5-446c-9c35-72f230cf8a82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab6fd3d8-5a6e-4e66-b0b0-1daf8741e83f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "84553e79-5aee-47c7-a9e4-776299faafb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64e68cf7-3f16-49b2-adea-e4a319c9546e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "772d9579-b326-4540-ae29-209b6e5cdc37"
            }
          }
        ]
      },
      {
        "id": "5de67b43-9767-4854-a092-4522a61fd0c4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4f8f095b-1305-4acb-b5bc-174e32820ffc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "148ce9e6-739d-4e6c-bbc6-dcb8883dd34f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "02c63c33-0c56-4ae4-b417-33594c6ad4af",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97326dfd-5493-4b41-913a-f25da2c010cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d3759b-317e-41ff-a2f2-8375d3cd8035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc0d781-ed42-41f2-92dd-7d7985597805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eb5ebd3-f3ce-4f4e-a9d2-a4af3180b416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fca5b2-9939-4586-ac10-15c8eb78fa20",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ac94df-ecdb-4a33-b30f-6ca13b2150ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9faf7f04-3d36-4041-8e48-0d8b1019de06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79346c67-1584-4f51-b151-4f2455135218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "112f578b-dead-44d4-9d26-1569ea28b210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986bb2e5-b7df-49b7-b8a0-b1b68ffb9bd0",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69810a08-8535-4082-a9c8-d53952692421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e054a3-3654-441e-a17e-e1526eab296b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491df635-b2a0-45c1-b31c-c92fb124026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe9e55ee-9b0a-4591-bc6a-44f53cb4f5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be50fad7-db58-4528-b977-24767d79cce3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1733a1a9-2570-42f8-b108-b7d6bb4b49ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08773dc2-7ebc-4b1e-a676-016fbfe3da0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4b0e58-0052-45ac-96d8-716ff3d73212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6fc0e9c-48d5-415c-9462-7afcfa2a99e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3075110-8eb6-427c-a089-b21df5f2cabe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c242d4a-9148-4300-8a0a-93ad29305499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c303b199-ade2-4ee0-bd0b-bac8bafc12ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c11499e-7322-45db-941b-e26daab90f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40036fd7-3a30-4dcc-8a39-729af555329e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf07027-6d2c-4bcc-be66-324cfe963889",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4562d52a-0bd9-43b8-bcd8-98688279f1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66347e1b-1017-4583-83bc-af54df4e42fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a535ea-a50e-4c13-9a63-17823cc28d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33b6fe33-8985-4784-840a-cb120d84a3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf273d79-4208-4b1d-a8d6-690ac1bcf34d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f26ad7-2929-4447-86b9-af41aeaf8334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a98a4d-bd9a-4933-9249-49c73a362f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fab889-be40-4371-b78d-1b322c0481a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ddc01eb-e9b7-4f7c-a85a-08579fe46c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d9a227-aa22-44ce-920f-7fb39e6a8811",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066c93d0-5924-4ed5-8d25-ed67a40aaca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5211abe3-1b73-4a13-a29b-2bbb78888393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18fa9e2-f72d-4573-8aba-85d600192ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5514464-df00-4515-8943-964fa214c7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a2f15f-f9ae-4d57-8519-eac770b514cd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c6ad83-b1ed-4296-9f3e-a33d95e5d3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e841afdc-0db0-49a2-a2b4-9f6ffe4e679b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93df2af1-2d3b-4d10-bd66-58459e1962a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37203f40-969f-4219-94f5-c06ab1b8d106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7240b9e1-53f4-4d95-a904-5b719ffd3a2e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48c1ae3-9a91-4bde-affc-06189034c206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e4ec3c-7503-435f-b77b-16b91ed1e210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81810100-6ec8-4b74-bd3d-6fe5d60a94e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d9428f-f275-4f2e-b2e9-6fa946543082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0087d96d-c423-4f1b-8144-ff79334b689c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa0701c-a3d2-49bf-b85c-d2535a9b1092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327e1140-2be8-47de-8d8d-125f81475526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd92065-740f-47c1-8ff5-793dde8c3f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b20b434e-f282-4f0d-bb26-18256b4d38ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f056e1-7658-4896-ade6-a6be633e070e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892658b4-22b0-483a-8e1c-58fb8bca2e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1295fd17-616e-4b95-b5f6-35e8c70350db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaedf70-9976-4b03-9e85-6453dcbbdf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdb45b40-00e0-41be-b665-64a65c7ad6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2d86fe-7298-4ee3-8ee1-dff085a8781a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc02747-fe24-423b-9854-a59c53790549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57dc7a1-a831-4656-90a7-21f8c1f40445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011273fd-e866-4724-ae0c-9d89bd11b11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e1aa245-aadc-46c2-9702-c64b3a11f547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f11ee11-e8d3-4458-ab3a-35e8c231bee9",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea6b1e8-f1d7-4669-8a37-a1b6a4c491d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86e1f2b-a8fb-4433-9d71-baf944410860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a764afc-d689-43d1-999b-34e9a128e603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "50c5b635-e984-470b-a8b2-6ecf177d86e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b57c95-8f8e-4ee4-8982-f2eecd72fe7c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5168bf8d-42f4-4cbf-ba35-e7dc38ef9156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ccdeb3-df9f-4ce0-be30-ffbd7096ba19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9e4943-1724-4743-a999-f6fc23420f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f79e4e07-a459-4f09-8157-aadd4cc86ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93a1c89-0be8-4f20-bd67-e6e55fbc2476",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb0b2ad-3893-4077-b510-6c283286fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362fabbd-3c4b-4ba9-bdc2-11520949351a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4212f18-f86f-4d8b-b151-1ffcd89170fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cb70e4d-fa6b-4caf-80f0-59eda2145d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f017159-854f-4fd3-a2e0-7b035aabc603",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cb2864-1eaa-4847-8ada-16f0f626224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c520ffee-bd62-4c36-b777-dee087b766de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b814905c-9983-4194-9548-677ff11262aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d3f2c1c-3dfd-4311-a244-d12237fe10ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d578304d-1230-47b0-881d-1537ee3dbee4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b50029-dced-4642-8a01-371f285c0b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d1334c-27fe-4752-8051-165c0e6366ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e06ffa-3744-43b6-83ad-cf6a80546e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d975cd84-dd9c-489e-953d-d71b4c4eeda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff646554-924c-4d90-a055-cd9133bcb5a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a7429-5d91-4031-b2eb-03ef7fc48034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5a3e8f-2f3e-4124-89c6-afdfbde73edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2f345b-9035-47cf-aaad-2150f126db36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00e23ce1-7481-4012-979b-c7283b429940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9661538-f66d-4da3-8b04-7084bafef1f4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c44803-0893-449a-aa23-d42c637ce388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3dfec32-9e39-49b1-9267-2cb8e7512912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b97b5a1-982e-4089-8894-e1402c8ac56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1c772d-f3b9-4dc9-8a2f-381218f006dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef5bc6c-a663-418c-8b39-925f2f8c633f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85059cf2-ee6a-40c2-a6e6-69f29511a904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c65ad0-5341-49d2-89fb-81ce37401587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487abfed-c785-49b4-aa03-a1c046810d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "405cc23d-6d6e-4d98-8261-2727a788152a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e544b7c3-f5ab-4714-a5d7-504dcec2532c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef94a34-a756-44b8-945b-ae1a3ca0ff88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd4a8da-3eed-47a5-bd22-53d055b97a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcb2154-433e-4672-be52-e6e9969cdb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23720b5f-3f0a-4eda-9f21-cc2fcbc73c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cb778b-5a7e-4757-84dc-481f44cb6102",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bce8fd5-d405-4445-9544-085e332ff1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150c9a71-088c-4672-b952-269a63525a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b398596a-4389-4774-a2c4-c4ab23d55754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7261add0-d737-46c1-b79e-92ae60ec1a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe0f462-1f4a-4e67-a2bd-9abe9664ca2f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beec9828-7265-4e8c-ad0e-6c773951e7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d56ea5b-bb60-42cb-ad75-62f6da28f7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db87224-581e-479f-b619-e2ca97ed6632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94af4e2d-28c1-4a44-b1ef-29713a986ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e6bccb-9ba9-47c5-8a37-cbbcbb61dfb2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8353dd-dbf1-4386-ba60-776bd6f2a032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b435b373-cc8a-4eaa-b181-feda604d0987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16740ba2-5620-49be-8867-03463c648dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec59ce2-8f59-495f-96dd-4c6bb822caf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2c5a8e-15cc-4965-b4ca-380e30027cf1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7d32d8-8e2d-4f7c-b11e-7997a6788428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173719b4-2a46-4f9f-88bf-5b8aa41ab829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17534245-2bd1-4905-bd87-05fcb1f3ece3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c5091b-e89c-4990-a78e-a8a0168d1a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2572cb9e-5e2b-45cd-8e18-77857856b1c6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faa77c7-744a-41d7-b40f-ff5ec72e3706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f015f10-f8a5-450f-be29-61ebf6faf1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135253f3-81f5-4ed0-aa99-bc6d785ba225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "589388b0-61d4-4ff9-b6d2-8684323ef49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df3017a-c3a4-4615-a910-559db01d1992",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdce343-8cc7-4cee-af86-44ee72b9e63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce32fd9-3fb4-4603-b7f1-4ccd60209954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc02140-4e6e-4614-a9b2-0e7abac32305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc4f824-142c-43ae-bfca-f145a4d6be2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b5121a-20c7-43d8-97c2-4a332b58a033",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7e76fb-1743-4a10-8f01-8b37f77405eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a84265-6881-4d39-bae0-638a15b56076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34ddf75-bdb3-4ecf-bae7-311fe52f6ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f62c93-3242-44fc-ba87-37d70cbbf8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8e80c2-a6d1-46b4-ac42-e4a75a53539b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7ded6a-805c-462c-9581-cf34c863911a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3ec3c9-19d5-41db-b646-afb84b1912f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39526420-f634-4d91-9e08-07f01be60ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23ff3ff-44f3-4c79-b938-1d3e00f3bd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4db2636-d0fe-4637-84b4-582e995c7867",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff8b03d-1652-4dc3-a854-331ca862641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d447a065-a00b-4441-a4ad-91fb959162ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5943bbe8-8856-4a03-9c93-03c822b49449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8c6325-03f0-41f7-b9d0-cdc0087076fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b9ba8b-c40d-4ba5-b807-02e00876630f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82468c9e-b3e7-4474-bddb-7ac3f2f78837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de9a225-23f0-4637-b85d-8bccd2f9e929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c178e99-1deb-4882-8539-84931b4976a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdacfae6-81ef-4cc8-a685-4cb493f16fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acacfcd-c6f3-4e5f-a578-93363b465587",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000513d3-c56d-4d53-b042-b3a359a88f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a29fd4-2e28-44e5-b730-0a56ba834996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad5c83c-d546-49e6-a0d4-0f73e75e3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16554ab-970f-4779-ba81-05fb48c75ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e89799d-7eaf-4b72-bb69-9dea00d708d2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36c3fde-5fd7-416e-985d-114eb96ad8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08c1d09-e15b-4ce7-adce-aafc037ff7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3de89b1-6851-4805-85b9-e8bc37fb0c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c031a553-6ac6-4427-8d4d-726f094dacdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c32789-0e24-4535-94bc-a250e0c92519",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0937c08d-29db-4643-a825-0ad6a0145bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12244de7-ce0c-4756-b09b-67951dc5a20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f347715-79ff-4639-84a2-49a5308daa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e08ee90-bded-485a-9404-4a792ebc208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16378bea-b688-4957-b68a-511975a480bf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e074c6-d74a-41a9-92e0-829da559b105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640f1c9e-0b5e-4da1-8190-8e4966adf7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90e6aa9-7dc6-457e-ad6a-e4724c14dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91adb183-3965-4725-a548-0139d0b5624a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c59f2a-57ce-4a2a-8701-43ceb8a05e99",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2549131-ae91-4d1b-a33c-c4a637f3a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256eb6f5-a9fd-4ad4-89a7-94f9bfcbc72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd80e29-524c-4c3d-b99e-92cc4b5bc2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cad623-f697-4eaa-944f-d7975624f541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f968814-8a32-491d-bdaa-f433ee7435e0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3cdd48-ff0d-43ff-92cd-5f317d5b3b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b52f951-c2e5-44fd-a17e-607ad8b11889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f689621-91b1-45ac-b98a-38c38cd66b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8863867e-f279-4d7c-ac98-0f2d6f74cc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e61607-fede-4dbd-9546-bd575a7830af",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea99b5ef-8217-4645-9afb-6e775ec379bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143cfc36-e74e-4281-96cc-0a39ee778d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd32fa6-d3b2-4ba0-a787-2cf031c99a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58910c86-853f-4b80-9e3d-a481f512bf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605e5fe8-441f-447c-acac-2f93f7d75540",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e081cb6-94f0-4150-9939-25ba0c1bfae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4874aa-3762-4cb0-8c0a-f835c769dfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6d29d7-6fbc-47f7-bf68-ef2b4c66a938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fda76dd1-95e3-4c36-b84c-17b817a3520e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0629b7e9-86ce-49ef-8e31-844bf3ac9779",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92222c90-baf2-433d-b581-96766e79c68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84a509b-f577-4606-9ae3-fc9eda11ce47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9904c72-0cfc-43bc-b096-a85e3edeb23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebeda1dd-207d-481e-8a6d-fc1532a55c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bcec4d-f5fd-4042-b01c-d7122bb9ea7b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a206cdcb-da1c-411a-bc59-9746ce62aaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b1d2a2-e67d-4a7c-9047-11633adbaf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97290dc-cd62-408c-b2e4-6aeb584586dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c67dc9a4-803f-4423-a00f-13b9446b09e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481247a3-3f8c-41fa-8d1e-6ae3f86eb7f4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d337f0a-5262-48ed-a828-86e9c49b4aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244aaaf8-e346-4108-bdf5-499fa3278894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badda8f7-e812-4ef7-9ca0-4fca11f52461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4319168d-f5b8-42df-a32f-a528e3624bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc9f4de-3b4b-416c-90a8-ac2e69fa57bd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29c88e7-af80-49ff-86eb-09de63c46d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fd75fb-3392-4613-bada-653ccb16690a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32166bf0-76eb-4049-bf1e-4340fd2ad593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab157c9-422b-431b-9231-76cbe204e8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c853f36-5ed0-4fb5-a13a-d9b1131bbafd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f1724d-93f4-4397-8478-59276ad6892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6305b9b7-f8e0-4f34-964e-a2910c5a326a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e18d1c8-7d13-4d25-9b5c-50a222307ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "71b3dd24-94e7-475f-97e4-4bff803daad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb802412-f60d-4fa5-8f19-da2ec1c35b6b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e44e88-692b-4513-8309-4c0d760327b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03899bc-8954-4faa-93b1-fb61a0e9e3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9ceead-7897-4ff9-918c-cb40c0da9cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddc84e4-ec5e-48c3-8c4d-c4520fd0703a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de32a62-e397-470b-a555-5ae60dbd1f6b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0305e275-9e45-45f4-a71f-eb8356bf9c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ad1471-3182-4fd4-9d8f-4ebc4a7b1a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f85aed-6b86-4b92-8802-bf2333342db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbec274-2a26-443e-899a-e527f23fba4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dadaa12-7e9c-4f70-a464-d754ed3bb1fd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99de2be6-a32a-41b4-aef9-8d7daf42e908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90ed96d-1e08-43f7-b70f-d2d53ca8131d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266fe70c-a971-4a13-b0e8-82d5a57b7c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "424337ac-434b-4b6b-b25c-d439c054fc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2777924-15cd-4433-b323-64ed122929b8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08170da2-b497-421c-b913-62e3ee224032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d231df-881a-4913-b1c9-ac8e2959de48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391410f6-2d36-4466-bdb5-f11850badea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e6d7e1-dff2-4785-bc2b-b0724938e514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1590f8d9-a8ce-434f-b863-eb983f77127a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f28d64-a92e-4899-8bf1-d59a29cd3822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7956cf13-387b-401f-8c44-2d922f89c1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060a1082-c5e7-457c-baec-cc0fa2132b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "395e1916-8956-4bc7-ad9a-af0991169fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec6158a-68bb-4a11-9234-63011c4f9130",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb116ae-953c-41ec-bdc7-165f85a3c27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67821d84-6991-4776-a6e0-1ae35b10e061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c440e2b0-e77a-4d30-84db-e19d0ce2652a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93c4e2a9-6ce4-4051-ac55-f2c71c579550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244feb3c-9c96-4f58-b2f2-f0cdac47450f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7b2de0-181a-4d44-a5b3-b15b82da6c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46942c2-e35b-4581-9d6c-3aecdf6f25ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394fabd3-70c1-4b9c-ba57-2a2b1fecfab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d61391c4-4555-4dde-9d67-0bc1ed5c381d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c0bb03-6577-410e-bd22-3c76eabcacff",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f39b4c-7a6e-4ca6-9649-d91e9991ad24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99aa3686-7a2b-430c-b57f-27def2ae360d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451b9fa0-4c03-4a7b-9258-2da34a9af6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d81c01-3962-4353-9316-474f7e286aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e3f60b-e93c-4a68-af25-59894500e9f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7713734-5172-4251-a192-a866bf9bc984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae91b93-f3a9-4782-9d7f-243df530a6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a287a3d-e119-4db1-b977-543069e6e03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a3eb2e-6d04-4854-96a6-8bcb0a012ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b275f6-66f2-4f1c-84d6-edf73aa89875",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e273a1-bba8-491a-9e34-f6943088e367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e48cc58-7f05-42d3-9914-fc2854e66a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8096b6-138f-4bd7-a322-fb5be869ed03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3176a4ad-5d25-4699-a29a-0eeb30f59e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15b9952-defd-4c02-a52d-244e7b645537",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14c54c5-44ef-4c9c-971e-16cba87b3a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bb92c3-39e0-4908-9f03-07df2403358a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e75736e-bfcf-4bec-89c9-50e4580b9bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90834f11-b29c-4420-a37d-b0049f264b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc11708-2432-497b-9e2c-9df4c4f698aa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f42406-4a1f-4d72-880a-031dbae51d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a447cba-17f6-4491-a5ea-3330bb63d3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4518670-2304-405f-84cc-e4cab893662c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d9dcc1-5bf4-4fb4-820f-d2c04fadc653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3b4819-95da-4f59-9e5d-796b3eff1657",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13334996-933c-4509-95a9-15ea058c463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81df3c3d-f284-4032-b8a8-0e9317a0a313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd423aed-51f5-4b8d-8069-3db2e8407258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f79a1981-571f-41f1-affd-25d22b8f11a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cda27e-b89c-47a7-b520-40241cb52533",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee177c6-9263-4e62-93e7-8239f241ff2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f2e1f5-4087-4c31-a77d-ff1edd041186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfbcdeb-ba5c-409a-b817-8abb83c59df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe317a0e-d796-4ffa-a103-45d5e5f9e290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b5fe68-5c80-47e9-aefd-902094175327",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d8a8ac-f9d4-4e4b-abc8-3c4c5fe69ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7e3d06-062f-43dc-83e9-9c139e8638f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e093725-30a1-4c3a-8670-85654ca54b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "103bf8e2-0366-405b-89be-403fb6a2f323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d80d8c9-7ad9-4c5b-819d-97e85476633c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cba55be-e5eb-4bcb-95c7-91e5a92dc85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5bd012-08bd-402f-9c0b-b654abc88f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0008231-79da-4f12-a138-6e64066891a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad4139a-3b5e-40be-be6e-5a69f1e2fb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36809740-85d1-48ff-839a-1d1fddf47ddc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bc69a7-c7e0-4bb7-ab4e-7ff0b0fe710e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91cfff2-8154-41aa-a575-60492564b6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cb89a9-16f3-458b-8f87-af0643147294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7435d671-c145-44b7-a95f-7cca42490a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdfc20e-144a-4cbb-bd04-dd886a3b858b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bdfcbf-af57-4e43-855c-20103c7d1f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80565047-867f-4d2e-b21f-8236391bb566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6745c3fc-5212-4668-b7a9-f7aeac36335f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f150f4-1b0d-42c2-947f-ca9a8fff7439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b802f-9d9f-419c-bc50-410d4142ce9d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba1d59f-5f46-4cfc-91b2-ce7a7ba51308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30f0e6f-ee4c-46c2-94be-08856f5f1971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b2ed75-ffbc-47b3-9885-d9bd4273b816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1a88f3-cebc-4a27-8d01-d132beecbb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f014b5-c952-4cc2-b3e9-d7a1a8a2f54a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62768b4c-32b5-4154-a239-f847135d4435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258c15b2-4414-400a-988d-521fd4ef5465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ad9d78-a054-4308-ac93-c13867f208f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d764b145-ba84-493e-8198-d3d3738b8e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7a4277-3795-4d63-88c3-3714b0ae5ca1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1d85f1-0bbb-44c5-b63c-cfd2fbe0d85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89d2e8a-cc75-45b3-bd1f-c8d84ef92757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9e57d7-5fc1-4343-8b46-19a5ac50d88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a80a14f-5ada-4f24-bb70-886560942e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9fe5df-9cdc-4e0f-8484-ada410e5b10a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdd1e73-a308-43f7-9eb9-7e9a14e10841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff4e30a-7604-4426-9e41-4e7d4613b4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bef596-d10b-420d-a511-9b5ea07c72da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2aaeb9-89d0-4893-a66e-98d2df401848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bc1151-d7b5-4876-8519-07bc716dacfb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c830da36-e8ed-4aba-bf0d-15dc984b3a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386e4abf-d58d-4192-8dc8-ca8495f18301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c40369-2181-49b6-acf9-cfe9caec5b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1e3ef5-8599-4554-a63b-6ae2586c0f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8659ba44-f41a-4a7e-885d-d0b465512e73",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72cddae-5e05-4cab-87f3-67be83534b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345379c5-a71b-45c9-ba37-54abf558abc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaebf753-e14c-4f31-b452-be5ee9288f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "659cb6a7-c45b-4c5c-a8eb-ac3229b14410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cd1465-4ffe-4ca7-b0b1-7c164c31919b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f931ee71-0112-4bcb-97de-493d9812382f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a055f76-b4e6-4d75-8fff-c6524efdfdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1b36ca-3c89-4aab-99ae-04a3b058a867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5e379d-db3f-47b2-bc23-78cc55cb0994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e834ca-82f3-4bf9-8a85-91055667e638",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59aa126-bab8-43a5-8069-40c253b6ed0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490d4705-2ba8-4d10-9a45-f5b4f934024d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13e9db4-d047-4b0a-984d-60b522053b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1a7fc8-c06e-46bc-a8f9-134de31cbbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc78612b-d414-4e34-866a-41e737141b22",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49ce3b9-6ca7-4853-8f09-11ed0704d111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f3e39f-d5dd-4b03-be45-60fb18439496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7721b082-92ec-4087-b453-36e8a9afa1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf67eff9-0207-46fb-8449-acbfd20db850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591accf5-b3fb-40c5-a664-9b2087fa6ca0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c28353b-a2a7-4009-89c9-a000c69cc5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded1565c-c62a-483f-b278-f14819dc6bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09edec4-80fc-43c4-99d6-a44c9176ea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a33c73-8cfd-4171-abcb-753bdef52a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efb0de1-bec7-4cde-9802-ff412b593c25",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431fb3f2-3094-4268-8a5f-4a441e9e50d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08381ebf-4a24-47dd-b1a3-6650db237e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed24bda-8827-4154-9204-fd3d6c90a776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb71343d-03cb-42f5-b28d-950d003799e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b78495-c65a-4f78-9289-a7514304aa68",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79c3e8f-5354-4ed9-82ac-ac24eaa99b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1af2ba-2ee0-42c2-a35e-0c7e92b3a257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf0d1fa-2e85-4046-bd0c-14b1ca9e39f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92e2be52-6582-4a5a-b329-43b900f7b1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6acc806-8623-4314-9407-15877b9f343f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1004a77d-7e22-4c78-959c-f2d257c324aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b01b18-033c-493b-b5dd-6d1908a7ac25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e34f72f-7419-4eb5-9def-8da1d459f5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b690d9c-9d1b-4c77-bae5-49522bcc7a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5745b3b-a065-4e1a-8883-4a50dab10e34",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41eae34-ae5b-47b8-a4fc-42d6d9728c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa63c22-ff07-4ffa-aeca-c26bdeb96ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1b4272-3222-4266-8d3e-c04e7e0a0b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f450c81-ecbd-4cba-938e-f6fe41dee0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f566b9-6839-443a-850b-44adb65d3979",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc4d51f-2fd5-4511-85d0-0b7a4a5b08d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79fddf3-c7b8-46d3-a20b-af956be2affc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428d647d-a4a9-407b-8172-6ae0e8c15b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e76add41-6bd3-4db6-a975-7ae78e2b3398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc0763d-b696-42cc-93e7-741a1843e76a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9366732-3487-4cd8-88a0-cfe33952fa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f8da0c-78f2-4710-a4b9-3863dfdc38a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efb1d28-9ffa-440c-bde3-358b205b4ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f652bf-9fce-425c-a9c3-cb9c368b7456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1625533-44cc-42b3-9d1a-1c0361959116",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efb6ff1-cc4e-4ada-ac93-1cd68e88c33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1247f28-fb7c-49c7-b01b-c374efccbe05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d72362-1309-4eb5-9c3a-228457a5c25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d19950-61a0-49a0-a9db-6b05d016fda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d695fe-cd2f-46b1-8078-462542aa2bc3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79928644-ee8e-471f-a514-c9bd66324208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e144b88-acef-4ee0-9948-20f7910fa848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00123bb-6003-41d0-8cbf-353dea2118cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa152073-cec9-42cf-b2c2-3c28419c06d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30813fc7-a8e3-4963-a314-80ce8544c8fc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba24f960-0b44-4e02-9b1b-89d6275f0639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f2d627-cc2e-425e-ac51-2f4157364c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd98351-2c6c-4fa3-906f-2198f5bd54db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f85a77b1-0f0e-4bdb-a07c-8d2e0d0e306f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57f1b04-441f-40e7-9478-dbd6b4c8264e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1132b8c8-417f-4c31-8bff-5bb0b22c7d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c972ac46-8d91-4195-8abf-1c79f0e9accb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd6f93e-ecd4-40f0-91da-5e82c831c46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f094019b-bf80-4118-9916-5c49047874a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469312f3-9f59-4ea6-8ebb-ae797b07217f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7df8339-eaee-421c-ad8c-4377e62fd7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc7a962-233c-4b61-a874-905dcec919ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc5c6f1-9c49-47a2-bbf3-b1fd88dee033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd5b68c-40e3-41be-835a-c1f48457779a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0330d6-e304-44ad-b2af-b9fbffe9bef9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ba355f-baf4-460a-aea2-17c2a281ad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743c0a09-360d-4526-8994-5e01e072ec07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082e3333-60a5-4dc5-bab2-e4d9499831a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8866ae32-f9d8-42b9-8396-95d2dd0245a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d8b296-b806-4d6c-8608-015845ec1cab",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b6dc0f-81d2-49a5-877e-5e44368ad6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc94fbf-c837-4706-94b4-4cbeddbac86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbb401f-3c1f-41f9-ab66-9790408abb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df4a88f2-b2ab-4e70-991b-024f1de88fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d830a18-2e4e-4919-93d4-a39abfca55c1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d06072-c66a-4527-a97c-a2f694742f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974343d0-cc5f-427b-ac2d-e00961c3328c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03df7956-35e1-4d2c-a23b-d2765b6e8629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa8f998-d37c-44a3-b62c-f1ba165f7ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc57ac5-bbf1-4506-8f77-3f7f40c3c547",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f060d6-fc8c-4fed-a160-bb7cc0f1579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5346ec9f-e1eb-4123-b07f-d65ee074a292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d9d98f-481c-4bce-99e4-6762ca324f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f075134c-2685-40db-94f8-621d59e06546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5838d82e-3ae6-4ddf-8ac0-886524d73adc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1729c68-da72-45e8-87b9-3da58d4e7fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e4c092-3fbc-44f2-bf04-32b2b97c1495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c34039-67a7-481f-b08a-b4f54b904872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de7eff13-b067-4044-a6ba-174f7f551e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb910196-8e31-4ac7-bd8d-79210e4afbd6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0f5b4-acab-43c1-911f-25224477d1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfc098a-c990-4dec-b7de-3bbdbb4bdb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f6f150-7f1d-49d3-9d23-490f3188a29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7fcb55-6308-4782-9ec5-57a82a411373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c133de-a67c-41f3-8e26-11f3ed4aec42",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d365afc0-6275-45ef-acee-d440a79f519f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e20e31-09a8-40ef-b654-55292b2fcdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452d4e7a-1a89-47b8-a2c5-51080a2bbecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16e2c79b-8368-484a-964e-b6a373d59f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac60de3-7280-4451-af27-7781f60ecddd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc30db4-e5aa-4537-9bed-8ae063afdf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50993a3f-57e4-4376-bb8f-a9269e1c94bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad73bbb5-d303-45ab-8734-28915de2a254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c722fa38-72fc-42ce-89f7-b8f8e5b2f9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5901b0-6d77-4042-9e5c-31b4e47f179c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e7d9e0-12f8-4f57-bd1c-04372618548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df37a6e5-e918-4a06-9b0d-7d56e34b8bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0828b43-c743-4b1b-bbef-7cd55c609a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b74fc509-423f-4072-bec4-fddc149e7c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02615d82-5f85-4591-a829-cb9befbcb327",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920b7625-0306-44db-9855-8f76a14198fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "92cc33e3-5380-47ad-8cfc-5962ac90fa4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5b2c9a-15e4-4454-95fd-b32a6dc7bf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a90ebeac-8afd-400c-9750-077b589780b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98e76534-411d-4908-bd03-42ebdfcc777c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2920747-2a14-4048-899e-82280d868b71",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff10ba1-7ddf-4a83-867f-8e0eba7b613e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cc2a20c-ada1-4c2c-9490-6445091c46c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5fdb80-f373-44b2-baa9-315e12e853fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8cc2427d-a181-4ba2-a7d2-4ddafa5e51e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc4b6ac-89da-4f49-b4cf-099b416016dc",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a1eb6e-67aa-4fa2-8aaa-79379d2d1d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0aa9907-2c07-4302-a437-c2d50b620667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3c0662-59bc-439f-904f-99c31e7d25f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c624f462-c1e6-4042-95ec-8d97676deaf7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9efb03d-9284-4864-9e63-675db6e51185",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbfb7428-de2d-4827-a0a2-a2bf1a55e503"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81235d19-7604-4fa9-b4f4-e0881ad80ae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d4b65c9-4da6-4bef-ac9f-911fbda433e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da7e8590-7027-4eb3-b630-8ddf43bde4a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86f66caf-4504-40e2-9665-c55ebf308f00"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "477bf5bc-0b79-4dae-be0c-4e9ffbf284e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3d71d7b-6b11-4138-84e5-2fbf9bf659a0"
                }
              }
            ]
          },
          {
            "id": "40fdd64f-49ee-4fec-8d13-6b229b05b203",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7bf72512-3460-41ee-9578-eca752ba9cb4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a76d2efe-93e2-4aa8-bf05-1b934133cae5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9edec54a-c28a-4b45-a9bf-f5b3fb25f152"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a882a1f-b2de-49ca-900f-c0fd81f56a34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9441eb67-29da-4adb-92e8-5cad0f70dbfe"
                    }
                  }
                ]
              },
              {
                "id": "77848cc5-ee25-4844-aa25-9fd729ba236e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5729eee-1c0d-4983-ae0b-dcf66d668adc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57dd8e62-da11-4de9-b26f-b43eebb0e0c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0db50cd-2c85-4478-bdb9-b33828b71c2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b15781a1-0dc1-4ad0-b888-6d9933350203"
                    }
                  }
                ]
              },
              {
                "id": "b415485e-6a58-483b-a8c7-416cbf4100a8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b685365c-a873-4ca2-b946-381931be48b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4faac2df-373f-462f-9566-9e4957758b4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be1e40d8-2c9f-4d20-b45a-ca6ef4f2d29f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3a8d04ee-cf8e-4ed6-b795-9b8bc29ca568"
                    }
                  }
                ]
              },
              {
                "id": "f7f05fe5-6252-4217-b67e-9960fe9bee10",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55800c33-4dc1-4aaa-bca2-73f4f3dbe0eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "030c82f4-bd87-493c-84f9-3bc16e0801c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f9645e8-7a33-40f5-a188-d877d54ebdd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2b6f15b3-9742-4ea4-a7ba-872e27c74f83"
                    }
                  }
                ]
              },
              {
                "id": "8467dd53-fd7b-4e35-9a2f-cc8f8878f048",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bcc3ef0-a16c-49cd-a83c-553437d409ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "993d8841-4673-456b-a5c0-a56e29e12192"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba25a722-f1de-42a8-99a1-233564b1681f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79bc1bc8-7ea6-4289-8b76-0a4592c2bb81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2eb877ef-5a82-4d3c-ba90-d3b93fd91975",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4763540-36dc-4f97-9729-499356729534"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c2370f7-7c7d-4ab1-88b0-ad8b39329586",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "095989cd-3c06-484f-8279-798ed1d03c43"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c65d418f-9281-49dd-b79d-f89904f7ca5e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f3459d23-df47-4d71-a1f7-4ea77431d1f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26c9d1bf-aad2-47af-956e-e7e38f5aad2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9c2d756-eaab-4eb5-b2a9-bf81766ce175"
            }
          }
        ]
      },
      {
        "id": "b279a146-fbe5-4a64-8dc6-ecb45eb37318",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e7417f0f-f02a-4e51-b9d2-b581c7667748",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94358457-5ece-45d4-8201-cf58bd6ae028",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e641241-b8e6-4ebf-afc9-97f6235a6d1f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac312a8d-674b-4a8d-bfa4-24796361e273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0bbf35-8e40-475d-b6e4-2b6070e37dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ca5f15-3254-440e-b800-e7d24d560277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d445d009-7f54-4a06-9f03-75683e8eccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe54f99d-e070-4fe0-9fa7-6657d8c49201",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c640fcca-a9bd-4b7b-856d-eb8438f97d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b425712-a2f0-4f1a-b9fc-d461179a726b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9316d96-49af-4436-bb25-24e2c294f9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd2a663-b34f-4590-86c5-ae06de1ef7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae5206a-8d9f-4269-a1e9-67127dc4aff9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d1b616-151a-4f03-b92d-fbec7d00b262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c226bf-2137-44cc-abe2-b85f2041a323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f80981d-8c81-4fc6-93a7-af8c8aad9279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a53206-8df0-42d1-ae46-8ce7a3c18e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8550281b-9e97-4588-8ba7-c02e419b7ab1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38679112-03aa-4ed0-a5ec-f8e4b14ae414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb8777e-8113-436f-a2d1-233f17f25499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f7c593-a29d-44d4-8c02-fed056c60de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8fd0da-c945-4f05-b62e-4fec6d0443af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05df1fa9-b2af-4b71-96a4-670a22a72b1a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec485d5f-76e1-4222-9a9d-111a0e1464d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51a08a2-dcf1-4120-b8b4-e0351be4b431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b502298f-5f27-44d1-8865-2717fe45f806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4ca553-e327-448f-a65e-b1ff001f092c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac42109-1769-45da-a3c7-482634854bc5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0c6972-1b64-41dd-bedf-dcfbe64150d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538d31b2-36ff-40dc-aa3f-6edf28511aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15babe6-2d02-4a80-98d2-55dcfcae8fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10f65082-4c78-4588-ac0e-3f80db3b1ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4c34ba-66b5-4fc7-a202-3b2bdaef83e1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e858bb8-91d6-450e-bb71-66edfee3174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3ba399-e16d-4f60-b9ee-61744615f886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd84c13-4180-4160-8d3e-815e991a69a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3534f798-f55f-4b4b-8bf8-13cc6e4c4789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74618d30-a4b6-472a-a0a4-cfaee6f164ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e113adf-7be4-4841-bcde-e9b1f762dff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f50b472-77dd-4b25-9ade-f4e8adb10055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6cc505-77f5-460d-904a-10a1653f5f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "640c70b1-65ae-41bd-9031-55ebb637b7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ff7775-1474-46ec-8064-c6ba21e130ba",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbb0f23-b77d-45ce-a56b-8b6f8898c74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99b74df-d097-4334-8dd9-9c300d31ed82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b787c57-e6bd-43f1-b324-ccadb8a28f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6839b0-3908-462f-9863-f00e4312b6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d964418e-a862-4568-b3da-b179f4ef4f68",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395d0ff6-5be7-4a0b-b22d-99f3917b28c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2f55e5-47ee-4edd-b12d-2828921b4710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f15a74-3ee5-4817-93f8-95dbb3c68e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae40a913-4365-468c-8724-9c5c0ad64b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc9b10e-4f69-4a4a-ad63-24f51b119381",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c47748-b4d7-4f29-a169-72168ed4cfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c348592f-9f0a-4fdd-b595-a23f394346cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d629e4f-2b9a-4d4e-8280-d9c1e32397c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2507b43b-46d7-47f0-9c42-a413f28ad74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d61ff0-6a4b-4249-af63-5c57b43c6b7b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2c4b4e-bc7d-41e4-b063-4636185467ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58580bc7-ef5b-4a19-aa2e-0eab188b3c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65595020-5594-4ad3-93ff-3aa25ec343c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13aaa949-437b-4587-b90c-6552ab0e918b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fd7728-7861-4fbe-878f-2c76c4300b07",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a4a58f-f925-42cd-930b-2ea5f2af7eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1399d7d6-c73c-4642-8586-cb939e3b6f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83106755-8781-4250-9578-71e5686d59fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b557a10-0066-488a-bff2-d5998d085279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a41db2-f07f-48a0-8ce3-d59b01618796",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f18b48-cf76-46fc-84aa-c3c3dbd169f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945f05f4-50ce-4fd9-b842-adc1e6388fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f77f81-f633-4d4f-83fd-71a870c68226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bceab35d-aea5-4d2c-9fd3-2d97e11d2617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bb5078-fdf5-4bf5-b0de-f4da1d76268d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027ad31b-c859-4bf3-a59c-716c207b845e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8cbd86-2f40-4ffd-b216-81cc013ca43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0d5ffd-bb40-4e8a-be79-16297b7ce815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a165350b-581d-47bc-ae41-bdaffaf15e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8c46a3-9c44-46b5-8270-e4907d8febbc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebb86f7-896c-4e72-9e0e-a9c2e992d211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d75170-f39d-45f5-b2ba-599be429ebe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a20f3d3-52b1-44d5-a464-a9b3d7cc9556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33155f18-47da-4113-b507-1cdcd4a8f2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9101d0-dcc6-40c8-a218-85f958f84b71",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41054428-c9bf-490b-8798-414836aa24b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956497d2-89e3-460d-87e4-bc14fa38686f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879701b7-e29b-4d1d-9ad4-7b6daf179f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "431e7a74-f9de-4f10-9c8b-96af977290a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5839b1c-a35f-4ffd-9379-22c9bb3ecbb3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee9d87-8f8e-4d9c-bbe5-b2c7baf7f473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8abbfc-36f6-47c6-9949-11b228143336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ad3bc6-c763-410a-a8b6-f4dcd885457e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65698921-aeed-40a5-b292-d6d2747f9ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29be0ebb-63f4-493f-b898-38fd7a8aa129",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790dc280-ac21-4295-b69a-63a0b1236891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09826369-714b-4510-89d4-289c2ee24347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b9e72a-ec98-4097-9762-ddc42363ae14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c867e23-9ab8-4cee-973a-6197767510bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b983b8-6d0b-41e6-8ac9-d98b9b5c6262",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f04394c-27cc-4550-bc24-e251db00549b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2805002f-bb85-4c0a-ade9-b762c41d2cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45f29a4-658f-4cb9-99e1-4280398a37a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34489a2c-c491-46be-a8de-f054bf2c8c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4777f9-cefa-4976-8a9b-697263c71102",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dc9e72-a2a7-41a1-9149-5bff4e701329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c337f0fa-294b-4471-8d9f-f46676ff248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a35bb87-5340-4f14-94e1-eb75ba1eacbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48110be9-d9dc-4382-b4f5-3220e50742d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8615f9f7-e44f-4bea-b084-07677b60fc15",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6d0021-4563-450f-bb09-38c29669f411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35292ea9-4b28-4ac9-a279-8d904f322c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b912d50c-d547-4073-9228-85e103aaeb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2483e0f-b669-4a4b-bfd4-edbf62320511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b86dab-3faf-46b4-8faa-ab9652b58b71",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2120c99c-dacb-4a26-8571-7e76bcf82063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178ffc7d-f1bd-4b2c-b318-ca16454d3ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5204794c-1816-4e0b-baad-aae0b39f5383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a459bae-6fd9-43b5-8985-cae4023d6d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cc43b8-94eb-4f20-8c5a-ec648ee80c58",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa2ba60-d675-4d4c-a493-676290350289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32da05b8-67b1-4837-a0fb-b8f6dc34d70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee8eadf-4cf0-4521-8a41-a54868f5fcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8b04cf-e49c-4a8c-8a8c-bcd481f4eacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3597b423-c891-4187-92dd-18e7e6ae7aeb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56085b6-8443-49c5-879c-a97ef51920d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64332760-1d12-4ad2-b009-49884cb87b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1839fd-895f-4c0c-b90d-36c6a779bc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c618cb13-39fd-4de8-acca-f87703fc1699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f4888d-93cf-42e4-b5be-99325bcd915b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134ff26a-7299-4b2e-90b7-4669d444fefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bc76a1-1b1f-49a6-a41e-2fac582b63aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8e047e-0eb8-4a65-80e5-588fa3495eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee98b4d-38eb-4581-887f-0cea1521378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f01d53c-3347-4389-981e-a1832ca61a05",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefb9986-6938-4be9-8fa0-0ad5240a9f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f3d8d4-7310-4c35-a748-16e0a15d5c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64114240-78cb-4d0b-a965-e74bf0e14a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f4f937-d279-4436-8077-f4230f030fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542c2687-0a9a-40dd-9068-5e2b641f54e5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b79394-39dd-4888-97e2-1b721459a091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a16dc71-1597-4b99-ac8c-d6afd9a89a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a8a638-2f66-475a-96c1-73cd922abf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f10ea0-6f7a-40e7-ae7c-0d9c2b894688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c77890-80de-4244-add6-cee2d69ee7e6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86048472-9173-460c-951a-3dd69896fcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c38d0d-2917-4ae3-b11c-da26dcb40c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfea4f53-756e-4462-8b20-5fa51e4be20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31fc2b1-e948-4ef8-9913-b66e76198533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1be9e7a-66a9-4c49-a82d-4f4ce7ae5c2d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21666d0a-98e0-4795-bd2b-451cfd5b7e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fb7d4f-4214-470e-9082-de913f76547f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8b62b0-f0af-458f-b7ab-1f931c37c340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01013c23-9af7-4a4b-b76c-8c704e539cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858de68c-e38c-4c83-b7d0-71db136ab2ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0cdb9a-620e-4a73-8a0c-f61fcb1d7717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d284b3-54b3-4675-9aea-a65d05ab2e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa2e79a-9eb2-4356-bf3b-becb7e19b76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6c372a-ffe6-46e5-81bb-99205a897b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c8526f-8a29-4ef4-870d-377446d448cc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a9aa8-483e-4a00-b07f-35cd046f630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e7647e-1ba1-4242-a66f-058481e78338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d07e62f-5cc6-4923-a50f-58fe4e24263c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ad9e88-23e2-4df3-9ebd-4a85b7ed6246"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7705f9aa-84de-49bb-b56e-f9be1aa1596f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1510474-8e92-44de-9b34-53f3114cb476",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaa48bf-2cf0-4233-a066-7ad9da47d4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6975913-491d-4fdb-8caf-6cc6c627416b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e3dfa7-9108-4391-b303-e9d2603e9869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce93d9e3-604f-4996-af41-a9c1db88ad91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd4397a-9fd4-4e43-b475-88373ca16ae8",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0ec475-5f17-4130-bd09-024097d1c6a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "05b613cf-a122-4804-a05e-7d663241058c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b10f756-8ddb-405d-b29c-474eb7c08ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75ce291a-7b18-4bbd-ba74-b50c8c72c318"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41110b61-2a4a-4729-9d48-c70c0dee63d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb95cabe-95d1-463d-9c74-651d4cc75101"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a2781a0-14d2-4790-ada9-05514929ee21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79c129bd-f2f5-4fc8-adf7-475458bc4efd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e807b28-2aaf-4beb-b345-a7b1d8fcac20",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b72f4be2-d51a-4dbc-9ef2-cd72345dd5da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d93cb9b-dd7d-43a9-84db-3b30048a98d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d01b054b-440d-48cd-9979-824b0977faf7"
            }
          }
        ]
      },
      {
        "id": "b1f45942-64ee-408e-ab25-ba9fb0ff5c33",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "96579923-ee51-426b-9c44-de78bd7c63cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "926cb4d7-9173-4197-8b4c-2386d7b6a9c6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71cd393c-ddf5-4169-8359-e816034fe914",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1afc91-a7c7-42f9-bf7d-6e83256a4096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12294f46-f3e5-45aa-83f9-51c2dca870cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9b7f31-349e-4b57-a52f-adb94561332a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed45ea16-ad6a-487e-9a19-e7eda0d78c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c87261f-59d6-4933-8c3c-091b65ead696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf4f184-41a6-45a8-b02f-b652738d5db2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90961bf3-f659-4ed9-a98e-a3aecd2b5be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83d0aa7-c711-42c6-84d5-0746ba04c51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d148a3-9f84-4cf1-bed7-9d4b23ce3908",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733a6907-ff12-495c-b562-d5aaaee7247b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1912405-03d1-49cb-bc6b-0a7bcd0f893d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bc1636-add0-45ab-b70e-1d36cda710b0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c022ef00-36ec-4f5a-8e4c-0b9e05dffa93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718bc206-25e0-44d9-8dac-d93fb931918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35acf8f4-eb75-441a-8675-9f9ba47ad973",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d635fff-fbe2-49b8-8f8f-7eeacf10bb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edef7c84-6dcf-4d00-8be0-14e392dea4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf81c4b-b719-43c3-a77d-cce5fd7b55f4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d736a5-3de3-42b3-8326-bd6cabe2fdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6859444d-27a0-4a46-9a4f-1ea2d6a5b02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb107ad-6b25-4c22-b876-947826474eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abbd108-4d0e-4afb-94b6-372ddeda7ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b9d59d-85ab-40f1-826c-d25074d3455b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df27c60f-b4f8-4128-827d-e8a010782d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dcf6000-a744-497e-96fc-c85d5d340a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d4f0ab-d745-40fb-9b8a-f87b662c6c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938a6b6d-ffd0-47d0-9b10-ad167f658263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432e0ab7-9ef7-4c53-98d5-2cc7dc5e8349",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2029ed81-7c01-47be-a749-faa0d2d34ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6058face-213e-44f0-871b-7aa461b9769a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b621e6-5308-44a6-8251-62e27f129fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c21f54-4333-4baf-8a63-296ae1528054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078607a5-26f2-4f1d-882b-d4fd89f02ddf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f1a93a-4d00-4e3b-aa22-91eb54d6c04a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4adb70-8064-42f8-ad92-2b520421fe4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c751c9-e2a4-48e3-8efd-a85ab98f426e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca9b5dc-cea3-4477-baed-270842f61da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a0a6e0-4053-4305-a857-3337b695fdab",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dc8b1a-c495-4018-99c7-a1120c38db29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05307018-3cf5-4c4e-bd89-c5aa6107371b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d4ec31-1c38-42be-8bfc-7abeb13b2f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e909d95-4556-44cb-a584-621916b513bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9ffc36-968f-4bb3-a27b-a0b4071c162e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4f0f59-4204-477e-b178-c508b4875998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1254584c-120a-41d5-97d7-aca0767cf161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a32fe6b-5ebb-4454-be63-ed5168734ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc27e95-dae6-476d-9196-1c0eb00dede3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194f8ae0-9932-4d64-8708-7679cd869334",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32754083-40e5-43b3-8ad8-0d28a66c0d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3b690d-1481-4e15-9bbf-5bb76b8f5242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fd84f1-fb6a-4d09-92e6-3bf4c7e6015b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbbeb9a-fd7b-42ac-b95b-983ca359e57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110d8204-30a7-4949-b243-91d0a9a5b992",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739119c4-5cec-4c40-a2f2-e38367792968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5af864-3902-4fa6-8808-882bc1c53ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76bf9b3-5788-4348-b214-d760b86b9ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7961566-d5ce-4c3c-8acd-0b1c8d183194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d1a467-4b1d-4310-9f5c-c8fb7f268a9e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd81054-128d-4e31-a684-e7e5f13e89f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6757699-e033-4d57-a661-6ac63d386058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb64cc9-90db-42f1-ae70-6639b508304d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ede8c6-062c-4a9b-93d7-0b87b7ac424b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a800af1b-fd21-4efc-b2e3-4ebfeacacf42",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43ffcaa-d3fe-45f2-914b-b467c7edd060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64c1f76-cb7a-495b-a6a0-21a3c09b3f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5767e505-4887-41c7-bbb3-4fe7746cf804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c2a1d7-07d3-4693-a915-a26c27d00d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003bed5c-c31f-41f1-86e0-af4b824e900d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cea40f-e8dd-4703-ad2e-e91c0f374cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3eda1b4-f522-4080-a968-0fa7c922015d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e62098d-1f76-48f4-8c49-d51e30788297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83827c9-a379-4ec5-94f8-9efc9e46917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8df3298-825e-46f6-a307-8b01d6e3d1d2",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6ec331-01f6-4042-9264-67aec4b46502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f92335-e659-4de0-abfc-0d6a1b7a0dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b30ea23-86a7-4d69-ae70-b974da481c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263133c4-d08e-46a2-a66e-9ec519110132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91a9774-7e35-4288-870f-7da6180dfc0e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d3b733-eb32-4ece-8344-0bb30cbc9f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6170aac5-a821-45be-b95f-8c5d3b0d58a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe2f89c-3168-4f6f-a3ad-a542928d99b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bfbdc7-7d68-406b-a61e-b654a604d181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e3edaa-f5fa-4c0f-b0de-6562fef72849",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9a220a-009a-4335-951d-a7f32c91fd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382481f1-14d7-4889-9a29-3110c1684279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdf7ef8-5c1b-4245-a4fd-34d798872cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cffeabd-38b7-4de6-b592-f25c0b5ae7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca508f2-1b2b-42ae-9dd4-ba046d6717ea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68b9a00-6071-449c-a847-71d58333e065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3895e78c-7d4c-4ca9-90fb-40bc4c9aa8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb90ff7-16ea-44f5-a86c-193c025cd88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57fe8d1-2d9d-4a9b-b9a4-175147d05057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb19664-783c-4ea9-8453-d2e2c53a1399",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0c69dd-a88f-485f-a8e4-f09d6402db42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583052d3-7c20-45ce-89b9-14374eee35f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671c9c80-67a4-4808-bfc1-cdc66e17404c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad5fcb2-2b27-42ba-aae9-f971d4818cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8818c0-39b2-4002-a900-b0344390018f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee96ffe-92ef-4e22-9b7d-441006866747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e98f973-e351-42dd-aef4-97040e6ffc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1c4595-8f71-41ea-b5be-38b4946f32d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63af4fd4-b294-4a24-91ac-239b54db0c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cd1953-c596-4654-8aaf-34330d20e637",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c0d350-1fb1-48ad-8698-286384bc0f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60873477-bf47-4112-9cdf-447ba7cd2faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49259f7-ff42-4ef4-a565-0b950cbe6fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752a35d4-f48a-43c5-944d-f7df5504740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af46a3a1-399f-4074-82e8-0c4651bfa35f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb18632f-b392-4dd6-9356-251b9791bee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e992dd80-9cf9-420f-a86a-6cd648ca1f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f6fcf0-c434-48e4-abf5-d1150ca9d7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2437f7e4-a169-4625-bcce-43cb3b3c3ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38efa3c3-35ac-44ca-8b6d-f98cd74c2f7d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5d417a-fb54-4618-b286-4fc86e710d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b24045a-dd93-40f7-9384-0ebbf24f0fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ed4236-afa8-4a70-b4be-0479079ebf68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6e5aa7-aac9-4006-a6d8-54a34b28d68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7897db-058f-46bb-91b0-c6908820c385",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109fec25-21c7-471c-8096-860845ff145c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b502ee-b1e9-413d-9f94-60b706cc2712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149a3126-9363-4d0f-9c97-26401ebec7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44791254-dc20-4184-991d-0bca037b9dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39350b9-4f62-4d25-903c-81c08c46fd0a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2d2ce4-98d9-4204-8d65-867c11336c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767ccab1-0a99-4bd4-b469-2befaffd6bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f42741-4240-4fdd-b85c-f33a466d26c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e3f36a-8a2c-4984-9b5d-bfd6821960f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fd1d6a-b4c6-4a07-8619-d8397f878cc7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60216872-c09e-45ac-b9fb-3a720236bc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5978a1de-bf68-4297-ad6b-674bb031144b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f167f0-30e3-455f-a0af-2ad3483d40d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cd00dc-6e5b-4771-a8cc-5ffc20a63695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88dced5-d42d-4d5c-b3aa-44f685199951",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f89bff-12b4-4b81-9998-17b4e2aa0069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597c0aa3-6550-464b-ac49-e6cabe77f31d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88212a1-abaf-45a6-82fb-0cfe91aa2390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b67700-ed06-46c8-88d0-e312490f96e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc014dff-e6bf-48df-87c1-552913d7cb2f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b49dbc-3f28-4194-9ad0-1de15c433a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08e99bc-c68d-468b-a02d-e1bb4d26bb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fb1d36-d628-4928-b278-eb8810407174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93a9368-98af-4ed6-97c4-db23195ffdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c812c88e-d15c-4275-96fc-66e88b3ac13c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b77116f-affd-4545-ba88-5256e138560f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713bf6e1-aa9d-4706-a07b-958bee7900a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadc643d-f3f2-4338-bee4-4ec3e2f2be83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1188483-74bd-4ad1-a0cf-a535caf462a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07396afc-e333-4074-b246-6c93423972b1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78deabd7-9419-417d-ad1d-a23486b87671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "629c3ae6-fe42-464a-8ec2-22a795c15ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ed99ef-0dc8-474c-a222-853cc63d7397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa303d8e-c592-4a8c-82ad-9a8ed8e37408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa1e4c8-1e3e-4323-9764-1f66917425d4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9f4019-9028-4e44-99c7-98c4483d794a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b20c304-eea8-4359-8a52-0af358f68ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c1c09f-2485-4eb0-a079-03b348398e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e80dd4-bf3d-432c-aafb-7c92d94c1452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f367082-903f-4b55-a0b1-c8b5c5e471b5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bd69f5-270e-4195-b73f-d16b491698eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b31251-2bbc-4813-a5e0-46d79ec35e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1811fd3f-f30e-41e2-8b65-ba78949b8e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7617f6ae-8c4c-43bd-89eb-51a3d0cf55bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ea2669-74d3-40ca-8b27-4795730da47a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fe304c-1e56-4954-bdf3-aa7b212d7571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e968ff9e-c5b0-4345-90e4-04d32594d9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d9f470-45c5-4709-ad8f-8454fad46ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5b00f6-219c-41ac-8b09-96c4c9b12526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde17dad-298e-4da2-ac1e-c59452262fe3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e94001c-2a23-48fb-9c7f-c7641c93d532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc01a36-b2a5-475d-a1b9-634062fb9610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a20086f-3b12-4564-abc0-43fbe4d3b90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5f0c2f-36f7-4ffb-bc4d-14d64cdc065e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda2590c-67c8-42ba-9067-6c5c9065af20",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c523ab-c00e-40c8-a65f-5f7332cd01b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076b7549-cb7f-42d7-be3f-6b98f959c447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1b64a5-d8da-4d2e-87fd-29f5ef8f4580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff39a90-141c-4e7f-a014-1ff4b17ddc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7f3283-9be0-4307-99b3-1afca2fe2643",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aa1a21-ec62-43f1-b0b7-49f570425a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12453eaf-f483-48c8-a7d6-1d72ee01ffc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd173953-aaf0-4b32-a85e-f9f7f7dcdbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94af4255-a24a-4099-ac1e-7907435f05ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf371a6-4300-44e3-acad-709d6b09d45b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848d9d2c-5544-48ca-8deb-f86656c9fd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ad54d0-f05a-4b37-ae27-a998dda67b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2896f5-909a-47ff-b057-e06ae35b9d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f98313-ee77-4dfe-9dd7-e762e9f21cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50f2da0-4825-4086-9573-806e389c3bf5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6c7c9d-2b49-4c07-9479-322c6c18dc37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65cf6d1-f940-4dfd-a3e9-c9a4fb8cb4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3e363a-edf1-445f-ac2e-9fe94e892638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6f6b82-c459-4222-8316-3cf951ffe4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bed1fc5-50cf-443b-b63f-450558b9a56b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97c5ad6-b32d-4ae2-ab6b-7603435bbff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b311ea37-0602-480e-acf7-f3bd4dd7de83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa766f0-ab66-4d51-97f9-f10163b2d2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe0cc89-a32d-4c89-a013-c2d68af708d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12a1e5d-6581-40a9-a039-12c59e370147",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf7970c-aa50-4c7b-8f9e-40d9df29132f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2792d8e2-18b4-45ab-9689-7ca6f0eea0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3858f6cd-15d0-4681-89bc-3326fb93ff7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c7ff8c-6a37-45af-8b2c-dc8d5c6f6f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f887c0-21ac-4270-b868-d84b6be95cc8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9397b1af-35a8-4d3f-ac27-f7ebb9ef9762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2592217-a1e8-40a7-8d43-d3c9c11f3ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafe35a8-6841-4173-9f23-dcd657d6dd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c4373c-3af4-4108-a244-40e0ad17fe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719cbf4a-b4c4-4c36-a85f-44cff93ca0a0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5b1e80-509f-41cb-8b3e-2b891a85472b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7959a282-63d3-4c8c-9afc-d02abff5bfd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b491f30-d8b5-4882-9b90-94487fe494af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2ed347-7c05-4ad9-ba8e-feaf9aa73789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e7c0e0-516a-4d42-89dd-4a2adc5bbb33",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c080f805-bce3-4852-8b73-3a0f7220b253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4af9e29-52ab-4316-8832-444d404dd1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573e0cd6-5049-4e12-9e42-8f477e3d32f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deda6d09-f5a4-4eb8-8622-f60ba35c5a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89644e1b-272f-4f71-9853-8a7298227dd5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf771e8-d9f2-45c3-8b6e-a559d8f0b713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69562f0f-a62c-4128-9eb8-6f510564e482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21bb7cd-e400-4ff5-ae67-adddd75cec26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b24161-b959-4ff1-bf13-51ff0e4b77cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9cff01-f36e-4b45-8c56-b8ef03c7fbe8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52bf101-03fa-4723-ad8a-7e8b07497d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7292eeee-2307-4147-bafe-0749e38487cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b456a367-6163-4c9f-b6b4-6b2ccbb4ccec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3290ba70-4261-4c42-864b-c8b0b2564eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6839fbc-5db4-47fa-aa37-323af3648c33",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f441b020-a12c-4262-a8e2-cdb7247b1914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f9aff4-319c-4aa6-9cad-2ed252b5e5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cf9090-3103-44ea-88e5-2aaaf946e3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdffaa08-b1ad-41ac-91e4-5904171b116e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912be69f-534d-49c2-804d-4c70eeee4b48",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a27d6de-10de-4a5a-832b-5027967c2af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473d12a2-b709-4dbd-b6cd-5e31a1428019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d96334f-cc06-412b-83b4-c4605c098a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e456aa2-44f8-4662-92c2-20e9953596d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4deb005-f57f-45c5-90d8-d58d0297225a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b24c08a-2270-4632-badb-a850820e231b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69734a3e-efa3-4d0e-8ce1-f4637fd8bd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86419459-9dc0-4ab3-aea1-342ffb20e522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2843c6ca-4a7a-4449-89f6-ad2934e05305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9841dfbb-41b1-45dd-8f6d-d3a44c10d101",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1f829d-dd38-4c2c-ba50-2899e325603d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2bbed5-7048-4515-9eeb-5261d44030b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1302ad0-5ead-4100-8d2d-409198338ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b704ab-3956-4cfb-8454-ec4fd01e1ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2321a4e9-c99d-4196-a427-f3e07cfe327f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aa0b56-1255-46fa-b3e0-2264e6bc38fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878c3555-1b63-486a-b668-b00bd91cc900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1560bcff-047c-434f-90a6-9655d9ede570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11eb0c9-1804-4bb2-b42a-dfe758169528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f5a271-a879-436b-bb35-4d1ffbb2b505",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d462ca2b-167b-4408-b2ad-dcc7070c191a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800d5a81-bd47-40c2-9df3-c1279446c249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ae2b7e-b26c-47cc-96e8-3449df267fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2570dd-7148-4f56-868a-26a8ce8efbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd1ec81-682c-48df-906e-b66dd9d4a89b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa855aa-ff42-45f2-a056-f3cbfb1d423d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c663863-9c75-4793-95f8-6a7c94f13c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f023c8-7e5d-45b9-a1a5-98f00125d909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef9f851-fe4c-4cc8-b563-8a36ca82735e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d030948-1fba-4b31-b0df-70adacd42feb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fa67b3-2648-480f-bb56-de29b69c7f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac2d0da-9d29-40a3-9fa4-e787215f6387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fda7615-17b2-47dd-8856-c32dbf97a759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cc2dd3-75cb-4df6-81c7-04f14d20fc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7febe1e0-401a-4e70-9adf-8665ba1dc20f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff357c8-8647-4330-b1d2-831ad2183bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed26ad8b-6427-485b-9205-f622694abc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfe5e9c-4cb0-4555-ac1e-e965bb7c649c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878a6dbf-528d-433b-8223-5572c4254695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a4257b-00ba-47f5-8b97-7e16951819c2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57601f31-3915-4dcd-85b0-72811a6a2686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57be3e4a-87c9-4341-a21c-fb308c7dfa41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6d6f55-6208-448b-b3f3-503134b21bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ebd93f-bfa3-425a-9fd9-c85489a47714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acab5d25-2b39-4bd8-99e1-a10945f0441a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b306c8-6148-494f-ab07-56e986a5fc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1cb225-db5f-451b-87e5-8cf74e818bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b01bad-43f2-46ad-ae83-2beb46521d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ea8974-4308-40a9-9187-3b34a8e7e58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf93f0c3-4d2c-4dc1-a479-253527de75a7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514b9135-aa4a-40cd-85bb-712c675f584a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8cd1b6-b3e4-4364-8c14-8b47145be814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dbf7df-18a0-4afe-afbb-010f26f6c1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6c2fea-1797-438b-84f3-3798093fbdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a56c68-c738-447b-8e44-7e7dda696b98",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e644638-b9f2-448c-bee3-e2cae9a9e820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa16716c-684d-40b6-9267-41112f1df138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a8c61b-79d3-4a99-a934-5570e1c989c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47fed15-9c4b-427c-83d6-c1d0590c0e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ab4070-691a-438c-83c3-0eb837c172b1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f422d9d3-29ac-436a-810d-9e8127a33a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af980e8e-c560-4869-9c89-ed3fc6d728e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f71543-1833-48c1-81ab-c1dcd4c70d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab0e084-0b28-4331-909d-daa8d7a95d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f95bfcd-6de2-4aba-afc8-a1f0d355f9d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5ec6c7-aff6-498c-a409-183cbe28bb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2d011f-7350-49e4-8e3e-603744a31a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc23701a-7661-434c-a233-f64e70b87c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2faf5994-6624-4260-b401-e9a9861d0eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d5c161-5900-490f-b5ec-17f253bbd3ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c003e4-4e73-4a60-87f2-e8d9f28a2cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7b3f35-9932-48fb-ba4a-5d1544dd8dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e46dbe-dbdb-4711-91ed-fc5d63e2f758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdc6793-4632-453a-b0b8-26ef2b4649e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659ae54a-b193-4d3b-b07a-e3aca203229a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84516c9b-f159-45bd-ad8c-04c2c326860b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48662767-a42b-4f0f-9b5c-fbf6077d94b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a582841-922f-486b-bb4d-a31ae389cc37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc54c8f7-51df-4983-b9e8-663ff3eef142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338c3a00-e4ba-4056-848a-b055bf366d77",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10075cbc-0b55-4af6-bde3-cec61ebcaafc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "517cac7e-4584-4b83-9436-341c859f2ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ad4cba-9acc-443c-80c9-41fd9cc528dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42162bca-290e-4b00-8145-ac5c1557e4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed708b9-e840-45b6-9ea7-1e7b411492e5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f146863-ba19-4ddf-8b06-0ee9714e0d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "085ca8e8-7c30-4fff-9236-e2e1aa8bdd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2a9fb5-d1e0-4b9c-b472-67552cef20ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecdd3f0-1472-4ee2-81e2-415db6dbaa22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee99523-d918-4584-802e-4e60b1da8d3d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a584e30-085a-4e2e-acd8-147e7c645c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfbe043-94ca-478b-a8a1-0829d9531885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22ec7bb-090d-40d5-8d5d-12f1571e4c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c85398-ab28-4e51-85ad-3b64755c3c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b77c833-5395-4b65-9584-abc70889658f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8b038b-da01-4864-af20-19d86ace10e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce782ef-cf3a-4f73-bbf3-f176784304db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f84cadf-7d37-4650-a35b-4afd895c8643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22394be-b523-42c5-84f0-25570e83ab9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158f2244-9752-4dbe-8dd3-160bd96c7d26",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d7f579-e138-4d85-8f7f-3d86b8ee2e42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ec50e2-0abf-42dd-ac6c-d00c8268b5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2468450e-489a-4a85-a05d-31b663e4d643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e86974-c9d6-4045-bd1b-7fe91db99e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1746214-c80b-4bb2-ac8c-6fb74f89856e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506d88a4-df19-49e4-b427-cab88547bb81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "388bc087-613b-45b7-a315-b035a5218c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724f0860-035c-435b-8cc3-05a2eb6491c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166eefc1-d101-4c99-9296-947b81920d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4471b029-81d3-4bf9-b194-d0bca7db3195",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e553b4a-5aa1-48f2-88e2-da6dfbc1638d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba4eb93-e0d7-4a4b-83c4-e563e94a5c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327f83df-d258-4983-8b18-2f1e178e78f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1afd409-7cd0-46b1-b4a6-d8c7ba9dff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b926ba17-f23a-423d-84d6-ec262e76462b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657deb86-7b3f-4393-b4b4-bbee051b03ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdcdfb89-f601-4213-8dc0-b994ecfef47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577020b3-b9e5-4a16-9e08-8f982317d8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4660a5-242d-4cbf-99b9-3f25faba671c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579fbee2-ba55-4cf2-b30f-44bc5921846f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f65108-5823-4fe6-9d56-15ffd070bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3908d9-cb01-4de4-a8a8-4ff100acadb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f43bf5-808b-4435-9e0c-0ee1e0d08328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bfdd52-98fe-4094-9599-2522fb1c8daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ab55a8-907a-4aec-9a8c-a02bc1aeb525",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ddff91-21a4-44e5-895b-bf395b3e6d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc236137-945e-4e2d-a294-43f7a6468e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb8062d-774a-4ef4-9f4a-60661ddd55f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d6c4e5-82e8-41df-87f2-db245ad374a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd42315c-67c8-4995-9df4-f6d0fa4ce03b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc7ad01-72fc-4d49-aaab-94e21700f774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6297d6cf-a503-442a-8543-77012ccb04c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266e4d41-5c6b-4dac-bdf5-0b9a537ca832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892cbb99-3945-491a-9017-d2bbb43ea0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d7f6b7-beb0-41ec-ab1e-143d4b856acd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4e1808-049a-4d26-b523-48051b83f429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10836316-7054-4fd8-8ee8-a41f73cb25bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7e32ba-f8e6-405b-884e-9aa5613617bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbc457a-6f73-49a3-b2f6-05af13658526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c42974-6947-40d4-a341-60ee583fac37",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c14e7b-fc5e-4a8c-bf72-eab783ee35cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5196c0d-f462-4068-bd74-d977432a1240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f06551a-8794-4405-91ba-88b4eb97ad7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936bfdf4-b68f-49dd-b849-ae6be8c9f034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fcecc1-9c38-4e62-a865-fadd7f496d99",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef9495-52a4-4197-84ec-92d357a6660c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee4b0c5-63da-406b-a947-852398da1f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf52367-5981-4056-9dc3-cf639f51f4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f820eb-bcc8-4223-a485-6d41b123333b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8366ba-354b-40f0-8e39-1b2a718c69aa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721071f2-268b-45c6-865a-215ebdac158a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b6ae87-fb09-4b6c-9f7c-ce5336b18a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f40430-437a-4349-a127-0201fe157704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b8c99b-6c25-4360-aa18-7f177fceb7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe46434-bd39-4e7d-a363-ee9f56555194",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f5cd41-5deb-4903-a177-4868185423a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8cdb81-0549-4f6e-9aa9-661bd2d3e674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8973cb-58a0-479b-8a49-b0cc46ed519e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fc11a1-e90a-473b-b24b-f415a75c08dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247ca9fe-2860-44b7-8f4d-bcd15925c354",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294d99cc-1318-46d8-a5b5-9c86581c8fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3ad5e8-750f-4e43-abc0-c554cb267c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374a289b-8c2c-4ddf-9fbd-f4492bac422e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2859e9a1-02f2-4014-a178-369dcdd71c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e2a56b-356a-4b7a-bb0b-5088fef37d83",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526650c3-6efa-4718-8e84-60840e95647b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fec778-a090-4258-9d8d-d436644c8ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f9a2e6-d11c-4ae1-b522-03fe647a7915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8546007c-b38d-4542-9834-2b8825106dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc84dd6-af34-448a-87f4-059a3d4b541e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca2a014-d822-4e1e-80a5-6c0de32fcfc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555001f7-fd27-42e3-befa-01591065a808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b81f6b1-aeb9-46d9-8c90-dfda09c2012a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b4b493-d59c-4f70-94a2-bbc7788229e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf7b8cc-6e77-4615-b796-bb44e5a973ca",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c09ef24-e213-4e9b-bd1f-687979837dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e38384-1990-46c8-9280-cf8b63ef161b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c07c94-b0de-4123-832b-3d2cce3e8a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e449172-9574-43a4-b8c5-9c5481f203d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e95a99-3915-44c3-b8ee-6ed2d5cf028f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7d9664-e2e8-499e-bc9e-974eb7cecc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1291467f-7e14-43b7-b7e8-be3e72e1cccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5fb455-7385-4cde-83df-3f22aee86074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce26ca3-42d3-43b8-bc97-a67cedc138a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301d8b48-09ad-46bb-8438-24e910f87ba0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e984cc6-dcd9-4dd4-b998-6b90c84888c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656d6512-1196-4b10-abbd-ed415a9e0f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5732e31-1584-444e-97eb-778a37273d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f849f48e-eb32-48a1-9f6f-cab0b9013b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456b9645-d94f-41d7-a983-027e237c2523",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91869ad8-797a-4d32-8ed0-befa9c5414ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af84f0eb-6a55-4db9-9ce6-1e5b174f67fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4def5fb5-453b-4af1-9ac7-ade4a2b9ad4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb35020-559a-47be-97a2-6ebd0883e897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26b2fa7-9c98-4989-a2bd-5d7d67b25045",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37356ab2-33fd-4996-8f2c-e44b1aa7a241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66999084-81e5-4458-8b69-1c891f15e31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1ddf1e-8a54-417f-911f-3a0405c89c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9e98ab-4a3e-4e3e-87b5-dc97fbf1f900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f29f3ed-e69b-4ae4-9a7b-afa57c910300",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e6cfef-6835-4061-9959-58e376a871a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cae85af-0891-4028-af21-dfcd9a4994c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea40bc55-b9a4-43f4-b039-870d1c0c0135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2210ec44-fe39-4e98-a175-1bbf5b573e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab51ce2-95c8-424a-a2df-00a27cee0bdf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e6ca1-b1d1-4cd5-acdc-b7091cdce9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851eebe2-4e8e-49d0-8ae7-4833b0075934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e2a137-bdd8-44ad-8c08-ba78ebd6da92",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa537424-b8b0-41f6-b2a2-ca2efadab675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519551f5-337f-4932-ad74-3aca48278a39",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b01a9df-d7f3-4462-979f-cbd07513007b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896fd1a6-6347-4771-be0e-0487e41947f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64c90e0-5091-4759-b6d4-5ae668034f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f3a29d-5d7f-436e-b882-f5650fb9f9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c844b7-6575-42aa-9629-f02dce5ff114",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00365fe3-653c-461b-9de3-7831b4dcf810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03992974-5700-4878-bc01-b0fc372d8cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ddc58a-2ad6-479e-b000-e13e5487b56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2053c00d-4e26-481f-ad32-f51159306013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e33122-a8d6-4e6b-9cf1-ad31e00269b1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3c5219-5f87-4eeb-847d-e5fbba41c646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ead1f93-cde5-4a08-8a8e-a3345bf648ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423740a4-5103-473b-a26d-cf58b4e6682d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd7a347-4be4-4442-bb5e-fdc8b1e9d5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931aa675-caf5-407f-83a4-900086e4cd52",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881c390b-4726-4b3c-9299-e0aa07512e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e664faa2-3af6-4bdd-a04c-5f230936e203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b7c749-2b4e-46ae-813a-bcb67164410c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb72e426-5594-4a0c-bf31-278ec72fe1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248741c6-333f-4e96-959b-c061af5c65ba",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dc65e5-55ca-4e9b-896e-3a4a8d208d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "892d84e6-c91b-4118-a78f-be2b7166ca98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0868b21c-b096-4fed-9a35-b2945d772143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975768b0-5a09-47bd-b89e-42fec6648e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be88b964-c17a-45cf-a2f3-85e78449d79f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa28318d-a753-46b6-8497-b6f0bc71befc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c69e226-c563-4400-bec8-33634bc80df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5a4e39-36bc-4f1a-9fd1-f4121c0bba3b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d5fdee-832c-4546-a73f-bc39e1a3a64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5d094a-950a-47b2-9ce6-51ae70af8e88",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cecc20-340a-4e0f-8467-52090c9cb08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3297498-d570-499c-a799-6ea033f313bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf79e73-3bb6-49ae-9025-7a96222b961b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d35ad8e-42f8-4ad0-850f-6ece86af1733"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50f47249-0fd2-4db5-a3db-21fcc54a8905",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "398801ce-ecfd-4287-82a5-bb2a5e7936e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d11026d9-2a3b-44d2-b887-9a1a8a9e05db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d90413ea-043d-42de-b61f-be0ebf928489"
                    }
                  }
                ]
              },
              {
                "id": "b4c1ab87-dd2e-41cd-ac38-505440340652",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a347b44e-c40a-49bc-93b8-7fa54aa036ba",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cb56d8-9831-4365-bf79-8fa2810307f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "17341595-4c8c-4ebf-a9ff-89c2ee63c19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b10a19-4b50-4e97-bd06-c8b303baf641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b4f40bb-8847-4224-9457-dbe5889431a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ce907-4574-4f54-87f5-1f615f51e18a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bd5197-d32e-445c-a9b8-9456a792fa2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "44d20c02-2b4b-475e-acd6-b15ff5cb2ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8766e699-b942-4a47-a303-a872d408cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "856bd9d6-46c4-4ffb-9a5b-e431cd870642"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c52a484-d295-4398-a6f5-e16e1c273adc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00a68802-a049-46f2-aa1f-352d289682e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d22dbd14-d944-4b98-8310-ef2195a127a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2acf279e-61b0-4760-b9e7-38bb51d64cac"
                    }
                  }
                ]
              },
              {
                "id": "38e74501-6528-4811-a46d-612908580e30",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "90d71738-5664-4937-bbb4-92c263af802e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6674f0-f0ff-40ad-b6b5-39e4cdf5f9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "beb32308-fe01-4a53-baef-30fa4e3cb406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31370ab9-8fc1-47f6-80e5-78576ad540c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e359f390-8f7f-4ff6-a473-2c27a3eea207"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3e531b55-e638-4908-b5a8-b6a7f9a5e7c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4029f975-c870-4687-bb78-22e1b502d83e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94b113c7-f4c9-4ee4-817d-f142a9857466",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8eac9f96-7310-4224-8f11-5145e9ec5ab6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b182be9-2e13-4166-ad78-869855210682",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c068056-2c20-4144-b530-10de40b99900"
                    }
                  }
                ]
              },
              {
                "id": "1ba2ab69-4414-449b-a5ba-be4a3312efb8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a112e0d-505e-4de9-a4a6-722e7b70bd57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5c1525c6-f28d-4e68-a597-b43c346984a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1761a71a-bb64-4034-9e3b-2530235ba122",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb48ba9a-1d2f-492c-a322-d3b0f94c25f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66a46f75-cfee-41cb-bffa-3f284c7940d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bbb8ddcb-5a92-46f5-af76-4272bfc15eae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df99aded-238b-4ba1-8ba1-735143099860",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f791411-bc16-4ebe-8454-47d812bf9345"
            }
          }
        ]
      },
      {
        "id": "e948b21e-6ad1-4cb6-a677-d071996a8a2f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "794b6edf-e416-4ae4-92f9-8eddcd9e1684",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ceac2b0-553c-4935-ba7e-ce6133f053f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e1df77a-89ba-42f7-95c5-074248ef9ef4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4a999a-c5c9-4cab-87d9-316e6aa2f30e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "159a7a3a-a8f0-48d9-a635-fa20ead59fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fc18ba-8062-4cec-935f-e7d462de08cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a47d5f9b-05f2-436b-b6cb-6d3587d47c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63857282-7ca0-4099-b265-4c1dd9427dff",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9678efe-f7fa-414b-bb53-22306d96ff79",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5ab692b1-ba31-455e-9a3e-3d50a262a36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62be765e-bec4-4482-953e-7f31e79bcba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dfb153a-87fd-49bc-9960-b23678aa2646"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6c69491-76aa-4703-b344-131891b1e4d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32732833-77bc-4e75-99cd-b796601b61e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf85349-6307-471e-ab00-af0379328c08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b563c2e-d4cc-41f6-b7ba-19a49298a759"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d75c42f-6606-4a9e-a42b-3d74394032d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3d82fac3-f95d-4b47-b180-e601171a8fa3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "561b59bc-7d3c-4aea-8187-42ef6a9130da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d51a249-8411-49c1-bdbc-f02faf458af0"
            }
          }
        ]
      },
      {
        "id": "331f9490-6d0a-4ae9-b0ab-12339fa00efe",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2755bd9f-5297-46ab-8df9-9384ac0fb8a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e70f13a8-163f-4fb3-b462-6d9ffe210b7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d5fe0ef-751a-4ed2-9983-585539824df6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24aa5978-f6ac-4861-9ce8-790163d95eb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d6c835d-abf6-4b92-a32a-99d82bb61d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a315dac0-49d5-4fbe-96cd-2d2ed7f4b9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f3f652c-66a3-4ede-92fa-308d3825e5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeb55a6-94ce-4433-9131-118e8b7b9324",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144c73cb-9bb0-42a4-acde-b769e2681c8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe911993-cbdb-461a-a698-abe018beb8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756b74b4-5919-4623-b4ce-4e04a20145ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4f65054-3e79-420e-960d-70b7c8684987"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bef0873a-ad18-41a0-af64-c263d7fadbb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69c7d356-e11d-4253-a695-1b5d27ff5490"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3f03d8b-f329-45d7-987d-2835a3a46cc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb0ed70d-36c6-4d71-9eeb-f70dc42de92b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bf4399c-1a6b-44cb-8abd-765d184fea66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "495ebfc8-f49b-4eae-bd9d-803023f1690d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec4845ea-a51d-4711-866c-4707ddbba47f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47659cc1-6679-43d5-b9df-d41c951587ab"
            }
          }
        ]
      },
      {
        "id": "26f04a80-d332-4c73-ab29-bb2fae4f060d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0873eb86-18d3-4f04-a339-38183ca361ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5146f8fb-c63a-4efb-a140-e642995a9847",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fb7c7a0-6698-4087-a84c-b4ace9b0b90d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab59f2cf-82d4-42d4-916e-10f8d48b991f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6913352e-2cda-4474-888c-506dcc7ebd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6d3992-6806-4196-a75d-86dac0baab81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae297415-7512-4b73-9be4-df3718ab66e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec51cc5-06e3-4333-99fd-5be2d7fcfb09",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd04d9a4-b60d-435d-8825-b665b64a7ff3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4f43c67e-9f13-4c10-9407-3e20f0ca5401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c237cbfb-ff87-42fe-8f38-f21e7d542163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bb2c64d-51b3-4770-b7d8-3308ad8fbf45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d67cc460-f17e-46c9-abce-787bb4bf3011",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "628f0396-7d7e-471d-9bf4-2d78a53e9da4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c37a18c6-bda4-4b17-9f4a-6058fcdab5b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "538e0149-ffe8-4c53-b269-ecb4723af3c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc5878e1-732c-40ec-aaea-db6be1f3f7d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ce14995a-e28e-44cf-8152-267b8fbb6cf7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27d530b3-6921-447e-bb1c-12faef95418b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "748c9cb3-6120-4457-8fcb-d1c799a08e9a"
            }
          }
        ]
      },
      {
        "id": "822ed75a-d6af-4641-972e-1608d459df80",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "976a8efa-e2e9-43d1-83b2-d3bcf52303ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebefde56-e2bd-4afe-a4f1-12899f9a70a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f19a76b9-ef06-4bd0-bd48-63936929cc52",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1734fbdd-00af-492d-b2cb-fcf10d215c57",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ef100d4-8bd8-4493-904f-868f226f5526",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 567.9656488549622,
      "responseMin": 8,
      "responseMax": 4898,
      "responseSd": 707.5530101545596,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672360701440,
      "completed": 1672360865014
    },
    "executions": [
      {
        "id": "89437885-b37f-4ead-b5c9-7947584f3b1d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f0b47ca8-54e5-4add-b3a6-a553a0ed9321",
          "httpRequestId": "d0bd75b4-e525-4cf4-b55d-6938575a2474"
        },
        "item": {
          "id": "89437885-b37f-4ead-b5c9-7947584f3b1d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9ce75f63-148a-4463-bbf5-72b577b1716d",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 0
        }
      },
      {
        "id": "72c3326c-a038-4700-b60f-06d48fb70688",
        "cursor": {
          "ref": "44331672-dae7-4255-ba6e-f79d1793d9ec",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2bbb38cc-a893-4a7a-956b-858d2e34be36"
        },
        "item": {
          "id": "72c3326c-a038-4700-b60f-06d48fb70688",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a6e241ff-cb14-48c5-bb35-91d22d305f5c",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "6446c86e-0115-42ac-a629-f5cde8c0e16d",
        "cursor": {
          "ref": "0dbcc2a3-e96a-491a-9ca9-86050c0704ff",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3a477b37-3b52-4e2a-8686-50948dc38ab6"
        },
        "item": {
          "id": "6446c86e-0115-42ac-a629-f5cde8c0e16d",
          "name": "did_json"
        },
        "response": {
          "id": "db9f5da9-5fb5-4dcb-b5ca-dca691d14312",
          "status": "OK",
          "code": 200,
          "responseTime": 658,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d845cd5-a6a5-4c01-970d-b438e4d32304",
        "cursor": {
          "ref": "d4532bee-dd9d-4f32-a4e6-8124f41a865c",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64d2f3a4-be3d-40fb-aaa2-8d9b51c24165"
        },
        "item": {
          "id": "7d845cd5-a6a5-4c01-970d-b438e4d32304",
          "name": "did:invalid"
        },
        "response": {
          "id": "d9690e6c-c266-4b13-bc8c-6ebc557a87ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d845cd5-a6a5-4c01-970d-b438e4d32304",
        "cursor": {
          "ref": "d4532bee-dd9d-4f32-a4e6-8124f41a865c",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64d2f3a4-be3d-40fb-aaa2-8d9b51c24165"
        },
        "item": {
          "id": "7d845cd5-a6a5-4c01-970d-b438e4d32304",
          "name": "did:invalid"
        },
        "response": {
          "id": "d9690e6c-c266-4b13-bc8c-6ebc557a87ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd941ebf-ad64-4c7e-bce7-8386706d36b5",
        "cursor": {
          "ref": "bf327810-daef-44e2-b68b-7bda69815be8",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3d0119f0-0eb5-419e-ab3b-2fb59a47c1be"
        },
        "item": {
          "id": "bd941ebf-ad64-4c7e-bce7-8386706d36b5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3da0e1c6-400f-45a7-a9e6-3867532d0b4c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 614,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56945e68-5cb7-4455-97b7-e51896f131bb",
        "cursor": {
          "ref": "bcac98f1-e207-459c-8618-ee8ff6933183",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8e070af1-1d40-46b4-a407-14bf97d2bba0"
        },
        "item": {
          "id": "56945e68-5cb7-4455-97b7-e51896f131bb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "523ecc78-2d73-4263-bcf0-5ae1fae53ae8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 510,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a11490-2867-460d-9b67-bc62f75bb57e",
        "cursor": {
          "ref": "d770cb40-90cd-4a98-9795-e4ebb91b2c31",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "85426ea8-b3f2-464e-bf30-f2554c3598fd"
        },
        "item": {
          "id": "18a11490-2867-460d-9b67-bc62f75bb57e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9ac6af68-1d19-4ef2-ae07-b7247c79f77a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8f76ca-d2a3-425a-bb1d-19df1056af6e",
        "cursor": {
          "ref": "48d8b6d6-5b17-47c0-a5ce-99c957fa2e91",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2a9edf42-c0b2-4583-988d-92cb3c92f358"
        },
        "item": {
          "id": "6f8f76ca-d2a3-425a-bb1d-19df1056af6e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c0de75f4-5e23-43ac-829e-2ac0cb2c3b0f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8f76ca-d2a3-425a-bb1d-19df1056af6e",
        "cursor": {
          "ref": "48d8b6d6-5b17-47c0-a5ce-99c957fa2e91",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2a9edf42-c0b2-4583-988d-92cb3c92f358"
        },
        "item": {
          "id": "6f8f76ca-d2a3-425a-bb1d-19df1056af6e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c0de75f4-5e23-43ac-829e-2ac0cb2c3b0f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e751b989-b070-45ef-9474-e02f19f280e8",
        "cursor": {
          "ref": "8d290b83-b1a4-4bbd-a384-91ac1c913e01",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "05d6654c-4c72-4eb3-a410-3d1cddd2155c"
        },
        "item": {
          "id": "e751b989-b070-45ef-9474-e02f19f280e8",
          "name": "identifiers"
        },
        "response": {
          "id": "638b098c-e5df-4b3e-a52f-374bd33aaa26",
          "status": "OK",
          "code": 200,
          "responseTime": 818,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c63c33-0c56-4ae4-b417-33594c6ad4af",
        "cursor": {
          "ref": "513ce916-f4b1-4e19-9725-25c9a2884190",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e9f240fe-0e19-46de-af47-0bdf710315fb"
        },
        "item": {
          "id": "02c63c33-0c56-4ae4-b417-33594c6ad4af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e137a90-d739-474a-a657-3f91b533834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c63c33-0c56-4ae4-b417-33594c6ad4af",
        "cursor": {
          "ref": "513ce916-f4b1-4e19-9725-25c9a2884190",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e9f240fe-0e19-46de-af47-0bdf710315fb"
        },
        "item": {
          "id": "02c63c33-0c56-4ae4-b417-33594c6ad4af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e137a90-d739-474a-a657-3f91b533834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fca5b2-9939-4586-ac10-15c8eb78fa20",
        "cursor": {
          "ref": "cc3508c4-b77e-4452-96ce-0d197a93f0c3",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "583bbc29-0e12-404f-ab81-5d025a124848"
        },
        "item": {
          "id": "87fca5b2-9939-4586-ac10-15c8eb78fa20",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "59b0e8ab-936b-4032-9e66-8ef43a80d074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986bb2e5-b7df-49b7-b8a0-b1b68ffb9bd0",
        "cursor": {
          "ref": "8a2e7262-0ec0-44d5-bda7-9eb3f28955d1",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c83879a0-fadd-45f6-9b4f-a42972bb9b9a"
        },
        "item": {
          "id": "986bb2e5-b7df-49b7-b8a0-b1b68ffb9bd0",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "66aa1908-b256-47d0-a039-a341d5d71a70",
          "status": "Created",
          "code": 201,
          "responseTime": 2301,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "be50fad7-db58-4528-b977-24767d79cce3",
        "cursor": {
          "ref": "0d0137f5-7227-4a4b-9f2a-b229b6948f31",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "646625bc-00d0-48ae-bda4-4486d1b85715"
        },
        "item": {
          "id": "be50fad7-db58-4528-b977-24767d79cce3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8a6eea43-05f5-4806-a6cc-62067b2d27af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3075110-8eb6-427c-a089-b21df5f2cabe",
        "cursor": {
          "ref": "aff52e72-a165-449c-b617-ecb791c7f15f",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "948fb97f-0b1c-434b-9ca7-e8bf38ce8e4e"
        },
        "item": {
          "id": "c3075110-8eb6-427c-a089-b21df5f2cabe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5d3620f2-4c81-43e7-9cdb-27ad79c4b7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf07027-6d2c-4bcc-be66-324cfe963889",
        "cursor": {
          "ref": "66f653c9-f6a5-47d0-8de3-69e39078e1be",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ddcacefe-275a-4653-8acb-a98a668c90ba"
        },
        "item": {
          "id": "5cf07027-6d2c-4bcc-be66-324cfe963889",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9c4e49a1-7223-4612-b87c-3f8af29e4a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf273d79-4208-4b1d-a8d6-690ac1bcf34d",
        "cursor": {
          "ref": "87fc65f5-8295-4491-a47e-9d80bd9f32ee",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "966ae58d-2002-426f-b773-34b6d464769c"
        },
        "item": {
          "id": "cf273d79-4208-4b1d-a8d6-690ac1bcf34d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d9b28567-140b-4081-b771-5c0ec34dab53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d9a227-aa22-44ce-920f-7fb39e6a8811",
        "cursor": {
          "ref": "ed787ddf-fe7d-49e1-8dc8-4c68f1603e27",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "036247d4-d543-4c28-8231-24d77de19cb4"
        },
        "item": {
          "id": "64d9a227-aa22-44ce-920f-7fb39e6a8811",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9769e43b-e03b-4915-bc96-b4b9f8da25fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a2f15f-f9ae-4d57-8519-eac770b514cd",
        "cursor": {
          "ref": "9c44fb72-767a-483e-a811-c1c542ed97d6",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b38c0eb8-6054-44fe-8a80-0d522745589b"
        },
        "item": {
          "id": "a9a2f15f-f9ae-4d57-8519-eac770b514cd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fb45db92-a3df-498c-ac48-54d6b2471b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7240b9e1-53f4-4d95-a904-5b719ffd3a2e",
        "cursor": {
          "ref": "4358c7da-e5ea-486f-8372-4f1ff2961837",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b4866102-ade5-4af0-823d-a842b9503cf6"
        },
        "item": {
          "id": "7240b9e1-53f4-4d95-a904-5b719ffd3a2e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0fac8bb5-30c5-4755-ab02-cf34a1a604b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0087d96d-c423-4f1b-8144-ff79334b689c",
        "cursor": {
          "ref": "92813daf-dc8d-4e27-ae96-bb58451131a6",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "95b580e7-abea-45b0-a604-49b9191e880b"
        },
        "item": {
          "id": "0087d96d-c423-4f1b-8144-ff79334b689c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c9c35e5a-46ee-4471-89cc-8a0a0a20d474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f056e1-7658-4896-ade6-a6be633e070e",
        "cursor": {
          "ref": "0bfb83de-fc03-435c-9cf2-f3bacc168e55",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b71ff976-d584-4e74-a54d-0c30bcff5f82"
        },
        "item": {
          "id": "f2f056e1-7658-4896-ade6-a6be633e070e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c2dc25cc-3398-4c13-846d-796b25d80961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2d86fe-7298-4ee3-8ee1-dff085a8781a",
        "cursor": {
          "ref": "6cafceab-af4e-40d0-8b49-4e0254c81c16",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5b6ba6ee-f4c4-4e4e-a8f7-37b781e7340f"
        },
        "item": {
          "id": "aa2d86fe-7298-4ee3-8ee1-dff085a8781a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "30fb1a73-8a56-4414-93cd-d810841980a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f11ee11-e8d3-4458-ab3a-35e8c231bee9",
        "cursor": {
          "ref": "2812544f-aad2-4e94-9b24-8e66b53733d5",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c86bdbe7-a938-42bc-bd7b-81c71df50b3f"
        },
        "item": {
          "id": "5f11ee11-e8d3-4458-ab3a-35e8c231bee9",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "703fe40b-aee5-43da-99ac-0f3db09e1606",
          "status": "Created",
          "code": 201,
          "responseTime": 4175,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "e9b57c95-8f8e-4ee4-8982-f2eecd72fe7c",
        "cursor": {
          "ref": "7b281050-5640-4e54-a727-8e77d8f196ba",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e43c7bab-28dc-465d-8dbb-d5bf11d7b2e4"
        },
        "item": {
          "id": "e9b57c95-8f8e-4ee4-8982-f2eecd72fe7c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e1d819e9-4645-411c-b95e-47ec45b989be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93a1c89-0be8-4f20-bd67-e6e55fbc2476",
        "cursor": {
          "ref": "8757430e-06ec-4839-897c-34a51ce49280",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "aeae6ff7-f069-4d60-a586-0bfd3220ac38"
        },
        "item": {
          "id": "b93a1c89-0be8-4f20-bd67-e6e55fbc2476",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "592c829f-f161-4ff5-96f9-87520e40f8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f017159-854f-4fd3-a2e0-7b035aabc603",
        "cursor": {
          "ref": "5cd659e7-45e1-4786-9bde-b2f454973a4e",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5614b9b7-63f7-449b-b89f-b3714b689174"
        },
        "item": {
          "id": "0f017159-854f-4fd3-a2e0-7b035aabc603",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "88fde9c4-6bf5-4e7b-a797-e873fb17698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d578304d-1230-47b0-881d-1537ee3dbee4",
        "cursor": {
          "ref": "8b51ff84-ba43-4bc8-8aa3-e19aee6cf311",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "25aa10be-2cfa-4640-8530-b92b4246b812"
        },
        "item": {
          "id": "d578304d-1230-47b0-881d-1537ee3dbee4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5a55f7e7-4902-4b5b-811c-ca8351a7e236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff646554-924c-4d90-a055-cd9133bcb5a3",
        "cursor": {
          "ref": "e9269c9e-f6bd-4b6a-8793-7c48deced109",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8d3c6f42-bcdf-4db8-be23-0f17e574a9bd"
        },
        "item": {
          "id": "ff646554-924c-4d90-a055-cd9133bcb5a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d9a19677-4930-4a21-8c56-7166ec520279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9661538-f66d-4da3-8b04-7084bafef1f4",
        "cursor": {
          "ref": "64483414-10e7-46c9-a0a1-1e842a33204c",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "35ec73a7-1109-489f-8fb4-aa2738c1a62e"
        },
        "item": {
          "id": "b9661538-f66d-4da3-8b04-7084bafef1f4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "86ab5794-95f5-4bd5-bd1f-becb97058cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef5bc6c-a663-418c-8b39-925f2f8c633f",
        "cursor": {
          "ref": "d5f9365b-2dd7-40f4-951f-852a6ca537cf",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "438ae405-67ee-457d-9427-2a534ff8b4a2"
        },
        "item": {
          "id": "aef5bc6c-a663-418c-8b39-925f2f8c633f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1cd288f8-b144-4ac2-8d58-8a3adf1f5b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e544b7c3-f5ab-4714-a5d7-504dcec2532c",
        "cursor": {
          "ref": "b2a4e238-a722-4c67-b5b1-3a10659f1a81",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "97aba9fe-4e60-48cc-8f35-21af573598bd"
        },
        "item": {
          "id": "e544b7c3-f5ab-4714-a5d7-504dcec2532c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "78549af2-0fe0-4395-b563-d0e8929026f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cb778b-5a7e-4757-84dc-481f44cb6102",
        "cursor": {
          "ref": "e5c08d12-e608-4fba-aa9f-361dc31a6dcb",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "12198e37-5a70-41d7-9992-c37e877af3d2"
        },
        "item": {
          "id": "91cb778b-5a7e-4757-84dc-481f44cb6102",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "498805b3-549b-4462-8a2f-4cb902e8ba9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe0f462-1f4a-4e67-a2bd-9abe9664ca2f",
        "cursor": {
          "ref": "a088d7be-3e78-4584-af5c-028c8a8845fe",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aabbf411-8599-4ade-be84-96daf5da75d6"
        },
        "item": {
          "id": "5fe0f462-1f4a-4e67-a2bd-9abe9664ca2f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7f35a4b7-f2a2-4bf4-85ec-102e8876ccd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e6bccb-9ba9-47c5-8a37-cbbcbb61dfb2",
        "cursor": {
          "ref": "a1fd439d-a76a-41ea-b52e-36b0443fbbf9",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0adbbe4b-c763-41b7-8c90-9995773f7c24"
        },
        "item": {
          "id": "83e6bccb-9ba9-47c5-8a37-cbbcbb61dfb2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "31d8e243-69d0-4f00-bc28-ae723bd1aa8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2c5a8e-15cc-4965-b4ca-380e30027cf1",
        "cursor": {
          "ref": "31248841-e9d9-4341-904a-6fceb33b5e3a",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ee1705c3-abae-44e1-a875-6a743271fb9b"
        },
        "item": {
          "id": "0d2c5a8e-15cc-4965-b4ca-380e30027cf1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "85a275c2-690e-4942-94d2-15793a8b8003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2572cb9e-5e2b-45cd-8e18-77857856b1c6",
        "cursor": {
          "ref": "7d3b1ddd-71a1-42fe-ba1c-ba94e434e76b",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca70f338-192d-4524-a347-706c9056aa5a"
        },
        "item": {
          "id": "2572cb9e-5e2b-45cd-8e18-77857856b1c6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b88ea294-fea0-4c28-98e0-a3493fe1a0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df3017a-c3a4-4615-a910-559db01d1992",
        "cursor": {
          "ref": "ab69c2ff-3d3e-47ea-977c-ea1025169411",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2fe3aee8-558e-445d-a462-05f9a889df01"
        },
        "item": {
          "id": "2df3017a-c3a4-4615-a910-559db01d1992",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c090e8dc-1723-440f-91ae-0cd55c2fb40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b5121a-20c7-43d8-97c2-4a332b58a033",
        "cursor": {
          "ref": "359a5eb0-eac7-4541-aa3c-5d1da8d593d8",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a743df2d-d6db-414b-8bcf-2eecc2f71f0e"
        },
        "item": {
          "id": "81b5121a-20c7-43d8-97c2-4a332b58a033",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6b650fae-cdcd-48af-b173-a8fd2e6fe670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8e80c2-a6d1-46b4-ac42-e4a75a53539b",
        "cursor": {
          "ref": "a3a8a06a-9f91-4cf4-90bf-3a1b148c7e67",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f29ec11a-db0e-4b72-a092-3445a18ae79d"
        },
        "item": {
          "id": "0a8e80c2-a6d1-46b4-ac42-e4a75a53539b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "81b6a900-d886-4885-95f3-0b9ce2c54138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4db2636-d0fe-4637-84b4-582e995c7867",
        "cursor": {
          "ref": "401f5978-ba21-4dd3-a92b-55870f2ca63c",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1e26f09e-7371-4071-b6e5-e24580a4fa79"
        },
        "item": {
          "id": "d4db2636-d0fe-4637-84b4-582e995c7867",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a61b7520-f727-45fe-9b7e-88a49efbae18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b9ba8b-c40d-4ba5-b807-02e00876630f",
        "cursor": {
          "ref": "907f449f-0181-4d6e-b7e2-47b5090a0cdb",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "41cd0488-8ef6-4ed7-afd9-de58cc3ddc35"
        },
        "item": {
          "id": "f0b9ba8b-c40d-4ba5-b807-02e00876630f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9b581214-cdaa-42d6-8ea8-a0144ae8bcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acacfcd-c6f3-4e5f-a578-93363b465587",
        "cursor": {
          "ref": "31d927bb-a7ca-413e-a1df-8fedc7205baa",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a6022941-889e-429f-afe4-d7744c979302"
        },
        "item": {
          "id": "9acacfcd-c6f3-4e5f-a578-93363b465587",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8ced907c-e489-42b2-a5c8-f22456ba8545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e89799d-7eaf-4b72-bb69-9dea00d708d2",
        "cursor": {
          "ref": "c591f025-f45e-4a9b-9f6c-4908e11dbb74",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a946744b-53f7-44da-bcbc-d96fa322cc2f"
        },
        "item": {
          "id": "9e89799d-7eaf-4b72-bb69-9dea00d708d2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "35228882-21a7-48ca-add0-a2e9d8c9492c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c32789-0e24-4535-94bc-a250e0c92519",
        "cursor": {
          "ref": "7e0fcb05-031d-4b5f-988b-b7cbe8c8e454",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "983a2971-489d-4798-b3d3-31e5944e0f2a"
        },
        "item": {
          "id": "73c32789-0e24-4535-94bc-a250e0c92519",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "06ad59c3-e3ee-4df9-ad1f-92080051c007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16378bea-b688-4957-b68a-511975a480bf",
        "cursor": {
          "ref": "35423006-3d3a-402e-b428-3f61a28faa49",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1efce96f-b4b3-40c7-babe-864f7a6f310f"
        },
        "item": {
          "id": "16378bea-b688-4957-b68a-511975a480bf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8fc7465f-4013-48a6-b008-428ad2ee4373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c59f2a-57ce-4a2a-8701-43ceb8a05e99",
        "cursor": {
          "ref": "3639fb70-f214-4b4e-b904-4a479de87a7d",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5bdaa297-7fe4-4f68-92df-488e817541be"
        },
        "item": {
          "id": "61c59f2a-57ce-4a2a-8701-43ceb8a05e99",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9fde9f50-9115-4690-aad3-ef81c3810ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f968814-8a32-491d-bdaa-f433ee7435e0",
        "cursor": {
          "ref": "2e8fb51f-fcec-4d33-a6f4-ed35e9f463f6",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "60eb67c4-8670-40c6-a906-5e30c773aa47"
        },
        "item": {
          "id": "6f968814-8a32-491d-bdaa-f433ee7435e0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c059cad0-37ea-4644-a8c8-cfb6f2c1a06f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 554,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e61607-fede-4dbd-9546-bd575a7830af",
        "cursor": {
          "ref": "35c08f81-e191-4372-949c-b16fc7e1ba7e",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "886cad51-44a3-416b-816c-0e3a50c5caec"
        },
        "item": {
          "id": "b5e61607-fede-4dbd-9546-bd575a7830af",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b8872dcc-0bbf-4cf1-a451-4a04f8338608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605e5fe8-441f-447c-acac-2f93f7d75540",
        "cursor": {
          "ref": "2a119849-a536-422e-8065-9577202efbc2",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9040b7e5-d8da-47d7-830d-47aedabbeac8"
        },
        "item": {
          "id": "605e5fe8-441f-447c-acac-2f93f7d75540",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5a3db107-9a8c-4630-bd1d-2c3c5b538cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0629b7e9-86ce-49ef-8e31-844bf3ac9779",
        "cursor": {
          "ref": "96066638-f354-4b17-ab2c-34d7763da527",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "498bb449-d31c-4771-b65e-2fefb5dd7f06"
        },
        "item": {
          "id": "0629b7e9-86ce-49ef-8e31-844bf3ac9779",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cf76e278-a019-45a5-b143-12142e5f91e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bcec4d-f5fd-4042-b01c-d7122bb9ea7b",
        "cursor": {
          "ref": "877b459b-aefb-4c73-9bf2-99750889d811",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3534a9ad-631d-4842-bade-0c4b3f294dbf"
        },
        "item": {
          "id": "c1bcec4d-f5fd-4042-b01c-d7122bb9ea7b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4a504f3f-4d49-4275-b865-be807b497517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481247a3-3f8c-41fa-8d1e-6ae3f86eb7f4",
        "cursor": {
          "ref": "548410c4-1e86-4b15-a638-5367dc4b52ec",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "63d002e0-267c-4a5f-a029-294d8c49de97"
        },
        "item": {
          "id": "481247a3-3f8c-41fa-8d1e-6ae3f86eb7f4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e8cbbbaa-6cb6-43c2-9414-399b78344e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc9f4de-3b4b-416c-90a8-ac2e69fa57bd",
        "cursor": {
          "ref": "02e89c47-fade-413d-99c0-1d1e1e0dffd1",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "146ea886-8eb1-465b-8e5c-4f6f3d65f4df"
        },
        "item": {
          "id": "2fc9f4de-3b4b-416c-90a8-ac2e69fa57bd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "51775ed5-f65b-453c-97f0-5c1bb7d40299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c853f36-5ed0-4fb5-a13a-d9b1131bbafd",
        "cursor": {
          "ref": "223fb919-8f21-4507-b798-b3ae0cdb3a46",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7a977114-d382-4eca-868f-9221e5d1ba0f"
        },
        "item": {
          "id": "8c853f36-5ed0-4fb5-a13a-d9b1131bbafd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c229cd25-31ad-46a6-9c02-c84c1f2d6cd5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 572,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb802412-f60d-4fa5-8f19-da2ec1c35b6b",
        "cursor": {
          "ref": "a24ce285-ffeb-48ec-b8db-93a6ed2e6228",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c9f2dc87-d419-4604-880b-9b9faa655243"
        },
        "item": {
          "id": "cb802412-f60d-4fa5-8f19-da2ec1c35b6b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8e535001-455a-4690-8260-2c45d4079496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de32a62-e397-470b-a555-5ae60dbd1f6b",
        "cursor": {
          "ref": "a9b65987-db13-4dac-a430-6da66c2c02c7",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "73675ded-339c-4bf7-a846-57e430d61127"
        },
        "item": {
          "id": "8de32a62-e397-470b-a555-5ae60dbd1f6b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e66f3480-f7e2-4550-ae2d-8b4efc451118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dadaa12-7e9c-4f70-a464-d754ed3bb1fd",
        "cursor": {
          "ref": "628fc952-3a3b-47f2-90ac-185ea470bc9a",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3cd1949e-2470-4c32-83f6-c2b011715e64"
        },
        "item": {
          "id": "3dadaa12-7e9c-4f70-a464-d754ed3bb1fd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2978664c-14a7-4177-91e4-c554f295fde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2777924-15cd-4433-b323-64ed122929b8",
        "cursor": {
          "ref": "eb616347-3900-47fb-808f-4a7381254903",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8b5ae19b-f628-4e82-8a36-f73b8bc98085"
        },
        "item": {
          "id": "f2777924-15cd-4433-b323-64ed122929b8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e98d4a7e-2f2a-4467-b0e8-b511272adf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1590f8d9-a8ce-434f-b863-eb983f77127a",
        "cursor": {
          "ref": "df29ad72-dcb2-49ba-87e3-9170b8ae8937",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "011fbec6-174a-4303-9781-3fe9a4ac8d22"
        },
        "item": {
          "id": "1590f8d9-a8ce-434f-b863-eb983f77127a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "71220299-16d2-41fc-b2b9-a66dcf560bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec6158a-68bb-4a11-9234-63011c4f9130",
        "cursor": {
          "ref": "db190f99-923c-4cbe-b69f-edf39dbf42a4",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "856365a6-64e4-47f1-93bb-8c44357a503b"
        },
        "item": {
          "id": "cec6158a-68bb-4a11-9234-63011c4f9130",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ae4212e3-9012-473f-b2dd-1b5e61254768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244feb3c-9c96-4f58-b2f2-f0cdac47450f",
        "cursor": {
          "ref": "412f2fd3-e4a3-4087-8b99-c87b6b5702c7",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6f31e116-1421-4fdf-800a-370767efd1fb"
        },
        "item": {
          "id": "244feb3c-9c96-4f58-b2f2-f0cdac47450f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9f77e720-9ba9-40c5-bc33-7ba5142f7d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c0bb03-6577-410e-bd22-3c76eabcacff",
        "cursor": {
          "ref": "5a653c72-8955-4491-8662-422ae86711ad",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ac1ff4ed-39d4-4182-b06b-46e5b865fd27"
        },
        "item": {
          "id": "b1c0bb03-6577-410e-bd22-3c76eabcacff",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ef90a9a9-5888-4e2b-a1df-a1d3d1049131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e3f60b-e93c-4a68-af25-59894500e9f3",
        "cursor": {
          "ref": "fae7d420-db6e-4855-9eae-2aa91a9e89cc",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7dd4b657-19a8-43dc-b078-c19ca9e3f4c9"
        },
        "item": {
          "id": "37e3f60b-e93c-4a68-af25-59894500e9f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b9307868-0672-4fe2-bad2-7184f30e0be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b275f6-66f2-4f1c-84d6-edf73aa89875",
        "cursor": {
          "ref": "cb1f9987-6619-41d7-9808-caec02ea7947",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ded8ced6-b65b-464c-8c6e-bbfc33c01dd4"
        },
        "item": {
          "id": "f8b275f6-66f2-4f1c-84d6-edf73aa89875",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5aff6193-ee17-4ffc-b3bf-c7618d4c21e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15b9952-defd-4c02-a52d-244e7b645537",
        "cursor": {
          "ref": "e21f0e78-67f6-4d05-a6ba-db0f7c105401",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c3d47657-57bf-4364-a001-81b8100c9c4a"
        },
        "item": {
          "id": "e15b9952-defd-4c02-a52d-244e7b645537",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "40cce3b4-d991-47dd-be0a-58b4c3f6ec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc11708-2432-497b-9e2c-9df4c4f698aa",
        "cursor": {
          "ref": "5943c36b-6809-435d-8926-dd3301c14c2e",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "71ebbfb9-d07d-45cd-8f70-5b33c61e5674"
        },
        "item": {
          "id": "4dc11708-2432-497b-9e2c-9df4c4f698aa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f8e067d8-92a8-4ed4-8e3f-3543ab3a61f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3b4819-95da-4f59-9e5d-796b3eff1657",
        "cursor": {
          "ref": "59d86e72-d049-485a-9a4b-70e27ecd9e23",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "06bbdd22-f803-49b0-ba52-2ef5481321b1"
        },
        "item": {
          "id": "3d3b4819-95da-4f59-9e5d-796b3eff1657",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "43a9e58b-e4de-4621-8c03-d40f9ff0e3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cda27e-b89c-47a7-b520-40241cb52533",
        "cursor": {
          "ref": "7f70f296-6507-4a06-b76d-7f83f2cdfc7a",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "19709e69-b0a0-4c45-864b-c40bd7ce3fb5"
        },
        "item": {
          "id": "b0cda27e-b89c-47a7-b520-40241cb52533",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8f213409-1498-43a5-a56a-3304ae08fe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b5fe68-5c80-47e9-aefd-902094175327",
        "cursor": {
          "ref": "069df9c9-5ebb-4c51-9311-f79186cb6b69",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "53f8629f-3b89-4240-8031-a3fdb8c44157"
        },
        "item": {
          "id": "41b5fe68-5c80-47e9-aefd-902094175327",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9deb197c-2efb-4531-990d-faae0c3a2aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d80d8c9-7ad9-4c5b-819d-97e85476633c",
        "cursor": {
          "ref": "6c722982-c289-405e-8f80-f688d7abd28f",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "175926b3-f91d-4740-a0de-89b50407c4a2"
        },
        "item": {
          "id": "2d80d8c9-7ad9-4c5b-819d-97e85476633c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c9bb41b6-03f1-47d1-be78-658160fda460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36809740-85d1-48ff-839a-1d1fddf47ddc",
        "cursor": {
          "ref": "6584dff6-afb9-4006-a0d2-3cdfc1f66269",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3c06b4c1-e206-4aa0-99b8-dcfcbc1a67c9"
        },
        "item": {
          "id": "36809740-85d1-48ff-839a-1d1fddf47ddc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34988235-df34-4b10-90a1-5bb620ece506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdfc20e-144a-4cbb-bd04-dd886a3b858b",
        "cursor": {
          "ref": "55d0090f-18f9-4874-88ed-a0635ba72c83",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ec88fa37-dc35-4046-9e84-c9fe36887e97"
        },
        "item": {
          "id": "0fdfc20e-144a-4cbb-bd04-dd886a3b858b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bad57ab9-8f8b-42ea-825b-442564a44333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b802f-9d9f-419c-bc50-410d4142ce9d",
        "cursor": {
          "ref": "e3b1a537-e214-42b2-8656-06384b4e58a6",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bd15cfa3-58df-4db8-9d58-eca1f2dc907c"
        },
        "item": {
          "id": "080b802f-9d9f-419c-bc50-410d4142ce9d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "66d4ee63-98af-4fcd-9bf7-df74a01e250f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f014b5-c952-4cc2-b3e9-d7a1a8a2f54a",
        "cursor": {
          "ref": "6c101765-5190-44e4-aebf-8487d2dc0d5a",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0ec3046e-8e0b-4267-ba97-ae197449e162"
        },
        "item": {
          "id": "a0f014b5-c952-4cc2-b3e9-d7a1a8a2f54a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "800a89ff-e4b7-41fe-8baa-8509317b6179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7a4277-3795-4d63-88c3-3714b0ae5ca1",
        "cursor": {
          "ref": "bed8c3b2-d400-4468-8629-4f1d700b6ad8",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c66aec08-dabc-4c60-bf58-3b9774afb33d"
        },
        "item": {
          "id": "fb7a4277-3795-4d63-88c3-3714b0ae5ca1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f461da49-0420-449b-968b-10dd91ae1856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9fe5df-9cdc-4e0f-8484-ada410e5b10a",
        "cursor": {
          "ref": "23a5a265-a82d-4c16-a94c-e4a79a3f5515",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ffb49888-adfe-401a-9502-7f6caabfa2ad"
        },
        "item": {
          "id": "5f9fe5df-9cdc-4e0f-8484-ada410e5b10a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e8a1c0b1-9bbb-404f-b9f5-6acd4a071587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bc1151-d7b5-4876-8519-07bc716dacfb",
        "cursor": {
          "ref": "dd2ffd43-791c-4d73-8faf-790d35fbe960",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "179a205d-f357-412c-8bcd-d14f78f4cff0"
        },
        "item": {
          "id": "c9bc1151-d7b5-4876-8519-07bc716dacfb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e26ccdde-6f1e-4442-90e8-46b753fac7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8659ba44-f41a-4a7e-885d-d0b465512e73",
        "cursor": {
          "ref": "1974bc0e-3dd9-4b98-a938-1c7def1370cc",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "14f2a19e-0d2f-4744-a5c8-9d48b7ecd0ba"
        },
        "item": {
          "id": "8659ba44-f41a-4a7e-885d-d0b465512e73",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1d1d5f65-ae15-4331-a44c-46b310dea9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cd1465-4ffe-4ca7-b0b1-7c164c31919b",
        "cursor": {
          "ref": "877fbe25-4210-4583-aa60-badf8303082d",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cb2fbd82-da28-49ef-9904-5d42a5c7c75a"
        },
        "item": {
          "id": "b1cd1465-4ffe-4ca7-b0b1-7c164c31919b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dd0444e2-f946-41ab-ad6c-0fb8c09660b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e834ca-82f3-4bf9-8a85-91055667e638",
        "cursor": {
          "ref": "12495d14-449f-4a6e-b00c-e438f43fb2c3",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "23f8d3f5-7b16-4399-aaae-80a227d6332a"
        },
        "item": {
          "id": "21e834ca-82f3-4bf9-8a85-91055667e638",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "89a7c066-54b2-4e85-8f0e-ef8c94a56aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc78612b-d414-4e34-866a-41e737141b22",
        "cursor": {
          "ref": "e086e3b9-783d-4b3f-8d9e-27e2d29eef51",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0434c2af-4d0e-4b7e-b447-94d4ed47ff7a"
        },
        "item": {
          "id": "fc78612b-d414-4e34-866a-41e737141b22",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9a5a7f82-c751-4790-b050-e0083d5ebba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591accf5-b3fb-40c5-a664-9b2087fa6ca0",
        "cursor": {
          "ref": "b0be1c82-0061-4739-a005-eae2f7468517",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2141b58d-3615-43c9-ab9c-830422e23878"
        },
        "item": {
          "id": "591accf5-b3fb-40c5-a664-9b2087fa6ca0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "51304b24-48e9-4926-a5bd-7e512ace0a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efb0de1-bec7-4cde-9802-ff412b593c25",
        "cursor": {
          "ref": "1b413931-6be9-4e49-a02d-5979b51d0041",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b3de81d2-4e3b-4775-bf6c-53b3941eb371"
        },
        "item": {
          "id": "0efb0de1-bec7-4cde-9802-ff412b593c25",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fc100302-6253-42ac-950d-58bde2c89667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b78495-c65a-4f78-9289-a7514304aa68",
        "cursor": {
          "ref": "8fb556a0-c60e-4084-b381-e721b485af80",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "90db6183-a463-4e65-bcc9-a5bbeb23d0bb"
        },
        "item": {
          "id": "a4b78495-c65a-4f78-9289-a7514304aa68",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "977cec80-985a-4714-9ce6-6bd425338964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6acc806-8623-4314-9407-15877b9f343f",
        "cursor": {
          "ref": "b01ec607-0bc7-454d-b626-7cabff519e8a",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "41249aaf-03ae-47c2-b060-e73d3f2ce81f"
        },
        "item": {
          "id": "d6acc806-8623-4314-9407-15877b9f343f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "33a9192e-34d9-4a24-ab83-244754933886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5745b3b-a065-4e1a-8883-4a50dab10e34",
        "cursor": {
          "ref": "b3481ede-4cd5-4bbd-a40f-105629f997e4",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ded3320e-73e7-46b9-b01e-48583b4eea01"
        },
        "item": {
          "id": "b5745b3b-a065-4e1a-8883-4a50dab10e34",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f8d32d7f-6523-41d9-8fc0-f33b2cbd9652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f566b9-6839-443a-850b-44adb65d3979",
        "cursor": {
          "ref": "80726e24-7b1e-4bf5-890f-44c221a1d424",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dd342bb0-18d9-48e4-a441-555c8642dbb9"
        },
        "item": {
          "id": "20f566b9-6839-443a-850b-44adb65d3979",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2e2844d0-fb69-4dfc-a74a-3a12b791e708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc0763d-b696-42cc-93e7-741a1843e76a",
        "cursor": {
          "ref": "6c03690c-1f68-4237-af1b-649c92a032fa",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5c105b02-e9f2-40d3-a21f-a325fa54988b"
        },
        "item": {
          "id": "edc0763d-b696-42cc-93e7-741a1843e76a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9257cd58-dc27-4e13-a189-7059c40acddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1625533-44cc-42b3-9d1a-1c0361959116",
        "cursor": {
          "ref": "4413ea42-1764-4308-ad8b-155c9d2c030a",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7e4bbe34-9057-4374-9312-4bbae52f2990"
        },
        "item": {
          "id": "f1625533-44cc-42b3-9d1a-1c0361959116",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f48ed15e-5b11-4a57-8e8a-2ee21a0a4d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d695fe-cd2f-46b1-8078-462542aa2bc3",
        "cursor": {
          "ref": "196c1f19-6783-4284-94eb-0cac7c78dd92",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b2b93ef0-6bd8-479e-bfb8-253944b79745"
        },
        "item": {
          "id": "57d695fe-cd2f-46b1-8078-462542aa2bc3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0ef1f2d2-3ef7-42a3-9565-b0b628e41c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30813fc7-a8e3-4963-a314-80ce8544c8fc",
        "cursor": {
          "ref": "7fd13d7a-e5e7-4a65-a2fe-f76446a0d011",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9725e0e6-49a4-4f35-9fc5-d877324d7924"
        },
        "item": {
          "id": "30813fc7-a8e3-4963-a314-80ce8544c8fc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3f76ceaa-6ad7-4731-a5a5-195691c153ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57f1b04-441f-40e7-9478-dbd6b4c8264e",
        "cursor": {
          "ref": "7d03e6b2-3d78-42c3-8295-e639be5c6d81",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f72bc157-099b-489c-8397-1fc85c1f18ab"
        },
        "item": {
          "id": "b57f1b04-441f-40e7-9478-dbd6b4c8264e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "25bc5913-2d0d-401f-8829-3dc6d5e79483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469312f3-9f59-4ea6-8ebb-ae797b07217f",
        "cursor": {
          "ref": "6e4796e4-6b79-49c2-813c-ca4b885e99ad",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "db98eae8-cb83-4572-843f-88432592d450"
        },
        "item": {
          "id": "469312f3-9f59-4ea6-8ebb-ae797b07217f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2c8deb81-25ca-4b45-9582-c93881ec265a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0330d6-e304-44ad-b2af-b9fbffe9bef9",
        "cursor": {
          "ref": "70c87c70-4360-45f7-95a8-2ccf65fbe473",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "35b84fce-f02b-4413-b3d5-6c79255889ed"
        },
        "item": {
          "id": "ad0330d6-e304-44ad-b2af-b9fbffe9bef9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "765ccd1e-270b-42a9-ae46-35766854226b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d8b296-b806-4d6c-8608-015845ec1cab",
        "cursor": {
          "ref": "d2ef6695-1bb8-44ba-9a80-d619c128810e",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "05fa0c57-b4dc-442a-a74e-96c5bf470575"
        },
        "item": {
          "id": "e6d8b296-b806-4d6c-8608-015845ec1cab",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "08382927-2c6e-4ea3-9d28-0cfb6ce784e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d830a18-2e4e-4919-93d4-a39abfca55c1",
        "cursor": {
          "ref": "001fb60f-80c0-46f3-a0f2-50a17b3afdbc",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "68b40957-0a5e-4132-9b08-55b61ae0a7a3"
        },
        "item": {
          "id": "8d830a18-2e4e-4919-93d4-a39abfca55c1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9ff6af52-1b85-43a9-90a8-14760a448e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc57ac5-bbf1-4506-8f77-3f7f40c3c547",
        "cursor": {
          "ref": "985a6c29-152a-4af2-9d8a-77adc9ad93e2",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "81a7e39c-651e-4955-985f-203ac9bc2a04"
        },
        "item": {
          "id": "ebc57ac5-bbf1-4506-8f77-3f7f40c3c547",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "73a11f83-d57d-4d6b-bc98-55b54366edc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5838d82e-3ae6-4ddf-8ac0-886524d73adc",
        "cursor": {
          "ref": "2d39ac16-12fc-4d7a-aacf-cb33421faf59",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a8b7c451-2bbc-49fe-bacd-9497e920b66d"
        },
        "item": {
          "id": "5838d82e-3ae6-4ddf-8ac0-886524d73adc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "91683629-5aa9-4373-bbba-729472700035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb910196-8e31-4ac7-bd8d-79210e4afbd6",
        "cursor": {
          "ref": "0e56859a-2d62-4bd3-a5b1-b39434b86aed",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d1addc34-ad9a-4430-9f17-ecd71cbb54fd"
        },
        "item": {
          "id": "bb910196-8e31-4ac7-bd8d-79210e4afbd6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "597486b2-e033-46ed-82a4-5763970432fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c133de-a67c-41f3-8e26-11f3ed4aec42",
        "cursor": {
          "ref": "905a7af4-7450-4a98-9874-587c7c0da7a7",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eee44e7d-b4c7-4691-8052-60190b91eec4"
        },
        "item": {
          "id": "15c133de-a67c-41f3-8e26-11f3ed4aec42",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "845faf4e-ec69-49f2-839c-109f8422f7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac60de3-7280-4451-af27-7781f60ecddd",
        "cursor": {
          "ref": "abb08311-8d4b-4a47-9a39-e87e34d03847",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a7bc5618-ec2c-4bf8-8a40-09de8192b33d"
        },
        "item": {
          "id": "9ac60de3-7280-4451-af27-7781f60ecddd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3e55734a-b710-485e-a97d-b9a0dd433466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5901b0-6d77-4042-9e5c-31b4e47f179c",
        "cursor": {
          "ref": "5a039e32-2117-441d-bb8f-a4ccdc9852ab",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ee3680cd-1e86-4fbe-a46a-f73a05c05914"
        },
        "item": {
          "id": "8b5901b0-6d77-4042-9e5c-31b4e47f179c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "021c2a79-f441-4aab-b640-e1cb45341e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02615d82-5f85-4591-a829-cb9befbcb327",
        "cursor": {
          "ref": "1dab1322-0c29-42cf-8fd0-09b26bf6f2eb",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "32396bf9-12b4-4243-8c0f-9168845ccb6a"
        },
        "item": {
          "id": "02615d82-5f85-4591-a829-cb9befbcb327",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dafcc170-be6c-472a-b1ba-7036244defd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2920747-2a14-4048-899e-82280d868b71",
        "cursor": {
          "ref": "7f3e73d9-de5f-441b-bbe6-bea291d241dd",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c5d9f5b0-115e-408f-9e0e-9a5f641ddda8"
        },
        "item": {
          "id": "f2920747-2a14-4048-899e-82280d868b71",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "93690d99-13a7-4f09-bf05-8a74ff440af3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc4b6ac-89da-4f49-b4cf-099b416016dc",
        "cursor": {
          "ref": "97a7f694-7fdd-4238-b230-bfc8d440aea3",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1ff499cc-5561-4785-be1f-44bc0ca612b7"
        },
        "item": {
          "id": "abc4b6ac-89da-4f49-b4cf-099b416016dc",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b7756b8b-7538-4cd9-86cd-dd6a096adc52",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 667,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf72512-3460-41ee-9578-eca752ba9cb4",
        "cursor": {
          "ref": "d5c13066-e257-4b3f-828e-635547d369a1",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "57491d26-9c5b-4673-8f66-7ea055f845d2"
        },
        "item": {
          "id": "7bf72512-3460-41ee-9578-eca752ba9cb4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "be5c62f2-c7b8-4ac4-b8da-d779a181c040",
          "status": "Created",
          "code": 201,
          "responseTime": 4836,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "77848cc5-ee25-4844-aa25-9fd729ba236e",
        "cursor": {
          "ref": "340b2835-6efb-453c-8427-abc218de5240",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "54b78a63-7152-4124-87a4-9898176d62b8"
        },
        "item": {
          "id": "77848cc5-ee25-4844-aa25-9fd729ba236e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6652b633-fc84-418f-af4d-828d55a841de",
          "status": "Created",
          "code": 201,
          "responseTime": 4395,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "b415485e-6a58-483b-a8c7-416cbf4100a8",
        "cursor": {
          "ref": "63ecc56d-46fd-46ed-b354-4f83c7b395a7",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ffa6c4cf-f0d0-42c9-858f-19ff545f95d3"
        },
        "item": {
          "id": "b415485e-6a58-483b-a8c7-416cbf4100a8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c2ef3bcc-69c0-4f79-8193-051901cbf697",
          "status": "Created",
          "code": 201,
          "responseTime": 4406,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "f7f05fe5-6252-4217-b67e-9960fe9bee10",
        "cursor": {
          "ref": "0406cfbd-0854-4a09-b34b-c25bab93826c",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f8690aa4-f241-42f8-9545-ec3a73299253"
        },
        "item": {
          "id": "f7f05fe5-6252-4217-b67e-9960fe9bee10",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "90d81dd5-4b81-4507-9fb9-d9350b737e72",
          "status": "Created",
          "code": 201,
          "responseTime": 4898,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "8467dd53-fd7b-4e35-9a2f-cc8f8878f048",
        "cursor": {
          "ref": "f2a3df8a-ff91-4e81-9ef9-34fdb7067d59",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "29c8f779-c939-4780-8c88-6f2b4fd2e9a7"
        },
        "item": {
          "id": "8467dd53-fd7b-4e35-9a2f-cc8f8878f048",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "399289b3-b61a-4015-a96d-3dc46da3ca5e",
          "status": "Created",
          "code": 201,
          "responseTime": 4733,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "8e641241-b8e6-4ebf-afc9-97f6235a6d1f",
        "cursor": {
          "ref": "87e6bcc0-a847-4762-b46d-b764849d43d1",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "97e66e89-569e-403d-a47a-297cf6c00761"
        },
        "item": {
          "id": "8e641241-b8e6-4ebf-afc9-97f6235a6d1f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3497cd29-49c8-429f-9d6f-44acbeb9a01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e641241-b8e6-4ebf-afc9-97f6235a6d1f",
        "cursor": {
          "ref": "87e6bcc0-a847-4762-b46d-b764849d43d1",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "97e66e89-569e-403d-a47a-297cf6c00761"
        },
        "item": {
          "id": "8e641241-b8e6-4ebf-afc9-97f6235a6d1f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3497cd29-49c8-429f-9d6f-44acbeb9a01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe54f99d-e070-4fe0-9fa7-6657d8c49201",
        "cursor": {
          "ref": "4b0c3f20-06be-4f1a-9700-f40bd2d5560e",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fb3c5733-b390-4457-96d8-febb62b38da4"
        },
        "item": {
          "id": "fe54f99d-e070-4fe0-9fa7-6657d8c49201",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc5e9152-9677-44f3-8f52-fd55b309de4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae5206a-8d9f-4269-a1e9-67127dc4aff9",
        "cursor": {
          "ref": "20ead202-a22f-44db-9583-f9f5077d642b",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6b550c34-5b96-4ffa-b528-74cc1d99afa8"
        },
        "item": {
          "id": "8ae5206a-8d9f-4269-a1e9-67127dc4aff9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "319d29e3-b0d1-4475-af24-2f74513c1938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8550281b-9e97-4588-8ba7-c02e419b7ab1",
        "cursor": {
          "ref": "4b5cca6e-743d-447a-b8bd-228c6165f017",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "24f92dab-46a3-446a-a733-3f0743d3bfdd"
        },
        "item": {
          "id": "8550281b-9e97-4588-8ba7-c02e419b7ab1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fc9b830b-b714-49f6-851f-eff9d431c3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05df1fa9-b2af-4b71-96a4-670a22a72b1a",
        "cursor": {
          "ref": "9940a482-f2bd-4539-b884-02542e602ad4",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0ad719f7-8bc5-4748-80e2-64d159d8dee1"
        },
        "item": {
          "id": "05df1fa9-b2af-4b71-96a4-670a22a72b1a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "99acbf8e-1b3c-4e0d-8d13-aba3661e8fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac42109-1769-45da-a3c7-482634854bc5",
        "cursor": {
          "ref": "90b6b34f-129e-4b2b-8060-b8f2e871ec20",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dbe1f1d5-e232-409f-ab72-c5dfacb0e7be"
        },
        "item": {
          "id": "5ac42109-1769-45da-a3c7-482634854bc5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "21be6a41-26e7-41a7-8487-2a1d51091954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4c34ba-66b5-4fc7-a202-3b2bdaef83e1",
        "cursor": {
          "ref": "a2bf0682-a5d3-4746-b15e-76fefaec070b",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b1d6401c-7809-4d32-be1d-6180a3dfb4fe"
        },
        "item": {
          "id": "7a4c34ba-66b5-4fc7-a202-3b2bdaef83e1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bfbc7143-d080-4224-9e72-8d125c41c4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74618d30-a4b6-472a-a0a4-cfaee6f164ad",
        "cursor": {
          "ref": "6187b04f-89dd-4486-a031-43e50c19dfeb",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "09d2de76-0227-4a07-a47c-14e40f821b60"
        },
        "item": {
          "id": "74618d30-a4b6-472a-a0a4-cfaee6f164ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "59b26ca8-0e5d-4847-bc9a-52c5b2a119e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ff7775-1474-46ec-8064-c6ba21e130ba",
        "cursor": {
          "ref": "77133496-698e-451f-98f5-8710ed8186d2",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "acff7134-bdb9-49d2-9f72-994a4c8bd73a"
        },
        "item": {
          "id": "19ff7775-1474-46ec-8064-c6ba21e130ba",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "537179ee-e65f-4782-b2c9-a320073e9e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d964418e-a862-4568-b3da-b179f4ef4f68",
        "cursor": {
          "ref": "3016a6ca-51b0-4b48-829f-96462e21384c",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cb5a0c58-c2b0-4c3d-a873-3292901769d0"
        },
        "item": {
          "id": "d964418e-a862-4568-b3da-b179f4ef4f68",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4950c49b-8a41-4b58-bbbd-c309bc8ed263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc9b10e-4f69-4a4a-ad63-24f51b119381",
        "cursor": {
          "ref": "ba69f290-11be-487a-a9d9-f506f7d16b67",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f5fd9d4b-eec2-44e0-a72c-48d9ff5058ae"
        },
        "item": {
          "id": "acc9b10e-4f69-4a4a-ad63-24f51b119381",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "40b94c46-2324-4fd9-91ec-c87bac5f5ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d61ff0-6a4b-4249-af63-5c57b43c6b7b",
        "cursor": {
          "ref": "e628398f-9a99-477b-ad0e-6e932239c4d2",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f258b879-0ad8-49da-a2d7-61158984e511"
        },
        "item": {
          "id": "63d61ff0-6a4b-4249-af63-5c57b43c6b7b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2b8dcc7e-6555-4ece-8cef-ee16107f24e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fd7728-7861-4fbe-878f-2c76c4300b07",
        "cursor": {
          "ref": "a209e403-fd23-42f8-adb1-ff1310fba466",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4528ebc2-159e-4c7d-a9a2-1ede4f3a5099"
        },
        "item": {
          "id": "93fd7728-7861-4fbe-878f-2c76c4300b07",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d34c6d46-c544-40b6-a669-1d17d1848265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a41db2-f07f-48a0-8ce3-d59b01618796",
        "cursor": {
          "ref": "cd9bbb5a-cde9-491c-b3fa-14527f1f221c",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1ced56a4-d11f-45fe-893a-0205b310ce1a"
        },
        "item": {
          "id": "05a41db2-f07f-48a0-8ce3-d59b01618796",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7e8745b9-6962-4fbd-8d67-0b63c46d6d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bb5078-fdf5-4bf5-b0de-f4da1d76268d",
        "cursor": {
          "ref": "7362842e-6bb3-47ee-9a9c-b57a97d9dd3d",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fc21e217-8060-4ea5-b7b5-5f6a63d0735f"
        },
        "item": {
          "id": "05bb5078-fdf5-4bf5-b0de-f4da1d76268d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8ecd4d42-be18-4e7d-a585-debd06b918a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8c46a3-9c44-46b5-8270-e4907d8febbc",
        "cursor": {
          "ref": "38adc4a9-2f36-4e43-a81f-5f10bd795da2",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "480134ae-1ba4-4afa-8bd3-02264dfeff9b"
        },
        "item": {
          "id": "8a8c46a3-9c44-46b5-8270-e4907d8febbc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4e7cdd41-2c1a-4835-8a6d-c88f7c23bf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9101d0-dcc6-40c8-a218-85f958f84b71",
        "cursor": {
          "ref": "2dc6283e-1d22-4774-a5ed-e78340c3587a",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dc04965d-8ee4-4aed-abad-b332d62d0f43"
        },
        "item": {
          "id": "3b9101d0-dcc6-40c8-a218-85f958f84b71",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c7e3072f-ceec-4dd5-860a-def971ab85d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5839b1c-a35f-4ffd-9379-22c9bb3ecbb3",
        "cursor": {
          "ref": "0304548d-fdc8-40ac-93b8-c957fae5ead7",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ba7c8447-2731-401a-a452-b83f68865f7f"
        },
        "item": {
          "id": "d5839b1c-a35f-4ffd-9379-22c9bb3ecbb3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a6cfd9e6-365c-4102-b907-2ed248ce193e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29be0ebb-63f4-493f-b898-38fd7a8aa129",
        "cursor": {
          "ref": "c6538385-96d5-45cd-ae66-7385a318b2b5",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d2ab3820-5b77-43a0-9b95-f2f822343e03"
        },
        "item": {
          "id": "29be0ebb-63f4-493f-b898-38fd7a8aa129",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9f66a285-3161-4268-a451-1fa7657050be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b983b8-6d0b-41e6-8ac9-d98b9b5c6262",
        "cursor": {
          "ref": "5e607e2e-af31-4845-a4e5-d6a49feb7230",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "602c6853-2791-4955-9468-ce5ab2bc6c97"
        },
        "item": {
          "id": "44b983b8-6d0b-41e6-8ac9-d98b9b5c6262",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1f07cb6a-3da3-4f01-b4e1-a94732a85eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4777f9-cefa-4976-8a9b-697263c71102",
        "cursor": {
          "ref": "54cad6b3-8c3b-4ff4-be09-23b961236cd5",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f15698b9-6fe0-4080-8c47-978c21c8d6cf"
        },
        "item": {
          "id": "0a4777f9-cefa-4976-8a9b-697263c71102",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "32c2adf0-a8cc-4cbd-b079-d7bc9015d25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8615f9f7-e44f-4bea-b084-07677b60fc15",
        "cursor": {
          "ref": "643ad4ff-d221-4a80-9385-0b24913da2ec",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "002f165b-d6db-4a2d-a35c-c7e1b24c33fa"
        },
        "item": {
          "id": "8615f9f7-e44f-4bea-b084-07677b60fc15",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4179e81f-9e80-49c4-94d7-b241f91854a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b86dab-3faf-46b4-8faa-ab9652b58b71",
        "cursor": {
          "ref": "88f5f871-9161-45a0-b6e6-bd1bae3eb167",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5edbd04f-0acc-432a-a3a7-70f4577a7446"
        },
        "item": {
          "id": "a5b86dab-3faf-46b4-8faa-ab9652b58b71",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "40333aad-9c0d-4e74-ae27-1409dc5304fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cc43b8-94eb-4f20-8c5a-ec648ee80c58",
        "cursor": {
          "ref": "2b6e2d7c-a114-4ba7-909c-cf459c2e3f0f",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ecd53c06-6198-4e3d-957f-2cb24145680f"
        },
        "item": {
          "id": "08cc43b8-94eb-4f20-8c5a-ec648ee80c58",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "13642641-71ac-4347-a70c-e37fc85c1bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3597b423-c891-4187-92dd-18e7e6ae7aeb",
        "cursor": {
          "ref": "57acd88d-1de1-4b4c-b958-5b7b0312e321",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "da91eb0d-faf4-4db3-9d03-9a3d7e7e1396"
        },
        "item": {
          "id": "3597b423-c891-4187-92dd-18e7e6ae7aeb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7cb99c89-6e73-4682-b36c-9899762ead94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f4888d-93cf-42e4-b5be-99325bcd915b",
        "cursor": {
          "ref": "df2e8cba-dc6d-48c5-8267-ebd639125f29",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7f862e71-67b1-4afd-90bb-c8a31268ce5b"
        },
        "item": {
          "id": "65f4888d-93cf-42e4-b5be-99325bcd915b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "78cc5f80-5dab-4136-9c1d-b3295b1abf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f01d53c-3347-4389-981e-a1832ca61a05",
        "cursor": {
          "ref": "5e8ddd4c-c598-4e78-b3c0-e6f468a0bbcc",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ae248100-793d-4c68-acfa-af0b458f8b00"
        },
        "item": {
          "id": "0f01d53c-3347-4389-981e-a1832ca61a05",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1b248fe9-52fc-432f-9d82-e93a08ab4376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542c2687-0a9a-40dd-9068-5e2b641f54e5",
        "cursor": {
          "ref": "a2fbd720-0820-4281-ac30-b59dcd2f4820",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "817f9f2b-dbea-487b-8231-bff8c0c23fdc"
        },
        "item": {
          "id": "542c2687-0a9a-40dd-9068-5e2b641f54e5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0e0f4a2a-1980-4ac5-acc9-2309ae58603a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c77890-80de-4244-add6-cee2d69ee7e6",
        "cursor": {
          "ref": "c180b494-848b-4516-bc77-95bf134a65c0",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "73ce2943-599a-4681-82f7-49d9cbbc6187"
        },
        "item": {
          "id": "f1c77890-80de-4244-add6-cee2d69ee7e6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3b7f0489-b021-4ee0-ae9e-ae5be8049bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1be9e7a-66a9-4c49-a82d-4f4ce7ae5c2d",
        "cursor": {
          "ref": "61e2b2ae-58aa-4b5f-85fc-67964270c88a",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7b52187b-575d-4337-a185-f0aa12c7a855"
        },
        "item": {
          "id": "f1be9e7a-66a9-4c49-a82d-4f4ce7ae5c2d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b324b59d-b833-4f42-81af-87666ca9b154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858de68c-e38c-4c83-b7d0-71db136ab2ff",
        "cursor": {
          "ref": "29f110e5-0990-4c77-9aa8-51c7af2b5440",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d9e2a95d-6dbe-40d4-a15a-af9ebfa942d1"
        },
        "item": {
          "id": "858de68c-e38c-4c83-b7d0-71db136ab2ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e983a148-1842-4ba4-8303-3c6aaa81d24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c8526f-8a29-4ef4-870d-377446d448cc",
        "cursor": {
          "ref": "9a27141b-7440-4b15-9d3a-823663ca01f3",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c49c27e5-7659-4948-9325-c47725f39d68"
        },
        "item": {
          "id": "b0c8526f-8a29-4ef4-870d-377446d448cc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c95771d5-4db2-49e5-ac5c-6ddb454a5bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1510474-8e92-44de-9b34-53f3114cb476",
        "cursor": {
          "ref": "a26ea463-60d3-44a1-88bd-37379c8d4a14",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9422e0fd-cead-4d1e-8749-543bc68a7ca6"
        },
        "item": {
          "id": "c1510474-8e92-44de-9b34-53f3114cb476",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ecae833e-d00e-4300-887d-af6fd39c8e38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd4397a-9fd4-4e43-b475-88373ca16ae8",
        "cursor": {
          "ref": "19818ffb-3119-4bba-bf8a-d9bd15c3bef4",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "11d914a6-fd28-47d7-a81a-2ec954d4fde7"
        },
        "item": {
          "id": "5fd4397a-9fd4-4e43-b475-88373ca16ae8",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2e8024ef-6c81-49a4-b40b-970b23861e53",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cd393c-ddf5-4169-8359-e816034fe914",
        "cursor": {
          "ref": "a5d71cc1-7f97-401b-b0c2-31f849e8f2a8",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7c39088c-72e4-450b-9b9d-60312ff4e4ed"
        },
        "item": {
          "id": "71cd393c-ddf5-4169-8359-e816034fe914",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7f22cd1c-7782-49e7-8435-fef4e9f2aa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cd393c-ddf5-4169-8359-e816034fe914",
        "cursor": {
          "ref": "a5d71cc1-7f97-401b-b0c2-31f849e8f2a8",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7c39088c-72e4-450b-9b9d-60312ff4e4ed"
        },
        "item": {
          "id": "71cd393c-ddf5-4169-8359-e816034fe914",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7f22cd1c-7782-49e7-8435-fef4e9f2aa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9b7f31-349e-4b57-a52f-adb94561332a",
        "cursor": {
          "ref": "f3d2e50e-b738-4d05-9314-79e31d3c431b",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1eed54d5-a2b2-4dea-a024-51f9da2ebc4d"
        },
        "item": {
          "id": "cc9b7f31-349e-4b57-a52f-adb94561332a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "23576c18-b8a7-4fe5-9d3c-27d38c8c53aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf4f184-41a6-45a8-b02f-b652738d5db2",
        "cursor": {
          "ref": "05b7b56d-f6a7-4d98-a9ec-0c63f60e07cb",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2e92e039-19f1-4614-9414-53bac3ff52b0"
        },
        "item": {
          "id": "8cf4f184-41a6-45a8-b02f-b652738d5db2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e26f8c38-d674-4ce4-a11d-8ec03976b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d148a3-9f84-4cf1-bed7-9d4b23ce3908",
        "cursor": {
          "ref": "b9e127ed-e88e-453a-b61a-dbbbba7e5606",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "85df8dce-881a-4d58-9462-187d74fe0c8a"
        },
        "item": {
          "id": "21d148a3-9f84-4cf1-bed7-9d4b23ce3908",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e966ac1d-b523-4ac4-b9bf-ded8f6bf609a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bc1636-add0-45ab-b70e-1d36cda710b0",
        "cursor": {
          "ref": "8293c897-57f3-4cb8-97bf-f0a1d4f081ad",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "03869fc6-51e2-4368-8d01-eecec6a12d6e"
        },
        "item": {
          "id": "b5bc1636-add0-45ab-b70e-1d36cda710b0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f30654fe-1f43-473c-9776-6ed50ef088ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35acf8f4-eb75-441a-8675-9f9ba47ad973",
        "cursor": {
          "ref": "96ea812f-71d9-45a6-8623-11424d63a14d",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "78639e31-6b9d-4e07-a4cd-81f1a080f3c6"
        },
        "item": {
          "id": "35acf8f4-eb75-441a-8675-9f9ba47ad973",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3401ab76-2d1c-4fb7-a3ba-53f0aaf37fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf81c4b-b719-43c3-a77d-cce5fd7b55f4",
        "cursor": {
          "ref": "682c1ba5-298f-47c5-afee-590d6325bd4f",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cb107c45-3ddf-4142-aeb1-a1ca5f2e3b81"
        },
        "item": {
          "id": "5bf81c4b-b719-43c3-a77d-cce5fd7b55f4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e3bacf1a-f039-4c19-bd24-8343ae2fe51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b9d59d-85ab-40f1-826c-d25074d3455b",
        "cursor": {
          "ref": "b770a8e5-e818-4271-8b81-b9f24f966901",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "241fe2f7-7b87-4b87-a53b-495e3f1bcf11"
        },
        "item": {
          "id": "c3b9d59d-85ab-40f1-826c-d25074d3455b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c8f9c4e5-daea-4f39-a7d0-12265ceb0a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432e0ab7-9ef7-4c53-98d5-2cc7dc5e8349",
        "cursor": {
          "ref": "be33520b-fd26-4181-999a-d511fbc27f3a",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b87b5420-c577-4ad1-b570-412080578254"
        },
        "item": {
          "id": "432e0ab7-9ef7-4c53-98d5-2cc7dc5e8349",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "03c34419-6d4e-4c18-b510-5df0792a9312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078607a5-26f2-4f1d-882b-d4fd89f02ddf",
        "cursor": {
          "ref": "f09654a6-99d4-4347-bc1e-9e9d69f971ee",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b12c986c-1627-44e5-992a-fc339079fd94"
        },
        "item": {
          "id": "078607a5-26f2-4f1d-882b-d4fd89f02ddf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9ffb01e0-569f-4eee-a4f1-90852206979e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a0a6e0-4053-4305-a857-3337b695fdab",
        "cursor": {
          "ref": "bcf16e2b-2263-46a0-94a5-fb8f71f44bcb",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9935f5d-0558-4a50-a473-32300e487ba9"
        },
        "item": {
          "id": "34a0a6e0-4053-4305-a857-3337b695fdab",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6df4b175-2ade-4629-a5e8-dbdce2371f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9ffc36-968f-4bb3-a27b-a0b4071c162e",
        "cursor": {
          "ref": "ec54bc32-33a3-4d24-b497-f00cd0345a00",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3307c6e2-571b-497b-8f06-56bfe4461715"
        },
        "item": {
          "id": "3e9ffc36-968f-4bb3-a27b-a0b4071c162e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0e1f78c9-8a82-45a0-aa1c-d6cf64266c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194f8ae0-9932-4d64-8708-7679cd869334",
        "cursor": {
          "ref": "f8b54ab8-c219-4aa5-9c6d-e1f97cd757fe",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f7ad3f0a-0d87-4553-9751-9e2522ac1d81"
        },
        "item": {
          "id": "194f8ae0-9932-4d64-8708-7679cd869334",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f7ec4dcc-1e75-474f-87b5-cc815e48b0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110d8204-30a7-4949-b243-91d0a9a5b992",
        "cursor": {
          "ref": "415ea53f-879d-41d0-9d09-9bd6252edff1",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aa81899f-e798-49b8-9ace-026dfaa7ab29"
        },
        "item": {
          "id": "110d8204-30a7-4949-b243-91d0a9a5b992",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3340f5a0-c35e-4637-8cad-e5993b64ff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d1a467-4b1d-4310-9f5c-c8fb7f268a9e",
        "cursor": {
          "ref": "8d26f413-8b77-4298-8c8e-f9acae195519",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f1036427-7393-49fe-93d6-0c739832f913"
        },
        "item": {
          "id": "e8d1a467-4b1d-4310-9f5c-c8fb7f268a9e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "087fc39f-e18c-476d-b034-450380a9f5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a800af1b-fd21-4efc-b2e3-4ebfeacacf42",
        "cursor": {
          "ref": "a6979938-cade-4991-8d27-d96522aa1192",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9d6c2f9c-3c94-4ad8-aee8-71fdb23dd03b"
        },
        "item": {
          "id": "a800af1b-fd21-4efc-b2e3-4ebfeacacf42",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "715e2267-37e8-4569-9de5-b46eac268bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003bed5c-c31f-41f1-86e0-af4b824e900d",
        "cursor": {
          "ref": "0bc77600-4e1a-4093-8fb3-fb698ff1f8a2",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a06a29b9-2c9a-4093-bc66-46a609568605"
        },
        "item": {
          "id": "003bed5c-c31f-41f1-86e0-af4b824e900d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fae76e34-fa0d-4d81-a8fc-a7adec9bc6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8df3298-825e-46f6-a307-8b01d6e3d1d2",
        "cursor": {
          "ref": "e836024b-fddf-44dd-9e88-53f873c2e0e6",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1bdce064-a4c9-4af3-97e4-7b4b3d817e90"
        },
        "item": {
          "id": "d8df3298-825e-46f6-a307-8b01d6e3d1d2",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "3a28ad57-982a-4460-b937-499bba21f2ef",
          "status": "OK",
          "code": 200,
          "responseTime": 3315,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "a91a9774-7e35-4288-870f-7da6180dfc0e",
        "cursor": {
          "ref": "a97b357f-f86a-4571-9954-8e6f61dd8ff1",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f2a8bad2-f8a5-46ee-a10d-0e82c4492ef7"
        },
        "item": {
          "id": "a91a9774-7e35-4288-870f-7da6180dfc0e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d15ccdca-5d7e-4115-89cf-807a994b5ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e3edaa-f5fa-4c0f-b0de-6562fef72849",
        "cursor": {
          "ref": "fe995543-bf7b-48af-b68e-8916a16f7049",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "94e9a3e1-96ef-44cd-ba38-3b23508c454b"
        },
        "item": {
          "id": "d1e3edaa-f5fa-4c0f-b0de-6562fef72849",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d9e6a339-6134-4f91-8530-3dad3c25790e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca508f2-1b2b-42ae-9dd4-ba046d6717ea",
        "cursor": {
          "ref": "417b7990-e367-4c97-8216-2024c96c1d3f",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "745bb251-415b-4fc2-be90-5c4008c9438c"
        },
        "item": {
          "id": "7ca508f2-1b2b-42ae-9dd4-ba046d6717ea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5984cc6a-a501-4952-8178-c88694dd7a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb19664-783c-4ea9-8453-d2e2c53a1399",
        "cursor": {
          "ref": "6c812e2e-16c0-454c-847b-73cbce6d5613",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d2b8adc7-833f-427c-9ce3-176351b72d55"
        },
        "item": {
          "id": "8bb19664-783c-4ea9-8453-d2e2c53a1399",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "010cd4ac-2e83-4935-bd71-d5aba5d8d7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8818c0-39b2-4002-a900-b0344390018f",
        "cursor": {
          "ref": "b1dd6d73-494e-463f-9b7e-e16fab936dd5",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "afc84706-9358-473b-844e-e1b7fa4b38d7"
        },
        "item": {
          "id": "ca8818c0-39b2-4002-a900-b0344390018f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "19887f75-fd47-4deb-a535-66c4bc82a7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cd1953-c596-4654-8aaf-34330d20e637",
        "cursor": {
          "ref": "21162e56-8ca5-497a-a013-1d955d831edc",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ce8fad37-6319-4913-a143-1163c3a126c6"
        },
        "item": {
          "id": "f4cd1953-c596-4654-8aaf-34330d20e637",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7d5ca8ec-af59-452e-a16b-ac32f32ff347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af46a3a1-399f-4074-82e8-0c4651bfa35f",
        "cursor": {
          "ref": "93b4bda1-9a11-4dff-9043-8241863b3a9c",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5ee9f171-99a8-41ca-886c-5a78659433a0"
        },
        "item": {
          "id": "af46a3a1-399f-4074-82e8-0c4651bfa35f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "221b383f-9a30-454f-8484-7953fa1bd474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38efa3c3-35ac-44ca-8b6d-f98cd74c2f7d",
        "cursor": {
          "ref": "1f57373f-11cb-4e07-ba27-e21445c33b54",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4d678261-2c95-4e80-be09-1fd2948744aa"
        },
        "item": {
          "id": "38efa3c3-35ac-44ca-8b6d-f98cd74c2f7d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d046d3c5-9ede-43cc-b62f-b9304c7b9a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7897db-058f-46bb-91b0-c6908820c385",
        "cursor": {
          "ref": "7d5b3341-d3f8-4b27-b397-2d0176d8c474",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ce06ad7b-a8db-40d9-9053-4bb5d83bad24"
        },
        "item": {
          "id": "2c7897db-058f-46bb-91b0-c6908820c385",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9cdc740d-20a6-4fd0-b511-0bb60df50f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39350b9-4f62-4d25-903c-81c08c46fd0a",
        "cursor": {
          "ref": "b83212ae-5693-4f0a-86d0-84d16f1a053f",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d43dd6ef-fa26-4aec-a422-95697d8db2c1"
        },
        "item": {
          "id": "b39350b9-4f62-4d25-903c-81c08c46fd0a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cde2558f-85dd-4480-b4a4-10c39de19411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fd1d6a-b4c6-4a07-8619-d8397f878cc7",
        "cursor": {
          "ref": "34162973-7c87-4293-b4e4-9e7bc2f927e5",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f8ef9f1f-d270-4114-9cf5-8fb85b88b5fa"
        },
        "item": {
          "id": "84fd1d6a-b4c6-4a07-8619-d8397f878cc7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9c51e07e-dd27-43fe-a8e4-2c5720b2412d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88dced5-d42d-4d5c-b3aa-44f685199951",
        "cursor": {
          "ref": "7b4fae2d-f84c-4b94-a00c-bcdd1c8f3b99",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7626145e-97da-49ca-9f24-d9d3edaf2c78"
        },
        "item": {
          "id": "b88dced5-d42d-4d5c-b3aa-44f685199951",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8d1eed86-69c5-45c0-b14a-b1a3ce9ef48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc014dff-e6bf-48df-87c1-552913d7cb2f",
        "cursor": {
          "ref": "15d5ee13-51a9-43c4-870d-8c2b26d0ebda",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bf2ae65e-f873-467e-936a-c5afbf144c16"
        },
        "item": {
          "id": "dc014dff-e6bf-48df-87c1-552913d7cb2f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a3e200a4-a611-4367-ba1c-99bec4a3b7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c812c88e-d15c-4275-96fc-66e88b3ac13c",
        "cursor": {
          "ref": "0775ceb8-52f0-4dda-9062-fd1ff3343d99",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a048959b-2df3-4e5b-a0dc-4b21d72b6831"
        },
        "item": {
          "id": "c812c88e-d15c-4275-96fc-66e88b3ac13c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d27dba48-c810-4e9d-a178-05386c02819a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07396afc-e333-4074-b246-6c93423972b1",
        "cursor": {
          "ref": "dbf58f9e-1630-4e9e-8548-c966cc6dda97",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "aafe63c0-1461-4f71-a03d-6dfd0a83d2dd"
        },
        "item": {
          "id": "07396afc-e333-4074-b246-6c93423972b1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5c1fa5f9-ba5e-48df-8b44-b46f3ca8e845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa1e4c8-1e3e-4323-9764-1f66917425d4",
        "cursor": {
          "ref": "9c5391f7-52ba-4106-8a48-9372b351a208",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "12bbd2b2-e46f-4c00-af0c-a95a44bd9098"
        },
        "item": {
          "id": "9fa1e4c8-1e3e-4323-9764-1f66917425d4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8183a0bc-05f3-4228-93ae-9b087ce33eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f367082-903f-4b55-a0b1-c8b5c5e471b5",
        "cursor": {
          "ref": "d5b16a94-1763-4170-a083-a1da82eac4c3",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bd59dbb8-8220-4b97-b6f0-f63748ee0b1c"
        },
        "item": {
          "id": "3f367082-903f-4b55-a0b1-c8b5c5e471b5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b31a7efe-2a39-4a26-a447-09a582b96a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ea2669-74d3-40ca-8b27-4795730da47a",
        "cursor": {
          "ref": "f2aee43d-aa6e-4664-8292-cf728a24cbba",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "22ab596c-b4c1-47d9-8466-25f94d9d1c0e"
        },
        "item": {
          "id": "03ea2669-74d3-40ca-8b27-4795730da47a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bb5e00b9-a6cd-4ddb-9acb-69168f479765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde17dad-298e-4da2-ac1e-c59452262fe3",
        "cursor": {
          "ref": "2aa6caf2-0546-46b4-9336-1f1939141ee2",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2bef92d4-1049-49ea-ab51-8671416af254"
        },
        "item": {
          "id": "cde17dad-298e-4da2-ac1e-c59452262fe3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f16f3483-ac98-46af-b36b-b3de26c159c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda2590c-67c8-42ba-9067-6c5c9065af20",
        "cursor": {
          "ref": "20480fdc-ae0a-4b68-bea6-cd5f80aa96a5",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3b64fb35-7755-4a4d-a341-5cf1e7a31473"
        },
        "item": {
          "id": "eda2590c-67c8-42ba-9067-6c5c9065af20",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6b8a7b75-3a21-4d55-a5cb-ee982b6a6882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7f3283-9be0-4307-99b3-1afca2fe2643",
        "cursor": {
          "ref": "2c687443-4800-4914-b287-65f7c4f80448",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ec929a0b-1ac5-4763-9e35-d19bfff38d93"
        },
        "item": {
          "id": "0f7f3283-9be0-4307-99b3-1afca2fe2643",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "277dcf1a-123b-4a33-a77b-00a1fb3f309b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf371a6-4300-44e3-acad-709d6b09d45b",
        "cursor": {
          "ref": "5694f751-cc72-44e8-8012-db62440811e3",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a65df9b1-5875-421d-b48f-6e1ca42e9995"
        },
        "item": {
          "id": "abf371a6-4300-44e3-acad-709d6b09d45b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4eba523e-cb3b-4f27-b6c4-b797be04fa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50f2da0-4825-4086-9573-806e389c3bf5",
        "cursor": {
          "ref": "f999d726-2c9b-43b4-b41c-504064214e10",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "11d63c68-0a1c-4904-b34a-bf02ccf9e8bc"
        },
        "item": {
          "id": "b50f2da0-4825-4086-9573-806e389c3bf5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b44c4e8b-1991-4026-bf56-54dbc3eb0a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bed1fc5-50cf-443b-b63f-450558b9a56b",
        "cursor": {
          "ref": "b32b983a-1485-44d7-9218-ca1d540ab1af",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "27ae702d-8efe-4ae1-b698-223e716828f7"
        },
        "item": {
          "id": "7bed1fc5-50cf-443b-b63f-450558b9a56b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "848307b3-c824-4e90-9c4f-fa0a19baab09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12a1e5d-6581-40a9-a039-12c59e370147",
        "cursor": {
          "ref": "59d2978e-ae4c-43eb-928d-bbac379b460f",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "68d7e446-c4e3-459b-a1d1-b7f3191bbf8b"
        },
        "item": {
          "id": "c12a1e5d-6581-40a9-a039-12c59e370147",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ad2496d6-3a7c-4766-b65e-0d1c582db2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f887c0-21ac-4270-b868-d84b6be95cc8",
        "cursor": {
          "ref": "959380ae-6263-4be0-a378-22e1f2d6d7e3",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d0a9695c-0ed8-4967-aff5-4caa354a9202"
        },
        "item": {
          "id": "27f887c0-21ac-4270-b868-d84b6be95cc8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f74a1d8b-ff97-4169-9688-a52c471d57f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719cbf4a-b4c4-4c36-a85f-44cff93ca0a0",
        "cursor": {
          "ref": "5b506657-1400-4336-a8b8-e4386a000e0a",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "088df0eb-ab6f-4e54-8e09-f121e0cd4c45"
        },
        "item": {
          "id": "719cbf4a-b4c4-4c36-a85f-44cff93ca0a0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3260ae4f-3e52-4b07-844a-794a66ccbdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e7c0e0-516a-4d42-89dd-4a2adc5bbb33",
        "cursor": {
          "ref": "7da808d5-96c5-4bd5-934f-404c4886e075",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ed678e8b-29e2-4c6e-b30a-1b765f9e9a21"
        },
        "item": {
          "id": "b8e7c0e0-516a-4d42-89dd-4a2adc5bbb33",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "baaf1df8-23b2-4b62-ac3c-90e1ababceff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89644e1b-272f-4f71-9853-8a7298227dd5",
        "cursor": {
          "ref": "2200336d-d872-4323-8b58-21298076d899",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4d435785-7413-460a-b642-229c7cdce07f"
        },
        "item": {
          "id": "89644e1b-272f-4f71-9853-8a7298227dd5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d122c4c7-f63f-40bb-86a5-af1f4b61ae02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9cff01-f36e-4b45-8c56-b8ef03c7fbe8",
        "cursor": {
          "ref": "4f42677f-40f7-4e88-8c46-be45af9f8a29",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "85fcee06-1875-454c-bd54-c011f146b93f"
        },
        "item": {
          "id": "5f9cff01-f36e-4b45-8c56-b8ef03c7fbe8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5309d57e-ffd3-4cfd-a6bf-ce0ec95567d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6839fbc-5db4-47fa-aa37-323af3648c33",
        "cursor": {
          "ref": "4be9ab7a-e1b5-49b1-9319-566b0cf9d9d3",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6c3a5cf9-59af-46ed-bcec-4a68dc379e67"
        },
        "item": {
          "id": "f6839fbc-5db4-47fa-aa37-323af3648c33",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0dbab38e-7e37-441e-b997-5fdece13ee8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912be69f-534d-49c2-804d-4c70eeee4b48",
        "cursor": {
          "ref": "9aa69413-332d-4caf-8ae6-d876fe7d1795",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a6099636-9d0e-49b7-b445-d6203e6d4e41"
        },
        "item": {
          "id": "912be69f-534d-49c2-804d-4c70eeee4b48",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e64a4c54-34d2-4f97-b5d7-c1daa2ba187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4deb005-f57f-45c5-90d8-d58d0297225a",
        "cursor": {
          "ref": "15be7917-02fa-4266-b520-09af77d8eb7b",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "83c53487-60a3-4359-b224-736ec1d57cb1"
        },
        "item": {
          "id": "b4deb005-f57f-45c5-90d8-d58d0297225a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "181c8411-13b8-41d7-b662-fdc3ef86d2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9841dfbb-41b1-45dd-8f6d-d3a44c10d101",
        "cursor": {
          "ref": "d964d125-e4ef-4b09-a3e7-be779780e211",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b8c83b84-236d-46cb-9466-a0d399713eba"
        },
        "item": {
          "id": "9841dfbb-41b1-45dd-8f6d-d3a44c10d101",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d4c36865-0a5d-46c7-b9f9-9fed68ca4387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2321a4e9-c99d-4196-a427-f3e07cfe327f",
        "cursor": {
          "ref": "76ccb47d-f025-4c27-937f-c4db9334670d",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "80d33274-b6fc-430d-8f8c-81b67adf7f77"
        },
        "item": {
          "id": "2321a4e9-c99d-4196-a427-f3e07cfe327f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0fe1bb43-8a91-473a-b278-aeea62c534bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f5a271-a879-436b-bb35-4d1ffbb2b505",
        "cursor": {
          "ref": "af9220e5-fac1-4ee9-8a78-f0b8e316a37f",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c10fd73a-573f-47b1-b0a9-894fbb04e0e8"
        },
        "item": {
          "id": "77f5a271-a879-436b-bb35-4d1ffbb2b505",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cd63f846-fab4-410a-bb19-203b7a6588ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd1ec81-682c-48df-906e-b66dd9d4a89b",
        "cursor": {
          "ref": "41e19342-6304-4233-a6bc-7042ad82d94f",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b04cf9b1-569b-41dc-8a39-8d1c8fbfa507"
        },
        "item": {
          "id": "abd1ec81-682c-48df-906e-b66dd9d4a89b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c65f2e7d-970d-4b1a-84e5-79a5bec2ea41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d030948-1fba-4b31-b0df-70adacd42feb",
        "cursor": {
          "ref": "a57c558e-88e1-4536-b4f0-23bfe6df33fc",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ecf40b40-c115-4ebd-9b15-8b475726f7be"
        },
        "item": {
          "id": "5d030948-1fba-4b31-b0df-70adacd42feb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "425d747a-9d92-4542-a133-d2b0c9c5c7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7febe1e0-401a-4e70-9adf-8665ba1dc20f",
        "cursor": {
          "ref": "90b72618-cd29-46e1-b9e1-13e09759b0b9",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b578561d-9da0-4fce-9262-353536a7f8ad"
        },
        "item": {
          "id": "7febe1e0-401a-4e70-9adf-8665ba1dc20f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee4eac6f-87b5-4bea-8c6f-ace5962d56c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a4257b-00ba-47f5-8b97-7e16951819c2",
        "cursor": {
          "ref": "2c822dd3-2901-44b3-ba99-7f6af7abcce6",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "015f9c76-3e67-4072-bc28-4c6d5252727a"
        },
        "item": {
          "id": "29a4257b-00ba-47f5-8b97-7e16951819c2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6590c64e-afef-4585-ac7d-49e8c767ea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acab5d25-2b39-4bd8-99e1-a10945f0441a",
        "cursor": {
          "ref": "76ee837a-f885-4ffc-ae27-f86bc4f59806",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "637d33bb-e01f-47a0-9cde-290b334928c9"
        },
        "item": {
          "id": "acab5d25-2b39-4bd8-99e1-a10945f0441a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f885f5fd-7467-4499-a650-76d58bcbbf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf93f0c3-4d2c-4dc1-a479-253527de75a7",
        "cursor": {
          "ref": "2b30d082-749e-477a-954c-6b807a7b654c",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2fb89b2f-9872-4e82-8d2e-6090f1a7a996"
        },
        "item": {
          "id": "bf93f0c3-4d2c-4dc1-a479-253527de75a7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9917f3e7-93db-421f-9a75-ac5abfa0192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a56c68-c738-447b-8e44-7e7dda696b98",
        "cursor": {
          "ref": "2a3f3038-1bc2-4d43-a66c-e199f232b583",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "16d8f895-6096-47ea-ba28-a888492b8e1f"
        },
        "item": {
          "id": "97a56c68-c738-447b-8e44-7e7dda696b98",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d45c1ee3-7bd0-4d99-bc36-6103fd182b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ab4070-691a-438c-83c3-0eb837c172b1",
        "cursor": {
          "ref": "9d5d650b-e0fd-463b-ba1f-da9615d2a92e",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "73cccadd-35ee-479b-b17e-0763eb9862c3"
        },
        "item": {
          "id": "17ab4070-691a-438c-83c3-0eb837c172b1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "17245385-50b9-422c-af0a-8f88a3a952b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f95bfcd-6de2-4aba-afc8-a1f0d355f9d4",
        "cursor": {
          "ref": "f067f74e-7c24-4190-9217-6e7beb109cfa",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8a78c333-cf4a-482b-9040-a1a0cfea0284"
        },
        "item": {
          "id": "6f95bfcd-6de2-4aba-afc8-a1f0d355f9d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "655598e9-fe75-43c8-80cf-e45a9418d4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d5c161-5900-490f-b5ec-17f253bbd3ad",
        "cursor": {
          "ref": "6bd41483-076b-47ed-a0bc-9f202e11875d",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2ad19754-4a2b-4a4c-83cc-e8db671afaf7"
        },
        "item": {
          "id": "c0d5c161-5900-490f-b5ec-17f253bbd3ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7b2b4f9d-e214-404a-acb1-a30c6c53fa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659ae54a-b193-4d3b-b07a-e3aca203229a",
        "cursor": {
          "ref": "679fa243-69eb-4d80-9697-87cfe058a799",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6428f81b-785c-4117-85ce-fdb0f55b259b"
        },
        "item": {
          "id": "659ae54a-b193-4d3b-b07a-e3aca203229a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "171a981a-379e-42ea-8feb-cfed32cfdf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338c3a00-e4ba-4056-848a-b055bf366d77",
        "cursor": {
          "ref": "6acbeac0-e1da-4f3b-a290-00ccbd13aa22",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4220561c-a365-4ce6-ba91-0e7e892d895a"
        },
        "item": {
          "id": "338c3a00-e4ba-4056-848a-b055bf366d77",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "02f3b5b2-4f3f-4043-89fa-167f0a5ddb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed708b9-e840-45b6-9ea7-1e7b411492e5",
        "cursor": {
          "ref": "ba34aa4f-e5a5-4b16-9193-3b03c0531004",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "15af5d6c-9d3a-4b0d-9b3b-88c7d72176ef"
        },
        "item": {
          "id": "fed708b9-e840-45b6-9ea7-1e7b411492e5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a4e8dc83-1d7c-4133-a26d-dd33514b7a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee99523-d918-4584-802e-4e60b1da8d3d",
        "cursor": {
          "ref": "eadb341d-3512-4d0d-8476-cfc6d2434a99",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c34931f3-c001-4ab1-8933-07e23fe810cf"
        },
        "item": {
          "id": "8ee99523-d918-4584-802e-4e60b1da8d3d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f303a77a-6f0a-4519-a43a-b9959adbe90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b77c833-5395-4b65-9584-abc70889658f",
        "cursor": {
          "ref": "09943996-0bf4-40bd-b689-55d35c8a66e5",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e7781fa3-7b73-4dc1-a5ba-b51f5b4db2de"
        },
        "item": {
          "id": "3b77c833-5395-4b65-9584-abc70889658f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "da1b981b-2e61-4a98-b06a-8d0a50d3b0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158f2244-9752-4dbe-8dd3-160bd96c7d26",
        "cursor": {
          "ref": "1cd9574a-58e1-4503-bab5-728f03025a96",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1c7d80d6-c998-468d-a18c-83c4fbeb807a"
        },
        "item": {
          "id": "158f2244-9752-4dbe-8dd3-160bd96c7d26",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5c0c1a31-d94e-47b9-848f-e6ff76bdb521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1746214-c80b-4bb2-ac8c-6fb74f89856e",
        "cursor": {
          "ref": "40cdb71c-fabc-4136-96ec-2a12d73d15d7",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "12777623-cd60-4e4f-b7a8-ccaf4e0eb722"
        },
        "item": {
          "id": "c1746214-c80b-4bb2-ac8c-6fb74f89856e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fa968193-dc26-4ee6-bfd8-a659edc5c393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4471b029-81d3-4bf9-b194-d0bca7db3195",
        "cursor": {
          "ref": "ceeb24bf-c5d3-4d9e-ba1e-92ce98d3fb5d",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3682436a-1c63-4a85-a708-eddc7c193026"
        },
        "item": {
          "id": "4471b029-81d3-4bf9-b194-d0bca7db3195",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "731f1372-7fff-4708-8dd9-a8da2dd68c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b926ba17-f23a-423d-84d6-ec262e76462b",
        "cursor": {
          "ref": "ed74fc27-4d09-4027-8517-880eff6b812f",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c3951846-db65-4c26-b2c5-08dd21b40e51"
        },
        "item": {
          "id": "b926ba17-f23a-423d-84d6-ec262e76462b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4b1957cd-b95b-4002-a0fe-fa7153e0090e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579fbee2-ba55-4cf2-b30f-44bc5921846f",
        "cursor": {
          "ref": "7ba19e2a-65f5-4b1d-b153-73786cf49dd1",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b9817247-af8a-495c-b812-84f23da9d7e2"
        },
        "item": {
          "id": "579fbee2-ba55-4cf2-b30f-44bc5921846f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a72746c7-0005-48bb-a4b1-f6ae3b90eced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ab55a8-907a-4aec-9a8c-a02bc1aeb525",
        "cursor": {
          "ref": "b1205b3d-d942-4358-bfad-eb5c7cf7c2e7",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "906ffcf9-0831-47a2-a1b7-637f0bf10a69"
        },
        "item": {
          "id": "73ab55a8-907a-4aec-9a8c-a02bc1aeb525",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb909866-d3b8-458b-bb62-d889d38a12e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd42315c-67c8-4995-9df4-f6d0fa4ce03b",
        "cursor": {
          "ref": "509e2d12-e0ab-43f9-bbb8-88326c5830c2",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "460d4619-c729-4e35-a058-83ba37b5fe04"
        },
        "item": {
          "id": "cd42315c-67c8-4995-9df4-f6d0fa4ce03b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "99250e58-6d15-4d06-854d-e9dade869738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d7f6b7-beb0-41ec-ab1e-143d4b856acd",
        "cursor": {
          "ref": "412a4930-af89-47f9-bcc3-26cb4fb69b84",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "df740c49-79e7-4c0b-acbd-886c5ac0e7e7"
        },
        "item": {
          "id": "f5d7f6b7-beb0-41ec-ab1e-143d4b856acd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0e61d87f-a829-4695-b65b-8f4299cae728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c42974-6947-40d4-a341-60ee583fac37",
        "cursor": {
          "ref": "f0563d11-0abb-4e92-a916-1a77d6d4973c",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e14eeeeb-6d18-4ec5-abd2-375abaff35b6"
        },
        "item": {
          "id": "52c42974-6947-40d4-a341-60ee583fac37",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8f1e0fd8-38bc-4dac-9e3e-9eaca36ff486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fcecc1-9c38-4e62-a865-fadd7f496d99",
        "cursor": {
          "ref": "baf58a0a-6963-4312-96cd-348c80749009",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fad1776f-d00a-493b-8a91-f92076e69d93"
        },
        "item": {
          "id": "c9fcecc1-9c38-4e62-a865-fadd7f496d99",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f618518c-6336-4cd6-b967-26fb6a2dbac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8366ba-354b-40f0-8e39-1b2a718c69aa",
        "cursor": {
          "ref": "15ba8775-c56f-4eab-81e3-1d2f545c382e",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5b366922-1758-4041-b7a4-73f6f6faf070"
        },
        "item": {
          "id": "ea8366ba-354b-40f0-8e39-1b2a718c69aa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "145c5438-85ab-4f27-9257-0d0bac9f7af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe46434-bd39-4e7d-a363-ee9f56555194",
        "cursor": {
          "ref": "8fdd6326-f34d-4f96-a687-92dbe1690dc9",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "850c45d9-0500-4c3f-b5d5-c01f3b7a8dca"
        },
        "item": {
          "id": "ffe46434-bd39-4e7d-a363-ee9f56555194",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "835f24d8-12a8-41c0-a97d-7b7d34f59526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247ca9fe-2860-44b7-8f4d-bcd15925c354",
        "cursor": {
          "ref": "e47ec35c-a9f7-40a7-b25a-901bbd591f82",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6ddc2cba-4c49-45c6-820c-c86312c4de0b"
        },
        "item": {
          "id": "247ca9fe-2860-44b7-8f4d-bcd15925c354",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "52011197-ca21-47b0-8892-084279edcc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e2a56b-356a-4b7a-bb0b-5088fef37d83",
        "cursor": {
          "ref": "3b0ec22b-f2b9-4e3f-bf3b-4e931a824c48",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9aa1eb27-3f3e-43c7-a075-f00b4c8a60b8"
        },
        "item": {
          "id": "07e2a56b-356a-4b7a-bb0b-5088fef37d83",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "eb23b685-05e6-4ef6-915e-6bda51fa348b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc84dd6-af34-448a-87f4-059a3d4b541e",
        "cursor": {
          "ref": "ef057165-2d82-4c66-a9d3-da8de4c93598",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "252dcaf0-e42d-4bb6-bafe-fe34f1d84946"
        },
        "item": {
          "id": "ffc84dd6-af34-448a-87f4-059a3d4b541e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a441cf5d-bebf-408c-bd79-2e1ff9ed73db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf7b8cc-6e77-4615-b796-bb44e5a973ca",
        "cursor": {
          "ref": "f2b462c5-c08c-446d-83fd-ed131687c749",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fe334486-0fd1-4b0b-a8db-1d3d960504b4"
        },
        "item": {
          "id": "7cf7b8cc-6e77-4615-b796-bb44e5a973ca",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8715d88b-3853-4b5c-9b0e-91b8c535c5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e95a99-3915-44c3-b8ee-6ed2d5cf028f",
        "cursor": {
          "ref": "dc8e7f22-39f7-41ff-82ce-14996446a87e",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4774abf4-17bf-41e3-8c95-21c0b9545dfe"
        },
        "item": {
          "id": "67e95a99-3915-44c3-b8ee-6ed2d5cf028f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ed422e05-4223-4502-adcb-031328bdaf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301d8b48-09ad-46bb-8438-24e910f87ba0",
        "cursor": {
          "ref": "9e822bfb-3a7d-4616-a306-2c841927ede0",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6d7f016a-d451-4793-a156-623ecd57bfa8"
        },
        "item": {
          "id": "301d8b48-09ad-46bb-8438-24e910f87ba0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6dec04b9-441e-494f-ae1d-1fbfad4ae431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456b9645-d94f-41d7-a983-027e237c2523",
        "cursor": {
          "ref": "f6249463-e561-44b0-aa00-5df549466457",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "edcc07eb-9a69-46d6-94d7-a17be947cf07"
        },
        "item": {
          "id": "456b9645-d94f-41d7-a983-027e237c2523",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ec0cd512-7259-4675-879d-2abfa9f9a40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26b2fa7-9c98-4989-a2bd-5d7d67b25045",
        "cursor": {
          "ref": "108ea65b-01ca-4b5a-8626-090da4dfa93c",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8e07852f-832f-4286-8e0a-f9e5bc3a4d04"
        },
        "item": {
          "id": "b26b2fa7-9c98-4989-a2bd-5d7d67b25045",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dc8603cd-06a0-4985-ae64-d0bd4cff5daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f29f3ed-e69b-4ae4-9a7b-afa57c910300",
        "cursor": {
          "ref": "d67ad728-f02f-4a1c-9b82-298fe5f5d94a",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a3fd00b5-9736-4ce8-b009-a4930b8fd269"
        },
        "item": {
          "id": "4f29f3ed-e69b-4ae4-9a7b-afa57c910300",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ce39e84d-4fce-4145-b81d-c75be44c888e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab51ce2-95c8-424a-a2df-00a27cee0bdf",
        "cursor": {
          "ref": "bf98ceca-c9bb-4ed5-936b-252fe9eac9c8",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3c690026-5b96-4028-9187-e5f001f99c68"
        },
        "item": {
          "id": "fab51ce2-95c8-424a-a2df-00a27cee0bdf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4c68fded-927e-43c9-89b0-81df8ab0b258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519551f5-337f-4932-ad74-3aca48278a39",
        "cursor": {
          "ref": "5784fa09-bc68-44d3-b66f-cb48368f6b46",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d86d2576-9070-4c3a-a872-f52306f0c2a1"
        },
        "item": {
          "id": "519551f5-337f-4932-ad74-3aca48278a39",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d64d32c7-1c35-4eb0-9778-bc98184005c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c844b7-6575-42aa-9629-f02dce5ff114",
        "cursor": {
          "ref": "791cbb47-147d-43d9-a278-f6f4af640f57",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0d0e533f-e763-46d4-819f-44ee1b69cc8e"
        },
        "item": {
          "id": "21c844b7-6575-42aa-9629-f02dce5ff114",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9b8482d1-1c3b-4915-bd58-4b2e5a0ad05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e33122-a8d6-4e6b-9cf1-ad31e00269b1",
        "cursor": {
          "ref": "7c804ccb-dfdc-44ca-a947-5d8034c3950e",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9a5d02bf-d372-4381-a67d-fa786927fa0d"
        },
        "item": {
          "id": "17e33122-a8d6-4e6b-9cf1-ad31e00269b1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9a98c620-3e33-4518-99c7-be8f3879ca6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931aa675-caf5-407f-83a4-900086e4cd52",
        "cursor": {
          "ref": "a42365f5-5873-447e-a9e3-f460458e29c3",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "114262f4-f207-4a63-903e-8ac9b81e2636"
        },
        "item": {
          "id": "931aa675-caf5-407f-83a4-900086e4cd52",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e8e7c010-56fb-4740-a8c9-c5f53b670cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248741c6-333f-4e96-959b-c061af5c65ba",
        "cursor": {
          "ref": "4ad9ea81-b767-4d44-a63a-c758bc57e165",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b2b2ddf7-30ad-4e2c-849e-0ab242d5ae91"
        },
        "item": {
          "id": "248741c6-333f-4e96-959b-c061af5c65ba",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d2cf4cb5-dde0-4ecb-b35f-d272bc8f60c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be88b964-c17a-45cf-a2f3-85e78449d79f",
        "cursor": {
          "ref": "4a47578e-5c35-4ad2-aaad-a27c316ef992",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e4bebf3f-4193-44c9-89e8-8a5a6ca84a80"
        },
        "item": {
          "id": "be88b964-c17a-45cf-a2f3-85e78449d79f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "678005c0-1144-45d9-bdfb-926fbe01d12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5d094a-950a-47b2-9ce6-51ae70af8e88",
        "cursor": {
          "ref": "af7ddc62-bca8-4ad6-8312-85ee069384ac",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "62b74512-d671-48a6-99ea-6bb829fa0c3b"
        },
        "item": {
          "id": "fd5d094a-950a-47b2-9ce6-51ae70af8e88",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "96e44247-2ef4-4c46-9157-cbf05b0a430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a347b44e-c40a-49bc-93b8-7fa54aa036ba",
        "cursor": {
          "ref": "82eb3463-e5d2-4771-bb61-591af900afbe",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "46969a98-e20e-46e1-b845-66b0f21fd4cd"
        },
        "item": {
          "id": "a347b44e-c40a-49bc-93b8-7fa54aa036ba",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bcf415a7-a7ba-457c-9328-9e2aa28cabb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ce907-4574-4f54-87f5-1f615f51e18a",
        "cursor": {
          "ref": "6858f865-6f41-4ab1-9293-d7a8ebdbc1a3",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a58a3df2-c292-4bb0-a6bf-5607d4309800"
        },
        "item": {
          "id": "5a3ce907-4574-4f54-87f5-1f615f51e18a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "72788a8b-70c0-4488-88e6-1bb505e61467",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 291,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d71738-5664-4937-bbb4-92c263af802e",
        "cursor": {
          "ref": "5489e9a2-f66c-435b-b5e8-25c733d198fd",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b4531097-f0b0-4bd6-a98f-9d10e1cb5875"
        },
        "item": {
          "id": "90d71738-5664-4937-bbb4-92c263af802e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bcae5bb7-6d78-47b7-b621-05c39debb44e",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4029f975-c870-4687-bb78-22e1b502d83e",
        "cursor": {
          "ref": "6cc702e8-2fb7-44fa-aa36-ddedf66d8ac7",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c6b19ef8-460a-4fb7-a121-4c9076358691"
        },
        "item": {
          "id": "4029f975-c870-4687-bb78-22e1b502d83e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3e512fc6-a043-4668-93af-b0268344bdb2",
          "status": "OK",
          "code": 200,
          "responseTime": 3168,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba2ab69-4414-449b-a5ba-be4a3312efb8",
        "cursor": {
          "ref": "0b0a8e52-b23a-47c2-a9ec-58dd98aca273",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "70c961d8-db35-4380-890e-4de5ba8aa010"
        },
        "item": {
          "id": "1ba2ab69-4414-449b-a5ba-be4a3312efb8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d1fc2e0b-093a-4005-bdc8-70f61d7b50db",
          "status": "OK",
          "code": 200,
          "responseTime": 3131,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1df77a-89ba-42f7-95c5-074248ef9ef4",
        "cursor": {
          "ref": "948a8f6d-73bc-473a-a10f-f6361e07757e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4d1cc479-7311-469c-b69b-c9d44e2a516d"
        },
        "item": {
          "id": "2e1df77a-89ba-42f7-95c5-074248ef9ef4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecd4d450-3ff8-47d5-9a70-95e6999085c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1df77a-89ba-42f7-95c5-074248ef9ef4",
        "cursor": {
          "ref": "948a8f6d-73bc-473a-a10f-f6361e07757e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4d1cc479-7311-469c-b69b-c9d44e2a516d"
        },
        "item": {
          "id": "2e1df77a-89ba-42f7-95c5-074248ef9ef4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecd4d450-3ff8-47d5-9a70-95e6999085c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1df77a-89ba-42f7-95c5-074248ef9ef4",
        "cursor": {
          "ref": "948a8f6d-73bc-473a-a10f-f6361e07757e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4d1cc479-7311-469c-b69b-c9d44e2a516d"
        },
        "item": {
          "id": "2e1df77a-89ba-42f7-95c5-074248ef9ef4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecd4d450-3ff8-47d5-9a70-95e6999085c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63857282-7ca0-4099-b265-4c1dd9427dff",
        "cursor": {
          "ref": "fb6e7edc-e1f1-4547-afd6-f03c72a90b60",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3dd49f18-e761-490d-aa14-dbba5dd5aca7"
        },
        "item": {
          "id": "63857282-7ca0-4099-b265-4c1dd9427dff",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a6aca3a7-8642-4d65-9833-f20ca08f661f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 300,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5fe0ef-751a-4ed2-9983-585539824df6",
        "cursor": {
          "ref": "0a86b984-4d2f-4159-92ce-f0bce50c59c1",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bb465fb9-e70e-4b02-9717-c62e30467074"
        },
        "item": {
          "id": "4d5fe0ef-751a-4ed2-9983-585539824df6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "284f77f4-ba52-41a2-a3a9-6c727b312264",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5fe0ef-751a-4ed2-9983-585539824df6",
        "cursor": {
          "ref": "0a86b984-4d2f-4159-92ce-f0bce50c59c1",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bb465fb9-e70e-4b02-9717-c62e30467074"
        },
        "item": {
          "id": "4d5fe0ef-751a-4ed2-9983-585539824df6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "284f77f4-ba52-41a2-a3a9-6c727b312264",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeb55a6-94ce-4433-9131-118e8b7b9324",
        "cursor": {
          "ref": "d4e77357-2290-4ebf-aaa3-67917112dcb1",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6403da9d-79c9-4a92-b01e-03709e5488ed"
        },
        "item": {
          "id": "7eeb55a6-94ce-4433-9131-118e8b7b9324",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "acc2c0c4-7aa3-4ae4-8bbf-9eca66d5da64",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 556,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb7c7a0-6698-4087-a84c-b4ace9b0b90d",
        "cursor": {
          "ref": "6e42b4fa-e4df-4ece-a704-d1c1e87b4a80",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3b00db85-063a-4940-a2ba-8f7d1b8d0308"
        },
        "item": {
          "id": "8fb7c7a0-6698-4087-a84c-b4ace9b0b90d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c440e03-7666-426e-b3fc-4f28aa42b55a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb7c7a0-6698-4087-a84c-b4ace9b0b90d",
        "cursor": {
          "ref": "6e42b4fa-e4df-4ece-a704-d1c1e87b4a80",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3b00db85-063a-4940-a2ba-8f7d1b8d0308"
        },
        "item": {
          "id": "8fb7c7a0-6698-4087-a84c-b4ace9b0b90d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c440e03-7666-426e-b3fc-4f28aa42b55a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec51cc5-06e3-4333-99fd-5be2d7fcfb09",
        "cursor": {
          "ref": "9c9c273a-e5ab-4b0a-b5df-36b58e1e95df",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f10a588b-495f-4647-a1f0-9f91d1c3c518"
        },
        "item": {
          "id": "7ec51cc5-06e3-4333-99fd-5be2d7fcfb09",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "eb9fc8fe-ffc4-4c3e-bfa9-34390cc9c934",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 540,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}