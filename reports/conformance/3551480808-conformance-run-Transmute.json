{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "89fba4b0-031b-4ac7-9fec-20ec49a98c94",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9e6a9fff-c8cd-47f4-bd28-151af7abe56b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9de7653-bb83-47f4-a450-5035c1e53b01",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28ea45ba-9fae-4b7d-9f66-f9bc3eeffad6"
                }
              }
            ]
          },
          {
            "id": "ba0276a7-9a7f-43c1-8f25-021ae50c48bc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80d3c457-b7c0-4f45-b7ba-eed81f334830",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3696b45b-0609-483a-9dee-d805fefa6186"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d0c5e0ed-8d9e-4832-9203-adfc425fe1bb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4b824dda-966f-4251-b7e4-e701bad0f7ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3166105-c40f-4915-b071-102d87b07984",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce0c8706-a985-4015-bcb7-9e6f24ed637d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80ec0046-126d-45d4-922f-493f10f0d09c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "945a89e5-fe3c-40e2-bf55-35d3619a3387",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "512214d1-8af8-4c5f-8bf6-32259a7f90d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0463e44-5624-44f4-8bc3-4df7bc8fa874",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e3c2948-6966-473e-aad9-11adacdb09eb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dff19788-729f-41b0-81d2-01d7f438bd1b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d7bb9c9a-ad33-4aee-814d-952ab580ec7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c32c430-5ff0-4df8-af77-33402c4b6bce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8acccf6d-af00-4bfa-b33b-4f8e3faec468"
            }
          }
        ]
      },
      {
        "id": "d6c10aa3-bde2-4a1d-9636-589950e4f9eb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d7fc7ceb-a945-48f2-ab52-215602cffefb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de1fddbe-a7c8-401e-9fb9-df75718fc703",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "629175c8-545b-470c-97a2-a998ea9f34e3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e729a8b-ad8d-4605-80f3-dacd779308b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10cd6797-5ed3-402a-a4c1-4a48567c3b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514074ce-1e55-428c-bb53-facc348e8ad6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb8c959-f705-42fd-a401-aabe25c6cf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdfd81db-e17c-48a5-818a-24bf29a363bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22011d55-d059-4f9c-812a-1267769eec29",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b688fd-1d2a-4279-87b8-448df9bcb382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80671b91-9011-43c3-8db9-3c2654831fad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af2b5a23-f9cc-4518-bad7-d7713fe2c26d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "320d5f28-c3f3-466f-85a2-d7b88629bcec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad66cffc-8413-4c24-8d9a-e5aa11d556d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff1dca67-5c18-496c-9a76-420b08501cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17299247-c32c-46c3-9aed-3f99e921550a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692057c7-0815-4d5f-87de-c4ce40551ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfbe426-f978-4839-a918-234f6dd1a01d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546bb31b-c5c8-478e-b023-e8a28afca27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b2386c4-e937-4688-8854-615941482a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6183ba44-1fc9-42de-9315-45958199de3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b3fce212-84b7-4ed1-8d94-6348fa2949fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7183ce54-ec5d-4aea-85c0-eec39a655e8c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b2a309d-73dc-4921-add3-f996cf4bea26",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a20fb56-3c6a-485e-8b2a-a90643228aef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6792e705-6803-4e23-8144-ee6ef822b9df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dafa3ca-e7e7-4565-846a-64bc7c6bc6ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6aad2a9c-0605-4cf1-bfa9-ffd59a13824a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f71e06a-3d20-40a7-a93e-a4fe693f6edb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4acebd6c-1253-4950-8f73-151369a836e3"
            }
          }
        ]
      },
      {
        "id": "b7a01f49-7730-4e13-9617-16d58370daef",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1774f028-5630-44ba-9bed-14c48a6bbf44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2d6016c-e370-42e1-a98a-1702aedb5a03",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bcc57624-1581-4526-ba34-a1e76157ac9c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58ba629-8aa2-4822-972e-01287c99734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a203046-8ef8-4d95-a986-af418bbee287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a252adf6-239c-4d8f-b5ea-9aef18e21d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0d32665-dedf-45b8-a4e7-ad8e16f8d126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452c885d-63d4-4752-965a-9b19b07f947f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7365d84a-1c79-4674-9066-34f0ac51bf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc3b983-c226-446f-8932-96e17b9a9c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f877a92-d87b-4945-9559-5d1729472b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23a917a5-8e02-4289-af1b-3fee3d8f549e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda565b0-b289-4191-98b3-11a661db5a52",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115da8e9-a957-447e-9785-956d4f641e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ada2a9-7a64-4b8e-af96-d1b0053814af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59b5848-cd8b-46d6-b2cc-6a41b5090da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8cf2606-cf2e-4a5b-9ca6-617b39dcce6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d4e240-e59c-4fcf-8856-bb11db6d24bd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0bd66b-f9ee-43de-8a68-6ea9f2b4c265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a711ed8-a5ff-4f59-9c78-5316a0758f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a41db8-0b94-4827-986d-3d8d25d714c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99c71023-ec3b-4991-a12d-85db6ad5a8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7677a4-7b6f-4658-9a22-30a1862eb740",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffa05d8-a967-451c-ae40-2a468dda83a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf8c326-410d-41b9-a307-47e690e2de09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e226f6c1-fdf9-4868-b5fb-316fba87e764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79776117-9a1f-490d-a7de-9cdcc43edabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea4278f-2b4c-4608-bb7b-3393c8090f5f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12819dd4-bfb6-4bbe-be11-03e10f4015f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb92116d-f483-44b1-8bc9-3f910c5a0936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8d4a3f-ec02-4672-8594-12c6ffee521b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f181e5eb-d7f3-43c8-ac5d-3cbe69d393cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3f9a25-5a80-4c7f-a3d4-109130bfaf6b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c37a64-ec4c-4ed6-93aa-d6ba247ae455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e424d4c-936b-4078-8d9f-152673c4a8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c1b130-9d18-41bf-88ca-ba3e6288ba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30365a7f-f40e-4382-8f3a-fba518e70652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d915c4-c887-43a9-b901-ee85cd916dfb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59365c0c-ef6b-490e-b9ec-a86f5899ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598e5c51-cade-4fa7-9901-9fdeed0783d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b8bf17-51da-430f-9766-0a22b3433cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3bee8b9-dcb6-4845-8980-e937d6ca50f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c91b9f-0608-49cc-ab60-12ea81a826b7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d56bc7-3c2f-432f-82a9-7af084207ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46170b8e-d0ea-492d-8b12-e6254162ed99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d26332-8d40-4600-87d7-229c0b648163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac806340-0740-470d-bbeb-ea6c11e86250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59986879-d6c3-4ab5-a45c-179e7f5e32c3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bd30f1-44ba-49b3-ae7b-a0eb29f48ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26ac98f-8d71-4bba-ba21-3c3de791e3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b08297-697b-400f-a9d0-ef22a70af651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "884a41ab-7d47-449b-a576-d8485d113e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2420fbc5-e57f-4b07-8574-c47fb90a80a2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc6d34e-3a90-4702-aaeb-86022809654c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f0c974-28a2-45ac-beff-0333393e330f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d634021-734b-43e4-9601-2ef2b383d95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "752e2738-2ac4-4389-905e-413c3fe5f34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b275005-bbe9-455a-8a12-6eaae05427ae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d50aac-e5ec-4c79-a2a7-35fb16475869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c9838c-a0bf-41fe-955b-18e0ea5c95f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b00e189-9bbf-4263-9883-399f47899e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d60b645-63c0-4acc-a906-ca93a78abe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae79b7d-1007-4e30-a3b7-346e8f44ec2f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4ca277-9931-416e-a85e-ad5b8a946716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d130f9d-0a3c-4345-8624-44ed1cba629b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae38c88-32a4-4139-961b-8d91d8928283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05218c0d-2b3b-4ea2-bf8f-3ee403741aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3855418-6c1e-4017-aeae-dc1478e38d54",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d0229e-0aa5-4ac4-b94c-0bf9b1d7db2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6a2d26-f502-4776-96fc-09222132029a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0d8b76-9038-497f-a5ae-f04c45b9bf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e10a38d-edbb-443c-a9f7-218c4389227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368b2317-cafb-4e8e-ac71-be19c63bc2ae",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220015c9-6fad-480b-bb59-c37f075f95a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccc6ae2-3d52-4f25-9e12-5583ecc8dc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747b690a-70b0-42cb-8f39-4a412a63d7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0b189eb-9317-4681-96da-65787e3314d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a51416-622e-4485-8ed8-ee94bc52b2c3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20422040-1195-43ed-97c1-92a4b922a678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26078018-abb4-40b5-a1ad-95f2ff5b1a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b6921e-c140-4f7d-b871-1288ef7c3ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6e78c6f-3d30-45e2-bfd6-9a37a9a6f9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143280bd-c310-4c5d-bed8-58080b539f06",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dadf223-8cba-47bb-b62e-7745aed92111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7f19ea-b74b-41d6-b4be-acdbbc388f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0708b135-29a0-40d8-9c88-09ad5eb4833f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a755f77-5cb3-47d6-82dc-59d23c1befc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0cfeb1-1b98-4e52-b3d9-526b61eb705b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89e8a26-4161-488c-972c-4644cb52b0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72526e72-81ea-4c85-8d75-50e2e1a9beb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f880522-9def-42cd-b687-77ab1b26ead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da730cc-43f4-4d6f-ad21-2fd144fd3d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e668b3c0-6b9c-4f64-af39-f3000fb59c31",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5831570f-6ec7-4e8a-aa87-41f6e5f2012c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef56712-096a-46f2-8b90-b6211189b565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ade4f1-27ed-4362-b313-052afb23f006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38346ac-438d-47d7-8d0d-ec6fbb866327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7654fe-beaf-402c-a6d8-5d5d875a101d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b53e08-289d-4e19-8080-8be88c86355f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67902cc0-1379-462c-aff4-5f8033a6b31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b3a0f2-5ba6-4d14-b538-3603e36675cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b6fc80-c7a5-49e6-b698-bf45315ed190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edc9871-ed5d-4378-9fc7-088bff22b704",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b20c5f1-7724-4d9f-be8f-1785735a8b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb88b5e1-7c2c-4e64-af99-3795483e4173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d779c72d-9adc-40ac-8d78-4be21458429e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ed9c0f-9fa3-4eea-a865-6a3d6537afd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcf4e69-7334-4872-9f3b-0dbccf254cc5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f4edb3-df6e-415d-b38f-7de98b0163b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d461f80d-5ad0-4258-ab10-f6a7139a7ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac0ec91-4b52-4d93-ae16-cba60e8a26d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d39239a-94ba-40ed-8674-3c2f6957d6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfeedf5-3139-4bbe-835f-13fa9d4b6d24",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c61a51-5936-4d23-ae00-2d7cc83eba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e58bfcc-4ef8-44bd-b545-f840884bdf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169c3d1c-278c-4c8c-965c-067f13a29dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f17cea70-1ce6-4ec8-9e23-50c7fa9ca0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078b1058-0870-4e53-8bee-e5d62167d65d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a296e7f-51e9-4225-93f2-106b985c1448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9cb7df-508f-4eb1-8a59-14df7992a45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477afb5d-b30f-47a6-9e47-3ac9a1ea9e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70e3723-a6b2-4ce7-add7-5f316c1e1c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55049ea-69ec-4f9b-b15a-df6f5583ed2b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ab7429-00ef-4557-9e57-05a1b786388f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80428aa0-8897-45cc-abfb-323a2de7b143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae41675a-2eaf-4a8e-bc9a-1335f1a0eae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "865aa49b-6c19-4f12-8c34-5ec1e5bc4fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be378dfe-af7e-49ea-bfad-8bc3f681113e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260956e9-17ab-4eec-974c-2b90ab9ec984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab603f8-1b0b-4484-a248-2b5a264008fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f0f96e-9b82-4e0d-aeb3-32ad74236b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6fefcc-d584-4fc5-ad17-6eec3c8eff16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7b08ad-4ef2-4dd1-b15e-6017d6d61851",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19720cf-62c4-447e-a0ae-d8695de9b3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c930a7-c22c-40f2-a479-21ae209171aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a52520-9a13-4d7e-ade0-338b9bcbae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa003a1-a112-4616-bab2-73518ff01910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de831f6e-1975-482f-9073-703485146abd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc69070f-5b4f-4061-be44-40416fcbb027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faeb255b-e072-4203-93e8-fb4eb1b2cc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3b3d09-2711-495d-996d-10346c7cdff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46df29d1-b67b-435a-a8e0-6764ad44ff14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2420b83-5d1a-4256-82c1-2127fbfd68cf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bccb6e4-6bcc-4664-ae88-47e28ffb108c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ec35b8-c439-4225-9346-e0535b3bfdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2f658d-f1b1-4c3a-9a71-287c2c35f7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "215d3121-f721-4868-a82b-60fbe0c20d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733a5a5b-026e-4819-81e5-cf636246a1fb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce50df57-f073-4569-83ce-8f2c6d23456a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d23e921-fa11-4740-b2fd-a0810e3b2d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba3a0d9-53f8-48b0-ae37-c1828a871b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "acf8209c-98a5-4d4f-982f-dfe514c4f634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960226bb-4fde-4bb4-b93c-357e856b1af1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662b1265-9b58-4411-9b9c-1479ae72d640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d416d762-0b03-4d76-b21a-7adfaf15109b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d5fce4-841c-49de-9ead-136966a05d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "008cfb31-0f3c-495b-b0c2-642ec050d97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4340f7-241c-40fe-9179-68cf035b3fcc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2620eb-d4c2-4e20-9ddd-c24c6d73d95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4e7b99-5c44-44c4-bdb9-93428ae914a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75634a5-72b5-41bc-9c27-8489fc317e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d05597-3c7b-4abd-a36f-50bcba7e3133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202407e8-8346-4145-a190-b606d56e30c8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bf5c5f-31b0-473c-b8f4-3cd74ba2b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb23c00d-bf13-49e7-9add-f79d73306a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350a4423-c5f3-48f2-b479-81502b33a62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ea91f9-e243-4976-9f2b-a29741755fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0ef6b8-3a97-4575-a513-5d1954585d0e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345af1bf-e84f-4ce6-a0b1-0c6ad02504c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8477b01f-c452-467e-b256-8d915d087939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892b2262-d12d-4b21-bf1c-5afcc8be08ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "574d28ef-0f9a-44ff-9aaa-45b19431f9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6056429d-0b71-43a5-8ff6-ef167bd0283e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77fe22c-3374-415a-b08b-1d8cd4b2859d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbe827f-d225-4305-a45a-b842573ff01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e1374-d7ff-458c-bcfc-b420f084d6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0a66280e-5d78-40c9-a624-3a2956378afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34dfa68-77b6-44f3-a7fc-49fa5c7a22a4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119319b6-79ef-4fea-a0a7-5e60ddca7523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "327d1138-0534-4639-9fce-ad7637b19b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59b8f79-74de-4bc5-889f-f72095c7899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1db131-b29f-43fd-89cf-995cb2eb6cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409c575b-4569-4274-9c81-dd7233401ae1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5721a0dc-f826-47b0-b0dd-157e033920e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb3d8b6-b1fe-42a5-89f9-ed05e0a1e389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fa4f59-4846-4ae5-9de3-76d05bdc2b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf7d186-765f-49a3-9f24-29e78dc3887e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a2c862-fb18-4daf-a64c-559412d30077",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de4746b-08a6-48ca-86ab-4a493795bbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a407452-774d-4d7d-a82f-cc846ae93db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fef9275-bb0f-4163-ae77-792b9991e62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae147da-60cb-4061-ac90-037eb69425e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89852687-937e-4077-8086-622a6b6c64af",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a90e2a6-157d-448b-8b0e-7c0991ee7a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8965b485-374c-4524-a40f-86ebb1278247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5e5ce7-9d6c-4715-9b66-a9fc72c218c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4139bbcb-d848-44ec-a52f-0126032d5b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62e46be-8274-465d-9fdd-4305f03ee624",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc7180b-7d87-4d1e-b51c-15885b58614d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f919a4-ea0b-461c-b5ff-54bb7a96384e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8a0003-c44b-42a1-980c-025952c8dbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c96b464-14b9-49df-89a7-67067435bae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ab4cb3-f294-474d-a36b-5c1cb9ffa3c2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460333b2-e8d1-4f6d-b7c7-779e6b375f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80185d16-e4ce-4208-af2d-1db18dbd050e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69811aed-1ec4-4293-be6a-5d066ae9b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fad07f59-3ee2-439c-98ab-cc1f820a346c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3f2e2d-3106-4c2f-9e9d-13b334de11c4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8700d6d-5e4d-448f-a6da-afd2befc6824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30c1d2f-da01-421c-a98d-5d89068aeafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cf0175-e55e-4beb-b911-fbb303c97d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e384b711-247a-467a-b9f7-1e9cafb2fa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1820eb4c-e8ab-4261-8fad-605821e79613",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d1c333-d802-4460-af5d-0bfff0b2a7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b46a6ae-f376-4794-a0be-d6cc8c4fb7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d34fce-697f-4bc0-a8ce-e15ca89c0031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb07cd6-3c68-4dfc-9d4c-9420cf4708b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cccfa01-870a-4055-a66e-93b238162d41",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbcd6a9-f80b-463c-977e-0c29b0f3b1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac200b60-485d-425b-a70d-9ae84811efb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb117941-a3c6-4df8-98df-e9ba4e172833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "76fe797f-8d26-4845-9db7-0abc6b8ba222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7d1309-66bb-423b-a166-af2305567140",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ba57c3-3720-48ce-aae0-cda9409d198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aed4e13-0e22-4d94-8702-eec1d099851c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03225a79-3e77-4bd2-b938-363337f2a1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c07ea47c-c2f2-4cf4-896c-f139c7aed2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0527ff3-4a9a-46c2-a2ab-5b02569205b6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf79d48-4757-4e9f-91fe-609a9546f34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231a4ae9-1eb7-448c-8c82-52a64a95d6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba13e79b-fe5a-4525-b2f7-f59535abfde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7be08ba-72f2-4f52-900d-aadae44387a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb1877b-c8fa-4ed5-8a2e-31a55aaa91e2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a66a8c0-9604-428b-93b8-d35233ed9727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22098c28-27ce-4d03-8ebe-d77a56b365bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb65cc5-dcc9-4a3c-a9b1-7da8769af5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d97f0b29-d1a9-446f-818c-f2332044b325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994e7fc9-9638-4484-bff5-2fe0120c78b7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac43463c-b25f-4e4f-89ba-78c587fd0406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962fa4b9-9e48-4622-b9f8-1d84ea54f912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a14fccc-c12a-40cc-9329-45c09b35a815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c78b4ba8-1f1a-4ea6-bc0f-7d93b6656f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9791b5-6680-4e33-9968-d00ae6819238",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac02e1f5-8d9a-47b5-821e-3fb7117dd8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f8a8cf-b109-476b-aa1f-90ca31c5a4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b1fd56-3d0c-455b-bfa9-fd835e9b6c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93fcaac5-fb1a-44a3-b4f8-d8447005b123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0ddfb4-0bcf-43e6-af48-8189d08af365",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3d8236-78ec-420a-b231-0cfea8bef171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce02d650-1cd8-4ecf-a177-81575a8d448f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7982286c-63c8-42a8-a5f6-9a6bd9c2fc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94a4f087-5b85-4b27-aada-005e029bf786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f3ede9-b7e7-4cc6-9e81-e6ee026bdbda",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9068034c-d684-4255-b8ad-8be9a86962c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a5d3e0-5224-4fa6-864f-7ca39723459d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a36c69-2eb4-42e8-9385-11c1158f30bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec2fa73-0f8c-4ef5-b0fe-33abad3dbee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a62db8-ae23-422a-a944-1411238ddb63",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d283bc7-dfa0-4a69-a044-89359c441e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ce3b5e-3020-43cc-b43c-fbe924b3dedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b9d3f4-eabc-49e6-bca1-1e2e80a2e7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccbcf0c-d709-40eb-af0e-aeb9e9831f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57765a99-15f1-4358-9970-66c16917cc04",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384b81a9-9104-4595-bcc6-320fa06d3d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a1d461-29ae-4b01-b3ec-a9be4c3391b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd4acf8-9ffc-459a-a364-9c03df54054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33cca568-8632-4e69-83e7-1abc577cfec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32977be-6ab7-4b98-a92f-cb8249a6efcb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefeb41b-6531-4bfa-8037-c3b5509e189e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715cb5ee-292b-4bf9-ac14-3ff35955c4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21663987-cca2-4ed0-9b60-ceb80c04d1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c2e757-5ba4-47ee-8659-2f143e4d642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b1c481-ae88-4671-b990-3841be6908a5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12428d54-efdb-4ea5-bc7c-b098096785e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31965af5-d351-47ba-b4f6-45902e2b5ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064f36c8-cf8f-4203-93dc-63aeee1e2b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63454232-8e7f-4bbf-b375-913dfd1035ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95816f27-70d5-4a35-a7c3-3b6783ed39b0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df892e5e-cbc2-438b-915e-bccf9c8c42bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce76f3b-3533-4ef2-883e-1d8e67e64143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96fe4ed-b9bf-487d-8e39-545ffb958f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "19997229-9116-4408-b33a-35f80812db0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13568196-b4f2-470e-809f-5bf058406499",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acccc7b-210a-438c-be56-15444f3cfbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425672a7-bf73-40d9-a05b-36dfed28cd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca45163-ad91-4cee-950b-fafc76b8a590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "425aff5f-a477-405c-9294-f60b13d9d086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb0cc20-4913-41ca-8487-f6bca145d04d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70fd1d5-0f61-4bf8-93bd-66065eb88cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf8daf0-4b49-4371-9440-cdf10257aca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd221dd-d97f-4fb9-8c12-17f6a87f06db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa2441c-fd12-4568-a191-6edb84b4f8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9722b35-493f-4220-b0fc-68f4cd4d750c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aebc68e-a885-4216-9eff-df5041ceffdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2711c2b6-8ffa-4c72-a9b5-2c854bf47214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3880903-7965-4c49-ab02-83f44c99a825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "553caa1d-5351-4cfa-b9ec-4ac6f7f193d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154b309f-e604-4f8e-8eb9-3a3037f60aa3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80d3e89-7f28-45f2-b5d4-667ce645374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2e963c-beab-4518-a072-235a014afddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e57f35-876e-4d7c-842d-97cd48da979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc5541d-d4df-4f48-859e-e6af084d2a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cfced2-5ca5-48fa-8a8a-783b3c44ebe9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c9a029-796c-47bb-8069-94d55396813f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe9473a-7e57-418b-84ad-e0e941e11842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6f8eb3-3026-4a98-9492-1b3e7f815c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1138e6e-c19e-40c5-ab9b-883dd1d1a5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24fad5f-3801-4d9f-b8df-5ae751ddc733",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b4a4c8-20a9-471f-87e2-ba41a87d8c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fdcc59-3f5e-433d-b407-5b3e17a55f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee42fc6-111c-4eaa-b0c6-767ca7530f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a10211e-3f2f-4b6c-a1b1-c2892cd80929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39a3ff7-aa8a-4022-96cd-e5ad70d651c5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022a3583-5b3c-49a8-9110-71c5f52ac1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd86e8fe-5c00-4b3d-9a32-d5e39b03c19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ceea853-41b1-4705-bc41-84e1166b48d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "844accee-ad2d-43d6-ace9-fd28a4063db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac876ec-01af-4435-8900-219ae6b19f16",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd65c0da-0d92-4de9-bf1d-169c9349e640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c86eb3-41d5-45c6-8777-61e7eeb7dd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d59d78-644f-4ce5-8a70-5041fb0964ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2991dd-9009-4462-9717-c6776c3702fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee7a616-80d4-4301-a669-884d2f2e0f31",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42f4069-4e54-4556-a219-fbf3f37cb043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dbe9e9-95e6-42df-a6a1-e62c69aeda8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a678c-39fc-4d59-9066-a76d6d035697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df9c736-09cf-4421-8351-27c504929b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b032c73-1de5-465e-837b-03de8a626a82",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91be4fa4-f4d3-4d63-a715-ec09e2e43a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7161648e-b378-4e46-ac8c-e149db3c6081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c68d0d-6c16-421a-bf46-2538839374e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9307e1b-e313-433c-9d2c-87e5bf69f115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcd2a2d-75cc-479d-91f4-b01168aeedca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711eb81d-42e0-47a4-9980-b1e6cce40e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fd94b1-ce4a-46dd-894c-944c510a7f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea978dab-ef47-4a97-8075-a99bdf17b75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77f6f490-d278-41e8-b7ae-018b7e0c74d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3428b781-c1ad-4080-91d9-9a9589676cf5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9cc7ff-d2ce-4277-97bd-cf8a425b9ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b070e509-ace4-499f-81a4-4c42b7ed82c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8351bb1f-e2a9-48cb-a2db-66bec8d8aef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd46ba9-c0b9-4a67-8ac5-8c462e4d4dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26c780a-919d-49e2-9b4a-81507be002ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405a612d-41b8-4b81-b13c-f590e3810133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68455f1b-ace6-4b97-8e31-a5254419aa9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12b06b8-e1bb-43ab-848c-9715c7d46c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a3cf21-6d1f-4e63-a2e4-ea623c30918f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bdd9a5-e004-4d9c-9210-0604e5f643df",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faffe0d7-d448-4511-b90b-851a987cbc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad0d2cf-87d2-42d3-9157-e361e2031ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1e64a0-db80-4dae-9cf8-0f42c40e7e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf216e27-71ed-40f2-9c6a-3373b6fee88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfad596-2107-4544-9f6b-4bbb225e88c9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12af871d-d42f-44b2-9ed5-5311badc8015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a966828-8529-46c7-a62a-82c86ce99434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b0311f-65c0-4542-9d8a-ca738d5863cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22acedb4-167e-468f-91c2-225c288654b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c74b4d-fe42-46d5-bf16-566d70e7bb97",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c6fc7f-3aa8-42ec-9ad8-53d727d7b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4814170e-ae1a-4808-932e-977f49ca8b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8f197f-f8c1-41d5-b17c-87d589a5a9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d991058b-962f-4990-9d49-51a8c2e4980d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b90c316-e89e-43ef-9a07-a59f2f1fe2da",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a2b218-687f-4b83-845d-766e5d588f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1983f8e8-ed4f-4e3a-b0f8-d970880adcee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577b6367-7143-411d-9d36-ba60b0aaf8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a967f02a-63d0-4c02-af8b-7d994513d5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbd7ab4-d0c0-44ce-85d1-c40d4a5d362a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fcb7ba-517b-4969-8924-a9b171a24319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8981dc09-db81-4a6b-9483-fec37b451d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8099769-e552-49fe-8fc1-ffef8bd9e02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c08716a2-c8a1-42c5-b9bc-6f4ecf87196a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295831a8-44b3-48ae-9fd3-0990a399eef8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6fac01-2300-41f0-a200-546a73c5d7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9738282c-7c56-4df6-9294-ca8dc0d1d689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c54ebf4-a880-4ebc-9ffd-50be50d071eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ff4db0-3c99-4ff7-a044-55fc7dbdf266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274486b2-5767-47fd-a0f0-4887c9293f90",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217bca26-6884-4e54-aae6-54de15a51a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ccebe8-b7ee-4afb-9415-657f77a714dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a4a50c-85a3-45fe-93a8-d12c084ac4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b2f947-984e-4ca4-b780-2a8ca261e015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52d45a5-4920-4f7d-9623-a3da3169421b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf426b-ce0f-4f6c-a9b4-94a78a13bd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e52f35-1cc8-48ea-9458-06ed236d1d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7f8f27-d7c2-4aa7-aee3-8935f55557e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0904618f-484f-4972-9a8c-18c234915426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5943b14e-1d48-48d0-b7d9-f65e8585a240",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f548f6-9dfa-4c22-b86b-c1e39d1960d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f092735-758c-46a3-a247-cc16e8cef11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6cd1e2-c045-4615-a38f-7e8f237df9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6a68e4-2992-441e-a386-00846ab1ac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc998fc-9def-4d1f-b2bc-846963603c35",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097ec28d-2187-4834-803f-80cee622ebd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8c34fd-9c95-403a-a71b-63f5d81f63ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac48899-92fc-49b0-b417-3256235dcf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "759dc733-01d0-48ef-90e4-f5939fdc3409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197b1e88-dfdd-4fff-9057-45fde3d7a028",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19a9329-8a40-49cc-9fb2-47d1a346ac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb616a17-3d99-49b4-8607-f939d393fec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bea120f-5596-44de-9573-a4b1f6bf8d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf90b3b9-c8ab-41d0-b65f-09a95e0e2e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3d32fa-1299-4c8b-8dd3-36723aaaf8b7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4737e6-e53c-437b-8cfb-2df92e0c125f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaba09cf-ea07-4f5b-98a2-bb7cdc026ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d452fd69-d142-4423-ab91-b9dd585ac13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64bc4b0-524b-4d07-8f3a-9a56397c4b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec45a1fd-3e36-47ab-8454-2363816134dc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fcbecd-2af5-45c7-b58c-ee972c846443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22832f54-fa40-41fe-8329-b11ba287b3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5049a9fd-1bc2-4b2f-b97c-daa8a1dcfa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afe01a17-f3b0-455a-94c9-48516c734d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f6881e-571c-4601-9061-c82da0662aa6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8754d54-22a7-4ec7-9192-9f7d6ecb9028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba169ff-e059-40bb-9587-69403b9487bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3d66d5-380b-4df1-b6e2-e25dc6867ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc341ee-ec13-4a4e-a7a6-0b1ab123470c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eb250d-d0ea-4d0d-a154-8f60d99892d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f0e22c-0414-4178-9e77-85ec49677cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383bd8c2-886c-4ec3-8e8d-a71eb8620bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229307e0-21f8-471b-bd50-fdbff09d1b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1cc766-004c-4918-919d-3d0be32aa9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33700654-d814-43d1-9ca8-aae651a4a5ae",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d88fdf-9fc1-4031-91d1-ca4ad69b14cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f9ccb5-5fe8-4a49-838c-728317947e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66715035-915f-4e30-b355-aa5d4549f979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35c3cba3-1363-468c-aa5b-3d0f289b2e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8581d05d-ff93-4f9e-884d-b5ee656d8c59",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bf611a-9b5d-4eee-a6c4-93a20e9e5ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0089a99f-f58f-4f80-a680-ba8233eb6948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1642faf-24a9-4b06-bac1-2897bda8403b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d40c06d-0b27-4417-8364-7db4ed001c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777e19a5-3ade-4feb-8ad9-16b3a9488a3c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50c849e-5caa-4594-8a8c-428a6f34ac4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28f6499-1a74-43f7-8f5f-5c44dd9291ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b089203d-f16f-40f8-b5cf-04a0a959e0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41430da-3682-4d38-b441-fc784430840d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585e8645-25e4-4240-b17d-afb6257d4012",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4d7a68-19cf-4a35-896d-e6b884756f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2b33d5-b98b-43ae-8012-2fb3b249c6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abd85f1-c0dc-4712-8881-fc44abaf0d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dce2ae67-af46-48f9-9429-27290fbe2b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc29848-f04c-400b-bbc4-2bd67db4cdf5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cef990c-890a-47e7-82b6-a58eb8790519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a518b0-bd7c-4303-8078-a75faec7a2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bdf34c-614c-4bae-bbb4-4a9ffff4b0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b8da53-4959-4701-821e-f5d7111b60d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0553f7-9243-4aa9-a397-49bdcb6bbb5a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f477524-1430-40f7-8f67-5c2fea90285b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fa8163-a912-42b2-90b0-5c433cda196c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbd5a61-da8b-4816-9ea6-ae5de10b5cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a22080e3-7d26-478c-ae45-191dbd93cc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbf16c3-ce59-4765-89ac-7e5adb77daea",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2e517d-ff7e-47c7-b645-3b51858b9a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bdb9e6-629f-4a92-bf98-bfbef3f4be5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8af33e1-9f03-4cac-8a0b-40edf9e9c9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc6837b-9e1d-48bd-80a2-a21940d6d81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a6d975-8c70-4502-8ff8-86020ece1668",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47346ea4-5f66-40f9-8978-794c93387af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e4fea22f-5983-454c-b1f0-41762ee03688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55936b88-136e-4b88-8bcf-ec0282099db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dada1a2-ce9b-40b2-a257-574a0b9a8a4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "006bd01e-2c36-446f-b5ff-9a9d5cdf7fe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fb7aaa9-764e-417d-ab7a-a9cdc3e5acf0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44152750-d386-4e3d-9300-879efed85f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1b9498a-27ad-4cb6-b5ab-6c1b0aa3a6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0f8f14-dfe5-4605-8e3d-8e66aa8d9bd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "1c3140e2-23e5-414a-bc33-60c8de0d13b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4323898-ce83-4fcb-885b-9fe0166abb8a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9a3b2c-b01a-4e17-9550-71d90eee8f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3cad662-b9cf-48b7-bbed-dfa5177dca1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4ca5ef-9abd-4e97-85d3-52aa897f52df",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "98898736-e0ab-4793-bafc-0e8fa6d69770"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63e493d3-6695-4f6d-be6c-85eb67e1ea4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7423b40e-ff38-414f-88ff-d98cf406588f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eff48c15-45ae-4989-8da7-9a27b7c3bf76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a341a9f2-5872-4c36-bd7d-97e9a1986826"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1332d12-bbf5-467f-b7d4-1d513dadbb63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd625eb0-8090-4f4a-9407-42ccf3497f97"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a5670f4-a64f-4f1f-a85d-eea19ec4dcad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc32e125-9a8e-4c7a-973b-55f1fd4a78e5"
                }
              }
            ]
          },
          {
            "id": "65722407-cad7-45f5-bb6d-4480fa6d4ff7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02a0c9a2-481c-430a-b8c7-51d58d15d066",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca6f7d2-870e-4e91-aec4-e9e2c7dd60e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e31f18d-feda-4257-9f3c-4d64fd5f2591"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00585ff6-45c5-40aa-9dae-a38319fddcb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ac94a62-288d-42c6-babe-b1b4625c7a51"
                    }
                  }
                ]
              },
              {
                "id": "2da8dea3-a83b-4ac4-a62e-257fb5f92a9a",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e85a3f0e-9956-467d-ba4d-8cc32c5fe8eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6382c11-9099-4dc7-8600-ad1f97766774"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6a087b3-37bf-4120-8f80-1791391d03d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c90de528-cb4b-49cb-942f-861d9baf4edf"
                    }
                  }
                ]
              },
              {
                "id": "2a558d75-a771-4867-9ba7-606c928aca63",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "739269b8-e66f-4413-a7d7-87b21f60e00a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2c11be7-f5aa-4161-8f26-ad11b8d4dc4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e252e94a-d788-45d8-a4b8-3c4cf7f7c085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e30f173c-00f4-4399-a1a2-0999e5982630"
                    }
                  }
                ]
              },
              {
                "id": "ca002eec-325f-4be7-bb89-d816ab40ccfe",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "020d738d-4b6f-422d-8948-0ca273e2cba4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7c54375-c5de-4d29-a123-8673216e27ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcb02f31-eb2e-4a01-bfee-53ce29773033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c14d82ed-680c-4c25-a15a-cdfe7bc4ccb8"
                    }
                  }
                ]
              },
              {
                "id": "10a27513-7207-41fc-a874-bc99ac317e5d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "901b368a-5261-491b-89dd-f4561f35ff2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23ab5133-9b89-42e5-81dc-d62a65a6c0e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fe5095b-4dee-419b-9a05-214d819cc4cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7a6e0968-b1bc-469b-b90f-b3349165a0af"
                    }
                  }
                ]
              },
              {
                "id": "c04b21bd-fdf8-4483-bbd6-3d16a52a6b55",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51b003b6-ddf5-4880-97d8-59556524edd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b946d954-4720-42ab-ad0b-a6ea35a8d705"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b332a3a1-995b-4b6f-914e-f3d88f36f594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c98d6d8-cb96-42ef-918c-c82e7dab01fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8edeedf-086a-4bf0-98b1-b914d15dadc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "788f4d98-87be-4dcb-a34f-0c28cca1b26f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b4a52d4-e338-4695-8055-ca72057db425",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2129ba4a-796b-4e51-99df-9481aadafdfd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "680bec01-fc33-4f8a-bd6a-44a6d351d979",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e6436489-45fc-42e4-a38c-6c9bb8c0b0f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fe7e3e6-56eb-4e13-a33f-cedea3d350ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d62b123-098d-48ed-af36-328d901b44c0"
            }
          }
        ]
      },
      {
        "id": "54a00433-4807-4861-bbf9-c9bbb95c10bd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "74af4252-1f14-497d-a35f-9e303a2677e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1952ff6-8a4a-488d-a06a-fdc4b61d3298",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7a7eb55-b4c9-406a-84c7-ba59ba7eed97",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f25fab-b813-44df-974c-d33c2bf6b3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84901ea-b02a-40a5-9ef7-b3f17d220798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f55dffe-f452-48df-8426-5478ed93f915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5a0c22-2cf0-4667-9557-4b35209589d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177dad4e-a0bc-477d-9692-90839a291592",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a2ffb2-e201-45c4-85a3-347a012fb7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a068e942-ec0c-48f5-92c6-d6f632345728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d113057-772c-4917-8fc2-1c89c2d6cc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d73ca57-b9f5-44b1-91a9-3d7d9f3fff29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fea471c-978d-4957-9546-9fdb364a7b7a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecc7564-6b0f-4513-a833-746e83828805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4e30fb-e35c-4dc6-8730-a0291a9c8647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86469dd-fb4b-4ef9-a13a-6e0c3f4d699b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce11c0c-1f70-4382-95b6-aaf01bdb9f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d5b1da-9fa2-4f02-99b4-2c3e46f0b720",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ef9d0f-ef2b-4c44-850e-b82e66a513d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3066feaa-3934-47f1-a304-c2839c04af69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecca185-cd4f-423e-9d04-629639d94e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9306e68-33ae-4710-91d5-46527e778013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f5a727-6f8d-4eea-abc9-15ff4137a6c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00babc4e-4152-480d-9c66-e6b588833512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe35773-674d-4da4-a5fc-c7b53a699486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bac787-e773-45fb-8347-33699ee3f408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "731b762a-a0de-44ec-8cf3-13bf38cefc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f72195-4864-4165-976b-c4f4aff5d9d1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046c6939-bcde-4d69-af10-e12e657d96e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0adde03-e39e-46d3-95be-ad4a5fcb2333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590475d9-2426-47f5-a6be-59e1445a20b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08be09a4-55a9-4eca-9929-2a3934f29666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0d468d-dfdb-4d02-bb4a-c699f8e1f146",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99b7e52-a9a4-4580-951a-d8da57e176a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c5d8c2-230b-4871-825d-440bc7bffa68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7312d71-d4b9-4f92-ab43-53eb20a47dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec92a3f9-e7df-435d-a821-fa31e82b9d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec99b94-bc77-457b-b3f8-cac6a9f0c187",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2d2225-e287-4bd1-971d-60c6702ccf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7e87e2-776b-4e6e-9b6b-70291b0c7a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea040eb-81c4-441e-adb3-8fbf42727940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f903a63f-4941-442e-b66c-84180cb08b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5922e6-1291-41ac-beb1-972da2c6b53e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ce61da-a313-4c62-b0bc-884f323041b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e35e206-1297-45b3-a36a-1c68d75edae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616cd7bc-42b8-4c58-9d14-da48ee2a56fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43fd7a06-e394-41d2-863c-f54e901ca5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a023f677-d4e3-49fe-96e1-c64c1aaa3334",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd80c278-790a-437d-b69f-f1c6f81b3d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7136dc-8aba-4572-b740-8bb3c007886b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed05093-4184-4f7f-90a4-7859a9f52247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53d35a9-5c20-40b8-b831-fe85bcd3b8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4380e1e8-70d3-45fb-a502-e505fd0a94f2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e2dbde-95b1-4e6a-bb8d-439fe18f7626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd95fd9-34f2-45f0-b494-ed157fe23fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be976c5d-7902-4ff2-a9aa-cfaa9accd3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d8874f-5af7-4ef3-a5cc-cc3cf428a388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74845036-211c-4df8-a722-ac6a961a6123",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b808ec-55f7-4a75-b4ec-f6f8f548ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bf66b2-2744-4395-9561-10e810e06da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cba2a5-c7fd-4440-b595-ac2cf9d283a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db94409c-880a-4c21-bcca-3acc7aa703a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ca923c-809e-41bf-ba3a-a924c13ad692",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9933148d-a8e8-4811-afc4-f85a1507f95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2129e7-df7a-4ab1-904b-e03b2c1b432d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5629469f-e467-4b2c-9d04-7815dbfb5b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1df8cc4-9367-4be3-9344-6e1bea26b9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fc3eca-b6d7-4e68-8b96-8b9093283990",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8924af0f-e56b-472f-b85e-7bbd843a644b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb52123-6897-44b9-9ae4-d153ab42a78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89924f93-cad5-4f9f-bbea-9a30584e25e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce3d976-c5e8-4624-92a5-1ebf2ef978f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b6e385-6cc8-4f4d-8217-b33a987644a1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ae8867-83c8-47eb-8b7a-0db31394ba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219998d5-7e63-4874-bd0c-d5afbcf34b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818ce153-b21f-44f1-95f0-4ca3c1058a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa957c8-614b-46dc-9da0-2c02cbe75d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0856fce-cf5f-49d0-925f-bba6af7cccac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8888e310-c795-4059-8e92-54846c58430f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac94457-8b86-40b0-958b-9da7a44ea8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b05324a-de2b-42a9-84d0-dfc32ee6998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "458d20f2-b66d-487e-ba56-78d0f9973e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6e111e-0948-439b-898f-fafec0017e7c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50ca5ff-7444-458a-a4e8-9831a12bea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3ba072-95fc-437b-b268-c52776a4ae32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1ba84e-abbf-4df2-b887-999a7ebb0f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "619d7683-47a0-4544-8d8a-c10372600284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67808c72-6cca-4876-aeed-96bbf1d5b95c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f136d289-cd0e-4728-b0f1-98c3c867f508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d13ace-e7a9-4d93-94ff-1c0933dd0f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22280a2-bd40-4cc4-8223-8d4bcc64dd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bd9852-2411-46b5-92bf-f61997636846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99a9d30-b0b9-4691-aa24-754b433c743e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4453b439-f092-4cc3-8d3f-83b097533c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bc20ca-da51-40ac-a531-692d779d8c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55638e1-f40a-4542-8be6-6c07caa52a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25233e78-1184-4c2e-ab61-8a5da6634a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6908270-2af2-4114-8a3e-f1f1d65f57e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc549384-3414-43e3-b921-e798ad2916d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936cd690-98ba-482d-a42a-d4965998c2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1a615a-01e4-4130-b7d8-d820459db5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b48ff8-76c8-4fc4-ae05-a185ae9ce376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855af975-de12-49d1-a35d-e7b67fd9bc02",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403d94b4-40b7-463e-acfd-a22fcaa6c707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a89c0b9-7cfc-4c04-a052-4c3f4e0780db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18bce16-94ca-474a-8362-5ade3d24f1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3247bd1a-1d06-4c1f-8e42-fd674c360086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdba7de-d31e-4761-b6bd-81c06baaa6be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b5b6cd-0171-425d-8056-ac619a0fb106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91441c0-5866-4258-9407-bf2269102aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6663ec1d-ca73-45d6-a1cb-5ac95dcd2029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f1fa05-e9ce-4076-b96d-789d1cdbc201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938ef859-0ae9-4685-91e1-b9d53bb20605",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba248c9e-f8ff-44df-b983-fc56eb42dd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e86cd5e-0b64-44d2-b97e-276695dbb30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6868c2e-afbc-4ab8-92ac-010ae4803733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb71907-d232-48a6-81e2-29d211a15931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52408c12-37fd-46a5-ad10-859a4fb50168",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64097d13-dcc6-4e7d-a554-2fe60aa7ac28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b14088-b931-4d4c-89ef-c11dcf7d0c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca451e93-8d36-4bc6-94a4-7c54951f8ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c46100-2f1a-4902-8fdd-72f31728d7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9134df-d160-46ae-b222-1c70fa2d0a03",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5deea20f-cc84-4e5b-913b-a98fe6a8da3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac855993-ef4c-4ca7-ab58-b566d30f9d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7a92f6-8799-4e2e-88d4-ebfe2ce2e297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d97062-cc14-4637-9a94-fa6ce1f92cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f701f4b2-7e0e-4664-b8e1-1995f5d20d09",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fd0780-89fb-43e9-a057-3c4b2e1148b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2e67d3-f972-4182-a6e4-20266e6db60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbdf274-2b17-4217-b369-b4a0f7836aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1e3ced-acb7-48b3-ab78-6312616f80a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56f75db-d32c-4461-a9a4-c644acf6de06",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d28f11-b42e-4cdc-9775-09beef33805c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efce44a-fe13-4d63-bc81-15325a196840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e642f0-ab13-42dc-9f77-85da2c5d4b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e8bfaa-2a8d-4237-9ccb-9b0d68c21a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b175313-bf4e-4029-9deb-68222eb18700",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65342fce-442e-414a-8577-66615901bbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfa28eb-4a0a-4e21-aa94-a0a752ce67d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ad2963-06cb-40f0-9642-8735266ea968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bcd601-2e4c-40a1-a9ba-ef001ba3351d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b54c99c-7d0e-4a24-a4ae-e76524951551",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564c1cdd-df7e-425f-a554-79edf70c0189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19834b6-a56a-4f0b-8647-e142eb7f5b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac19b9b6-4be6-4f47-b74c-4e2e31c3c395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3d3762-2902-489a-ae40-bca9b7baf55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8adbcd-d86e-45c5-8dba-800c5ef8b447",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c33ab6b-4114-49a7-bee2-30f5693c5cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ceafd1-1440-443b-a264-05d3eb53cbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0f1e64-0582-443c-93d8-0056eba033c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3416b28d-249b-46fb-9769-fd1b6dd57403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad3c0c0-d3a0-4160-931d-d54aaf8654b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9e85c8-eac9-4f1a-8caa-2fb6649f3e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42c7f54-843d-42b3-bfa3-13f0082c65ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a3d72a-d416-419e-a31f-fd92adfbc226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e599e7-22ab-47a1-8239-e9efe9a13df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a92986a-a2b2-4882-83bd-741f7d4b295f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112ee656-bb28-43d2-83ae-c21940363edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7847c6-c88d-4aed-adf2-0e3a1d8cbc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b470ee55-33a4-445e-93a8-25bf98b355ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f34468-c42e-48a4-aff1-7ccd7a04fa83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "058ed50e-b06b-44da-8baa-e8cb3977ef47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84661423-b45f-4ae3-b672-48587aa3280a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fbb5df-e98a-4817-b726-e182e5f6f75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649d0926-4461-4059-ab5a-9d99297538da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd640222-46ed-4790-9736-637a8595a288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d32eeee8-1a4f-4890-93b8-f687f22a5790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e3d137-7795-4cb7-a386-8946082adf3a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdcfdcd-23e1-468b-a5ba-cd430cba5760",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "cf2a8fde-e0a1-4d24-950b-e403b4f049b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e55ccc0-fbc5-4094-90cd-1dcb3c2afc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "285e6b21-fd8e-40e8-93ae-69a9f08c4e56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4246eb0-7bdf-49d7-80b0-3d26aa27a72f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45edd111-f4c6-4e8a-9a81-7f33c4d52523"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53550369-d59c-4d66-bd48-c7a912f576b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc1d3d57-665a-4055-abde-ffb99569821b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37d7f2ed-fb01-471f-ac17-8e3e963a15bc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "323ee7f8-1580-43e0-8d86-43a497f4816d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6538a60f-5b3a-4bf0-a3b1-830d6c22b7e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72df5dc8-8805-4156-bea8-1f6fd0125e00"
            }
          }
        ]
      },
      {
        "id": "5b9823a0-e5c6-4e2a-8a45-8e7c03a45cf4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "81f75b27-9ea5-4332-b1e4-b0bb9cc6be75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be322fd5-638b-4c89-8fa4-02652957413d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dbdb3b4-bdfa-4dd4-84d8-95f90ed6989e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7bccab-717a-4d13-99ba-ba453c4e0a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1237ea2-846a-4e2d-8922-8dcecc03fc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8359c14b-96f2-4637-94f9-2cd9b6b7dd41",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8185b6c1-b9d3-4d3e-a82b-c8eaf9171630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31647fc3-048e-4a52-8cb9-723443a52852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16896961-864b-465b-8568-e20dd35d77d6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef1a1de-c288-41b9-9e51-27dc5d537514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352fecc7-539e-4366-a721-e90aa19da24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bc2326-f0e6-4bab-a66b-82fa225e020c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0033954-8396-4004-8114-d620da095c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa1d73e-6cbb-4d1d-89ee-314666d04f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed72ebf8-a834-4176-90bf-a9b1040aadec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5819556a-e071-46a5-a332-ed7f397e5074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1dfa96-7138-4b47-b8dc-04c8eb5fb59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6c821f-a1bf-4384-a973-4018695242ff",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a37247-bfa8-4b21-b48b-80549ef3b24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9019559-ded7-4ce5-acc2-8d941977c16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c360519-d479-4858-b149-e5d2049b237f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6394837-c4d1-4a90-b35b-61edc87c7676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a8ad74-713d-4f7a-8dff-356a186254ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a63185-d6fb-4f12-88a2-1b7ebf199438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee7ce33-ad46-44ba-81d6-15790be52f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5497741c-d48f-45aa-afdd-7ced033e1038",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8cff1b-003f-4a63-b1fc-5475a2363776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2306b714-9c4a-4e32-b5a7-e64ed7f4a068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c57def-fc8e-43f9-a0fc-c9f9a91b8d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e755c4-6a35-44ac-aef1-399e35892985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f294ce-abf4-48d7-ae63-7a0b5ef3f75a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58d4856-dd43-432b-bfc6-78e2181cf832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac0567ba-b565-41ea-bf4c-42e6fe8492c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e74637-e1aa-495c-be67-ebbd8b1a8b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed704f91-3f20-4c26-9ddf-bcca8663a13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b4eff0-bafb-4928-a1e0-7e1902f55aca",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4eaccac-c8ae-4a3d-af15-6de6bdbf574b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d67415-0d1d-41bf-932d-6742f8beeaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6388fdc9-bac9-4e2e-a8cf-1fe9ba1f8d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd5feb4-8bdb-4aae-a2d3-a097e3b04bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beb08d7-6611-44e1-beb2-66adbc0022a7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d4a94-7670-41e0-9c21-c03cff6799b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b35febd-daa3-4eb3-94d1-50798ee4432d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222d2564-8eb9-4ec7-87d0-38ec0e913c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd356e6-3bf7-4694-bf14-76b4a8bd57b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c06181-1940-4b14-95ac-24a2c1d172f3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782234e7-c752-467b-96c5-92681dd62e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873f8543-78c0-47ec-a238-556bb3ddaef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6204cd6f-fe52-40b1-9e1b-92467ed7edc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc5638f-d526-498a-98fc-4e3acc0d466e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1ea886-6e05-480d-9f66-c52ef5274c18",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e698d78-8afc-4768-965f-5c474343754e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6846ad39-408a-4842-b158-09ded6afa870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341743cd-fc5c-4c9c-a515-cbca6ecb0138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ca0b60-ad45-41f0-aad8-77528c6d59c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0718e762-1834-4ab0-9f72-84489de826f9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89af18ce-65be-4f88-81df-56d4cb446f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b01b16b0-93cb-444f-8aff-3d3565effb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1732f1a-b567-4256-9670-2cb305c49d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7b95cb-55bc-4347-a0c3-45bfc1c91fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9477cd8-b7da-4130-a267-e665547a3a0e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21edd34e-54c0-4aa4-b66c-207b89a1eb9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b6d7f5-8de2-46c1-9f85-e11ffc53411f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c3fec-f07c-41a9-8edc-f7b05c3d748f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0851767c-9c9a-4c52-b476-6aa0d1911017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f4562d-f9eb-4135-99d9-775b471a48eb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38efe7b6-041c-4507-972c-17cc3ee08cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4a923f-2b6b-400c-bd1c-f4f82d48796a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e422f-4d63-4de5-bb47-8c866999069b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bf4cfd-f4e2-4135-b17d-f08483514fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c77784-0831-40d8-bf31-d7e7c5fe1034",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ab19c4-aa97-41e8-8e98-23cab938c305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80be2ac1-7cbb-4d43-b698-716c0316fc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72f4435-6eac-4207-8f57-1626f7394437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc02015-c166-4cce-af52-2d461241cd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f033b2-dc1b-49da-83f2-253943bc498c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8ac074-2aa7-49c3-a469-4ff653c34aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06ad28b-2240-4a12-b9d3-1de4bb8aa94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27ca6d1-5e2b-4234-8423-f9e70ca1a436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92cd585-729b-4849-a9ba-a301b485c826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf64b869-a02f-4cad-8c7d-16bae6324de6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366b0ef1-15df-4ed2-8df5-2c497865bb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928b8f26-0317-4e69-a9c3-0d5aef4cbf6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbaf565-c49d-42e2-94fc-f457f7bb15a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f99d90-2fb5-4d9b-a34d-49497c6d5b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41f3982-7c48-48b5-921c-5d5afdf60a5b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b182d8e-5f2b-4017-a637-2ab8171ece2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114d5db4-5984-4a7d-bb14-6329f7f33404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cc7828-836e-485e-a953-50eb8e1b48f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be29e19-fafd-4473-ae1c-b22939e48b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b302650a-dbff-40cc-80a4-d22dc1a1ed59",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18496c5-4b6f-4c1c-ab0e-12746fc76ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52eb6194-a66e-4da9-b635-0d9e3b8a3b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127ce6f3-9545-49a7-b06e-54ad750948fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af7ce64-8e5b-48b9-9e1c-770a304fe0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8329913-b87a-404f-8a7c-ac45b846320d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1351d2d-1014-48ca-95b3-3b91c020f5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3ec132-3ebf-4046-802c-9c977c52a1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a515bb-5406-4866-bf4b-e72a3276a3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74060a6d-bed8-4b48-863a-553df4e91cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9edb3bb-aff5-49e7-93e2-043cb2610bac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435e6b7d-0c51-44b4-b3d1-bbc1f881dc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9a9a6e-0bf9-47e7-828e-1a05a96fc79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c780a8df-9e8c-4910-82d5-f3b33e064c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94704ea-b955-4911-8c95-2a165d1e2c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40797bc2-9a48-4d2e-b749-fdac06ade971",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ad1b2f-5a7a-4a2c-8566-9bbc9e910002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "623e5bc7-96c9-4d7a-bd7f-6d845430a4fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10de5b62-5342-45e9-99a1-9c039883d029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d001e27a-176b-4e0b-a128-c461ed38b49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419e2349-fe1e-47b8-93b7-6faadd052e99",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818a99e2-da07-4611-ae30-5222c176422e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba70c6f-04f2-48ab-9dc6-27c1a55c8501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317e3a41-0983-450a-898d-6a5618d51ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508d3b08-b08a-4b0a-9955-8865e56dbadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129a1904-be0e-466c-968e-79f2a758fde8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922a2c27-bea4-4991-9b10-47d63b7062a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2118a8-2f34-495b-8b95-d9e37de1df80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ba6bc-8987-4e5b-b4e9-3226b4c2592a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f623f5a-a278-4885-838a-fa81ac663b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de1412e-209d-4c50-8032-1ce19c6c238f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7735f8f0-d738-4379-a974-dfff465efc20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddfe1316-1ab0-43be-9812-e8b7a247132e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4137c1c4-615d-47c5-aacf-840a0172083d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0df4ea-9ee3-4c68-b61b-e56f7e7b5495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07d13ff-e7fb-4428-bf0d-c237eae74072",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0916e-f12c-49e1-93b3-5f472df9b85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8e3732-7847-427f-8e67-61f5e98831d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ea648b-083d-44cb-910e-98f8a8d40c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1507e4ef-c064-4fe9-bafb-6005e8909e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12798f5b-cb3f-4365-8225-6c84612a67d0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadbe05d-4cd8-4ca5-923e-b14953b47b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecb4e59-d34c-4857-af36-95b00653251d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703231c9-b7c2-419d-8277-22763fa8cd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a010c0-4c77-4496-912c-076a24a85a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b054ff2-3509-434a-8dbd-4e77ad6b1e1d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b8db47-f666-4a40-a290-78e8816ab778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872581a4-7b4e-43eb-bb4a-25c83402f38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a615ae7-5f02-4df6-bb3d-31897ec819ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7a2af4-da27-40a9-8e6c-bc97f300d0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f20301b-1f92-4063-9c36-3c23f8f56651",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edaff5d-172b-4a1a-bbb3-07153e779727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f745f4-5ac0-4c78-8960-5dd1cc2a9d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4a1f5c-4bb4-49d8-b49b-21e885fb82cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36723a1-ec39-41fe-a82a-5594d85d756e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bc314f-b3ca-431a-b5c3-4b19903fb325",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e514f3d-77cd-4d3a-bd1c-acc0808781d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8d1b27-e957-4aa7-8026-d3da1926201f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f94113-701d-4be1-b3b7-67dca4ff49a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0572f365-fcda-4d38-8a81-c054798afe5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650d574e-4582-4ece-9662-dbd97475e634",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952de059-aa07-4794-85a8-344440c8c5b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06222187-1bd9-4a6f-8120-223bf264a8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26148f09-dfb8-4a35-9745-c40165ce4e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ea6f48-15e1-48d7-b5ea-2466440ec75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdbd2a3-f125-4631-be9c-9e440c45723e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc45f74-54d3-4abd-bfea-baf4479cb1e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698b569a-ab77-40ae-b265-7be8c39174dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15f2367-4c01-429d-b267-f48d0e1db70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44001f5-239c-4210-a8bf-f0e3c7dd5ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae607010-492f-4381-bcf5-f820ef00a190",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347219d6-c065-4d5a-b974-6ada4f3d7ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37492710-f4f4-4850-9c6b-0e2971e133fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff608b2-39d9-4c1a-95ab-7012758317a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62137685-3d72-4ff1-a029-a38806e42a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d05b341-1f90-4835-ab8c-23f2cbea16f9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d19e978-120e-461a-b8b7-ae13ce253156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1995a50-6036-426f-9de9-327ce568e0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6039d2cd-404a-4eb0-bfd1-b21ce39b2118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5e5002-1c58-43cb-929f-9355fa2ca734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d32bb3-ab18-4a2c-911c-ed774585ae84",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb601442-a622-46a3-927a-07b377dbce7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ecbbde-605d-49fb-b30f-4c55b9d9332b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03096e3-301f-4397-8060-e0680466d454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0317feae-057e-451d-9e71-be42115899db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477bf563-414f-43be-85ce-8f2a4555a872",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e900225a-5170-4641-aac8-a04670c7dd5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cea85d6-00db-4799-acd6-ce47c207b9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b727f4-ece9-41e5-affa-2cd045ce7910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c833ea60-aff8-46aa-85ac-8d21bd6b2cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e99dbb-aca8-4227-8bd7-2f47be21151e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a7ec8e-8efc-4a88-805b-d64a0a2d5050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c49dd0a-76b1-4735-b758-1a267ef596e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff5283a-ddd8-4ce8-b287-fc07fe976f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f726f4-f025-431b-b56f-b3d32cb9f987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89a86c5-7f29-4f68-8f4c-815a780cf55b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6887952a-fe08-4850-aafb-b130dbd7cabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df92ab8f-9920-4ff5-8da0-003847a9ad3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34296b19-c48a-4ca4-b86e-d9049333116c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6bd356-6d15-4df3-ba12-916179f58ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74c1383-5a47-49d0-bbe2-c109606c9d2b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81b6856-cc86-4e9a-b57d-8555d00993d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6052613a-d21d-45d0-95e0-1a914da17359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f06d746-5f9a-401f-b295-c75108b404a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8477fa6d-645a-403c-a3ca-37903998ad7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6505a7-0263-4dfd-8e59-eef1f88710f4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09125673-765d-4c44-94a7-1b6c18760331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63b909a-e3b7-4122-a6d6-7a8dd96a6927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9059712-6192-483f-979b-1e570ca29ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5ed5c7-f8dd-4513-9e58-0530722e9856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5f9720-c50d-4e84-90b5-693fdb722b9f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd5a4d0-6c0f-4e90-97bd-d04185f1f994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208b8027-bd8c-4b22-bd4c-6f4f8826f591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889e27a9-a558-482a-8c03-e5c232097ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad578b5-d93a-4c13-804a-2da29e0f5a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d548f19e-b3f8-4a43-b350-26d0a2881652",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2260b1-6c6f-4769-932d-22715bb15f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1634ced9-634c-475c-96cc-5e7bebf1a2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d8c8ca-3935-434b-a9cf-46428bf3825e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8109fbf4-bf40-42a9-a1b5-511dcd61c5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93f336e-5c1d-4ce3-904b-95563e881baf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e97c82-0055-41e3-8147-4cb3e452fffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96f75d8-36f7-4421-84b9-6e8dc6689c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2724c7-f234-40a6-81e5-190bfa1222de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bd5ce0-cca5-4952-a55d-31df148ebf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4d7718-80ee-4dc7-b480-89f9a9ab4a43",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c4e818-1a96-4f17-9176-f25eba94a202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65738e85-93b0-44ae-aa35-ca55a7622faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58117b7f-2acf-459f-b3a6-554789b330f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1139c011-5383-42e7-b7bf-075095486127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc576fb2-e619-44d8-b82e-7a1d01fc3f73",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2547e3-c8f4-4dfb-97ca-e819d5223240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009c50fe-d91b-481f-b826-4c9c076e79b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8877611-c3cc-4735-b9f0-be13624bdf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebb45ba-8b03-4abc-a7df-0a3c1dd7ecee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c18bbe-a008-4b9a-aff3-e1ce896b8a31",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a563e80b-00f3-41f6-87f9-c432381c5304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311d8dce-6d63-46b5-9bf4-3e8b992b66fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82a651d-a0ab-4f34-9b59-b3a5a30ed2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6f9d44-65b8-4071-9d5f-1121e7bf47df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f57c10-6523-449c-8d8d-20e82a67c3e5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f2d632-4f25-44a9-bf1d-f9e70d648cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1401a7-5ab5-4ef8-93a7-d37a2f063e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d6f3d3-99cd-471d-9259-f0274725520c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073481fa-a2c9-4c89-a8c3-78885c63574f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd5af70-0d52-48a9-9f5c-c78053f33f3a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013fdbaf-1696-499c-b58d-1f6023d7473c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8230d154-59d4-493d-8312-b6a60585a034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2ed9c3-4ed0-42f6-8e08-c9f0b6035c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98624c0-4e66-4882-9f03-3c70b17c3da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f3ed66-b7d8-4cae-9e29-b99d1fe809d9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97866e82-0a19-476a-816b-66b4019e9205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20faf1f-3d7d-450f-aa1e-175f35b753c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daa7ab3-9002-4bec-8302-0a902d48ec20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7823954e-6211-48fd-96b5-a4c3f4ab7e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b31f68-cbd8-459b-9f6f-6221303a96f1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d4433e-b8c1-4283-8c83-f1bbc4b7ce6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77934e41-be35-4457-86d3-19be9893fcc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7b6c01-ce62-41de-86e8-82b9b50aaf5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36d97a5-e458-4345-889f-4d04197c50f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4c51f4-b95a-450a-b5ea-58ef0a9183b6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c27172-1a6b-4ddb-ad95-a6d19b317522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f87474-cfef-43a6-87d1-3bdf445b2a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65efa39f-f8bf-475a-8874-1febb4be480c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81575b9-ba25-48e6-a842-c7524006ab0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ea545-055c-4464-8efe-4a4c5b75ec1f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3d4472-44bb-4a5e-8895-667f2debbffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44162a4a-2c36-4b41-84d4-46d3b6b2c7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a44918-0211-4163-8224-d99bf95e3d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9dd512-f6b0-48c5-bbc2-244ca8ce67b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835f48d1-ff3b-407a-80a9-230b3b7bd8be",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e144a2c4-c28c-4909-82dd-a5d792d8711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de9f477-8076-47ea-ad3e-b389fb2725e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e92cb77-3bf1-4021-ba0e-f9ea63ea433e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c765070-6cc6-428e-a92d-da2763050138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1834be6f-d36c-40fd-a1aa-9bb912ea5bae",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00657997-1875-4359-a945-618ba90a6857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a91add-1ae4-4a98-878f-61a1964447f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55ef458-5366-486f-97cb-528442303ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f43d9c-98cc-4dab-9108-b63227cd0826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f86053e-863d-49b7-8195-cab152128b62",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caac12a-c656-466e-bdd8-55d4e2e860ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447dad03-011e-4f68-9856-10deded2aa1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824e4f59-a93d-441e-ade9-1856d0530fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa7226d-c052-4066-900d-dc6c9477cc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a259c7b6-9359-40c7-aa0b-553aa2f60b26",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d62613a-8ab8-43bb-ae14-9e61a48d110d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37e8981-6a07-4b21-97dd-b8a5f0ecd99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc894e4-9734-4964-8cb5-2a17f2ab24b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0c755d-da83-4c9c-bf70-3585721c2439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd68649-e7cc-4650-a504-b27935488010",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483c18b2-5e2d-4199-b321-8f3d8ac16d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fd8f07-5455-4177-8d2d-552d61c97c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8797de-8cce-4f1b-a12f-98290f19ccff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900a32c4-579e-4ec0-906a-017ff086fd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acec285-bff7-4e08-bb7f-d9cfed5964c9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da99e760-0cab-49e3-9ddf-2bc277dc2419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bd29c6-3118-446b-b1fc-9b12a827f7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa04821-9681-4efe-a905-9a807e475e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5978cc3c-a267-491d-b491-4eb24d527e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb4a556-aec6-46bd-af93-d645f1c48e52",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833efe9c-7e22-4cfa-98d6-3ca68e64a2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36abfbb0-a779-4cd5-9189-8d5cf41fbce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666926f2-0257-477f-9c3e-5bf21ea19cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca97c8d-6be3-4251-99fa-6e272cc2e71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9615f1c4-b57a-4cc8-8fc3-d15f87c7214c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387be08a-4e43-4b56-bc16-2ef5c1887c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a34bc2-874f-4546-958d-641e4a81f46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c3a35e-ffd2-4b8a-bb7d-d1a0c3740117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bd8e15-dc4a-42ca-86fa-524332fb2765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dca22c8-a723-4abc-9885-989983eb6579",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57be260a-3e85-47de-b72f-e1fcf347c085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c3c83b-60a9-49e0-b8a4-16387f3069b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efb6132-9d44-44a6-822e-578d6f5d2a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c023c506-3c68-447e-ba6b-c5bd64c23fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a023c3a1-8cf2-4fd4-b43d-4655670d66ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebab691e-a85c-40b8-a5ee-9c2b5f017ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a55b989-0577-42d6-9fde-09df3b74210b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353187f-cddb-41dc-a3de-8fad0b3bcd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493fa200-15e5-4c78-99b5-676895f97799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7f27ab-d605-42ed-81a6-f785c3082462",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf96a6d-b11c-4ee0-94ff-14570b1da41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33537c52-9bb2-42a2-b762-980ad898f5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd6e6c4-022c-4687-9f9a-f44b9167e7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28b60ee-02d6-4dd2-be01-5bdefa893961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9250a17e-5831-4d76-8dc9-8f14bdc320dd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fb494c-1f47-48bb-8c6a-2bf663633f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ed84f0-c91a-4aac-aae9-222bc698a399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafe397f-2740-473f-aba3-f7e1929ec329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd9438e-47b0-44e8-874d-5af140a91212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20753b-4f05-4cae-b4f1-bc2726fae233",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1c5b1e-39f1-4625-92a4-ad5cc9277397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564da477-ee38-4e47-9be1-64b6beae9e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2363ca43-be52-4714-967e-f597658cfc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da14bff4-5106-4874-be97-f56b6671740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f4196f-5463-4399-b293-23c6853b141d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5dccd6-8cba-4908-8ec9-6421e750e2e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da0160f9-cd31-4ea2-b540-64d8ade071c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3c80bd-00c0-48f9-b075-054a6b0f0174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5628687-c473-4ca2-9e94-2bfe0ff4b7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3d71ef-1082-4dd2-b58d-9d4dfee6f2a7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4458c3bc-bccf-4bd0-b519-d52e84ab09b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838bfa1e-eb84-4a00-bffe-9a7e34eb1613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2c485d-a2e0-41d4-a263-8c5b6a149694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da9b4cb-dde7-4b27-b2cc-124f54a5b985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611990a-4b4f-40f5-ad10-76f60158186d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debed960-cc8e-4f2e-ab76-4f131964c751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f483d5c-0a97-4a04-857c-84d398601125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10aad763-0fad-4fc8-a627-a2e807b17b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673002c5-073a-4817-8347-bd2c6275ad0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ceac9f-b434-4617-a27b-5ae458b71add",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f351480-1ab9-4e71-91bd-102126430bc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c157b8b-0091-4afa-b5ee-af5b7ec1272f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc8b59b-25ec-4778-813b-a9970a13171a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae745e68-10f2-4784-841d-df62a4d1102d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39547f77-ef18-41c3-8f14-21f8603913fc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bfed1e-fb3b-4e10-be88-c7be627bfc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "679d3f1c-0310-46e2-bede-9b7006a51862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e204dc1f-0242-44f1-86eb-67a1951e25d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb49e02-4f2e-4bbf-8658-88cfd16e9197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81d3207-3b89-44d1-8550-e2301a18ffc2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d842a78-755a-421f-a42d-bfdbcb562378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aade562-9dff-4ebd-ad64-3065801ed0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702c541a-e8f1-47d7-84c8-28a68865bff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b57fac-1869-43ec-be1c-f91356b7bcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a513f27a-377f-40c9-a6f0-aa4c92a7208c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0419654d-90d4-4b95-baab-56430b79812b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae86cc4d-1a01-468d-819d-db3faa8b4953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b245c865-52e0-4ee5-b394-a8468f290527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0029fd1b-af8a-469c-a611-20c9d6667963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02b861e-c700-481a-a487-d7ea4466d604",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923669d0-21bd-42bd-91d6-730ca28d6d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa74675-57e1-4c05-ab12-4107bd7ac21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4a2bf5-bce3-4a78-bac4-7ba17332ee69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e800e7f6-893f-4ac4-9102-240a125ca703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e421992-8aca-4d8a-b6a0-212683226c6f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab911b37-3461-43be-8c02-94c1aebe39d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "592fb8d3-bfbf-4ba7-939a-7194d8f82b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70accf7-8e03-40f8-8b41-3fa73c36b31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a13a9c3-c922-4c98-ac68-ab827b092595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c759c7-449e-46d6-8325-0b741a80b7b0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bb5d32-a06e-4c2b-b9ca-13dc03323da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a424636-19fd-457d-a762-31c55b725417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20659fe8-1c3b-40e9-819f-826cc15b1002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59e1ccc-81f6-40d9-9322-9f68641dfb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0cf671-a6b5-4635-bec6-e30da0e09a02",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643d9c7e-a641-4d2d-9cbb-2a3cea095ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff08e3a-90d1-4054-ab91-a7a3803bf0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce79b9a0-cadb-472e-bfa5-8b2dd974716a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c0538f-e659-4499-b55e-21558f02fa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e560a0-11b0-4fad-8cdf-37fa83280e57",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c423135e-5175-4209-829e-d30178cf4257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d366f15-4835-4c18-bf75-43fb4eed8cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1800b75d-0aaf-4b27-8417-1317711245f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5aae12-9da7-416a-a3c0-a0b06ab629a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a297199-5c52-4bb7-be01-1172d6d64f1c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761aa6c8-e29a-4f6f-b61b-9a96dc998572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163d9725-3d59-41bb-bf8d-1bcc16a57f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47a6a8a-869d-47bb-aae0-522211576753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5725c626-f79a-4135-b846-cdfeedf1d0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc4f263-1a35-471b-8051-db4abac53856",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afde4c4-63b5-41cc-8008-b4bd655b805e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dfd6263-6bb6-45a7-9b51-4d491cada59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafe8ed1-7be3-4866-a29c-44bc5b773215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edfde78-9f01-4ffd-bb27-50008a2528c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab95f3c-0c34-4268-9783-09ec7417bdaa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66328a7-0b64-41d6-8f88-b4f285a9d3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e968238-36a8-49f3-8ef1-744a8832232c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1b7f05-bd65-4918-856b-ebb796fc1f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01584659-d7c8-43c6-95dd-e801cb03bbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3794684f-b374-4c15-ab0c-7b3d9942b1b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bc97d3-0f92-43ce-969f-b189f3764644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64197282-4302-49df-829f-a657c579f927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0cecb7-9a42-4438-8352-ec5a651b7e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712e6997-2dac-451e-a744-69bafa784d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd1be9f-efd4-45ec-88ce-184522b3f2f3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3c646d-b847-441c-9c21-a782f9070244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db2e163-45a4-45cb-9b5e-4629ec6a9b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12da4b4a-2eba-4eff-8e82-56c1738af6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655dae81-329d-45d4-b74a-491c4f1bd9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72e6f8b-21fd-41c0-925d-87454d38e268",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7ce3b0-42ca-488a-989a-35d7d6705d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4e0d9f-d00e-444b-8e32-615037470658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632bb029-4e4e-4d33-9569-5890a44d410c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26c8ce2-750b-44e0-8092-a9cf6fde5301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b14f44-2675-48da-b459-2d83845703ce",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6872058-83a5-4e35-89ac-ea9e9ece68d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eddf448-cd37-4be4-a8a2-1406cb31788a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e58e46-5ef8-4ee8-9766-54e825986e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7887dabb-6624-4c38-b30e-89418ae79be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec6efe8-8726-4616-bc2c-4de9fc64a6a2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed58801a-a973-4561-b798-93cb0028c274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0aa0cd-614f-4c01-82d5-25f49515a057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad745f6f-a9e6-4bf1-b57f-9bed94412980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14d3757-ce1f-477e-8bad-1518ce2cfdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac99695-9fa6-4f4c-906f-9d87563eb6f2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2032632-e8b2-4c34-b5b1-467bb514ba8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79099e56-7805-49dd-80b4-c6cf7f136c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9197b281-884a-4f5b-8913-7ec30cfe5659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ade740-3643-4451-b2ee-5733ab7fa47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2869695-fc25-4263-89dd-bdeefcf82705",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c72d61-53bb-48c7-8a5c-3d324586af3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62dd4506-0337-417b-bcb5-c576eb57260b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82a0beb-3cc2-4427-a59a-4365b5cc78dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a043b1a-c7aa-497a-a85f-598869c0e238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef06519f-fcaf-4765-a9e3-14b48079180b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e6b70b-2af8-43a9-a0da-299388981adb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9449eba7-59ae-4e94-9a95-74f9ccf6ea16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020af698-51ea-4a2b-9c7e-c0212e21b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f24939-a906-450b-abfc-9ba426b811dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a998a2ae-97d5-474d-9105-e54dac0a307b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86254f3e-d84c-4ed6-befa-7fd460e68e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ea8503-ba42-4f9d-854f-d554b126bcd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75432144-234f-4d6b-9aa2-d8d9cd9797f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca54dcb-85e2-4850-b96d-a276ff503f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a6bcff-e3cd-4a25-98a2-02110e436a2b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dc32ef-84ef-450a-a020-33bf33bbe902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce82381-fe08-4ef9-8adb-507cde8447ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb03380-11d6-442c-923c-48c5b0e0687c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c525a3-be4d-4ce1-aacf-f5cd2893a639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439ee91f-8570-433c-9532-43023069e82c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c97fd4-ad4f-4670-996a-53d972dc66ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b6b9eb-0a99-47fe-9d98-127bf07c7ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7129d2a-cb7c-4882-aba8-46138ed7b5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3097e8bb-516b-46b1-b66a-87e20c1d9c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919ae207-d57d-4435-94fa-9dd009f73a8b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6ca3f8-1acc-4e3d-ab1a-e99a5dd8feda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d552680c-c413-4f27-9512-fa3f10914785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8eaf0a-8a35-478b-b218-d33a7bb3f2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94abd315-7b98-48ee-80ff-47a98da2e92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a0e8cf-1d30-4170-8b0b-9e768b9019e2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89349176-deea-4d84-83e5-f7cb4b246be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbda5b24-d500-4894-90d1-88ef81e7e86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1e8e0b-0844-4c9c-b420-7013aad20a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9276acfb-2e17-4a2e-a708-200353792f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb4a33-3291-4d60-ad7b-e52fbc9e803d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e950cefb-0270-4728-94b1-a99c09726ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9fbb97-eeea-4e98-a82c-7a51495811bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbeaf3e-7923-48ea-a47b-153a9e596519",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501b5e5b-92cd-43e9-8acb-c49d6f9836a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a60592-5457-49ef-9a28-5052fdb641de",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cebadb8-d19c-473c-8200-e55ceb046e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "462d494d-b5cc-4ddd-a811-a1775fd23a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e72e11-11cd-420a-92f8-d9d514b6e026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8dd7791-f559-4bc7-a0f4-aec1e69f1132"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae58e3e4-60c0-4163-9c19-225fa6c10be8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e858568-f37a-444f-b7d7-a2209857af9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8f85f89-568a-4dd6-abec-1b4db556540b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf80e645-57db-4952-9785-f0a3571211ba"
                    }
                  }
                ]
              },
              {
                "id": "3f638e4c-958a-4e66-b235-780dc4ab7e19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42ba5c5f-3ab9-4ed9-bcd1-be905c06a3ef",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58751067-879c-4bec-9d45-3b865af9fee9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7177245f-b46f-4a20-9b08-8e0ca7ca6c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c54ecab-4d0e-4de6-a054-29fba2719c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bc00ab4-b0f2-4bd7-b7d4-b110ecbcfbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06721286-4f2d-4fab-9efd-815cea9363e5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4356c2fd-df67-48a3-b87c-b0c0dca947da",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a78c283-634a-415d-979a-a30700bf7060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c56153-094e-43ae-b3c9-e3ddb384c5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7393773-6ae5-46dc-8628-a639193d88a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da080990-2017-4b07-b36f-27184c6c2661",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d35b7a17-15fa-4a59-a338-afe93a9a03f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3283673-65f4-431d-aac9-3b9fbf0056be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18eb7acc-b425-4a07-915f-f474f00d2c87"
                    }
                  }
                ]
              },
              {
                "id": "918bdc49-1072-47f0-82d0-397a8ee3fe45",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4d140685-f558-4310-8e05-67cc45150fa1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e42c9a0-fb36-44ab-a667-642089ed38e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f59c6bca-078f-4226-9388-17ba467465f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b27a17-92e8-47ca-990a-f94876a19435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009a0177-391c-41e7-ade8-811fd18fde70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "582af7fc-11ee-4fdd-bae4-957a7823d63e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c1b80b0-5a53-49a9-bc11-17f8da1ce9a3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dacedf3-c6e3-43e4-b8cd-499e46b0e703",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cdf65f53-8bb5-4097-8ef2-c2925f5066ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d5945c0-b09a-49a5-98f0-292a2b2cc55a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e701ca7-9e31-4951-8caa-775100913a6a"
                    }
                  }
                ]
              },
              {
                "id": "12e8ba4f-2f8c-4e54-89fa-1be4fbd79ff7",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d65710-5558-4a16-af6d-3e395961fe29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "84bc31c1-02e7-42c2-804b-2fb30f1c58d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4547a0d-7a29-4c3a-b547-fc91ee5374dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c760d4d1-bb6e-4d2b-9ef1-25ce514776f6"
                    }
                  }
                ]
              },
              {
                "id": "f0687ba7-3498-4ba5-a0d5-012077e2ff24",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dd37c3c-3711-4811-b29d-14be7a6e289c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c109e7bc-f136-446e-bc7d-cfb41857077e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef4ee49-c86f-4398-99fd-ecc9b964ea39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "502c92d7-cf50-41f7-950a-deb246067234"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe36d17a-72ec-4e33-abd2-34f8651f6f25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bbb917a9-8e5a-4697-9d8e-08badc8f5a7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c02fc77b-2ad3-4961-b728-1626fbb00382",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31237cf3-257c-46ff-bf51-3b93996306fa"
            }
          }
        ]
      },
      {
        "id": "314496f3-10f6-4cde-b363-b000101b6c6a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "09a40fdb-a5eb-467c-8172-8bb247479820",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f50c69cc-a9b9-4231-bf38-e7c45c6104c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9705614-d4bf-4fff-962f-cd2bd5b06e79",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b268956f-31ab-438a-8bb3-d6e15dc27e1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ed27aa67-76aa-4bc7-99a8-47622977ff58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6451444-0785-4a26-9eeb-1087d76b0f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90e6d1ee-0f0e-43f2-81b1-356788572eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8791ca1d-5b06-4092-8382-8097cde50c57",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cced137-15fc-4664-814f-1b2fe2e9c21a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f157fe71-3d7c-4229-8d3d-a5b9e69a0844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f654039-80f7-4590-9aca-c06103f7fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "656ba6ab-512b-498a-b37c-e127bac4b24e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa27b586-d0f1-4b82-b22a-9f6b116c767e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26713aee-3caa-443d-8688-506fdcec8d67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f621aa26-0476-4b98-93c5-aa87ca936c1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3790879-b5c9-4ad1-af34-2a15d3f0bf46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e05ed130-f696-4091-9f4b-8fc913e467c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "363a52fa-f967-44ec-975e-41443c8b148e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ef5c926-630f-4a89-abc4-594ebfb407c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a09847c3-2d4b-4bbb-93d3-a25203e3e548"
            }
          }
        ]
      },
      {
        "id": "ec54106d-3e3b-4d19-9020-f8f7f1140920",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8cca0b39-4797-4600-b1fd-831e1839a8de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6bb3765-4347-4e96-8f82-d29b07858750",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acc85e52-9555-4324-aa5d-fc204863a5c4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e6db25-1a45-4c93-a770-74bf5a1ccd14",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "373afd2a-207a-4e48-a6fd-b117157cbb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b81ed66-d64a-461d-9f3e-cea41e36287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33ad29e2-9a40-4f8d-a9eb-c113d5b400ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3429b8dd-9fc8-4d71-bc49-ce1b9af0c4a8",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2e0ac0-e2a6-4e3b-b896-4adf16ec1dba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "620d24b7-6903-4653-b581-b898415a4d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14ab4bd-2a8e-4ac2-9727-13be848d0fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a2bf2db-b31b-443e-98cb-8dc7840335a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33b37649-f74d-41d6-8ef3-93ed16b5bb67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef63918d-702d-4c3a-b201-e3e8ad0171b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8086fcf5-a7de-4808-aa27-401be426e22d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89623752-3820-49b9-9aae-96cbda211951"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8295be36-91bb-476a-a18e-c0bae82f0f28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cfe745ac-0f60-4a62-b941-8725e74894a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f022f710-d8bd-4334-9c22-e10e2e49e842",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "558cea5b-c77e-40b1-a404-32ee433885bf"
            }
          }
        ]
      },
      {
        "id": "5e861f82-f7d0-47b9-b027-6dc8a5391b4b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e03c9919-6870-413a-8f26-ed0736ff0298",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d822aaa-08be-48df-823a-7b9036f808d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8eb27ab9-4836-4bb6-8af2-1ebe84d27d5b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40a2dfa-69a8-41e1-84e5-74737164e243",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "afb61a46-b7a5-42f1-88fe-2cc3c2179e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b0a664-0075-41fb-8ed5-a8cd5335ca1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "911db46d-4a93-4f30-a3e3-db0fb8568bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdad3c3-fa1a-4092-9a73-77e4a60958f0",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d0d0e8-845d-41d9-9188-16ff0ac83452",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7d023dac-ee7f-4162-83bd-a3df6ea3094a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e1c7a3-d4c6-4835-8a21-62ff9567b6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f205cb0-a137-4a22-b160-1fbb7d72ace7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7862cba4-13fc-4d1a-a03b-c0418b31f362",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d7d3f89-8625-4b15-8b9f-7010269430ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1600256-a2e8-4f8f-8654-efac54639f92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13df6943-d3e6-4c15-b7fd-2a19041d6455"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e09266b4-191d-46b8-9ca6-d28b7c1e9ac2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bbb0ea28-e168-4b19-80ae-fbd4d8e76807"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2307f268-2705-4806-945a-a2f37118b9a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "461768fa-861d-4ec9-8e99-dd4bfade9d5d"
            }
          }
        ]
      },
      {
        "id": "bcc3cc77-cb96-498a-8a3f-6a132188bed9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2039923-e646-4e7e-8298-21378ad06961",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dbe92c2-6d76-44de-a61a-1a0066d71142",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "31e76d6d-8020-4813-a3f9-ca9731fa85e6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5d41840-b386-458a-b00e-533e7aeef2e0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f88335dc-5692-4c83-b3de-fb1644945bc6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 498.37547892720335,
      "responseMin": 19,
      "responseMax": 2919,
      "responseSd": 376.3114244005213,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669423041584,
      "completed": 1669423182785
    },
    "executions": [
      {
        "id": "9e6a9fff-c8cd-47f4-bd28-151af7abe56b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "64b7d847-a971-4904-bd5a-3ecbdcb11486",
          "httpRequestId": "d984b83a-a79b-4980-b384-c8acd73572a6"
        },
        "item": {
          "id": "9e6a9fff-c8cd-47f4-bd28-151af7abe56b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5c921d04-0cc8-40b3-84e6-c5cbf8c5c2da",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 0
        }
      },
      {
        "id": "ba0276a7-9a7f-43c1-8f25-021ae50c48bc",
        "cursor": {
          "ref": "0f938ddf-310f-44c1-91b3-02ea2d57dbf1",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4439c555-80f0-45cf-9b1c-07646d90ea7d"
        },
        "item": {
          "id": "ba0276a7-9a7f-43c1-8f25-021ae50c48bc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6989f98a-df87-4ce0-98f9-69a787cd4f5c",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "a3166105-c40f-4915-b071-102d87b07984",
        "cursor": {
          "ref": "6bb825cd-e912-496f-8f6e-cad114cbd13a",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "edf89e90-f00b-41ca-9b97-331cc1db6a3c"
        },
        "item": {
          "id": "a3166105-c40f-4915-b071-102d87b07984",
          "name": "did_json"
        },
        "response": {
          "id": "4be70698-7602-4ca3-88d0-3c7b872d61db",
          "status": "OK",
          "code": 200,
          "responseTime": 789,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629175c8-545b-470c-97a2-a998ea9f34e3",
        "cursor": {
          "ref": "0ee8d96a-54bd-4752-b03b-e5709f7e0fd0",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "508a5922-fa5f-4779-8e7e-bd255c76244a"
        },
        "item": {
          "id": "629175c8-545b-470c-97a2-a998ea9f34e3",
          "name": "did:invalid"
        },
        "response": {
          "id": "9702a86f-b3af-4549-9e71-b0ae06f1084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629175c8-545b-470c-97a2-a998ea9f34e3",
        "cursor": {
          "ref": "0ee8d96a-54bd-4752-b03b-e5709f7e0fd0",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "508a5922-fa5f-4779-8e7e-bd255c76244a"
        },
        "item": {
          "id": "629175c8-545b-470c-97a2-a998ea9f34e3",
          "name": "did:invalid"
        },
        "response": {
          "id": "9702a86f-b3af-4549-9e71-b0ae06f1084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514074ce-1e55-428c-bb53-facc348e8ad6",
        "cursor": {
          "ref": "6367f0bc-d076-4022-9e91-49abdeaaac8f",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bf052bc9-4ea2-4c0a-8a92-f15bb3a74191"
        },
        "item": {
          "id": "514074ce-1e55-428c-bb53-facc348e8ad6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "934426d8-367e-4612-8e8b-b15e4ff7fa20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 729,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22011d55-d059-4f9c-812a-1267769eec29",
        "cursor": {
          "ref": "3342640c-29c3-42e3-ae29-8e3f37a41f38",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "92de66b0-3795-416d-bc67-353064b3b379"
        },
        "item": {
          "id": "22011d55-d059-4f9c-812a-1267769eec29",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "608e80ed-4b22-4e3a-a2cc-329fbb5748d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 507,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320d5f28-c3f3-466f-85a2-d7b88629bcec",
        "cursor": {
          "ref": "209668e2-a4b3-4f55-af7b-72c1acbdad67",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c35490fa-8fab-4021-ac11-e9a8e7df1318"
        },
        "item": {
          "id": "320d5f28-c3f3-466f-85a2-d7b88629bcec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d4fb2a39-de24-4597-a340-ec14c71745a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfbe426-f978-4839-a918-234f6dd1a01d",
        "cursor": {
          "ref": "d0e6a38c-7852-4811-82b3-3a53ece179ad",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3bd1f74e-680e-4877-a619-fdbe240624ec"
        },
        "item": {
          "id": "cdfbe426-f978-4839-a918-234f6dd1a01d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "82b2ec1a-eee1-46bf-95ee-7dbe72c0bbe1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfbe426-f978-4839-a918-234f6dd1a01d",
        "cursor": {
          "ref": "d0e6a38c-7852-4811-82b3-3a53ece179ad",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3bd1f74e-680e-4877-a619-fdbe240624ec"
        },
        "item": {
          "id": "cdfbe426-f978-4839-a918-234f6dd1a01d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "82b2ec1a-eee1-46bf-95ee-7dbe72c0bbe1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2a309d-73dc-4921-add3-f996cf4bea26",
        "cursor": {
          "ref": "2f4ba53f-8c81-4502-b360-eed3150fd301",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "45d46294-8427-4ac1-a742-a0a451f1f822"
        },
        "item": {
          "id": "8b2a309d-73dc-4921-add3-f996cf4bea26",
          "name": "identifiers"
        },
        "response": {
          "id": "ce693aff-d835-4ee9-a511-a86026b469f7",
          "status": "OK",
          "code": 200,
          "responseTime": 788,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc57624-1581-4526-ba34-a1e76157ac9c",
        "cursor": {
          "ref": "3ddcc4dc-6813-4a48-936b-542740477510",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "971b2d65-bc34-484f-a74f-41fd08c2cce4"
        },
        "item": {
          "id": "bcc57624-1581-4526-ba34-a1e76157ac9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57a10b62-eabe-472a-9edb-ad0d8bbc44d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc57624-1581-4526-ba34-a1e76157ac9c",
        "cursor": {
          "ref": "3ddcc4dc-6813-4a48-936b-542740477510",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "971b2d65-bc34-484f-a74f-41fd08c2cce4"
        },
        "item": {
          "id": "bcc57624-1581-4526-ba34-a1e76157ac9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57a10b62-eabe-472a-9edb-ad0d8bbc44d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452c885d-63d4-4752-965a-9b19b07f947f",
        "cursor": {
          "ref": "1d53b357-96b4-4e78-95f4-68e827925f51",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d819695c-927b-4d3a-8155-bced2eb40730"
        },
        "item": {
          "id": "452c885d-63d4-4752-965a-9b19b07f947f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b33b1231-6214-41db-a6d2-d1828c5db30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda565b0-b289-4191-98b3-11a661db5a52",
        "cursor": {
          "ref": "f391067b-1bb5-48a8-a9f0-157267b0eb76",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8503e39c-e8bd-436c-82ee-02883827330e"
        },
        "item": {
          "id": "dda565b0-b289-4191-98b3-11a661db5a52",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "34e96f1a-f740-4b9b-a367-626f77a837f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d4e240-e59c-4fcf-8856-bb11db6d24bd",
        "cursor": {
          "ref": "8943b0ef-258a-4e2a-9743-a6773e5ddb97",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ef4c505b-1c41-4669-b5fa-78059e7b315a"
        },
        "item": {
          "id": "b7d4e240-e59c-4fcf-8856-bb11db6d24bd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5edc593c-7f6b-4b89-a418-7e9bfbf068f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7677a4-7b6f-4658-9a22-30a1862eb740",
        "cursor": {
          "ref": "e66e19c9-97c4-4d3f-b1de-c39e808c2229",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b7c8165c-b41c-4a5b-8cd7-d4b0aaaf64f4"
        },
        "item": {
          "id": "ac7677a4-7b6f-4658-9a22-30a1862eb740",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "51d04127-1608-4d6d-bce4-ee4c2ce9a119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea4278f-2b4c-4608-bb7b-3393c8090f5f",
        "cursor": {
          "ref": "1e03d1d0-945a-40d7-99ed-f2a2b6c48219",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a5247ae5-cdc2-493b-bcf2-3901a38586d9"
        },
        "item": {
          "id": "1ea4278f-2b4c-4608-bb7b-3393c8090f5f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4b1c8e04-7bce-46ab-8861-85d094e74965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3f9a25-5a80-4c7f-a3d4-109130bfaf6b",
        "cursor": {
          "ref": "41692b30-750c-43e1-baa7-03bec65b1f26",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "60450b57-9129-4826-97e7-5fa90711acf7"
        },
        "item": {
          "id": "bb3f9a25-5a80-4c7f-a3d4-109130bfaf6b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9ff02eaf-7835-4397-9818-c8c8a6053451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d915c4-c887-43a9-b901-ee85cd916dfb",
        "cursor": {
          "ref": "9c945957-80f7-4c30-9b84-fc10b8f2ebc1",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6d38633b-204d-4ae3-bc6f-7474dc9d5fea"
        },
        "item": {
          "id": "13d915c4-c887-43a9-b901-ee85cd916dfb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b5518185-d0ef-4e1c-9aa9-1b0bf7897cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c91b9f-0608-49cc-ab60-12ea81a826b7",
        "cursor": {
          "ref": "c39cd839-a72e-4b90-953f-6196d482b758",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "05b68cd9-b98e-42d1-9b09-db032ab207aa"
        },
        "item": {
          "id": "c6c91b9f-0608-49cc-ab60-12ea81a826b7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d59395a9-8bde-4817-9fe0-3cc103ab91d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59986879-d6c3-4ab5-a45c-179e7f5e32c3",
        "cursor": {
          "ref": "bfb22227-d607-444f-b3b5-2be3247922a6",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8e8d7ac5-a236-4fee-aeab-d78368edd46c"
        },
        "item": {
          "id": "59986879-d6c3-4ab5-a45c-179e7f5e32c3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "19e79aec-9432-4ae7-a362-546100dc6a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2420fbc5-e57f-4b07-8574-c47fb90a80a2",
        "cursor": {
          "ref": "b0f3b7ba-d11f-4221-8245-ad77a01df14e",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aeb897cb-4585-46ef-91c8-bc6f20ddb83f"
        },
        "item": {
          "id": "2420fbc5-e57f-4b07-8574-c47fb90a80a2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "29ce9c69-83b6-4281-9dce-c3f580f7c373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b275005-bbe9-455a-8a12-6eaae05427ae",
        "cursor": {
          "ref": "c4bd4318-9850-4f48-b465-4d9fd8974342",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7989266e-41ec-4734-97f7-e7d63a47acc0"
        },
        "item": {
          "id": "6b275005-bbe9-455a-8a12-6eaae05427ae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b4eda095-87a0-468f-99d7-ed065733515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae79b7d-1007-4e30-a3b7-346e8f44ec2f",
        "cursor": {
          "ref": "e9b98daf-4ae9-491c-9a9e-28d15567ffcf",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "98de0315-6a24-489f-9d88-dc47781232b5"
        },
        "item": {
          "id": "9ae79b7d-1007-4e30-a3b7-346e8f44ec2f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "425fda47-f555-4ec8-a80f-db1b9a8ffee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3855418-6c1e-4017-aeae-dc1478e38d54",
        "cursor": {
          "ref": "b3ec60a7-5b8c-4a75-999c-67cbe719ca41",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c8cfab6f-8d68-41f4-88b8-e5e42ddc30bd"
        },
        "item": {
          "id": "b3855418-6c1e-4017-aeae-dc1478e38d54",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0cd1b0ce-ca93-409e-a2a3-1deec4f6b44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368b2317-cafb-4e8e-ac71-be19c63bc2ae",
        "cursor": {
          "ref": "ae6e457e-face-4075-8a46-4d962b1eed68",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "de7b2cae-174b-4daa-a79c-18e997ad8528"
        },
        "item": {
          "id": "368b2317-cafb-4e8e-ac71-be19c63bc2ae",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "53f528a4-b07c-47f2-9cf7-82ab29e53e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a51416-622e-4485-8ed8-ee94bc52b2c3",
        "cursor": {
          "ref": "4cb87975-b49d-472a-b9c3-baf5ab668c19",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d2cc4e6c-f034-4b3f-b16f-84cd38855efa"
        },
        "item": {
          "id": "32a51416-622e-4485-8ed8-ee94bc52b2c3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bb726f92-8fca-42c3-bdf8-d6058898207c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143280bd-c310-4c5d-bed8-58080b539f06",
        "cursor": {
          "ref": "fda0a25a-c866-4bae-ad05-16facd1faa76",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3ffc7999-6232-4eef-b5ef-98e7b3f6e60f"
        },
        "item": {
          "id": "143280bd-c310-4c5d-bed8-58080b539f06",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9be657c0-4934-4230-a808-aaf6764e5016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0cfeb1-1b98-4e52-b3d9-526b61eb705b",
        "cursor": {
          "ref": "facadf9f-d0b1-4e6f-8a0d-5bc0b56ccec0",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7aafe4be-fbd5-4e7f-96ff-38a7414b6599"
        },
        "item": {
          "id": "6d0cfeb1-1b98-4e52-b3d9-526b61eb705b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f0a722e8-9ed5-4d17-b14e-d52a1cb8d4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e668b3c0-6b9c-4f64-af39-f3000fb59c31",
        "cursor": {
          "ref": "9d0bc763-61ac-422f-804a-1d1cc29add34",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ac5617fd-1634-4576-b96a-a29aede25f9c"
        },
        "item": {
          "id": "e668b3c0-6b9c-4f64-af39-f3000fb59c31",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6fd233bf-06a7-47fd-a839-86ace48d96e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7654fe-beaf-402c-a6d8-5d5d875a101d",
        "cursor": {
          "ref": "ee401878-a7cd-410d-b134-6b1bc9b95fcb",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "90d81fa7-6d81-4216-ba08-89110f3f727f"
        },
        "item": {
          "id": "ef7654fe-beaf-402c-a6d8-5d5d875a101d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e74237f6-f106-4585-9202-434ff773e591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edc9871-ed5d-4378-9fc7-088bff22b704",
        "cursor": {
          "ref": "6177ee90-b77c-4323-89a9-8b44fc916fde",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2f7722c4-1b6b-4c11-8387-9dccc819f971"
        },
        "item": {
          "id": "7edc9871-ed5d-4378-9fc7-088bff22b704",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0ff43343-0bb5-483b-bba6-32168f28326a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcf4e69-7334-4872-9f3b-0dbccf254cc5",
        "cursor": {
          "ref": "c69016fa-bce4-4afb-bb62-d74d38b59f6f",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1bca6f27-30f6-45a3-b716-900ec7d5fff3"
        },
        "item": {
          "id": "3fcf4e69-7334-4872-9f3b-0dbccf254cc5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "31536f71-517a-4a9f-8f46-04950520ce4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfeedf5-3139-4bbe-835f-13fa9d4b6d24",
        "cursor": {
          "ref": "15ada73a-1da6-4e2d-a824-8aa7adf75406",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c4a3bd8b-a365-4039-a67c-f04865218d33"
        },
        "item": {
          "id": "1bfeedf5-3139-4bbe-835f-13fa9d4b6d24",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "27d7f7a0-846a-42b8-a4b3-424eba52b612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078b1058-0870-4e53-8bee-e5d62167d65d",
        "cursor": {
          "ref": "bae26c0f-19fd-4241-802b-70460040dc39",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "98ecff56-f8de-42cf-8f8a-ea65b8eb1ebf"
        },
        "item": {
          "id": "078b1058-0870-4e53-8bee-e5d62167d65d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e8e2b271-aa14-49a2-ad7e-24e906bfc7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55049ea-69ec-4f9b-b15a-df6f5583ed2b",
        "cursor": {
          "ref": "b15c1edf-4d17-4cb9-93db-ce33e5e1e9bb",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bf652e5c-04b1-460f-a381-d74d91025356"
        },
        "item": {
          "id": "b55049ea-69ec-4f9b-b15a-df6f5583ed2b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b124c39f-9c94-445c-842b-2da76b0f13b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be378dfe-af7e-49ea-bfad-8bc3f681113e",
        "cursor": {
          "ref": "b0bb02e0-dc18-4541-81d8-a17e0d524621",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2f9140c0-830e-41e9-9acb-dcaf04a827ce"
        },
        "item": {
          "id": "be378dfe-af7e-49ea-bfad-8bc3f681113e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1dd02d4b-9d83-4927-9f04-4ea31cf2a171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7b08ad-4ef2-4dd1-b15e-6017d6d61851",
        "cursor": {
          "ref": "e541f8f6-213a-4f30-b4d9-0fdb475d84b7",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ed9b1774-001d-4bda-9ea1-982fba8945b6"
        },
        "item": {
          "id": "0a7b08ad-4ef2-4dd1-b15e-6017d6d61851",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "094449b0-f91a-467c-a970-4493f4235735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de831f6e-1975-482f-9073-703485146abd",
        "cursor": {
          "ref": "0d4e1d13-8368-4335-9338-c6fc2b2a3239",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "29310952-abf6-4866-aaea-50dfcccecf2f"
        },
        "item": {
          "id": "de831f6e-1975-482f-9073-703485146abd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "acf8266d-083e-4e38-9ca8-6bd8df1c08e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2420b83-5d1a-4256-82c1-2127fbfd68cf",
        "cursor": {
          "ref": "b8e0f456-0baa-46b9-8fa8-dea16ca0d795",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d504164b-ef0e-4a20-a860-f7125ede3bf5"
        },
        "item": {
          "id": "a2420b83-5d1a-4256-82c1-2127fbfd68cf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "391107b7-af70-4486-8a27-a22474affcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a5a5b-026e-4819-81e5-cf636246a1fb",
        "cursor": {
          "ref": "47285c2b-e737-4eea-810f-8cf4f1f0873b",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "26bc4235-4a3d-42fb-a2f3-b5755ffe73ea"
        },
        "item": {
          "id": "733a5a5b-026e-4819-81e5-cf636246a1fb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f23348f4-ef47-4d55-88d7-3bc84b77c2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960226bb-4fde-4bb4-b93c-357e856b1af1",
        "cursor": {
          "ref": "b60ebe53-62d4-47f1-b79c-937ee255abc5",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ca580783-5e42-480f-af88-d834d4d51d55"
        },
        "item": {
          "id": "960226bb-4fde-4bb4-b93c-357e856b1af1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fcd193b0-5eaf-4346-81d7-e65d1d719aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4340f7-241c-40fe-9179-68cf035b3fcc",
        "cursor": {
          "ref": "0d410ba2-7dee-457b-948c-c139ef4fa8ed",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "009b0bf5-e671-4765-9fdf-86061c7fc8f8"
        },
        "item": {
          "id": "fe4340f7-241c-40fe-9179-68cf035b3fcc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dda5356c-f5a3-424f-b588-b5829be45ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202407e8-8346-4145-a190-b606d56e30c8",
        "cursor": {
          "ref": "bc43f57d-7018-4fe3-8dd3-526b5d3df0f6",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d756482a-7188-4fbf-83e2-cab8db2be787"
        },
        "item": {
          "id": "202407e8-8346-4145-a190-b606d56e30c8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e994c948-1f55-48ab-b234-aa1b18678da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0ef6b8-3a97-4575-a513-5d1954585d0e",
        "cursor": {
          "ref": "d4df112c-4c9f-41d8-954c-88815b6c679d",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6a7141d2-3c84-4615-84c8-f5e58b745d7f"
        },
        "item": {
          "id": "ea0ef6b8-3a97-4575-a513-5d1954585d0e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "71c13925-b72e-44f1-b82d-11ccf3c41b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6056429d-0b71-43a5-8ff6-ef167bd0283e",
        "cursor": {
          "ref": "2da147c0-2716-4b4b-942a-6c28eed75347",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2b3a4d4f-c2ff-4e86-9b63-86ff5ebc4a15"
        },
        "item": {
          "id": "6056429d-0b71-43a5-8ff6-ef167bd0283e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "816e9331-3291-44d0-a11c-c4e1756239e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34dfa68-77b6-44f3-a7fc-49fa5c7a22a4",
        "cursor": {
          "ref": "d3aeae46-cfdc-4e9b-9e96-61302944dcfb",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4a24c9db-c734-4f86-9494-c2ae7479caaa"
        },
        "item": {
          "id": "c34dfa68-77b6-44f3-a7fc-49fa5c7a22a4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "940f6862-69fb-406f-8137-f2f3c13c296b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 608,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409c575b-4569-4274-9c81-dd7233401ae1",
        "cursor": {
          "ref": "6340238d-a7a9-4fc5-854d-9e7eaf1562a0",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b48b8bf0-1e63-4bac-a19d-36635f1dd5c1"
        },
        "item": {
          "id": "409c575b-4569-4274-9c81-dd7233401ae1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3b8df56f-e22c-4665-ab50-1181e23bfa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a2c862-fb18-4daf-a64c-559412d30077",
        "cursor": {
          "ref": "a59182e6-f913-4899-ba80-321db3486bf3",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f775bd74-5ac6-462a-9204-aab9038f2dfc"
        },
        "item": {
          "id": "c7a2c862-fb18-4daf-a64c-559412d30077",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "48c5f6b9-23fa-4e51-95d0-2d34fa84cca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89852687-937e-4077-8086-622a6b6c64af",
        "cursor": {
          "ref": "667d6b90-0a47-4f5f-99fa-4f2c6e2cac72",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e2056345-3c23-4477-8d0c-3627c6366144"
        },
        "item": {
          "id": "89852687-937e-4077-8086-622a6b6c64af",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b8aaa97e-1cc3-41dc-bf0d-cc1718ca0849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62e46be-8274-465d-9fdd-4305f03ee624",
        "cursor": {
          "ref": "7a8776a1-0bb5-44e4-8d6a-2ae1c2557e83",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0f57b8d7-c59b-4904-b6ed-4542b45627d5"
        },
        "item": {
          "id": "f62e46be-8274-465d-9fdd-4305f03ee624",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6ebcf07b-5898-46be-b5d4-8c13723ff20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ab4cb3-f294-474d-a36b-5c1cb9ffa3c2",
        "cursor": {
          "ref": "fca7991e-d6c2-4013-8c62-4903b0854044",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f36c2338-8e26-4c52-9d4f-8b572d0e56e3"
        },
        "item": {
          "id": "94ab4cb3-f294-474d-a36b-5c1cb9ffa3c2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dd46109d-d69e-4c17-ae93-70ab39deabbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3f2e2d-3106-4c2f-9e9d-13b334de11c4",
        "cursor": {
          "ref": "8613d408-8b4b-48ec-90c9-ccbcad3f7524",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bc2583fe-9983-4009-8c34-f68d6c93028c"
        },
        "item": {
          "id": "fb3f2e2d-3106-4c2f-9e9d-13b334de11c4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "867b8125-bb95-4960-bdd1-851fb8a986ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1820eb4c-e8ab-4261-8fad-605821e79613",
        "cursor": {
          "ref": "31799a8a-e968-4d15-bf8b-34ab17f2ba1d",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d66d5f0c-4ab8-4f91-babd-baa2d76bef21"
        },
        "item": {
          "id": "1820eb4c-e8ab-4261-8fad-605821e79613",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3b1ca6c0-4666-4d23-a82d-97a518d5efb1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 562,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cccfa01-870a-4055-a66e-93b238162d41",
        "cursor": {
          "ref": "165ad795-2345-4899-b8f0-27194b5b8d4e",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c5dca2f-0b05-4ed7-9ee8-8f4183d7f77d"
        },
        "item": {
          "id": "5cccfa01-870a-4055-a66e-93b238162d41",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3d19e332-52ab-46cd-9fa0-d7f1aeea7ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7d1309-66bb-423b-a166-af2305567140",
        "cursor": {
          "ref": "6f6a6ab1-0a44-4616-8c32-a84a4166493d",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2e212d32-3be2-446c-86fc-c8b8c824360a"
        },
        "item": {
          "id": "5c7d1309-66bb-423b-a166-af2305567140",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c5f0e4f4-4f24-4542-8b68-3b3326ce07f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0527ff3-4a9a-46c2-a2ab-5b02569205b6",
        "cursor": {
          "ref": "022fe9d9-8df4-43dd-9fb6-ca4e9e0a818f",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "76c8eacb-6b79-4aa1-8f23-4afdb2d63da6"
        },
        "item": {
          "id": "e0527ff3-4a9a-46c2-a2ab-5b02569205b6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "15632b4f-2888-45b8-a904-13c83c5a7f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb1877b-c8fa-4ed5-8a2e-31a55aaa91e2",
        "cursor": {
          "ref": "28a5df6d-60ed-4fb9-a767-ce25b64f15a4",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0b50b8c5-0b19-4cc2-8b5f-43fa02fb5131"
        },
        "item": {
          "id": "5fb1877b-c8fa-4ed5-8a2e-31a55aaa91e2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c5ece3c2-8174-4eca-ba9b-605832bb71be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994e7fc9-9638-4484-bff5-2fe0120c78b7",
        "cursor": {
          "ref": "035f04ee-9325-4b9f-b799-c494eab5d647",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "78ee0f73-3ca9-48ab-875a-8a41dd28975e"
        },
        "item": {
          "id": "994e7fc9-9638-4484-bff5-2fe0120c78b7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cd721438-534b-48b2-bca7-cb00a54c1a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9791b5-6680-4e33-9968-d00ae6819238",
        "cursor": {
          "ref": "7c8fa289-9858-42f4-a75d-24f961e0f62f",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9ae47e39-61aa-4f95-8650-d70ceb9d52a8"
        },
        "item": {
          "id": "ca9791b5-6680-4e33-9968-d00ae6819238",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4ccc9038-06e2-42cd-babd-a60a72d523e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0ddfb4-0bcf-43e6-af48-8189d08af365",
        "cursor": {
          "ref": "c073356a-9864-4db7-98f6-1506039eacde",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4ec5a50d-55aa-4870-8869-b215c063700f"
        },
        "item": {
          "id": "9c0ddfb4-0bcf-43e6-af48-8189d08af365",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "780c0de7-e6fa-469e-9e60-7dcd63e996ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f3ede9-b7e7-4cc6-9e81-e6ee026bdbda",
        "cursor": {
          "ref": "e77d316f-4d13-4ede-8b7b-b1c77b12a900",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "880fb9d1-eb1a-4d8a-b7b6-0b3a54fb3216"
        },
        "item": {
          "id": "26f3ede9-b7e7-4cc6-9e81-e6ee026bdbda",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "75622845-16ef-44d4-9f1d-173a9bd2cf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a62db8-ae23-422a-a944-1411238ddb63",
        "cursor": {
          "ref": "e3d51827-b418-4590-a150-58f09799929b",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7d0c649a-54f0-43f9-8e27-5d018a07b894"
        },
        "item": {
          "id": "57a62db8-ae23-422a-a944-1411238ddb63",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "72a6bfef-2785-49b6-aea1-23c26fb97ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57765a99-15f1-4358-9970-66c16917cc04",
        "cursor": {
          "ref": "69578a15-70a0-4016-acac-45852d81df72",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f9e8ce0a-2398-4e18-b5d5-c7d32b2ca500"
        },
        "item": {
          "id": "57765a99-15f1-4358-9970-66c16917cc04",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "16f54df9-630e-4e97-88d5-a9d741e03112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32977be-6ab7-4b98-a92f-cb8249a6efcb",
        "cursor": {
          "ref": "9794fac3-be56-49df-87ea-edc2f1d87ec5",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "717cdbf0-dc4a-4a5d-b1fa-4c668db9b9bc"
        },
        "item": {
          "id": "f32977be-6ab7-4b98-a92f-cb8249a6efcb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8b75492e-438d-49bc-9d2b-195de42a95ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b1c481-ae88-4671-b990-3841be6908a5",
        "cursor": {
          "ref": "b1eff4bd-7d77-4ec4-9b2b-9f3469a1d700",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "63784b1e-f1b6-4e14-ae88-571aeb52acda"
        },
        "item": {
          "id": "03b1c481-ae88-4671-b990-3841be6908a5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9df1dd8e-e138-4d67-ad5b-2ea461f4d64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95816f27-70d5-4a35-a7c3-3b6783ed39b0",
        "cursor": {
          "ref": "0f2de7d8-3990-43f7-9c39-46cfb4491f14",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0c04c8fe-4b04-46ae-802d-5752caf85978"
        },
        "item": {
          "id": "95816f27-70d5-4a35-a7c3-3b6783ed39b0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "18af8c74-b57b-451a-954b-5ee38d556b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13568196-b4f2-470e-809f-5bf058406499",
        "cursor": {
          "ref": "e75cbaab-92c5-46e7-9ae2-8a8e4625c147",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1726fa03-7b05-4fbc-9a74-d3c109975910"
        },
        "item": {
          "id": "13568196-b4f2-470e-809f-5bf058406499",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "209c1a1a-7630-4423-8da2-248a8f646edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb0cc20-4913-41ca-8487-f6bca145d04d",
        "cursor": {
          "ref": "3bf4585e-2c77-4ab9-a729-76e37e87ca5b",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fe196432-401b-4542-95fa-0c0ed9621408"
        },
        "item": {
          "id": "efb0cc20-4913-41ca-8487-f6bca145d04d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ee089bf8-052f-43f9-b0d1-a7b4cf4c956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9722b35-493f-4220-b0fc-68f4cd4d750c",
        "cursor": {
          "ref": "b0c56cd6-38cf-4a4f-8f68-3df75f089a93",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "81f0b265-8940-4462-adeb-ceef45e509ef"
        },
        "item": {
          "id": "d9722b35-493f-4220-b0fc-68f4cd4d750c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fe9e98f4-a641-4631-960c-305c87b287d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154b309f-e604-4f8e-8eb9-3a3037f60aa3",
        "cursor": {
          "ref": "c31f032b-3654-4598-a0cf-c4408a4b5492",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "73645a2b-f1e6-4912-b5b0-d57213dacda6"
        },
        "item": {
          "id": "154b309f-e604-4f8e-8eb9-3a3037f60aa3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aad25683-e8d0-4b42-8ff0-bdf59c7cd3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cfced2-5ca5-48fa-8a8a-783b3c44ebe9",
        "cursor": {
          "ref": "0d729295-e130-4fca-9f29-835aa75816fc",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fa75e358-25a8-400c-a816-6dd8cf4cb6de"
        },
        "item": {
          "id": "a5cfced2-5ca5-48fa-8a8a-783b3c44ebe9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2dfe45e6-36ce-4ad3-aa34-239ccabcac9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24fad5f-3801-4d9f-b8df-5ae751ddc733",
        "cursor": {
          "ref": "34c0cb04-b43d-472e-9f96-d917abbdb793",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ea7afa1f-b333-4da4-a3af-b0880eac9704"
        },
        "item": {
          "id": "f24fad5f-3801-4d9f-b8df-5ae751ddc733",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "46bfdc20-93f0-422f-9d2b-23e6aa53e504",
          "status": "Created",
          "code": 201,
          "responseTime": 2874,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "b39a3ff7-aa8a-4022-96cd-e5ad70d651c5",
        "cursor": {
          "ref": "62e178d3-5367-48cc-9b4f-63f206e4eb96",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bf780d4e-76cd-4cfd-b445-76af2cc32aa7"
        },
        "item": {
          "id": "b39a3ff7-aa8a-4022-96cd-e5ad70d651c5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7917ade3-37db-4534-88b3-0c878bf372eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac876ec-01af-4435-8900-219ae6b19f16",
        "cursor": {
          "ref": "bc11993e-6915-446e-ac29-07c2d1b520f4",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "21f8215a-3e5a-4aa3-8298-5e5a87119494"
        },
        "item": {
          "id": "0ac876ec-01af-4435-8900-219ae6b19f16",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "682ec186-fd3c-462b-b549-eea98e988d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee7a616-80d4-4301-a669-884d2f2e0f31",
        "cursor": {
          "ref": "8a5326b2-6b6b-4cfa-b48c-dfc3fc3f6622",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8322644b-8eb1-45ca-b651-ffc43eb2ff3d"
        },
        "item": {
          "id": "7ee7a616-80d4-4301-a669-884d2f2e0f31",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "044a9ea4-7237-4259-b05c-65918712547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b032c73-1de5-465e-837b-03de8a626a82",
        "cursor": {
          "ref": "9bda745b-0916-4dd8-9455-b3c88bd43491",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5ebfb2b2-9828-4f1b-bffa-1a0deb584b41"
        },
        "item": {
          "id": "4b032c73-1de5-465e-837b-03de8a626a82",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "218e8aee-a7f9-4cd6-88fc-6812ed5ce300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcd2a2d-75cc-479d-91f4-b01168aeedca",
        "cursor": {
          "ref": "2b066ba2-f2a9-46f8-b501-a7a6bbab9ad7",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "90da6575-a766-4cd0-b08d-ac37f4723184"
        },
        "item": {
          "id": "edcd2a2d-75cc-479d-91f4-b01168aeedca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a07f03aa-f72c-45c9-b6c4-3a862cfe801b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3428b781-c1ad-4080-91d9-9a9589676cf5",
        "cursor": {
          "ref": "63e02a6b-b9e8-416f-9bc5-d9051dcc9afb",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "53fac8e0-8f1a-4e49-9566-f41d3d4046ca"
        },
        "item": {
          "id": "3428b781-c1ad-4080-91d9-9a9589676cf5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "72bff4fe-9a42-40cd-b1b9-25deeb1198cf",
          "status": "Created",
          "code": 201,
          "responseTime": 2221,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "c26c780a-919d-49e2-9b4a-81507be002ef",
        "cursor": {
          "ref": "c49baf55-a510-4c55-a3e8-501f67d8f383",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "55905f83-2865-4015-99a8-fbbd86931c44"
        },
        "item": {
          "id": "c26c780a-919d-49e2-9b4a-81507be002ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bd1c083e-73b5-4950-887c-902188374de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bdd9a5-e004-4d9c-9210-0604e5f643df",
        "cursor": {
          "ref": "30c41928-fb3d-4f0f-9d21-1c462ebc42ee",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5f015b46-bc5a-4eee-9516-5573cdb00e47"
        },
        "item": {
          "id": "98bdd9a5-e004-4d9c-9210-0604e5f643df",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "27c767d3-01b3-4754-b44e-03723cc5e987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfad596-2107-4544-9f6b-4bbb225e88c9",
        "cursor": {
          "ref": "d48663a9-0eeb-476b-b17b-4f1837f3f92e",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8e0612e7-29d9-41ac-b99c-c82e54c316b4"
        },
        "item": {
          "id": "0cfad596-2107-4544-9f6b-4bbb225e88c9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d6077cad-eceb-40ad-8630-dfce72df12a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c74b4d-fe42-46d5-bf16-566d70e7bb97",
        "cursor": {
          "ref": "dd2c77ac-2e28-43f6-927b-56d906862b64",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a4dc6d00-12d2-49e0-ad26-7e8b90db25e8"
        },
        "item": {
          "id": "40c74b4d-fe42-46d5-bf16-566d70e7bb97",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c13c0e32-5a26-469a-8947-17a4455cffab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b90c316-e89e-43ef-9a07-a59f2f1fe2da",
        "cursor": {
          "ref": "27a931ea-5533-4bbb-a89e-af3419debc3c",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "416f8192-f5a7-4ea1-93b2-f210ad1ffdfb"
        },
        "item": {
          "id": "9b90c316-e89e-43ef-9a07-a59f2f1fe2da",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6781a156-d0f8-468d-a07b-b88ec1f6fcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbd7ab4-d0c0-44ce-85d1-c40d4a5d362a",
        "cursor": {
          "ref": "38e47da3-b6fc-4404-bb06-9ea4fcf90a3d",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1c190e23-aa66-4b09-b32b-fd5818f342a6"
        },
        "item": {
          "id": "0bbd7ab4-d0c0-44ce-85d1-c40d4a5d362a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "df8847e9-b857-4191-b975-c4870240699c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295831a8-44b3-48ae-9fd3-0990a399eef8",
        "cursor": {
          "ref": "e76d0044-3923-4fc1-a34c-7b961a5d21f6",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "43de8c25-2471-4091-b708-541f1ab0434e"
        },
        "item": {
          "id": "295831a8-44b3-48ae-9fd3-0990a399eef8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0450b783-b56d-40d9-a11a-fa186fc0a12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274486b2-5767-47fd-a0f0-4887c9293f90",
        "cursor": {
          "ref": "c4a38fc0-03a5-4d0e-9ef6-f11643305ed3",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "16cb3da2-2bcb-42ca-b83d-35f7949cd0c4"
        },
        "item": {
          "id": "274486b2-5767-47fd-a0f0-4887c9293f90",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bf459ed4-2830-441c-b5be-5745f0d2bbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52d45a5-4920-4f7d-9623-a3da3169421b",
        "cursor": {
          "ref": "7a5add21-35f1-427b-a759-4f54f9736e77",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3dfe39cf-7125-4201-86bd-032224de9e73"
        },
        "item": {
          "id": "d52d45a5-4920-4f7d-9623-a3da3169421b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4cace783-3fd3-4d80-83b3-dad3b04c41c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5943b14e-1d48-48d0-b7d9-f65e8585a240",
        "cursor": {
          "ref": "e91f8339-b6ef-4e19-b979-d6d2fbd1341d",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e2d95f01-0401-43d2-8a58-875d9d31b509"
        },
        "item": {
          "id": "5943b14e-1d48-48d0-b7d9-f65e8585a240",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8b93282c-b1ed-441c-8aa7-e1f3d798769d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc998fc-9def-4d1f-b2bc-846963603c35",
        "cursor": {
          "ref": "63d2c6bd-3ce9-4a73-9cea-872372dfe6bd",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7263ca8d-a694-45df-bda4-2fb131b0f4aa"
        },
        "item": {
          "id": "bdc998fc-9def-4d1f-b2bc-846963603c35",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "58621620-0b9f-40c8-a524-245324c8cb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197b1e88-dfdd-4fff-9057-45fde3d7a028",
        "cursor": {
          "ref": "ca0d0494-8ce4-458d-a717-ba18ebe66f26",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d38e59c5-77e6-4117-8942-71a4cdddad3f"
        },
        "item": {
          "id": "197b1e88-dfdd-4fff-9057-45fde3d7a028",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b44dd7ea-7dff-4f9c-99ae-1da110e302ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3d32fa-1299-4c8b-8dd3-36723aaaf8b7",
        "cursor": {
          "ref": "33d9be58-0f3a-461e-95b6-8537b4f0f995",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "60ca795f-3ecd-4699-a57f-95620711cc47"
        },
        "item": {
          "id": "ce3d32fa-1299-4c8b-8dd3-36723aaaf8b7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dc04c983-43fe-4d75-a5cb-90ffdc51f925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec45a1fd-3e36-47ab-8454-2363816134dc",
        "cursor": {
          "ref": "82cf5b1c-a12e-48a0-b504-b791f395a900",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ff47539f-25e7-4da8-9bba-283f1e73c0c4"
        },
        "item": {
          "id": "ec45a1fd-3e36-47ab-8454-2363816134dc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0a75bcd0-eddf-4a50-8414-0cbf330d7316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f6881e-571c-4601-9061-c82da0662aa6",
        "cursor": {
          "ref": "d783f0b2-b454-4d0a-a608-064153f323bb",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "794f5343-7ad3-4da0-b546-35c0b9f28f33"
        },
        "item": {
          "id": "01f6881e-571c-4601-9061-c82da0662aa6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0ff26834-fa42-48f0-afda-1f5970b909c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eb250d-d0ea-4d0d-a154-8f60d99892d6",
        "cursor": {
          "ref": "20bc31f7-929f-4136-bb79-9c8c30b74020",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "382e93df-a086-454e-9e9f-54e8910dd504"
        },
        "item": {
          "id": "d3eb250d-d0ea-4d0d-a154-8f60d99892d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e7ee9109-dd0a-4cd8-824e-913744a66421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33700654-d814-43d1-9ca8-aae651a4a5ae",
        "cursor": {
          "ref": "41f74c66-090b-4768-b4cc-4217dea3ea81",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9e82a862-7840-4f00-949a-7be5b388394d"
        },
        "item": {
          "id": "33700654-d814-43d1-9ca8-aae651a4a5ae",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b10a85e-1369-4ce5-a8ce-804eb2e608df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8581d05d-ff93-4f9e-884d-b5ee656d8c59",
        "cursor": {
          "ref": "077ad4b3-1578-4971-8357-db0661ec19fa",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1ada804f-97fc-4862-8851-31ef362f7f48"
        },
        "item": {
          "id": "8581d05d-ff93-4f9e-884d-b5ee656d8c59",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7ef64801-b83c-4b49-b3ca-cc9f44092a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777e19a5-3ade-4feb-8ad9-16b3a9488a3c",
        "cursor": {
          "ref": "b853fbe0-c061-4b62-bb1d-3cfe9396cdc9",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "23c0d05e-7cfd-41d5-b162-eb4711081f1b"
        },
        "item": {
          "id": "777e19a5-3ade-4feb-8ad9-16b3a9488a3c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d9981de3-09bf-4789-9943-ba321071419d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585e8645-25e4-4240-b17d-afb6257d4012",
        "cursor": {
          "ref": "b70cc7c3-b02d-4dfe-aa78-7c4afa6d4b15",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bb7b1b9e-7af8-4d20-bb1e-f1ef4a65f6c3"
        },
        "item": {
          "id": "585e8645-25e4-4240-b17d-afb6257d4012",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8bbb4971-8ab4-4d52-92ca-fd54ea506331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc29848-f04c-400b-bbc4-2bd67db4cdf5",
        "cursor": {
          "ref": "c7eade30-1b58-42a4-8c44-c9258aa97646",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3a641a4f-e122-4626-a5a6-504f8856f503"
        },
        "item": {
          "id": "fbc29848-f04c-400b-bbc4-2bd67db4cdf5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dff1bf7f-4d62-4bca-8891-79d3db7da044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0553f7-9243-4aa9-a397-49bdcb6bbb5a",
        "cursor": {
          "ref": "f89e291e-42e8-4e1a-b32b-7b918e7c83c1",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d8fd6edb-34a3-43fa-9714-62d61fb6d598"
        },
        "item": {
          "id": "cd0553f7-9243-4aa9-a397-49bdcb6bbb5a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "385fc6ea-5b2e-47dd-9034-bf193d126d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbf16c3-ce59-4765-89ac-7e5adb77daea",
        "cursor": {
          "ref": "ea578934-c7c9-4523-aa45-ac2dc1bb8c42",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6887a735-abfd-480c-8493-0bf9094f9487"
        },
        "item": {
          "id": "9cbf16c3-ce59-4765-89ac-7e5adb77daea",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "29f51851-415b-4ee5-bfe1-22f4e764ba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a6d975-8c70-4502-8ff8-86020ece1668",
        "cursor": {
          "ref": "e4caee5f-e99d-46d1-bfbc-460c8269accb",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6d785f6f-67d8-446a-9d58-7c2e1339bbdc"
        },
        "item": {
          "id": "b0a6d975-8c70-4502-8ff8-86020ece1668",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bbaf2329-2af4-48c9-a999-786fc88bf7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb7aaa9-764e-417d-ab7a-a9cdc3e5acf0",
        "cursor": {
          "ref": "3dbb068c-061e-4348-8ffa-88ee9436c471",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d09a1ae8-ffdf-4694-9856-e0346d95023a"
        },
        "item": {
          "id": "1fb7aaa9-764e-417d-ab7a-a9cdc3e5acf0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "35a93df0-9dd2-41cc-aa8c-fded5cd44727",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4323898-ce83-4fcb-885b-9fe0166abb8a",
        "cursor": {
          "ref": "1f0b0263-651a-4f9a-b99a-a23abb9bcbb5",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e3f9f802-55e2-4a85-b200-cd3aa65f3475"
        },
        "item": {
          "id": "a4323898-ce83-4fcb-885b-9fe0166abb8a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "45b4de2e-ed50-4906-a299-fb23f2d84f46",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 541,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a0c9a2-481c-430a-b8c7-51d58d15d066",
        "cursor": {
          "ref": "e28e98f4-28bc-488d-9b04-2503919b89c9",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d6681ca4-2a36-48b9-956d-574f8f237c41"
        },
        "item": {
          "id": "02a0c9a2-481c-430a-b8c7-51d58d15d066",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a7e4f330-dea1-4483-be46-cd50efe9875c",
          "status": "Created",
          "code": 201,
          "responseTime": 2223,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "2da8dea3-a83b-4ac4-a62e-257fb5f92a9a",
        "cursor": {
          "ref": "f5539976-58d1-49f3-a6b2-b2fdf0019db3",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "64d0baf5-be92-4c69-a116-d649a3e2fcf3"
        },
        "item": {
          "id": "2da8dea3-a83b-4ac4-a62e-257fb5f92a9a",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "c25fc3e5-69cf-40d1-84a6-6ed6a50ab6d4",
          "status": "Created",
          "code": 201,
          "responseTime": 2241,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "2a558d75-a771-4867-9ba7-606c928aca63",
        "cursor": {
          "ref": "2a1c03e6-e73b-4d1a-99e3-d4be3caeffe7",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b25fa363-1329-4185-9c28-a64a7f6e08a9"
        },
        "item": {
          "id": "2a558d75-a771-4867-9ba7-606c928aca63",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "aa2998e0-89b0-4070-b3d5-ca121f3f0627",
          "status": "Created",
          "code": 201,
          "responseTime": 2209,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "ca002eec-325f-4be7-bb89-d816ab40ccfe",
        "cursor": {
          "ref": "5f505a69-2376-4162-a982-ef1075e64c6a",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c86f08a1-e98d-4e92-b578-289306afc1a7"
        },
        "item": {
          "id": "ca002eec-325f-4be7-bb89-d816ab40ccfe",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9b5dfa62-7b3d-477d-a616-6954b77c7ba0",
          "status": "Created",
          "code": 201,
          "responseTime": 2302,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "10a27513-7207-41fc-a874-bc99ac317e5d",
        "cursor": {
          "ref": "bde3e8a6-e51b-4090-8499-34e1530b49b9",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ebef48e0-4368-4fed-80cc-fbfe621090e9"
        },
        "item": {
          "id": "10a27513-7207-41fc-a874-bc99ac317e5d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d315d19d-139b-4200-a3c7-69518fe8f165",
          "status": "Created",
          "code": 201,
          "responseTime": 2186,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "c04b21bd-fdf8-4483-bbd6-3d16a52a6b55",
        "cursor": {
          "ref": "206e23d0-3666-40bb-9d0c-770ddb8a923f",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "84dca5d8-306b-44fa-a5c2-17d9ecce1bb1"
        },
        "item": {
          "id": "c04b21bd-fdf8-4483-bbd6-3d16a52a6b55",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "00dc55c0-b9d7-44f9-b3cc-a04cd514ff1c",
          "status": "Created",
          "code": 201,
          "responseTime": 2919,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "f7a7eb55-b4c9-406a-84c7-ba59ba7eed97",
        "cursor": {
          "ref": "4d00eb9e-aec1-4e0e-afa9-4edc40079776",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "560d5678-df64-4c99-9e9f-2594281f422f"
        },
        "item": {
          "id": "f7a7eb55-b4c9-406a-84c7-ba59ba7eed97",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f731525-eff3-4f22-bdba-56d26b1c4c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a7eb55-b4c9-406a-84c7-ba59ba7eed97",
        "cursor": {
          "ref": "4d00eb9e-aec1-4e0e-afa9-4edc40079776",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "560d5678-df64-4c99-9e9f-2594281f422f"
        },
        "item": {
          "id": "f7a7eb55-b4c9-406a-84c7-ba59ba7eed97",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f731525-eff3-4f22-bdba-56d26b1c4c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177dad4e-a0bc-477d-9692-90839a291592",
        "cursor": {
          "ref": "72efdfde-aa00-424a-9a84-4a5a11d443b6",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c89efc3e-4790-4990-ac69-a77e5774a1bd"
        },
        "item": {
          "id": "177dad4e-a0bc-477d-9692-90839a291592",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7a0526c5-ad1d-4e23-9988-a68aa6014413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fea471c-978d-4957-9546-9fdb364a7b7a",
        "cursor": {
          "ref": "18667a9b-4a7e-4a60-8f9a-31fc2afe2aaa",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fe375c60-9ef3-4223-9674-9679268432a8"
        },
        "item": {
          "id": "1fea471c-978d-4957-9546-9fdb364a7b7a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6f7b9185-f8a5-4a72-8063-3a3c6c5c72c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d5b1da-9fa2-4f02-99b4-2c3e46f0b720",
        "cursor": {
          "ref": "a265df5e-7f55-43cf-b0a9-bf78f3df623c",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b7017a07-453b-4aa2-9387-5b995eece0f0"
        },
        "item": {
          "id": "30d5b1da-9fa2-4f02-99b4-2c3e46f0b720",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2df755b0-1120-44db-8860-ac7084504a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f5a727-6f8d-4eea-abc9-15ff4137a6c7",
        "cursor": {
          "ref": "9d2da3c9-47af-4cb9-896b-2ebb6d02e436",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e1a494d2-8bf9-4494-b2c1-fd69c5448a2a"
        },
        "item": {
          "id": "19f5a727-6f8d-4eea-abc9-15ff4137a6c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "07434387-163e-4b50-b61b-37fd9de484dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f72195-4864-4165-976b-c4f4aff5d9d1",
        "cursor": {
          "ref": "d5067955-ab46-4fce-8a8c-6f3add140df4",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5fdb93c5-c1d2-4f58-ad03-218e7cbcdec5"
        },
        "item": {
          "id": "21f72195-4864-4165-976b-c4f4aff5d9d1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9e146eef-43f7-4481-9fa1-7dc6b20f1229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0d468d-dfdb-4d02-bb4a-c699f8e1f146",
        "cursor": {
          "ref": "c8d34484-2d50-4c13-9805-26c36304770a",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8f9670c4-e744-41f9-a7b9-1b46c1fa725f"
        },
        "item": {
          "id": "3c0d468d-dfdb-4d02-bb4a-c699f8e1f146",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9d5cb67c-d992-45f7-b422-745fd2152c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec99b94-bc77-457b-b3f8-cac6a9f0c187",
        "cursor": {
          "ref": "9184520e-a48e-436b-84b1-53a7870656c8",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1e89795b-ee32-4e98-a3df-8588629de912"
        },
        "item": {
          "id": "0ec99b94-bc77-457b-b3f8-cac6a9f0c187",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dbaad8b7-acc3-43e4-95b7-a4a6e4e54377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5922e6-1291-41ac-beb1-972da2c6b53e",
        "cursor": {
          "ref": "a9ca38cb-9f23-423d-bace-cf9f06976bdb",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2b1d6015-559f-4987-b109-3432ec209940"
        },
        "item": {
          "id": "7f5922e6-1291-41ac-beb1-972da2c6b53e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5ad3e734-775a-4a69-bbf4-30929a68234c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a023f677-d4e3-49fe-96e1-c64c1aaa3334",
        "cursor": {
          "ref": "7f465ace-3063-466e-a31c-dc3ca9184af3",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2787bbac-594b-42e3-afa6-bbcd03a713ca"
        },
        "item": {
          "id": "a023f677-d4e3-49fe-96e1-c64c1aaa3334",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1207ade1-caf7-4664-827f-33f323a1cf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4380e1e8-70d3-45fb-a502-e505fd0a94f2",
        "cursor": {
          "ref": "ff6defa5-42fd-4eda-ac79-9def6bd6f1bf",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e49f3c69-1cdc-49f5-9b18-07d4ee60c12e"
        },
        "item": {
          "id": "4380e1e8-70d3-45fb-a502-e505fd0a94f2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7ec95946-3a30-4ad9-b4fc-dba4768747ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74845036-211c-4df8-a722-ac6a961a6123",
        "cursor": {
          "ref": "34cd3a97-3dcd-465d-9700-c01fccdaec46",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4d9e07cb-ea89-4c70-88af-ce601ebefbc9"
        },
        "item": {
          "id": "74845036-211c-4df8-a722-ac6a961a6123",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4920aee9-94fd-4766-93b6-d0d7b7a6a419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ca923c-809e-41bf-ba3a-a924c13ad692",
        "cursor": {
          "ref": "c6a3f500-dbbc-4476-b2a1-a3f89b7622f5",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aa29530f-c195-48e6-83ba-2da69b21758e"
        },
        "item": {
          "id": "f8ca923c-809e-41bf-ba3a-a924c13ad692",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "269e7957-0c56-43db-9ac8-e86e4f747e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fc3eca-b6d7-4e68-8b96-8b9093283990",
        "cursor": {
          "ref": "6482942c-f91a-4302-88a1-ef6cb7aa6677",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a280a530-27d4-481b-9db5-9012dc299864"
        },
        "item": {
          "id": "d1fc3eca-b6d7-4e68-8b96-8b9093283990",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "25b113ec-0a62-4038-a035-c6cadc434509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b6e385-6cc8-4f4d-8217-b33a987644a1",
        "cursor": {
          "ref": "525ed293-77a8-4cfc-8c97-a0770a1fa2b8",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "47471732-7b80-4987-9b1c-af69dd57746e"
        },
        "item": {
          "id": "54b6e385-6cc8-4f4d-8217-b33a987644a1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "81b22285-daa8-4f96-9729-14ad122ec2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0856fce-cf5f-49d0-925f-bba6af7cccac",
        "cursor": {
          "ref": "d7fb50e2-3616-4ac2-8cc6-a542da927939",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2fce9f1d-0c44-4e87-abb3-a6ed329b45ed"
        },
        "item": {
          "id": "a0856fce-cf5f-49d0-925f-bba6af7cccac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c033f2fb-0de0-48d2-bf1d-39e1017eea83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6e111e-0948-439b-898f-fafec0017e7c",
        "cursor": {
          "ref": "585b22ad-03f3-417c-a21e-df516af51f7c",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cc4649cd-2047-404e-b07e-cca7d3c7478c"
        },
        "item": {
          "id": "ed6e111e-0948-439b-898f-fafec0017e7c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7824733e-19d1-44ea-ba7f-79793b2c5a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67808c72-6cca-4876-aeed-96bbf1d5b95c",
        "cursor": {
          "ref": "052cd6ea-26cd-42e3-ba32-486db8e5dd15",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2e67d731-6700-403d-b9d1-3e7636de6058"
        },
        "item": {
          "id": "67808c72-6cca-4876-aeed-96bbf1d5b95c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f080b7a-7ea9-456d-a2ac-0ee372dba8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99a9d30-b0b9-4691-aa24-754b433c743e",
        "cursor": {
          "ref": "9095fb65-ff26-4228-b265-d6c45106319f",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "97ab9d5e-b471-4552-8928-099762b2d742"
        },
        "item": {
          "id": "f99a9d30-b0b9-4691-aa24-754b433c743e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8d05beb3-29d0-4a6a-ab6e-e395d9234af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6908270-2af2-4114-8a3e-f1f1d65f57e8",
        "cursor": {
          "ref": "353bb306-5340-4970-89a4-d80c706d07ef",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a7ccb68-f067-44e9-adca-4df29a72a33f"
        },
        "item": {
          "id": "c6908270-2af2-4114-8a3e-f1f1d65f57e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "640015e5-8fbe-4871-89fa-5ccdd668080e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855af975-de12-49d1-a35d-e7b67fd9bc02",
        "cursor": {
          "ref": "b84571f4-afe6-4d8f-a802-91ab7683914f",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2d4ae298-092c-4382-a5d7-00bd14064eeb"
        },
        "item": {
          "id": "855af975-de12-49d1-a35d-e7b67fd9bc02",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "40237301-11a0-49ae-b98c-d8c1e3beb3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdba7de-d31e-4761-b6bd-81c06baaa6be",
        "cursor": {
          "ref": "8d9a0362-3c62-49f5-b04e-b3bb7339a78d",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "59b0a7ac-c1d8-4062-90ea-3301d10f3713"
        },
        "item": {
          "id": "ecdba7de-d31e-4761-b6bd-81c06baaa6be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4cb7db53-9a61-4b57-8fdf-6b38dc6db82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938ef859-0ae9-4685-91e1-b9d53bb20605",
        "cursor": {
          "ref": "460dd405-78df-4e43-809e-e9e42737c2be",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b14c7650-ca8f-45ef-98b9-4e13d0cc4005"
        },
        "item": {
          "id": "938ef859-0ae9-4685-91e1-b9d53bb20605",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d147e0ef-363f-4901-91ee-c99813ff9452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52408c12-37fd-46a5-ad10-859a4fb50168",
        "cursor": {
          "ref": "35a6a337-c4b0-49c1-9228-69de1d02322c",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "27746fcd-afaf-455d-b975-9dd0fe3c24a7"
        },
        "item": {
          "id": "52408c12-37fd-46a5-ad10-859a4fb50168",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec70315d-f406-46e1-b236-7de49173c2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9134df-d160-46ae-b222-1c70fa2d0a03",
        "cursor": {
          "ref": "9fd985fd-749d-4f6e-be3a-bf23d1dcb009",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c91c8203-7b35-4020-a6ed-6ffe412994c3"
        },
        "item": {
          "id": "8c9134df-d160-46ae-b222-1c70fa2d0a03",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a30e25a8-958a-41c9-ab3f-2ef636def93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f701f4b2-7e0e-4664-b8e1-1995f5d20d09",
        "cursor": {
          "ref": "f4e8bbc3-5ecd-4aeb-987b-e6309a626a68",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bd2018ea-3e77-4f64-a07f-83ea34ffcd16"
        },
        "item": {
          "id": "f701f4b2-7e0e-4664-b8e1-1995f5d20d09",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e19f7576-7f95-4672-8928-0c30fd794027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56f75db-d32c-4461-a9a4-c644acf6de06",
        "cursor": {
          "ref": "d21708be-8486-4067-bcf3-e784c01a3e47",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "455c97d8-eb30-47ce-8127-a75809856b87"
        },
        "item": {
          "id": "c56f75db-d32c-4461-a9a4-c644acf6de06",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d959a42b-a795-4d06-aff2-c744c48dcf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b175313-bf4e-4029-9deb-68222eb18700",
        "cursor": {
          "ref": "0e239688-0755-4fff-84c3-c8bcf418355c",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "31d08c97-a2e3-4564-9890-ddb5f9861fde"
        },
        "item": {
          "id": "8b175313-bf4e-4029-9deb-68222eb18700",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "82d641a6-8bb2-4132-bf22-71bfa7168c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b54c99c-7d0e-4a24-a4ae-e76524951551",
        "cursor": {
          "ref": "59ae28f0-4c67-4e77-89c8-fa705a22afb9",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8d0daed0-8911-4388-82ff-becfc0791cd3"
        },
        "item": {
          "id": "7b54c99c-7d0e-4a24-a4ae-e76524951551",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "11c798db-f452-4581-ae15-3f1bc0565b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8adbcd-d86e-45c5-8dba-800c5ef8b447",
        "cursor": {
          "ref": "d67dcc67-5ea3-452f-94c4-5926b9d8e57e",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3f5d8289-7cb0-4267-b500-5380a208a7be"
        },
        "item": {
          "id": "fa8adbcd-d86e-45c5-8dba-800c5ef8b447",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3f7b26b7-e09d-454c-b564-218e5ac4142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad3c0c0-d3a0-4160-931d-d54aaf8654b7",
        "cursor": {
          "ref": "6a2601de-979c-4288-845b-683990d3c554",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7786a01a-7f8a-4dae-870d-a98c530d08e6"
        },
        "item": {
          "id": "0ad3c0c0-d3a0-4160-931d-d54aaf8654b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b8c341e7-fe10-4d6c-bc29-98119f8188ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a92986a-a2b2-4882-83bd-741f7d4b295f",
        "cursor": {
          "ref": "9b34fc52-9b04-4854-af5f-4dd1cacb2482",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "774b809a-2dcf-4dfa-bca6-5151a8018148"
        },
        "item": {
          "id": "9a92986a-a2b2-4882-83bd-741f7d4b295f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a2788cba-6f22-4ec9-9426-0eadf7481f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84661423-b45f-4ae3-b672-48587aa3280a",
        "cursor": {
          "ref": "f0efb1d1-f16c-4a49-aaa9-8a88c044fefc",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "15867188-b70a-47f7-a523-7f44e4e9bef3"
        },
        "item": {
          "id": "84661423-b45f-4ae3-b672-48587aa3280a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "550359f1-b7b1-4436-9a93-56463bc71819",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e3d137-7795-4cb7-a386-8946082adf3a",
        "cursor": {
          "ref": "4312ceec-f0d6-4d3f-962b-efd4586c452f",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "426284c5-f783-47c4-884c-8a5b8aedf127"
        },
        "item": {
          "id": "91e3d137-7795-4cb7-a386-8946082adf3a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "588790ba-1d08-4801-b6d2-7d9c250e7ea3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 517,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbdb3b4-bdfa-4dd4-84d8-95f90ed6989e",
        "cursor": {
          "ref": "65bd4fcf-c252-4616-88a8-011032155d7c",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e04319ce-6331-47bf-a0d0-3fbca1d8e8d9"
        },
        "item": {
          "id": "1dbdb3b4-bdfa-4dd4-84d8-95f90ed6989e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b6dd297e-24d1-44e5-953a-59074b03c7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbdb3b4-bdfa-4dd4-84d8-95f90ed6989e",
        "cursor": {
          "ref": "65bd4fcf-c252-4616-88a8-011032155d7c",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e04319ce-6331-47bf-a0d0-3fbca1d8e8d9"
        },
        "item": {
          "id": "1dbdb3b4-bdfa-4dd4-84d8-95f90ed6989e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b6dd297e-24d1-44e5-953a-59074b03c7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8359c14b-96f2-4637-94f9-2cd9b6b7dd41",
        "cursor": {
          "ref": "0eb6702b-5945-49bb-a30b-b4b82f05e80b",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fab29d6c-8b2f-43f4-a3bf-d6203839a63a"
        },
        "item": {
          "id": "8359c14b-96f2-4637-94f9-2cd9b6b7dd41",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0e2d3300-a7ba-4d0e-8cfe-cc770bc3984f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 278,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "16896961-864b-465b-8568-e20dd35d77d6",
        "cursor": {
          "ref": "f9ced117-07ed-44fb-b7b4-4476c211eeb6",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ab8eb3fa-137e-4f51-bf68-c240c24d87ea"
        },
        "item": {
          "id": "16896961-864b-465b-8568-e20dd35d77d6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "be1b046f-78fa-42b5-8fd4-188fe51b7381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bc2326-f0e6-4bab-a66b-82fa225e020c",
        "cursor": {
          "ref": "142a4152-1908-4015-aa7d-770ae92d56e3",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4d6bdbc6-6b0e-4554-9d31-07a041cae0a4"
        },
        "item": {
          "id": "e1bc2326-f0e6-4bab-a66b-82fa225e020c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7ae9aec3-e066-456e-8f6c-cc3b997f8f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed72ebf8-a834-4176-90bf-a9b1040aadec",
        "cursor": {
          "ref": "93a7dfa6-2eb1-402d-b237-f2f09dfe2315",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "081fddcf-bf06-4348-b262-5c3ad1cd4a20"
        },
        "item": {
          "id": "ed72ebf8-a834-4176-90bf-a9b1040aadec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e17be757-5cf7-4dba-89e5-14746902aab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6c821f-a1bf-4384-a973-4018695242ff",
        "cursor": {
          "ref": "84a71f8e-6227-4bac-857e-729259fe10ff",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a791876c-8d3d-4cdf-8f65-fb116719c831"
        },
        "item": {
          "id": "9f6c821f-a1bf-4384-a973-4018695242ff",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f5deb69-8b13-4c00-83bd-299d87c7f56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c360519-d479-4858-b149-e5d2049b237f",
        "cursor": {
          "ref": "96e056f6-9b07-4442-80c8-b1d2f7649561",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dd880139-de88-494d-83ea-1ba777cbd644"
        },
        "item": {
          "id": "7c360519-d479-4858-b149-e5d2049b237f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f6fbed2d-2aee-4a09-9c37-9ac978963b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5497741c-d48f-45aa-afdd-7ced033e1038",
        "cursor": {
          "ref": "f4f1d0ce-02ae-4b73-95c0-355f28cab83d",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a88e7807-9eb3-4800-a350-379aa7fa4fb7"
        },
        "item": {
          "id": "5497741c-d48f-45aa-afdd-7ced033e1038",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "da9d070a-5ec9-4f4a-9d7e-5cd0aa111831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f294ce-abf4-48d7-ae63-7a0b5ef3f75a",
        "cursor": {
          "ref": "4740cd14-7d0d-43ac-a830-34df2abeefe0",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a666564d-4bba-4805-8666-a9abf9a0d8ce"
        },
        "item": {
          "id": "a9f294ce-abf4-48d7-ae63-7a0b5ef3f75a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "38ad7913-ecaf-470c-af25-f63373eaab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b4eff0-bafb-4928-a1e0-7e1902f55aca",
        "cursor": {
          "ref": "2b412afc-ea44-4ee5-aca1-cbff30b15522",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "622cafb0-dade-41c4-8ca4-0f9570ca75e7"
        },
        "item": {
          "id": "40b4eff0-bafb-4928-a1e0-7e1902f55aca",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3e4cf1f5-dc8f-4429-8399-9a6adf63b117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beb08d7-6611-44e1-beb2-66adbc0022a7",
        "cursor": {
          "ref": "13f3ca84-4a2c-4d6a-8026-1fe823cd93d9",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "be17ca5f-7e78-444e-8045-d05ca5644ebf"
        },
        "item": {
          "id": "2beb08d7-6611-44e1-beb2-66adbc0022a7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ff33b410-f4aa-444e-ab51-07f34e0232ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c06181-1940-4b14-95ac-24a2c1d172f3",
        "cursor": {
          "ref": "8357e0f7-2f36-4173-b14b-4688d74dbd62",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fdbbb875-f423-4582-ba36-e1a9d99bef7b"
        },
        "item": {
          "id": "53c06181-1940-4b14-95ac-24a2c1d172f3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d862eb40-b1cc-49f4-960e-f4f77268848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1ea886-6e05-480d-9f66-c52ef5274c18",
        "cursor": {
          "ref": "16e2e40e-a0bd-4b74-a7c8-11b5c7e67496",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "41214ca1-7b2a-430f-8b13-16538e7d05df"
        },
        "item": {
          "id": "8d1ea886-6e05-480d-9f66-c52ef5274c18",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f61c03d6-ce4e-4039-b268-a5b766781677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0718e762-1834-4ab0-9f72-84489de826f9",
        "cursor": {
          "ref": "3e9e4a3e-88ec-4ca8-8ff7-a7a4a6040574",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1807a087-b009-42fc-a1cd-ac771a0a739d"
        },
        "item": {
          "id": "0718e762-1834-4ab0-9f72-84489de826f9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f32e90d8-c358-45f1-8671-5c99f6540cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9477cd8-b7da-4130-a267-e665547a3a0e",
        "cursor": {
          "ref": "aca260d5-5a59-49c7-9063-7dd71af1f967",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f54dea25-7c96-4e2e-8073-8a1c9ba9d7ea"
        },
        "item": {
          "id": "d9477cd8-b7da-4130-a267-e665547a3a0e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a3e55da4-503b-4468-8aee-02597fe4aac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f4562d-f9eb-4135-99d9-775b471a48eb",
        "cursor": {
          "ref": "24103668-9a76-4e53-9cb9-356fa9604bd9",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e5ee6f58-92e7-422b-9e8a-20db669b14a8"
        },
        "item": {
          "id": "32f4562d-f9eb-4135-99d9-775b471a48eb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f858c421-e802-4725-be9b-bedb2b2293ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c77784-0831-40d8-bf31-d7e7c5fe1034",
        "cursor": {
          "ref": "40862b57-4774-4cb4-bca9-a29ea7647c0d",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b840ca4a-af4f-448f-913f-56366a548a15"
        },
        "item": {
          "id": "16c77784-0831-40d8-bf31-d7e7c5fe1034",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "55160e2d-7f8c-4cb7-9cca-5a6281712c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f033b2-dc1b-49da-83f2-253943bc498c",
        "cursor": {
          "ref": "37784bfa-4f5d-42cb-9d54-d7f3f410733e",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f0c5aaa9-1201-4c54-9205-12ae6715bde0"
        },
        "item": {
          "id": "f2f033b2-dc1b-49da-83f2-253943bc498c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3ad16b63-e6a9-4a9b-a5ee-eca724915454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf64b869-a02f-4cad-8c7d-16bae6324de6",
        "cursor": {
          "ref": "357e6bc5-c1b2-4856-ab42-f075a80ed066",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "296f58d1-9a0f-4506-b491-eda9a43bd1e5"
        },
        "item": {
          "id": "cf64b869-a02f-4cad-8c7d-16bae6324de6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39b627c2-14db-494b-8888-993c6d27c0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41f3982-7c48-48b5-921c-5d5afdf60a5b",
        "cursor": {
          "ref": "0fe4cdae-1460-4648-b1c5-61702582d9b0",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e634d869-4d8a-4fc9-b96b-ec53f7d143b6"
        },
        "item": {
          "id": "a41f3982-7c48-48b5-921c-5d5afdf60a5b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1963f7ba-cafd-4c5f-8a39-a8b19711c063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b302650a-dbff-40cc-80a4-d22dc1a1ed59",
        "cursor": {
          "ref": "2bcb5f0e-748c-40d3-84e4-841d6d9862b3",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d1b37e2f-f129-4ab6-9a92-b7ddb99e82b0"
        },
        "item": {
          "id": "b302650a-dbff-40cc-80a4-d22dc1a1ed59",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0c745791-2829-4394-8bd6-bc94ee770028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8329913-b87a-404f-8a7c-ac45b846320d",
        "cursor": {
          "ref": "99b77448-7283-4ca0-a147-169612890fe8",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "25d1cea1-4f3f-4e84-b7f4-89c75b0dc4ec"
        },
        "item": {
          "id": "e8329913-b87a-404f-8a7c-ac45b846320d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "be9f2d10-9f98-49bb-a450-b8db30720031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9edb3bb-aff5-49e7-93e2-043cb2610bac",
        "cursor": {
          "ref": "b260a8ee-5000-4259-a4db-16ce1e2ac28a",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "edba6c45-9717-4400-a3c4-6d5bc7b7080b"
        },
        "item": {
          "id": "f9edb3bb-aff5-49e7-93e2-043cb2610bac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7f78d2e2-8929-4a30-bb47-c773173228de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40797bc2-9a48-4d2e-b749-fdac06ade971",
        "cursor": {
          "ref": "9509f04b-e1ea-42a4-b620-e99199cd7340",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "88b97bdf-5928-4119-b5d4-57cfddf0e3dc"
        },
        "item": {
          "id": "40797bc2-9a48-4d2e-b749-fdac06ade971",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "391e62a1-586a-4718-b42f-6b42db0c7f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e2349-fe1e-47b8-93b7-6faadd052e99",
        "cursor": {
          "ref": "6cdb5700-760b-406e-a1f0-65d4e853411a",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a7a8db10-6393-4e03-bdd2-5527972f54f8"
        },
        "item": {
          "id": "419e2349-fe1e-47b8-93b7-6faadd052e99",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a60dce3f-0df7-4bd6-895f-debae8447e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129a1904-be0e-466c-968e-79f2a758fde8",
        "cursor": {
          "ref": "5fa1c082-cf86-4c45-898b-e528d4d39044",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a43574c4-fe33-4c0b-96c9-60426f2f1576"
        },
        "item": {
          "id": "129a1904-be0e-466c-968e-79f2a758fde8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4203e053-3582-4048-a97e-e5e7df60e68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de1412e-209d-4c50-8032-1ce19c6c238f",
        "cursor": {
          "ref": "45db0b1e-e320-4792-b238-25fdda9b653f",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e422a04a-848b-460e-ac46-02cf9d6ff237"
        },
        "item": {
          "id": "2de1412e-209d-4c50-8032-1ce19c6c238f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "820dd3f5-564a-44b5-ac70-fb784765b83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07d13ff-e7fb-4428-bf0d-c237eae74072",
        "cursor": {
          "ref": "2b7efee3-5ecc-469b-8237-e7ca26b51804",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6f5c21b4-11b7-4dfb-90cb-6f6ccb23040f"
        },
        "item": {
          "id": "b07d13ff-e7fb-4428-bf0d-c237eae74072",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1c4f4016-a6ca-4486-87b9-88d56f582e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12798f5b-cb3f-4365-8225-6c84612a67d0",
        "cursor": {
          "ref": "9ce68a33-003f-4fa6-bec1-655e99622485",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ee164874-4dfb-4ae2-9398-528ba0afc874"
        },
        "item": {
          "id": "12798f5b-cb3f-4365-8225-6c84612a67d0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "433c096a-9d0f-4e86-9e82-d475c04c32a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b054ff2-3509-434a-8dbd-4e77ad6b1e1d",
        "cursor": {
          "ref": "09df0310-8e8b-409c-bf2e-15a28faa6250",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0a63ac02-7323-4fad-9dfa-09fb484c601d"
        },
        "item": {
          "id": "7b054ff2-3509-434a-8dbd-4e77ad6b1e1d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1499495d-8d4d-4f13-8e55-a27e7261e9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f20301b-1f92-4063-9c36-3c23f8f56651",
        "cursor": {
          "ref": "2df29db7-f236-401a-8ba4-cd16edeb835e",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3422e95e-3b87-4a53-af7a-530990e7bfe7"
        },
        "item": {
          "id": "5f20301b-1f92-4063-9c36-3c23f8f56651",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3948ec02-da58-482a-87dd-e6e530bde2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bc314f-b3ca-431a-b5c3-4b19903fb325",
        "cursor": {
          "ref": "160f8e3f-d4f9-4114-bf12-3ba0735f33ea",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d9436b41-299b-48bf-9793-632444d4ff2c"
        },
        "item": {
          "id": "f0bc314f-b3ca-431a-b5c3-4b19903fb325",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bce528b5-97d2-4bb8-9072-2672aeee8d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650d574e-4582-4ece-9662-dbd97475e634",
        "cursor": {
          "ref": "779bcbe8-d996-4244-9e4d-cfec04a3cda1",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1afa5a38-887b-4558-b825-c64f873c0a65"
        },
        "item": {
          "id": "650d574e-4582-4ece-9662-dbd97475e634",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e7adbc97-7433-42ed-aa58-c0c1202f0d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdbd2a3-f125-4631-be9c-9e440c45723e",
        "cursor": {
          "ref": "ffcf78a0-6196-4269-8e3a-1b2f42782bca",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e73c197e-643b-422d-892f-734aeee3cc5a"
        },
        "item": {
          "id": "9cdbd2a3-f125-4631-be9c-9e440c45723e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0e124023-3b3e-486c-9196-c19ce043a9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae607010-492f-4381-bcf5-f820ef00a190",
        "cursor": {
          "ref": "9155b574-cc00-4639-b701-7dbb6ea52b8e",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c0a7630d-11e7-4c55-aa64-d910b04d528a"
        },
        "item": {
          "id": "ae607010-492f-4381-bcf5-f820ef00a190",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9a8c9c75-5a3d-4716-bae7-02f0bb6d4d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d05b341-1f90-4835-ab8c-23f2cbea16f9",
        "cursor": {
          "ref": "90b25f44-c43f-4c07-bd9c-c9422cd136a8",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "847df4b7-3d1b-4707-9a26-cc720dfdc493"
        },
        "item": {
          "id": "6d05b341-1f90-4835-ab8c-23f2cbea16f9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "09dff93f-c9a2-49df-a08a-127f85642719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d32bb3-ab18-4a2c-911c-ed774585ae84",
        "cursor": {
          "ref": "10856bbe-6147-4594-b511-278f86d793c6",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c161063b-4b78-4592-8753-52caf50480fe"
        },
        "item": {
          "id": "f7d32bb3-ab18-4a2c-911c-ed774585ae84",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6a473976-8fae-4ced-a379-d1e35bf75431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477bf563-414f-43be-85ce-8f2a4555a872",
        "cursor": {
          "ref": "14c88395-1505-4194-8c67-5892bfb3de5d",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eb94693f-34c1-484a-ad0f-09c853ed6c74"
        },
        "item": {
          "id": "477bf563-414f-43be-85ce-8f2a4555a872",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "629d5f7c-668e-4361-b143-7628f0c8b88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e99dbb-aca8-4227-8bd7-2f47be21151e",
        "cursor": {
          "ref": "4bf8fbbf-762b-4db1-87b1-d6da3c774e86",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c4771fd4-c23c-42df-8a3f-87e421f2a1b3"
        },
        "item": {
          "id": "46e99dbb-aca8-4227-8bd7-2f47be21151e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6899c914-4e00-4d68-b8aa-f78d740d854f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89a86c5-7f29-4f68-8f4c-815a780cf55b",
        "cursor": {
          "ref": "ce18ad0f-31a7-4358-9515-77e34e3b14de",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "283bde2c-29e1-4115-892b-b7ad78385ffe"
        },
        "item": {
          "id": "b89a86c5-7f29-4f68-8f4c-815a780cf55b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2e91a423-c0fc-4391-900d-4c3e7c7f815c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74c1383-5a47-49d0-bbe2-c109606c9d2b",
        "cursor": {
          "ref": "2c8597fa-9a28-497b-b776-3526766876ac",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b2a24a80-a98a-4425-bcf2-8a56b35eb8af"
        },
        "item": {
          "id": "a74c1383-5a47-49d0-bbe2-c109606c9d2b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f11fca6e-f94c-43d1-9b51-35566eccc1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6505a7-0263-4dfd-8e59-eef1f88710f4",
        "cursor": {
          "ref": "ad489fa5-9f9b-459e-9c97-ffd5de4efc1d",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d54e14d7-8767-4f6b-aa59-48aa7fb08cfc"
        },
        "item": {
          "id": "ff6505a7-0263-4dfd-8e59-eef1f88710f4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a0e49722-5e42-4a5a-98ea-b013f5bb733a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5f9720-c50d-4e84-90b5-693fdb722b9f",
        "cursor": {
          "ref": "11246e25-d494-4d18-9686-278b493b359c",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b4e21151-55a9-43e5-bd54-eb4cdf78aa5c"
        },
        "item": {
          "id": "5e5f9720-c50d-4e84-90b5-693fdb722b9f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "de885b7b-d054-400d-ae0f-40a76266e0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d548f19e-b3f8-4a43-b350-26d0a2881652",
        "cursor": {
          "ref": "0af4194c-b2e8-4a7a-b4c3-13579dde97f6",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e5a9d96a-9362-4928-91c2-364fe1b1ff33"
        },
        "item": {
          "id": "d548f19e-b3f8-4a43-b350-26d0a2881652",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4cd1926f-a0be-4ff1-a455-0225dbf447ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93f336e-5c1d-4ce3-904b-95563e881baf",
        "cursor": {
          "ref": "3e12150f-3d65-4d43-bea6-fe75df593c42",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "26426dcd-22cb-4a81-9f7a-e99ead291fe1"
        },
        "item": {
          "id": "e93f336e-5c1d-4ce3-904b-95563e881baf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cfef84f7-7a63-4190-8372-b21cef7f2ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4d7718-80ee-4dc7-b480-89f9a9ab4a43",
        "cursor": {
          "ref": "c92c1d78-75e6-4214-a456-79ab113ffdec",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "544e26c2-604f-4203-a08b-d50eaf89b605"
        },
        "item": {
          "id": "fb4d7718-80ee-4dc7-b480-89f9a9ab4a43",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c47cde15-9998-453d-9d6a-fe27ebfb4bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc576fb2-e619-44d8-b82e-7a1d01fc3f73",
        "cursor": {
          "ref": "0693ed7c-9c28-4de5-a4c3-23eb3a4a0840",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e776dfa6-6bd5-4ce7-9ca7-271ae39ef1b3"
        },
        "item": {
          "id": "dc576fb2-e619-44d8-b82e-7a1d01fc3f73",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "209aa2ee-93d2-4f64-9811-d4257efc0374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c18bbe-a008-4b9a-aff3-e1ce896b8a31",
        "cursor": {
          "ref": "a86c7d59-46fd-47ac-a5cf-ebb00fed80b7",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7b8467ee-20bf-43d4-b16f-8428a1afbb95"
        },
        "item": {
          "id": "04c18bbe-a008-4b9a-aff3-e1ce896b8a31",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "27b99c70-4aff-49d7-b9a1-03fa235aaf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f57c10-6523-449c-8d8d-20e82a67c3e5",
        "cursor": {
          "ref": "3bfd47ec-6ccf-4769-9220-bda8660f69bb",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e01fe14b-7a3f-4e65-ba8d-a372d66b9c7d"
        },
        "item": {
          "id": "23f57c10-6523-449c-8d8d-20e82a67c3e5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "53339d23-558b-4abc-8a0a-7cab59dee9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd5af70-0d52-48a9-9f5c-c78053f33f3a",
        "cursor": {
          "ref": "0ae9489a-f79d-47ae-a2c7-671301de7f45",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c8f9ed78-4d01-47c5-bb94-f9d8b20f5abd"
        },
        "item": {
          "id": "fdd5af70-0d52-48a9-9f5c-c78053f33f3a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "59f4c381-c0bf-4040-8db3-f71f615eae54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f3ed66-b7d8-4cae-9e29-b99d1fe809d9",
        "cursor": {
          "ref": "67081639-ae24-442f-8dac-be1b32140e2b",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2a60d3c7-60c1-4bb0-8986-895b460d55dc"
        },
        "item": {
          "id": "53f3ed66-b7d8-4cae-9e29-b99d1fe809d9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1186bb6c-1311-4b0e-a208-d5a301cd5cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b31f68-cbd8-459b-9f6f-6221303a96f1",
        "cursor": {
          "ref": "51ab5c03-526e-4a6f-8e2f-2e756b6e549c",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1196fbed-db0c-403c-9804-9bd33a26cfb7"
        },
        "item": {
          "id": "82b31f68-cbd8-459b-9f6f-6221303a96f1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fc611a65-ba20-4600-a428-838c672a87d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4c51f4-b95a-450a-b5ea-58ef0a9183b6",
        "cursor": {
          "ref": "7521cc18-6730-4d9b-85a6-4c71473b61b5",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "550fd3f7-f607-4094-b635-295900251d34"
        },
        "item": {
          "id": "9c4c51f4-b95a-450a-b5ea-58ef0a9183b6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ab8197c1-084c-4d59-95d2-5d9a1a722223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446ea545-055c-4464-8efe-4a4c5b75ec1f",
        "cursor": {
          "ref": "f9429056-81ad-4d57-b069-5b66cf6a4055",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2813fc71-06ab-462b-abc7-732abd1d51cd"
        },
        "item": {
          "id": "446ea545-055c-4464-8efe-4a4c5b75ec1f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9bf00d7a-a42c-4dd7-abec-04354f3d5291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835f48d1-ff3b-407a-80a9-230b3b7bd8be",
        "cursor": {
          "ref": "6e87e093-e6c6-433b-bfd9-3e69b1aa58df",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "88369d11-dcee-4dde-bf00-3912596186ac"
        },
        "item": {
          "id": "835f48d1-ff3b-407a-80a9-230b3b7bd8be",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f69d9fda-fd8d-4f45-8ec5-beb145bbac98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1834be6f-d36c-40fd-a1aa-9bb912ea5bae",
        "cursor": {
          "ref": "6f627ca7-e9cc-4209-b87d-da47ec84baf7",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "67a4cb92-581d-4a92-8b11-c1324e8d1bf5"
        },
        "item": {
          "id": "1834be6f-d36c-40fd-a1aa-9bb912ea5bae",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "58bf21f2-0ead-44f6-b5e1-5700800c37f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f86053e-863d-49b7-8195-cab152128b62",
        "cursor": {
          "ref": "0fb1e9ab-c56e-45a3-bf69-3ef43233dc9e",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "adcb9923-578b-4685-8f86-9e9ab8deb34d"
        },
        "item": {
          "id": "5f86053e-863d-49b7-8195-cab152128b62",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "54ca5b36-c345-42c1-894a-a7a9e4c0e27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a259c7b6-9359-40c7-aa0b-553aa2f60b26",
        "cursor": {
          "ref": "ab83aa09-c916-415c-98a9-171407d4da06",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "62cd00ee-378f-4127-8b4c-769dd2ecc3ab"
        },
        "item": {
          "id": "a259c7b6-9359-40c7-aa0b-553aa2f60b26",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "188a6805-5be6-44fc-b27b-7948116d64ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd68649-e7cc-4650-a504-b27935488010",
        "cursor": {
          "ref": "bd82ff5b-77e9-4b53-9d1d-b60f8cc00d3a",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "02d51eba-4540-45ae-aab5-ff94d7148d93"
        },
        "item": {
          "id": "2dd68649-e7cc-4650-a504-b27935488010",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8375f8fd-2eeb-4e72-a0bf-c3241fa95e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acec285-bff7-4e08-bb7f-d9cfed5964c9",
        "cursor": {
          "ref": "69f7e587-98ce-436c-b854-08b4c6d96bb3",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "88ab88d5-0fa1-4edf-87a2-de9e341acecc"
        },
        "item": {
          "id": "4acec285-bff7-4e08-bb7f-d9cfed5964c9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b620882e-66b4-4ec5-b621-9154df85dc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb4a556-aec6-46bd-af93-d645f1c48e52",
        "cursor": {
          "ref": "798add5a-c246-4d9b-85c5-1f0989206d8d",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7badf4d4-239c-4f8f-9a81-8a14d3c0b686"
        },
        "item": {
          "id": "9fb4a556-aec6-46bd-af93-d645f1c48e52",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "75d8fcee-e098-4ffe-a207-c1b82fa11e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9615f1c4-b57a-4cc8-8fc3-d15f87c7214c",
        "cursor": {
          "ref": "37095f29-cd3d-43d0-a1c0-90a735e6ef65",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ace769e0-26f9-49b6-abe3-fee938c54f32"
        },
        "item": {
          "id": "9615f1c4-b57a-4cc8-8fc3-d15f87c7214c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f01617da-c93a-4284-8705-cd897d775190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dca22c8-a723-4abc-9885-989983eb6579",
        "cursor": {
          "ref": "adb8147d-08dd-4ceb-ba46-c3229d4cf263",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5464877c-a1c4-44b5-b774-65df0b6664e6"
        },
        "item": {
          "id": "1dca22c8-a723-4abc-9885-989983eb6579",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "957815be-a3aa-499e-be1d-56b0e7663a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a023c3a1-8cf2-4fd4-b43d-4655670d66ea",
        "cursor": {
          "ref": "90d7c8c7-7629-42d5-a273-5511104ca391",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b907f292-498a-48df-8bf9-9f0d879adff2"
        },
        "item": {
          "id": "a023c3a1-8cf2-4fd4-b43d-4655670d66ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "05249078-d65c-4837-bb59-1f1f24037923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f27ab-d605-42ed-81a6-f785c3082462",
        "cursor": {
          "ref": "cbcce427-7650-4c22-86e7-005777357f78",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b9970742-a653-41fc-8a2d-c05b99727b2d"
        },
        "item": {
          "id": "4c7f27ab-d605-42ed-81a6-f785c3082462",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7b32ec15-d989-46bc-ab47-88654d7e60ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9250a17e-5831-4d76-8dc9-8f14bdc320dd",
        "cursor": {
          "ref": "94e418f6-739b-45c8-8eee-65f0d1718e96",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5c9ca5d9-551f-4014-84f5-86b21dea8a78"
        },
        "item": {
          "id": "9250a17e-5831-4d76-8dc9-8f14bdc320dd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "66f1f5ca-1285-4bcd-ba72-4ef13748e3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20753b-4f05-4cae-b4f1-bc2726fae233",
        "cursor": {
          "ref": "ac6b4d9b-d3c1-4a93-88fa-30598ff6414e",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7c486492-ef36-4442-8d04-8f60c4a5fb25"
        },
        "item": {
          "id": "1f20753b-4f05-4cae-b4f1-bc2726fae233",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "89aa2826-a52d-4bfc-bb8c-284f577728d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f4196f-5463-4399-b293-23c6853b141d",
        "cursor": {
          "ref": "3b1f6f1d-e1ec-43c1-847e-1b0f3a126f3e",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "55ee4e99-ea92-457f-84a6-eea5c7e1b5fe"
        },
        "item": {
          "id": "21f4196f-5463-4399-b293-23c6853b141d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b0a71fe7-4574-4335-92bc-bbd0389aac32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3d71ef-1082-4dd2-b58d-9d4dfee6f2a7",
        "cursor": {
          "ref": "b4566f45-a371-4e53-adf6-10deed04e444",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3c1b85ea-95b3-4bda-9936-74d261e215d3"
        },
        "item": {
          "id": "5e3d71ef-1082-4dd2-b58d-9d4dfee6f2a7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7c04b9ba-9c7e-43a9-8fdc-7a3af55e9aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611990a-4b4f-40f5-ad10-76f60158186d",
        "cursor": {
          "ref": "e1fb8f57-cef9-4ec8-9b98-6e2359c1a9d4",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "26872e04-89b9-402b-a6f2-4e48aed1ebab"
        },
        "item": {
          "id": "7611990a-4b4f-40f5-ad10-76f60158186d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "78bc78c2-9f02-43e9-b6c4-5ce01a4a557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ceac9f-b434-4617-a27b-5ae458b71add",
        "cursor": {
          "ref": "23f8aaa7-5c8a-4ae4-ab6d-46171a92ae98",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3fc6f0da-8e4d-4c11-94da-04a7a088c782"
        },
        "item": {
          "id": "41ceac9f-b434-4617-a27b-5ae458b71add",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9add594f-71c0-40c4-805b-7fc8d39e503b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39547f77-ef18-41c3-8f14-21f8603913fc",
        "cursor": {
          "ref": "5cafe8d5-543b-44a4-b1ec-75e26e067c5c",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "62ff52f2-f6e7-45d7-9363-f8f3038e84f7"
        },
        "item": {
          "id": "39547f77-ef18-41c3-8f14-21f8603913fc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a48cfbb1-aefc-4345-bd32-770dcc60df90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81d3207-3b89-44d1-8550-e2301a18ffc2",
        "cursor": {
          "ref": "86734045-92fb-41d7-8fff-88299d3eac7e",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f972f732-f0bd-48aa-b86d-52755a2f7edc"
        },
        "item": {
          "id": "f81d3207-3b89-44d1-8550-e2301a18ffc2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "594635eb-4ec4-4d7b-ba33-61877460d9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a513f27a-377f-40c9-a6f0-aa4c92a7208c",
        "cursor": {
          "ref": "f2f19ba0-76a3-4771-ad1a-b89e80a341a9",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83e0f062-b35a-4be9-bc4c-42e549590f89"
        },
        "item": {
          "id": "a513f27a-377f-40c9-a6f0-aa4c92a7208c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ca05df4d-1fc8-4da0-a0fe-ee497ad15375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02b861e-c700-481a-a487-d7ea4466d604",
        "cursor": {
          "ref": "89c4f7e5-57bf-446f-99f8-b7647c5012fe",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e7ea5d37-094b-4335-be99-4c4f54deeb0b"
        },
        "item": {
          "id": "c02b861e-c700-481a-a487-d7ea4466d604",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3444447c-be24-4bcd-a66d-a54285ae64b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e421992-8aca-4d8a-b6a0-212683226c6f",
        "cursor": {
          "ref": "e7c9cef4-3321-4cf6-9882-278016bcf53b",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3f056bda-2218-4509-a2db-c737d01dceb0"
        },
        "item": {
          "id": "5e421992-8aca-4d8a-b6a0-212683226c6f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dea7c214-5e39-4005-8607-0d25f16d8908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c759c7-449e-46d6-8325-0b741a80b7b0",
        "cursor": {
          "ref": "ccbd61d3-f278-4caf-8edb-2ad53bb7c96d",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6568b18b-3059-4ac1-8d60-497f10d3fe5a"
        },
        "item": {
          "id": "27c759c7-449e-46d6-8325-0b741a80b7b0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "58868561-7a31-47a5-9ab3-0a85037cfcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0cf671-a6b5-4635-bec6-e30da0e09a02",
        "cursor": {
          "ref": "c13bc13c-a7c0-4eca-bcea-68cceabd17c3",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d8d29e77-05c3-4c77-86b5-7dab5f57a56f"
        },
        "item": {
          "id": "ce0cf671-a6b5-4635-bec6-e30da0e09a02",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f61dc3e1-c426-4f77-ac46-a7e041f1dab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e560a0-11b0-4fad-8cdf-37fa83280e57",
        "cursor": {
          "ref": "98abecfd-8151-41fc-8257-8a09f8a961db",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "32f776e6-cc6d-4096-a8b6-87636a3b2d82"
        },
        "item": {
          "id": "a2e560a0-11b0-4fad-8cdf-37fa83280e57",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1f0c1219-3604-49f6-9324-134fb1a8aebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a297199-5c52-4bb7-be01-1172d6d64f1c",
        "cursor": {
          "ref": "af555094-897a-46b7-91fd-d059270cb259",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ae59f11f-2a8a-4fb9-b8a7-6879250fc60b"
        },
        "item": {
          "id": "2a297199-5c52-4bb7-be01-1172d6d64f1c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e9795e7f-eb28-495b-bdb0-402b25ef3787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc4f263-1a35-471b-8051-db4abac53856",
        "cursor": {
          "ref": "653a3f3b-f0e9-48fa-a0ec-899c7af178d0",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "051c44fd-130f-4e82-8819-8f76589fd68d"
        },
        "item": {
          "id": "adc4f263-1a35-471b-8051-db4abac53856",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "171e977d-e8ba-4a2d-b550-872b160e2163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab95f3c-0c34-4268-9783-09ec7417bdaa",
        "cursor": {
          "ref": "2eb788a3-318a-48c4-8592-d8180aa326f6",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "673fbbb4-fdaf-452e-bbef-71ec1c144a31"
        },
        "item": {
          "id": "3ab95f3c-0c34-4268-9783-09ec7417bdaa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "65c9edd9-f980-4d87-b37a-6bc41695deb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3794684f-b374-4c15-ab0c-7b3d9942b1b3",
        "cursor": {
          "ref": "6ba8c5ba-7ccd-49e7-ac5b-2ec75faeda2e",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "03da3541-8aba-4e70-aad2-f95750d4e9cd"
        },
        "item": {
          "id": "3794684f-b374-4c15-ab0c-7b3d9942b1b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "859b472f-bde9-46f2-aac5-fb7d43c8b4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd1be9f-efd4-45ec-88ce-184522b3f2f3",
        "cursor": {
          "ref": "7af5829b-ff77-4ab0-a2dc-c56e4af5c00b",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "15dd6cb1-5bf0-44b7-a831-26226a31a8c5"
        },
        "item": {
          "id": "2fd1be9f-efd4-45ec-88ce-184522b3f2f3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "69570eb7-a0f3-442d-9d14-947ce19288e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72e6f8b-21fd-41c0-925d-87454d38e268",
        "cursor": {
          "ref": "0613bf38-3b60-43bb-994f-001c50b15ba7",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "49182378-2bc6-418c-8fe1-6c9c28051db3"
        },
        "item": {
          "id": "f72e6f8b-21fd-41c0-925d-87454d38e268",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b9aa7cb7-87a7-43d5-bc25-65d5afcd1017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b14f44-2675-48da-b459-2d83845703ce",
        "cursor": {
          "ref": "dd2cbe74-df93-4ecf-be04-1ca884a55c10",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6a55a63e-e68a-499e-af1e-0d350ec61de7"
        },
        "item": {
          "id": "87b14f44-2675-48da-b459-2d83845703ce",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fbc1596a-5176-4892-8634-c225ffae3622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec6efe8-8726-4616-bc2c-4de9fc64a6a2",
        "cursor": {
          "ref": "0c291d94-e98c-4270-9f18-57c6a0cbadfa",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "734bb412-b16c-44ae-b483-06845ab2e4e0"
        },
        "item": {
          "id": "6ec6efe8-8726-4616-bc2c-4de9fc64a6a2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e3aef235-49a8-473e-9089-099176e3b7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac99695-9fa6-4f4c-906f-9d87563eb6f2",
        "cursor": {
          "ref": "6be221c6-72af-48b4-a978-683c2cb1c581",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "58812589-6227-4f9c-a7a8-6b7b439c7182"
        },
        "item": {
          "id": "6ac99695-9fa6-4f4c-906f-9d87563eb6f2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "386a869f-8fa9-48e4-83f8-05217840570b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2869695-fc25-4263-89dd-bdeefcf82705",
        "cursor": {
          "ref": "7492b6cb-eef3-45e2-8dee-6c7d8f16adb8",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f4b58f5a-b1b6-4066-a223-d77d598674c9"
        },
        "item": {
          "id": "d2869695-fc25-4263-89dd-bdeefcf82705",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8879333d-bd2d-4671-9ccf-1a7b31e4370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef06519f-fcaf-4765-a9e3-14b48079180b",
        "cursor": {
          "ref": "026b6256-5722-43e4-96e4-e8b80663cb98",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fde0eed3-aeff-48cd-8643-5700ebc4c707"
        },
        "item": {
          "id": "ef06519f-fcaf-4765-a9e3-14b48079180b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "34997e9a-9682-4083-8681-d0a26639a818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a998a2ae-97d5-474d-9105-e54dac0a307b",
        "cursor": {
          "ref": "fb52dba7-c1ca-489a-b8cf-f6bdd5789e33",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1fb1bd27-a58e-42f5-8b29-d80c879abc33"
        },
        "item": {
          "id": "a998a2ae-97d5-474d-9105-e54dac0a307b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c8baa52b-b11f-4a68-af7e-2185de849b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a6bcff-e3cd-4a25-98a2-02110e436a2b",
        "cursor": {
          "ref": "69753694-eb53-4a69-a20e-d73b26979cae",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "90b45265-2469-47f4-961d-80b40d21f92c"
        },
        "item": {
          "id": "c2a6bcff-e3cd-4a25-98a2-02110e436a2b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e15727c0-bcf8-4be7-829e-f09a22f239c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439ee91f-8570-433c-9532-43023069e82c",
        "cursor": {
          "ref": "86df7ab6-b375-4860-b1ac-723ec8767afd",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "012eb525-7abf-4933-9386-7143a36aab86"
        },
        "item": {
          "id": "439ee91f-8570-433c-9532-43023069e82c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a1d883db-27bd-418c-ac33-cf4ebf701125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919ae207-d57d-4435-94fa-9dd009f73a8b",
        "cursor": {
          "ref": "701c9c1f-84f4-4cd8-9a63-8a1e289a2e1a",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "873c4024-fd49-4310-abc4-6cb728c2c6f8"
        },
        "item": {
          "id": "919ae207-d57d-4435-94fa-9dd009f73a8b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "88497ae7-3d77-42bd-b602-1e694ef74b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a0e8cf-1d30-4170-8b0b-9e768b9019e2",
        "cursor": {
          "ref": "1230df4f-6622-4ad9-b8ce-32b05c4f5109",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c4626e2b-7016-4622-97ce-43fb01b9a42e"
        },
        "item": {
          "id": "e8a0e8cf-1d30-4170-8b0b-9e768b9019e2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dec42323-5a78-4630-84e1-739038fe55e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb4a33-3291-4d60-ad7b-e52fbc9e803d",
        "cursor": {
          "ref": "2f9f7036-62c3-45a7-a365-588ae1dbb0a8",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5f7ab863-9650-4026-aad5-e710d2fa3b3a"
        },
        "item": {
          "id": "8bcb4a33-3291-4d60-ad7b-e52fbc9e803d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2b45df5d-9c2c-43da-ae2c-46685bcdb11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a60592-5457-49ef-9a28-5052fdb641de",
        "cursor": {
          "ref": "04df7b10-237f-42a5-aab6-9851d4488d50",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1fe50507-021d-4317-a513-49a33fde1ff0"
        },
        "item": {
          "id": "93a60592-5457-49ef-9a28-5052fdb641de",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "05c8b2e1-9834-4638-ac8f-2b95c4c24d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ba5c5f-3ab9-4ed9-bcd1-be905c06a3ef",
        "cursor": {
          "ref": "3556881f-a9b2-473e-ac78-9a831bfcf7ba",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6472d5b1-de54-432c-a0dd-b12ac64eb04f"
        },
        "item": {
          "id": "42ba5c5f-3ab9-4ed9-bcd1-be905c06a3ef",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "426d6bda-aab6-4f31-b00d-7f5980d26b1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06721286-4f2d-4fab-9efd-815cea9363e5",
        "cursor": {
          "ref": "17a131c3-fb64-4122-baff-0aaeff10d844",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dbb7db88-2e75-4b0f-b0a4-5325fb3b9d57"
        },
        "item": {
          "id": "06721286-4f2d-4fab-9efd-815cea9363e5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8fe5464e-ce3f-436a-a80e-df873a783405",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 290,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d140685-f558-4310-8e05-67cc45150fa1",
        "cursor": {
          "ref": "9e99d681-18f7-420e-977c-cbecd9c189a3",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "604f2ea2-07ab-4657-9aab-2910a2d40515"
        },
        "item": {
          "id": "4d140685-f558-4310-8e05-67cc45150fa1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c3fed238-bcbf-425e-9526-49d8d0859288",
          "status": "OK",
          "code": 200,
          "responseTime": 380,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1b80b0-5a53-49a9-bc11-17f8da1ce9a3",
        "cursor": {
          "ref": "21a5381c-9ed9-4db5-bdc2-ab25f9122754",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "395b944b-d04c-4157-b586-055e05558bcd"
        },
        "item": {
          "id": "5c1b80b0-5a53-49a9-bc11-17f8da1ce9a3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "12777105-e044-4889-a5d7-2f94e9f35339",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e8ba4f-2f8c-4e54-89fa-1be4fbd79ff7",
        "cursor": {
          "ref": "7e2931b0-28f0-4c54-8233-733fe972cdc4",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f27d7e2f-eb33-47bf-8114-09ba1953de04"
        },
        "item": {
          "id": "12e8ba4f-2f8c-4e54-89fa-1be4fbd79ff7",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "d8159858-219e-4d8c-bded-e57bf04bed96",
          "status": "OK",
          "code": 200,
          "responseTime": 373,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0687ba7-3498-4ba5-a0d5-012077e2ff24",
        "cursor": {
          "ref": "b800ba71-7fe5-4791-b613-369433d278b9",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7f5e2dd9-e69b-47cc-8264-4437397af9dd"
        },
        "item": {
          "id": "f0687ba7-3498-4ba5-a0d5-012077e2ff24",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c7fc4b63-d088-40b6-aa9c-d9a22f3bdef5",
          "status": "OK",
          "code": 200,
          "responseTime": 374,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9705614-d4bf-4fff-962f-cd2bd5b06e79",
        "cursor": {
          "ref": "6da47810-b86b-4320-8f17-d6b4e6c5df55",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5ff84a52-aef6-4769-a747-a4d05eb8e3f7"
        },
        "item": {
          "id": "e9705614-d4bf-4fff-962f-cd2bd5b06e79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96a0e05a-3cf6-45f3-be84-ed48067918a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9705614-d4bf-4fff-962f-cd2bd5b06e79",
        "cursor": {
          "ref": "6da47810-b86b-4320-8f17-d6b4e6c5df55",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5ff84a52-aef6-4769-a747-a4d05eb8e3f7"
        },
        "item": {
          "id": "e9705614-d4bf-4fff-962f-cd2bd5b06e79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96a0e05a-3cf6-45f3-be84-ed48067918a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9705614-d4bf-4fff-962f-cd2bd5b06e79",
        "cursor": {
          "ref": "6da47810-b86b-4320-8f17-d6b4e6c5df55",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5ff84a52-aef6-4769-a747-a4d05eb8e3f7"
        },
        "item": {
          "id": "e9705614-d4bf-4fff-962f-cd2bd5b06e79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96a0e05a-3cf6-45f3-be84-ed48067918a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8791ca1d-5b06-4092-8382-8097cde50c57",
        "cursor": {
          "ref": "482d7521-2a2b-4703-b4d6-2845addaf046",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46769324-497d-4ddc-b650-f5d9bbc0dafe"
        },
        "item": {
          "id": "8791ca1d-5b06-4092-8382-8097cde50c57",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "13797919-0085-4703-8add-e986e90a0e41",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 284,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc85e52-9555-4324-aa5d-fc204863a5c4",
        "cursor": {
          "ref": "b5528bf7-b3b8-4cb9-a4d9-dce850267f37",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d5f56a6f-3a88-4e7a-a648-b68d8236d593"
        },
        "item": {
          "id": "acc85e52-9555-4324-aa5d-fc204863a5c4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8ccc9b90-0624-4e29-bc55-2ca0f10cb982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc85e52-9555-4324-aa5d-fc204863a5c4",
        "cursor": {
          "ref": "b5528bf7-b3b8-4cb9-a4d9-dce850267f37",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d5f56a6f-3a88-4e7a-a648-b68d8236d593"
        },
        "item": {
          "id": "acc85e52-9555-4324-aa5d-fc204863a5c4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8ccc9b90-0624-4e29-bc55-2ca0f10cb982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3429b8dd-9fc8-4d71-bc49-ce1b9af0c4a8",
        "cursor": {
          "ref": "99a02f7b-1d04-4ec0-9213-077e1385cece",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9d5eaaae-1421-490a-add6-0c8a92a6c231"
        },
        "item": {
          "id": "3429b8dd-9fc8-4d71-bc49-ce1b9af0c4a8",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "00c0752d-e9ec-4e26-bdae-4ecad6a4f10f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb27ab9-4836-4bb6-8af2-1ebe84d27d5b",
        "cursor": {
          "ref": "c5da2924-d392-4ae2-93c6-4d24d5b8a2fe",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5011e606-b53a-444b-82b4-23254414edcd"
        },
        "item": {
          "id": "8eb27ab9-4836-4bb6-8af2-1ebe84d27d5b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8f3d1406-464d-419f-8774-b4f05d797a87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb27ab9-4836-4bb6-8af2-1ebe84d27d5b",
        "cursor": {
          "ref": "c5da2924-d392-4ae2-93c6-4d24d5b8a2fe",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5011e606-b53a-444b-82b4-23254414edcd"
        },
        "item": {
          "id": "8eb27ab9-4836-4bb6-8af2-1ebe84d27d5b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8f3d1406-464d-419f-8774-b4f05d797a87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdad3c3-fa1a-4092-9a73-77e4a60958f0",
        "cursor": {
          "ref": "66c8cd38-ff05-4cae-a480-be1822c776fa",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "32fe52b0-ea02-43ff-aa85-07c498c8d0bb"
        },
        "item": {
          "id": "dfdad3c3-fa1a-4092-9a73-77e4a60958f0",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0be85447-22bb-4979-8d4d-060c67e10f05",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 540,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}