{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ad2defaf-cfd5-4921-96b4-5e90f20d2847",
        "name": "Clear Cache",
        "item": [
          {
            "id": "909aed11-f586-4b0e-a84a-31fe4e951fd0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e53ccaa-aa2c-4b1c-95fd-bf3236a8acc7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57e51147-1180-4813-a1c9-92349f7bdb0f"
                }
              }
            ]
          },
          {
            "id": "430e5d17-bcbd-46a5-b520-038d6529a909",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d69a0974-1141-4adc-8f13-7a96291910ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f5f45a93-8c17-4bf8-8341-101ededd397c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "88a3be48-799e-4bc9-8f57-b28fc243bc81",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2fdaf720-6d3f-4792-8bab-793b58a184d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5c0646e-97ff-45f3-b325-0b2c831ce33c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e867c1a4-2cfe-4eaf-942d-dc21fda444c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b77195b-c863-4107-8256-42d7179a86c8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21113fea-90c8-45b7-8145-c2edacd3063e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71493927-ed01-40ca-be1e-ae4955abd802"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6035e4e5-fcb1-4065-b966-cc48c85cde7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d895acfa-5462-473c-aafc-e7a8dcb8dec5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f6ad828-6be6-4c50-af02-19cf155e279f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6b3adc3b-60a0-4c7e-916f-3ee35c6026b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c12c243e-5210-4cb8-8591-b667e918da54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ac6dfa0-3d6e-44fc-afd0-800789acff4e"
            }
          }
        ]
      },
      {
        "id": "037bc648-03f1-45d6-ba93-e110ccfcec53",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "264f1471-61ab-4187-97f7-62cdd8dd6826",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8839085-24ba-4d88-bfd4-0f3100ec32dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f351b5e6-e2b3-44e5-8148-e2c730d4eb58",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9334a2c-953d-4f9e-8012-95ea5304122d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b006f366-a44c-4897-96b5-d5982ed9e491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4822d858-8e53-4856-8b5a-d9e91de250eb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ae2c88-a1db-4644-a7f6-5996cd944e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e50312b3-1732-4d2d-a7fe-eb65f05f4cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da17788-5e0b-46f4-9f7c-0bb5bc5f2297",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c2b1be-361e-4e51-a752-1035c7e7a048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cfe9675-9da0-4f3f-a724-ce3c700f5272"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb648bef-945b-4238-bc28-9a1a0fa472a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77e202ef-6e4a-4e07-965c-806bac7e7691",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac66bd8-5a74-4342-80b9-eb55110dd4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb91fd36-fc0e-4c7a-b63e-a6decb6ccb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd18299-16f4-4aa6-853c-c4811b662238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4307fa29-e0c5-415b-a0a4-e4d485dfe975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a20bb5c-8456-4f6d-989f-c6ddd789122b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40681192-42ef-410c-a195-8ee3d1640bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad526070-b84c-4186-afcd-abf718d17911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be02b36-31be-4872-ad27-9d4d39d89ae9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "99ecc23e-aa94-45ce-8c29-786dafbde192"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "84c08e90-f5a0-400f-87d7-7b4d95b632cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65cb0425-e6f9-4b7f-b068-145ce367893f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8774da5c-4275-45af-9d6f-cd8941a2ac25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "71ce5823-5fb6-4a91-89c0-9589fa7c1531"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "913015d9-dc0f-4283-b838-7ca5777a51a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "58bd53e1-8235-42ad-8ab5-fedf2f282f8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8709e7bc-6e08-4671-867a-fdc7990e3388",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c29eaed3-9ecb-4141-beb0-0aaa706a957a"
            }
          }
        ]
      },
      {
        "id": "c7ec917e-1ba1-4c0c-bae5-54fac221ee62",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8d84bab8-25b9-49ca-a764-165bb830f126",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e179be6f-2c47-4822-93a4-96e49bd64abc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "627a3c9e-e7cb-400c-90e2-65875ec66d8a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeb79ea-54f5-4dc2-8ec9-80b8ceb8a0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9a48a7-3070-43c7-9a67-c53938ae4892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac62f085-c020-44fc-9936-4b7c43fd2e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b206a658-d1fc-4ba4-8742-6af2c3f2269f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9c7ec2-1c28-41d9-b68e-52f0d774b3fc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c58cbf-251e-494e-8a33-0689745c8e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3031823-4358-442b-b0c3-eb6bbdccaefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0f2f4e-119a-4ccc-9288-f3399e94fe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68879118-0e3e-439b-9dbc-fd84357cf643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb2b617-c328-46a8-871a-d75fbb8ba629",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f30e84e-43f0-4b8c-b55b-e6c622af8557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a0afea-7df4-4b71-88e3-97b41e960cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f4c882-ea6c-4fa5-8051-742e702fe979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "370fb29d-5d1c-404b-8d25-15e53fb5d0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6db9ac9-81dd-4e4c-b1ed-522b1fb52a57",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d3649d-528b-4e2e-b6bd-72e0aee3466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8868ad6-1469-4bd4-aa7f-47d3736a182c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d281fef-a442-40c3-8218-ad684b0a9b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de7219e6-4a47-4d83-b8ea-c9d0de170eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c79d90-7ef4-4f00-9c90-5fe62666b836",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6e716b-35fb-40a5-ba39-7441957fc473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d150491-45cf-4bd2-805a-338c191251cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838f8b56-edf1-497d-bc01-a9d7292c0295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3694b36-0e0a-40b3-a395-ab190eb8c9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454812b7-d239-498c-9ceb-c5604e2053de",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a339265-684f-4bd9-a033-4ef1838a24f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315befdb-44d1-4881-a7c0-da11009eaed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b8b825-eb07-48c2-a1bb-30fef638ba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56dfd6f3-becb-4ef7-955d-23964876fc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04cfa96-a118-444f-ac0f-0c8cd370b4a8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfd1613-7157-4a38-8e86-9be7b198fba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582f34a1-3e99-41c1-831c-5b68a6140f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91135ef3-933e-40b5-bc6a-5e1587970258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42fa02e4-8962-4ec8-ab26-4dd5bcab2aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd07dfa8-d3db-42f0-9e4d-4917ae6859f0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed62085f-3649-46e2-a0ca-ad762c68ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226858a1-5f68-4b2d-a648-ffeb7c7774f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76043d2b-1fb3-4a8d-b465-04bbcaaea760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6863562-82f4-4177-af26-4123e2ca65c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c72741-431b-4af9-879d-6177c92c8f0d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fe5038-a95c-4bd3-98f8-fb4d6ba96e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a67951-4434-40c3-a6ee-6df28b2a1334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5b26f4-c01c-4274-9bd2-b831f802a96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea2193fb-d323-48cd-897a-b2af5ef3809c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6e2e39-1322-4835-9713-75575bfbddaa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c675200-ca03-4b84-a836-c604c7052489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046b2038-9f4d-462b-8c2a-c3712c033a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a62efa-e09d-4353-be02-6c05e4f1a20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5540dcee-8ec5-4e4d-99ad-540a9aaeaddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789db728-b55a-4946-9ff0-61d8174ed400",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d82b55-f9a0-4ab1-98a4-dd0e076d7622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22892019-0745-44cf-a4b1-962d3afdda27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5b134a-98d4-4865-ab82-6898aa841e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23d43180-7f9e-4d4d-8d0c-5aad2cce19c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dcdc8b-2829-406a-9ee7-ab8ce7ad36ca",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1eec00-904d-4221-b2cb-8fa41d16ed0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058f32b9-29da-4392-9801-b1efe2f128f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6ab28a-4bd0-47ac-8aa0-9481f010cdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86790c2b-cf4c-48b3-9bb0-48effd6721ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f03282-2315-49f5-b45a-bcb31dd5d316",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6520e3a0-885f-4fe7-bd62-aecc0610c5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37091121-2e2d-4781-84d9-189c5be99e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a82b39-3499-46e6-b88c-258f916c7d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38d8274c-4345-4644-b3bc-ef982f3d48a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e98f62e-363e-4329-bb6f-0f32c1204c7f",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c95ceb-435e-4336-8d15-6c93e15c6019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa441b4-b4ee-4454-b4ce-7d7587a5b9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb366ab-e693-4418-ad1a-577b9673bef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c687e60-43c1-4ac5-b361-52c0216befc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c70ebe-ecca-44b0-b40a-2a00f209350f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f8c486-2fc7-4a7d-a160-6baad25bcca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c6699a-19ee-438e-ae8d-c42e5c727caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf20654-3763-4329-8dbf-57d4c05f9bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b11f8582-a816-48f6-bad5-1d478829d8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebab0788-7574-487b-80ee-b00de0993e1a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b985e6f3-ddd6-4ce2-a474-180eb5cf1bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df6105f-a883-4f53-a29a-9f99216f33a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2499b0-ba04-4894-905a-b8036e8d11a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dae7b17-9478-40c4-b857-0360c0c04975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fdf6a5-b1c4-48d9-960e-5e6de0bc4cb5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e17f494-1471-4ba2-87a3-8caaa1b2ea7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8616b97-318d-4a90-b832-a93038b63f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda34c1b-0944-42d1-b6e4-c1825fd23e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81091ecf-3d19-4f9a-9139-3789cd0e5bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9099c658-32e6-4396-82c5-b71c711a50e2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f494d9e-56cb-4514-8d81-428174c9add7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8d14ff-2904-4275-8b62-c34f75ee7928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27855e44-6afb-4ba8-be49-f3260be6a0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e05d118f-c528-41a7-ae52-9f3c7e51f5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc8a486-b7d0-4f61-a80f-498fa5e9c093",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae64f7-9a57-4c2a-95ad-01fee522b3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbf01e1-a6d2-4435-ae5b-89a99bf30dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76c8514-b99f-4d83-9529-a20b1389e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0eb82346-7f19-438a-b210-65cca5d77a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5f09be-e2e4-459b-a794-5db9d61221b5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c47fa4c-6bdf-4d34-b37a-28e9857df27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a82594-b2d8-427d-9d16-83b5ec52c0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1898b7-85d9-4526-abe0-6ad386f6004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc1782e-88e0-4568-b19f-0891c9cdb7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eecd2f-4e86-4e21-919e-301b982fd8f6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cc20a3-23e8-48ac-9785-e67dcdbe5e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f6ca0d-f6fb-4589-9913-46d3589b8b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd35bb29-0b2a-4a3e-8104-92cec1fa34e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7c2895-b52f-4039-b3ff-64028b8cec2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd6ad57-a65b-4b22-a40b-320da6c628b1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff93a4-d3a0-4f93-9ffd-ec12ea4ff7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df887314-2c24-42b5-b2e3-3fdd1e14d043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1931c0b4-6ff0-489f-a09f-4cd00f4bec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a48d27f5-d101-4a4c-bd33-f086d60766f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f8bf16-0746-40df-84a6-bb6a6e9333c7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4452a030-b74d-448b-bfb3-8567cfcf5e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def1473b-7b65-4c9e-be06-6bee2726b95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f3d3e8-4039-4d31-84f7-36a5edf163ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f357cfd-6bf1-4a97-b457-3ab17aa3c9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1680e3-db9b-4970-9e7b-a3ac46c7a310",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfc30f3-dc0e-473b-b6e6-58d55cc6c6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50977ffa-e4b9-4cd2-8547-da7d13fa1b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f0e14e-6225-4df5-8232-c3a21f22f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90042be5-1e9e-4844-a2a2-5a1b8ade11ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47e943d-f171-415f-9632-37176910da0b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7f6b2c-968d-4ac1-ab77-42d61dba29ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae473734-b5be-4e4d-9434-efdab0fe8a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711d8216-38ec-4e44-a22f-142f3b10de10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7371389-509b-4162-9755-d030902fc9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af091ef-83cd-443f-be1e-3902793365c8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa54a6d-dd65-48e4-aec1-3be857e9b692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9151bcb5-142c-4a3b-a924-cb799e4a52a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d4ea67-7169-4b47-9857-0fbc80177584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0f93b2-3439-42dd-b36a-c1921286a7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd49520-2f5c-4ed0-addb-0fa8bbae7ebb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640bc6a2-3923-496e-b7bc-45660a0f9ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9a0525-4819-43fd-a2a4-5aadb9e7109f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f15398-7473-4bff-9a39-76045c14c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d12e585-9a51-4014-b2b0-e54be8c097a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78dcb8d-2af3-49e7-afae-04abb2afe6cb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b0e70f-1342-430b-95c3-86b3c6e2831b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e90ab8a-9caa-4361-a822-b6dd09533981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be9d85d-fbec-4414-b48c-06812cbfe63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ff0ab2-c68b-4b4b-912c-013f045427dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142bfafc-d76e-44f0-9ea5-8a51bfb68b68",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f8a438-6a01-4d3f-8465-b8080cc9ea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de14f7b9-2571-4b87-a4fc-3595b441a21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f61019d-2e7c-44a1-9c0c-a6cada55c2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "253f92ca-7b18-4e8a-a526-1feb394bf967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11e9c15-c558-497a-8b17-e51122053284",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559b12b3-92b9-4d7f-8ad0-7e00a848def4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2837a1c-ad44-4f15-8a3b-fd64840f9918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3f5dad-aff9-4a57-80c1-accf851c23dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6f3aff-9c00-4bc9-85e0-672c2adb6296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a0cbda-d66d-4d51-a767-4c310b25693c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be586edd-4d02-4946-9040-7fe2ea5a7eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94751593-af79-435d-9444-2b5e47c0d8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98ad793-7279-4e4b-9264-8a19c7acb8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b708cc-eecc-4606-882e-8a6a7809a900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10917f11-cd39-445f-b575-212cd16f0f84",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85694079-ad49-4ee1-99f2-674260f6f555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb282a8e-61d4-40a4-9589-54e50b472e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db53999-f216-459a-9309-a45aa2335fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f11f2623-3ee7-4413-98de-ea68618c6924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ddfb70-2809-4dbb-a0fe-80da9804070a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36e7d2f-764b-485b-aee1-2e5370c5a2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224df158-033e-4eac-b0d0-f21ec50ea4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22341f2e-178f-4c9e-a64f-c70f473670b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c16a5ab-6f2e-4a6f-8f40-649f1da5265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd8cb45-3a95-4f4f-b992-2d713f71655c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f02d72-9cb4-49ab-9480-e9d076f3a2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6a315b-87bf-428b-8614-0ca9b3013d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d87cb5-437f-4e73-bdb1-de26941c201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a83fff-9e80-4b5d-8d5b-c5897041cc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9eda6ff-3fb1-4536-a1dd-90e60fc77bf1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8f0986-c8d0-481d-9445-f1fafcabaee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977a7f53-cc74-4783-bc76-9bdd7fe7bbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f68fa0-4668-4be4-bc82-37562ea21971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dd24fd-1979-4cb9-9239-354a048fdbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159c2a24-f6df-43f6-b6c2-87df2f367ac2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d91ea2-9c21-48a7-aa8d-c6cd1cbff439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92db8d94-ef10-40a1-9474-3dcf96e45c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e499ac4b-f22d-4930-9b7a-4fe9091e6582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef0c63f-be61-4cad-8c4c-e68948cb2855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a089ac-463d-4f08-9a9e-cb836ab29275",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e406d49b-1bed-4fa9-bd7b-c414f54abe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75a9330-37fc-4e76-8766-92a2ba22e97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caabc851-95ef-4f4a-8db5-9dd27731c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbdc92c-5578-4cc2-b66e-ae5afe4b7e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cd3802-185c-4792-b29c-e684f3a45abb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd463821-b001-46d4-8f87-309365b4cac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e487e280-452b-4093-a153-dea4fb6ec830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3485f9e1-d258-4856-9b9a-818b2cb68261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad3c42c-db10-423f-9e3a-ca1e76ad6ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f8fd67-ce8e-4588-a739-5d9259d8699f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15165c6b-85cf-4479-b419-96755bd5e17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0eb506e-081f-4a0a-9558-34995d0af966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d4834c-cf18-462e-860a-4eccb48a3610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ffef7f-a93f-460f-bbc9-c3bbad88bae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c7c3b7-ff57-494a-aaef-ffe1185f2b9e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddf070a-be7e-494c-8311-336df48085f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcca0f84-4741-4cd4-9045-24ac4951d008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedc2f6d-d9ac-440f-b90d-73aec86f400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9317a59c-b0f6-4c49-87c4-0227a2f897bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a67abe-f4c5-4364-99b3-c507c2a096d8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e14fdcc-ed07-4db2-88fe-d28db08a9387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939ca1c0-f88c-4882-868d-42b64e411a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea8c776-8a94-40f6-844c-e4c90b36643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a100da-e07a-41f1-91da-306193c4d766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58a4293-8a91-43fe-91a3-99b48b3fcb98",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a387ae7-b16d-4960-aec0-93235f17f684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899cf311-b9bc-4ae7-89b3-a7ac38d7e884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f11c9de-09e2-4259-8827-b677d34fd868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c86fe1f-1be4-4db2-b2e9-a137c1245620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cd0fb6-abad-4408-a4a0-aa5f603a8fcb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b856f9-9686-4375-9293-f91187b6cfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fe9e16-87c1-4f0a-9759-b90428993d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f57a466-26b2-43af-8fa9-a2e25c20bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a200c26-b1fc-4d23-9795-76c2ff2fc31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c241b4f-1632-460f-bc53-4a5b2f754eac",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457400e9-4638-4880-a579-97e7b01faace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6862e65c-a5c7-473c-9a2f-5ae4f0635079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc7e50f-a801-4b8a-b649-1be0afd86315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e6d111-07e9-439f-9d6c-ab8bd6588980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb920b57-37a9-4f1f-9952-b41111a98885",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d8965d-66d2-4c97-8232-ca0298960df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8938b9-5f87-47b5-98a2-876fc528d5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae624e4e-d17f-4bdc-b054-3fed8f5093c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5af0d598-e65f-41d5-a77e-5349e7a88999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04490ae-cd1b-49e0-9a50-772ab2ae0122",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb9d9e2-80f2-4b2b-8513-bac6bf94f290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bd8d35-8046-4432-abee-6102e4d019be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eeb4ba-8a28-45ca-9271-e5892d2510d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd764dc-bb3e-40f3-b76c-4d6091eecb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c94c883-7e97-4467-b926-978a23b4b774",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aea4b2-4d15-4ee9-a96f-3b95d0a97781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8583d1ed-9401-4f6a-aa46-0d8d885cba6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4424a5b7-9734-47ba-8ccd-7c82b8fb59e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e52b052-7b60-4089-ac23-ef8e97f099a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd6e79-778a-435c-8496-b3a1bb2599ef",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40cbb70-f5aa-4d95-b76a-6632abf4536c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdf0cce-e4fc-405c-a64f-3fbbd2ec0943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fb4966-a827-4606-b364-1c243fed50d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b597068-a63b-46f4-be02-8164ac0e7389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9e966a-631c-4675-bf0a-b82fc6f72807",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f384b572-d1df-4ceb-ae83-7bef0419a5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20503a36-3f40-4f4c-b73b-6de097c1a331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889dc1de-f269-4cd6-bdce-8d526a0220bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0b8444-ce78-4a23-8e80-07d6ec7b278b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d01d58e-ec9f-4909-b1ad-a2a1f86a5693",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ac198c-7ae6-468e-8f1c-ebe5c1f2d157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687eb918-7959-40f6-b6eb-fa202391c56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb55873-d56b-4af4-88fc-446b76d60685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1313ae67-bf9c-450b-b5a0-b0211647f24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1792816f-ab14-4339-88ff-143646e159ee",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe7661a-790c-47e6-8e7e-99fd7af3a67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82a01fb-be34-4193-af5d-009de159a37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad2d1c3-1b64-4aed-89d9-5faa3dc9dd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eac32ce-416d-4c22-978d-784f1e5fcc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc70fcd6-1b73-41df-8ae4-7f21c915bfe3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d7f1c5-848e-483a-8446-592c03c1904d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ede30df-41e6-48a1-93b4-ab9c465c4243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866cdd11-9dae-4e0f-96ea-65317f1147e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "408bdb50-1283-4486-b1de-c0a62b72584f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7892acd6-1fad-45ad-a92c-f9ce266a0c7f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a1baae-2f41-4329-9494-0c252baf8064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe961ea-8c07-4b1d-bce9-87e6b54e07fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b4b1be-d10c-4988-8e42-1908a7844bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4011e0b-b731-4fd2-abeb-1ff2051403fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6d4bcd-2867-4866-bed6-8898e37bfc3f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe11ba-ea12-4cab-927d-404828bd3f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ccb1aa-7e91-4d3b-915e-421b2b00b595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17761e86-b8fc-4121-83ae-cc557dfece9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aba8f05-9031-4647-8d52-4fcdc3e3a7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0142de72-a811-4329-8091-01ccfc17d620",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275b5ec5-b6ec-4ef8-9711-fb196a68bc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2f0996-f2c5-4485-ba0e-35987ca22f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69c3eaf-5449-46af-aa10-a5684e5e181b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f357d03-4d33-4359-b463-90cfc9fbdff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf0e1b4-f3de-42bc-9496-399bd771e6fa",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505833e1-a18c-483d-8e0e-bf6a8b66cbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fff21e-bd23-4199-9e0f-2ee84a024f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236e48d1-afaa-4d10-b924-878f24c1b0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d88872-8de9-4a65-8297-19833df80a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54081f13-b663-4db4-8dd6-3f74ba4a6c50",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abff1d67-bc0f-4ed2-853f-dadbbc263e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a583af-7dd8-4470-8c95-2406da1645ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daabc263-7744-47c7-99a3-0f32dc16d792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a203e26-70f2-434e-ab2c-da162bb350b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d3584b-32d1-4576-9a4c-41780f0d5333",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c88d6-8b2c-4417-85c6-f3061336c23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d08fe7-6ce5-4b26-b87f-db19f083d9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edffa51a-cb1c-4ba4-a58c-027789d2c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cd243b47-7a13-4198-ab5a-9c9bdca964f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2328655-529b-498d-ab0b-d0bb911f6dce",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49983fdf-daf8-4d51-9d47-b7e70d44d04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c695e67c-ca97-4397-b0b8-0de88823e14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d855c0-2e07-4f79-a93c-9e9c33111171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e67e4c99-29b7-4008-a9f8-a06cf8669278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db1f9f7-80b5-4392-bb65-990678dcd5fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258dff55-6eb4-46b0-aacd-2a5f006aa100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff43d115-011d-4f2e-b39d-dca7e2d3a153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f96eb07-b8b8-48ee-a2b0-2c85f83e9992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7148f338-ac0b-470f-a326-2a1d286acd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00125010-4712-43af-8764-c626066f69fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a01272f-b7e4-4502-8256-b645187796bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2b2e6e-c913-4a73-813d-fed4e6c46c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaa2017-97ef-4b7c-aeee-3231389beeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "059c2b5c-cfce-44cb-af3c-2eea58a9c2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c09e80a-09f8-4350-be77-03e462e41734",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d3b92a-e5f6-4a36-bfe2-d64a6bc6a1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b249c354-f1a5-4538-96df-c89f948caa0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25ddd6a-5d20-4691-a947-abfaf5ca9afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "035369c6-b515-4f37-a0cd-48933c734a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151d88b5-4687-410b-a14d-dba8045ff2c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dac0a9a-93ba-4945-a333-9b1e11559c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b651a09-8fd7-461f-84cd-4fa04cdfef4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c2946b-00fd-4c78-b9f9-55b12bd1cc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d1f5e4-2da6-4bd8-9048-24f05f709e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f194fde2-db7f-4914-b12c-2548291520f5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa1b5bb-e9e6-4b0a-9704-f328879ab1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86232ca-d1ff-480c-82a7-e71293dfd798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c4daac-564c-4706-9381-b632d6c19e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6cadab-d4d3-4f3e-a405-3a7f496c8132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b102b9cc-8344-41af-bd68-180bddb57641",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43e0c94-a2cf-4e25-847a-87079d62901b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa5aaf3-74cb-4fbc-bcd0-27e4e78e755e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0675d3-a714-4188-bbff-323c2f390025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "155890b8-7770-497a-b811-f98e99bc62c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188aecf5-1adf-4385-96c4-0da0cb953424",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8458e924-39d1-4f8e-882c-e3da66d616a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401ae68f-8b20-49a2-b400-e561a1ecdeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc44d232-ca66-4c78-909f-8992f9fc821d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30767875-f2a7-4456-8480-4e4023662e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18edc5ac-f457-4be9-90cf-02dc9a232acf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ba4b89-39b3-4b4e-bf25-f1dde4ea2867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1014d96-a23c-4fb3-9482-9224b3e6f69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172fe4d5-e382-4f85-bc42-c2ee8906bde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e25ab34-d1da-422d-b6e9-2338916e29c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ede54d-e0ca-41d4-9384-a05eb3237987",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d149d6e9-06f3-4437-b351-830184b23237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec6b597-dd65-4d35-a041-28ea8ea9bfc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c80010-8e22-4593-ad6f-8848ab7dd53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b6c1e0-6cff-4c37-9c5b-5572db9d4131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b5b8b8-455e-4040-a384-a45644b905f1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fd413b-b804-488f-b021-e351c5570144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648282bd-4862-49ad-a8b1-16158ba4b451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22077590-3ec4-4029-a3c2-5c13a008a0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "801e6d65-3398-4121-af4f-479e8e1c2abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeed03a-a733-4abc-999d-16016e4aaaa7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eb325f-bbf2-4f7b-b52a-b745f3f46ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77df2cd2-41d8-405c-8cca-46b751f2f92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949baf67-40e8-41a1-8e05-4a3a2a4f2fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "facde457-de79-4c43-9af1-f0ae045b0cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2792d738-f9e7-495a-8815-3a3990fe2961",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6dd7ae-d031-4dde-84bb-4901f7d302a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd487807-e03a-496b-81d8-91c874e47414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4528b56f-bfea-431d-ab2f-a3bb120e89af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "119e780c-6d67-4218-83d9-694e178acb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fae13b5-e629-4c2e-8556-4fc063326d8c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430e9630-99e8-40ea-bca6-657c6b999dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e4929f-4254-41bf-a3c3-8971c9a64f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee2ff4b-2433-4082-917e-2dc52d793e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19cf3c38-9aa2-4616-9050-442848971705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caad85a-b7bb-4171-a33f-f3596259e288",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b001d1cc-8f00-4e5b-a035-317157be4aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc6b10f-330f-4b3a-8fcc-c84739af84a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea33f40-6f0a-4a83-bddd-2bce7064334b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d21ff213-7aad-4a1b-8e3d-e9ca1ee60cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b42e71e-23ce-4afe-b0db-490dd7230149",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03b0e4e-f86e-4757-bf8e-09d198677374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9318c6-36fb-4387-9922-88ec8d240fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e0a66b-f5b8-4f0c-8922-f75b02f971e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d29f58-14b6-49d0-ac4f-0eab159159f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113fb739-4ede-4a51-89ae-ad1f4dcdf023",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b23ff-348f-4424-95a7-5569a70aa2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824ce214-5305-4159-92aa-9c03f9a42293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926ba069-29a4-440e-b22a-664385645fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d7b844-63aa-4f3e-9dbb-e419f7d83f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bc2fbb-0ffb-4a3e-b939-42f2b73b7304",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6874aec-353a-44c8-b4a8-3aa63aa85fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2844fc0b-2f20-4943-8ecc-9f4972cb3259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4045ae8-fa02-47ec-9648-c5c81f7277cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8519e581-5e16-4efd-a5d9-9f33d7299788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3e4e0e-b80a-4881-88fb-38eb638490cd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b070257-051f-4180-800c-d490e274895a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08319204-e066-49e8-8d59-3c439879a703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1715ea0a-f79e-446e-b3da-be9cdc5c4025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1565277f-9767-4855-ad02-e96eafd098bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecfa6f4-a8b7-4633-9971-3277a9f2dd70",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c237f515-9faa-4a24-8c90-bf690e6c73a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f864c3-768a-46c0-bc01-6086ef5cc7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb00368-1db4-4d7e-8940-4601ee159442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8b7af3-e829-45c7-b987-4b8c3cd252ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562ba4ed-0aac-453a-9e2b-76adf99644a8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f025c933-ac6f-4daf-854f-38c0f6dbccc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21869c8-197e-4cd8-be0a-6849bdf5eaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c4bbab-4c2b-43c7-a769-2af934b21131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb22d4a-9058-4f7b-be29-5de7ccd69802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9051a3c2-0196-435c-81a0-26e784931229",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacd526a-a11b-4a2f-8cf4-6d1d3dd8ca4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55403fb-e858-477c-92f5-11601d77f77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7174eb38-2c33-4177-a4cd-da8b6cc5b043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "826da6e1-6a80-433a-a38f-56c6da418e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bca0b41-0b35-4721-be7e-1e3d95ec15ee",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9392929f-d264-411d-b9fe-20e5d5089265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b539aa1-dd7f-40af-ba16-ff9199be4a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64462bce-8732-408f-a8a7-5b64ac27c5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3824bef-0b0a-4663-9532-17c26a6c8cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453e585a-275f-400c-b8e3-2479b06ca578",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a542cdc-e167-46b1-8b17-589e05896a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72250c82-879c-454b-8cec-3c1117ce39f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975d176b-875e-4d78-b919-93c50b7df33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29fce461-7e05-4c90-bc88-1bfa91cdda62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce5b6b0-a3b4-40e0-be5f-d32c1122b162",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6ef395-5312-4776-bad3-15924fddbcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d02f11-3f5d-4322-9427-64e592c189e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8aaa650-2dc8-484e-bd84-8d6497a6053f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14f73ec-11c8-4055-b784-53218dd1553c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e776d469-3be9-417e-8b4c-ef70b4e6ecdc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2aacb0-81cc-4741-b635-cefc1cf2db30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876084cf-1718-4c19-8752-2dcd02777dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70afc63e-cdf1-43f8-8ded-5dbca94d85a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "786ef6f2-8ab7-4a14-a82e-2a3206177421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af41fde-68a4-46a0-a356-dff2f3abcae5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7913a22-5054-4f0c-8389-95506b1f5a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f8fa78-5a79-428d-98c8-fdcfc99cb475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f7ab9e-ed67-4bd0-8f1e-f0293519832d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3056ff0-ec85-4215-a218-0ce3986321ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012724e7-e406-4a7a-b4ef-bb9dcc46382e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd57b096-9a8d-454f-b5ae-4010d83302d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021aa6e0-8fc6-45a6-869b-737fa7db3443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8a59d8-8611-4739-b70e-61ce6df8a417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef454d7-e70f-4373-95a5-57d14e0e2b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454b8c3f-c9c6-4f95-9a7c-ce6c9626ce35",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e098ab-5f55-4885-be55-2eac44b67b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d2b823-3f25-422c-aa35-90dbff562d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903615d7-44dd-4735-bc0a-4a09da6c820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e703fa-3348-4e47-a61a-ccb90955df76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a9d3c4-32d0-45c8-9e97-7a6ce4c0e53a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d39876-ef9e-4465-b102-14c76deb271d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b35be4d-d499-448b-ad4f-2478fb67a551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26b8fee-984c-482b-8819-285a7414d93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d305c1-54d3-46ee-9db7-1679d42acc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b9eac0-d3bc-4809-aec2-78833ddfdb8b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7f9fae-d626-48a1-bd7e-7a6fe03983ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86eb1861-bd2e-455f-8ff9-8ad8610b5ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89d9547-10a6-48df-9b4b-0b6f1b94ca22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "916faafb-1ad4-44e1-ba8e-974b2a964be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fc2ad5-8fba-42f2-8c2a-41ee3ce9f35e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9173398-1391-4b18-b7f6-e8d21159a1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06a303d-7f3b-4bbe-9dd0-2dd469802e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4173fa6-6856-42e4-b6f0-4240dd8c45d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7897c95f-5d21-438f-a647-ca9b31e6b23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defacc38-ade0-468d-b01c-2f7ff0459317",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99879b97-fc17-4473-9bbc-1f2573ee52b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc9414c-f180-4bce-8a26-e40c16a5435c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c050b4-63f7-49d9-8202-7c7560b2a4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0214fc-9a32-468c-a115-cff22340b026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d488ea7-f4a1-4b02-8769-0ad813b6c831",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f580009-0925-4291-8e3a-8740e6c9f784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4cb448-edf6-43e8-aeab-95bde6f0c0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6050824-d12c-4e21-bd21-f897305e5041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64d5433a-8fb8-42b7-a81a-734b05b6e684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee35554-343c-44ff-935c-d39b9758dad3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba9555e-226e-413c-996d-63c4837b3412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd11855-2dbf-4369-a361-9854fe80d746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5266108-b9c9-4468-970f-df20a19ee7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3e1a9f-b509-4256-a9a1-24edce375885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0402765e-1116-4ec0-a496-f7391b007246",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83d5e90-8d73-498f-980a-e5ac33298d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4b5e2ff5-a596-4bc2-8be2-69ce94516d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3018c98a-9681-40a9-97a5-29fd9f91ae7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7b9e6c-296b-4817-9eaa-b27af18c41cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e374d09f-4932-4beb-b7f2-49f3767e43c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b4d36dc-28c0-4c83-b956-ff721ae2f061",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757235e0-4152-4a19-a395-52280dba41cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "903fabfe-2ae0-4ef1-b819-68e47cf67fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886052bd-4f11-45eb-8efe-3cb5953aec37",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "02468346-67ea-42f6-b88c-23dce370bad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a645ba26-6988-4718-b31f-8faf9b3cef8d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fd392f-e17f-4ad2-9efc-7bc9cf5ad775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f20205e-da07-44b4-a560-08be237758a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206b7b53-cce5-49df-9e7f-8b6b09be515c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fb25f500-cc43-4345-8ad0-5382143ac405"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df68991b-c0dc-4d80-ba88-ecea52f8f65e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f973fc4-7df1-4560-9ae2-dbbd86c4c00e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd081549-6e81-4743-b1eb-c3a8fe9cdaf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbaefb7a-cd1c-478a-8c75-9347922e7b47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c820b5ba-8fca-406d-860e-3c32fbd415e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd2dffea-fd9a-41ae-b06e-e51f1e719cab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "492c7682-63fd-44bf-9dc2-6c43e8a8829e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1846c66-a616-46fd-84b4-a87cceb0a28d"
                }
              }
            ]
          },
          {
            "id": "9221bbf6-bf55-47ac-b79a-e312d78b70e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa2ec05f-1b50-4e03-9de3-670c96e992ef",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88c54e07-a549-4272-879b-6d08135f1961",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9074812e-1f7a-434b-9c83-b847f9ed20bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "463bcca2-5c75-4073-92e6-95fe58154c8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ce52dd9-0a2c-4cad-8aa6-cf7c50bb1704"
                    }
                  }
                ]
              },
              {
                "id": "d6c0ed5f-cbf7-4524-a09d-4acc5bb37e92",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba72c336-f99f-444f-84d3-c42f97214c66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d095cde-7174-4480-a6f8-6fb796f05d51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19fe117f-2f41-40c9-a75b-27ad78a4ba88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "70acbe03-c27c-4cf9-8bf0-fd83e0382da0"
                    }
                  }
                ]
              },
              {
                "id": "c6226b99-f9b7-4cb7-a3d8-a1e87a3154d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31bc7e3e-b4bb-4bcf-b4f8-9240195f9cb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5f0c5a0-981e-40b6-a5e4-9902dde2450b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfe8227d-4d7f-4af1-a0d3-5e40099e18a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cccb8720-1cc4-4eed-b197-9a90867d3745"
                    }
                  }
                ]
              },
              {
                "id": "01ac533c-16f5-4853-8752-83eee25b17a7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18f918f7-fab1-47d3-8023-1aaf1b10058b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1da7d91-1c2b-4f7f-9774-360bdf06abc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99134c5a-4eaf-40aa-b353-9ee399db9b05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "edde5c51-2071-4487-9f65-86811aba4b0f"
                    }
                  }
                ]
              },
              {
                "id": "f5e1aed9-c5e4-4bfd-a199-20f89e374a2e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c75c27c5-7ef5-463f-8355-20b387f162ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "545578ce-2b6d-437d-b14c-551198968bfc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f0cd837-f255-4002-a4f7-45ea33f8cfa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0b1dd0d-362b-463b-a02b-f6fa9471a657"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78449b6d-d309-4523-a9fe-ddf3a53217b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3525416-6356-4bfe-ab53-b58ce77fa7e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "544c1844-b754-4c48-b6ea-6888f1811502",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b0837d0-3e21-4b02-ab5f-e6a55432476d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16e2c73f-9843-4d3a-9ba8-13569f9b8280",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9de3e381-f1f7-424f-bd0b-05516b86f8d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8afc0e5-d636-4f50-a86e-669add183224",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2d7f060-9f5b-4094-8f0d-08b214cf53c7"
            }
          }
        ]
      },
      {
        "id": "27068750-d97a-4b69-a2bb-135d93ecbfe4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7a47d54a-1ffa-4f8b-9564-739a81586f7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b4a7924-4db3-4e26-bb09-8f217e569c68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "223f1a15-edba-46de-b8f4-c9f353e5da9f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52d0bb2-945c-4510-b14a-4d393c3d8340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c77ed3-4120-49fb-84e1-210c3f310744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf34186-277f-41a0-b2ce-24a476fdc547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5416c3-d089-46b5-8f34-9e18efed3db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c277782-b423-4a17-8e56-615debfee8eb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13b60d6-a887-4803-8bf6-0c4c84eb3240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5743f99e-d549-49ff-be8a-b63e4e21f804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac81a67c-17b2-4b7f-a767-90d920e3cd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0af998a9-3dfb-40ca-b8b8-0752715ac0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8440261f-035a-47e5-8367-f46e4fede3f9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036acf3f-6a58-4001-a855-ff24e08b03b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b4dd2e-75c3-4fa8-932b-88bd6f3baa79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d5ee38-4263-4dbc-b11b-692267c7baa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea09e95b-6c85-4dc6-891c-8fb77d346a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265a3878-bd2e-4f34-be33-cfb24b9cef4b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f52dc21-dae3-4de2-b87f-ab5603c4dd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabb938d-ffc9-4427-a224-2509a17608ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e752a5-613d-4003-84cc-7950d18097c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2a6a96-2219-4f72-a162-c0366915a3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac89e10-2ce5-4b32-845b-9f0966d94187",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67746dec-ae12-4e77-b9c4-d180fd9af994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6d5060-3298-401a-a5af-17243d389734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60921f6f-7e68-407f-a0a1-a2cd87533107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c19063-9c02-46a4-a520-6560788c09a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e70c50-bfee-4193-b29c-da38f8a93622",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522868c0-d4e5-47f7-914f-6ba7eda0d25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab5dd29-d594-46d5-bbc3-589a67ae3a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daa2bfe-cc1a-4c2b-8fed-6def78e791ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9112716f-5dc1-4c62-8355-2efb539e24ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c164613-45e0-4c30-a48b-2dd1024f9fb3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8408d35f-d3be-40e5-a7c7-758386c98e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f2b8e8-b212-49b7-bd1a-00949f29a2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ddb8b0-d36e-455f-8a9c-d101ac15ec93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "67950512-e08f-4844-96af-b098f6fa6adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc16077-bd57-4837-8e0a-6727062bd7ff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f98dda-7ce3-4025-ab3e-0eb8e678562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b91093-fcbc-45fb-9a73-73ffcb2bfb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607ed379-0118-4499-94fd-532067a23ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f347021-305a-4487-886b-61bf78cb9793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d296ae-963d-47b1-82d1-b66dee8f9e9c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbea62bc-a91a-495d-a63f-b532ff46c92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7414b1-d674-44b9-97bc-bf23261a0e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e0f64e-ff5f-4511-b805-8d0bbad46fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4f37d0-f33a-4825-8063-cc8b3d61be0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e063fe3-8b73-4df7-afff-75c31b6e1faa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1872388-e8fa-41f2-a3a8-fc754f5b5a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b6b0b0-c162-48d8-8cbc-6aefbaf04b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864d1f9a-c92f-4b10-b54f-2d39fdb3ac12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a1d4ca-4916-42b3-b3ab-7e28248ea09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180199f2-1a39-4ee6-9a4e-82c6951508f8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6784ecc-7fc0-4409-88e8-aff33b049040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a17780-14eb-4426-869a-c44902adfa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f2b2ee-a876-4333-b67c-67c74e43f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc81ab6e-9dee-4d02-b7b8-0fb3c18c3d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb611ee-e34e-4f30-8c62-565778e16141",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90da079-8fe2-424c-a457-341c43184420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088993e2-4988-40ae-a5f4-988449f67f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a72af2-3c31-4a41-b086-9bc71e9439e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "191dbf91-6358-4f2f-9ea2-e99630be0f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def0df19-6f38-4b54-9471-68ac6b14d2ae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97027c0-833b-4dfd-8de0-d311b4039bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696b505c-48b1-4322-b9cb-7844bd515dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a4b57c-8485-40b7-97bc-dd9de1133470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1e05fb-529c-4e2d-a3dc-56481f5c6fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45d523b-7453-477c-912d-2f32e17cf1e0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cb3fe6-6cdc-4ece-bc47-605934033c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cfd1b6-fc51-4cfe-8ae5-a5909c859be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18020496-eb3b-403f-9712-0fe56f0e4d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5456c5e-5a66-455f-ab63-4f1770b9c982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126ac84e-a9d8-4c00-98b2-bf57051737e7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b393948c-e598-4a53-add1-742e0bfb1815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd368e5-d423-4b73-8bd4-c437b0c92139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4572a6f5-a8bb-44c6-b8d9-4aadea9145d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b31e7a9-ed4f-4a0e-a69b-99d8e2168987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164d2e7b-3b6b-4ea8-a8ea-450fd14c022c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6245fba7-6c4e-40ed-9db1-edb395888104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3d1130-7c47-49ff-b99f-88cf48cfee92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df67c32-61d3-40b8-b113-c7e534dba00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af59f102-19a5-4421-b310-0a1f2401b740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7aec62-651e-4c82-a419-0455eeb0de3d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c051aa68-7daf-40fb-b7d0-a7782d851fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297a93eb-665e-4fb5-a0b2-a74b2bf00db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33731156-4a2a-4838-8507-58bf4d392c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8df060-734a-4371-b88b-409d5464617a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f11e4a-dd37-40c4-9fdb-68c5b806b78c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7fbe4d-71eb-4c51-9459-0f21b8a1f59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e5f3b5-7989-43b5-a55c-f901b20eb672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e7dea2-aa16-496d-8f69-36fe8299faf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "194b1699-2ca1-47bb-9168-5556440e2f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800ef72c-9523-4aa2-82a4-46fcdcd90710",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff648c9-2836-4461-9d42-146ee0f06fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdbf097-7071-4e9e-bbdc-01bfe333f6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce27712-772b-4855-a088-8458130647a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd96d94d-d596-4f60-be3d-ec15f1ff6b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7161df-120d-4961-a42e-f1b9056f812e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b8bcc0-86d8-4603-8647-40f3ca3c601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69ba0f7-acc3-4f8f-b1be-b460d6955f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36d8d6a-165a-417a-b5b3-5242601cccb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "503e6b5a-38d6-438c-ab9d-6343817980a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a42248-4681-45f2-bd59-de0f0456d7be",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6fb790-1991-4a15-85ae-423ebcbf842a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702b98fe-5bad-4bc0-b0cf-543778de7242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60a8b0d-5edd-497d-905d-a1d32e065e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9781cf-e388-4cce-a7e0-36923b6b1f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93a8b02-cb11-405c-964e-5a5e29a45bc8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2442b37-8127-4e30-bc8d-407bba6e9b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d9bdbd-dbc6-499b-8678-a483b41f9f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7423b9-0a38-4dde-b5e1-9780e09afa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba0cc4e-9b7f-4eac-a061-6f06e73dd7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b51544d-757f-408f-ad33-5674a8299571",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1224b4ae-3984-4795-adbf-9ad9eab16582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eeda3db-5c5e-4ed3-8566-92166616b0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0425d009-161f-47fd-aae1-29e0c548e28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec645c7-8879-4e6e-bd9c-29cecadab69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9812ed-70c3-4ee4-a2d0-0c5c08f078b6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc13120d-d5b5-409c-8c40-cd9991aa6293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9751f7d0-f5f9-4092-bb5f-917869374bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78f7b44-71e2-4341-b88a-710d975831e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71c41dc-c9e1-4778-8baa-37b5cfc3b901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7eab0c-1d73-4ed8-8d9d-99ba65b2bd64",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f247f06d-ef3c-4d67-8940-8ae32a412229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001adda6-c23c-4d91-98a9-c02edda43247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06b0722-6f0c-4ace-8c8a-7f9236aae9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2349208a-c6df-456d-a7ad-ba1bfa56dd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f0091d-1702-45b3-a169-9100f53f3548",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6782a513-33ab-4867-a426-fdf457c63452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d8b628-3da9-44d2-aef6-2a016c909f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c10e283-f15c-4524-a0e8-24ceeed09d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91b3cc3-bbad-4119-893a-6f151b7deb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb335e4-b35a-4ed6-bd32-f79d1a90b927",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db85f51-ee17-4c07-86b1-619427d65283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d8d6e6-a91d-4237-ba59-60d146f78f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad155c4e-c162-43d2-a54d-b5b0bc5285db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "013e3152-ce74-4607-bed7-fc5c6a20f618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc14b202-e56a-49ea-9441-4248f4a70344",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb918a79-c485-4886-b35c-338e7f416bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54daf72a-2963-434a-b2f4-6ff781405d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce68f98-35d1-42d7-abea-e1814eb68d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcf70c0-d81c-4699-950e-eefc6adad43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6682e9a3-f2dd-4bab-9a76-c840b04d8def",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c4402-8fd8-4c99-aa27-f502c48f5c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e3d0a8-82fc-4e36-bcf0-0586f22e00e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d69565-0f6d-4a2a-9ba1-a9a14d3d9622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1f0def-df48-41af-aeab-655fd1643148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1e8d76-a286-4ceb-868a-4481468c4d6b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccffe8b-ef93-449a-9056-23f25d3e1a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23e235b-eb5e-4225-8055-0058b5a5cd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed45af-33f2-4870-8c49-0f96baf85dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "778cdb1d-73c8-46ca-943d-554dab7398fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dcc9b8-130b-4c2d-ae01-68a7f3c54bc9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ce6a1e-fc17-4fed-b26e-5ac50cf7a2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83470dac-7ff9-40d8-b722-33d7d94fe5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093b0e21-f5c5-4926-a596-1a3db8a0075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa80dcb-c866-4462-8a64-153c4dc9c9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d0d1ca-c1d7-4df0-a2d2-ea7d89c4b2c7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f841dc85-9bde-44a1-bd01-ba6ac12a4100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c87c9fa-bc8f-4348-a07e-9c27e52d9b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ae8687-e91a-4d82-a7c5-bb540b50f833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9674d50e-5f34-4e64-acf1-7858278a376e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f78f398-d348-431b-89e0-99a0e4070f2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de1ab1cd-f9e3-4193-9e6d-b61723c6319f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a472c24-5209-4fc4-8eea-2ca3e7ef5b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432b3a77-0cdd-4b91-99f3-0dbafe1a9fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5773a287-f8b2-4fc6-bc70-0f49bf77724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb3fe5bd-f80e-4100-aea4-a4ff15290161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582b466f-0c7f-4986-880f-937d06e5fee6",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61818c5d-c484-4c5d-b3da-d4605d9467ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7f4736f4-0fda-443c-8029-93240e836b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e108fa-80f4-46e8-8b91-ab63e8188428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff2c85bd-b297-436d-9060-2b1773193ce6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c64459bc-5c20-4eaa-adc8-a99dd9b240a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16cca0ed-fce2-4200-ac8c-24bbc3040ac4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d66bed38-7781-4726-a53b-5d4d77b1de6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0419963-af5e-474e-9ad0-0e864d3ab873"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b05668de-8c66-4259-a91d-f24f39ac203d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b2ee4ba-ca4b-4a49-8a0e-8c0f3e43b92e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "558d155d-9b6c-427e-9cb1-d72e57042639",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f58e76b-7457-4046-b374-6762c9df22d1"
            }
          }
        ]
      },
      {
        "id": "5ae07584-9d79-453a-b33c-56b8faa80628",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5259a66d-9db4-4a48-bc06-2aa91529ed2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf739f4d-92ba-4da0-87bf-01bf3fbacb8d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49187685-f91e-4bba-bd96-6804303cb9ab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3db6e6-0a24-466c-99ed-4c19bdaa6bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5e68a1-4fc2-4d5d-84d6-49e899ffd149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ed59fa-bfcd-495e-b4e2-c82c36d40f76",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d7305-de03-4362-a7af-c3eee1841c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df597857-4e58-46fe-bb90-0209631ff00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f651f0-4f78-49c9-a8a1-a9eb70d4660b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d103f99-4216-4e9e-a209-9a5312d56281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f031840-ccfc-476d-877a-1f51ea988b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453683c9-0c38-4923-af55-148700a72637",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb692efe-8a2f-4a6e-a12f-6a226fd075c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee96ed72-0a7a-4b36-ae9c-c5ac4a1272e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376f15c5-8887-4262-ba73-abf4474c0d43",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee653d74-184c-4266-89fb-53111c2f433d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11bd62e3-80f4-4e62-aab8-ad41d81fd60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dc166d-5cca-4bf5-84de-0ef1b32e02e0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87449e5-612e-4f42-bf69-c136cf6343c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb02205-e250-4bbf-858a-dc4a4ee4266e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c5644c-06a1-4b9a-abbb-8b2f92e23dba",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a677b0-1346-4ac5-b9bd-d7a4c07c17af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7e40bb-ba4e-48d5-8b85-7eb28b1f59b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f47004e-e0e3-4abc-9ab0-a422964bc8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d04fea2-0018-4e9d-b590-6a5f1fadbaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72ae6ad-6c20-4625-9a71-1e29789ce2d6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fdf71d-3e99-4e7d-9ad4-9084705183de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7583c05c-e971-45df-acef-317cec2bef52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e24b49-5b20-4d87-b82d-7d38d977bb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e949b017-5075-44e1-97d7-be4729a167f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b110f6a9-00b7-488d-88ed-e086bd4ac51f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33abf21-9d9a-48ed-9b3a-2f0d264ba162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab340a35-e7d0-4fca-9787-72f165e6c93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f23f47-03b2-427b-a98b-7d736cf63fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7225f5d9-9f05-4ee9-a8a9-034d6b96cac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4389febf-0dac-43c9-a62c-d1a68a96c710",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41950715-3c18-4a90-82f0-3c1d61f2f648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1987985a-cfa2-4af2-9d8e-824a9abf8117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7b160e-925d-4a14-808e-3e9386351dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb3cc35-f282-4dc1-b1c7-5346a2a4f346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b29494-5a2a-42a6-9eb2-69f8f802b061",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cd5c63-26db-46cc-9e44-651d4068bec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dfcabf-b910-43ae-852c-59093302122d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c8d50b-862b-4f97-8d3b-71bd63a58266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2858a7e5-491a-40ac-84a1-fc201b32aec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d418a4bc-0db6-4825-bfcd-d6dc95a2b17c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c68bd94-0576-46fd-a2a3-9f14e05965e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42edb5aa-2a70-40f5-b6ce-d4c77d42495e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eb1675-c0fe-4c10-92b9-ec33a83a304b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae24d8f-6d7e-475b-8e79-86e1e83a9a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8101c067-5258-49d8-b2f5-6016b46b5c05",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b710420-302e-4dab-9657-baee6b4250d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14082329-f706-4e29-a10b-9e4596d95c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe28200a-30a4-4756-9e45-3e82a9230492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3939ace-b986-4a9d-9825-86244dd82f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286964dd-0452-4638-b547-04974a8a162b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388a0d40-33fc-4dc6-97ed-a59477bebec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68d4e3a-f1c6-49d8-96b5-dd9d1f497078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210be785-c590-4abf-95e2-f9477ea49f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114dcefb-eede-422d-b840-9fd6a1bbc91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ed9c9c-9773-4d6b-b018-d838bf0e907b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a90bc5-1c7d-444b-a0e3-352de707132b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e00b44-92b4-43d8-9422-7d2fe1806a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eabcf02-fe39-45f6-9a53-be43a93e4bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0792c1de-91a7-4be9-8c58-15138c111baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dad6b2c-236a-445f-8866-d71a5dadc40a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9037cd3a-7c27-4e7e-aeda-7f1287672ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d17b4f9-3ba8-4630-8b33-59cf35cb99de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2faaf3b-6f47-4027-a7f8-2aa084a3ac0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c14394-41b1-47bb-b56d-9b4f3845b611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cd87d6-04bd-4018-9228-356b4cbdbe5e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f682e9-bc98-4eaa-a734-61e07cc9d7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb415010-45ac-4b8f-8ab1-9b7516d096bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6485bc0-7a9e-4877-a44f-9fcd979afb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce322acc-372e-49b6-b37d-a9e4efd59077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa943e19-6f5d-4153-b33d-7bff1f89bfd2",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17145116-34e2-4ef0-af0d-9d8900c7a3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f32d16-d181-4356-9b9e-fc6a504b680b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69590108-9c2e-4ba0-8881-7bc1dc40e279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6d25f8-e919-4cf1-8e52-56950823303c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01aaa0c3-9499-497d-a5d7-f0988c93cdba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f255a9bb-b47b-40d1-af4e-777eb19d9a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7601ed-098e-4e47-8bb5-74216dde7731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32fd2cc-2386-4868-a888-144321449429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de4f85c-d82c-4f01-a22e-bf35ac37ee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99de0cd3-f44b-4dc7-819b-aa0ef2760a2d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1415ce2f-8972-4b67-8335-3f618e81256b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92568c40-6cd7-4ec5-bc6b-5e537530b10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb2965b-ef98-42dd-a4aa-bdeb2a850474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fd4ffc-773a-4ad4-a8db-0fef76b95420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce4c802-6776-4733-afcd-2ae0e6ca79d9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbab025c-e189-49f4-bba6-445628f2b9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b289cd-72d1-46bd-8003-a4e607a4de63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc2cb65-49da-4f2d-b84d-64918553ee5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee39b46-307b-4ef4-938c-8882c883abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2200b8a-a0dd-4aa1-93ad-09d0e5df489b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b62e58-2fb8-4fee-a7ac-4248402527bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf18897a-fd33-46e9-ba97-8bf52cc5c357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6644b6bd-8fbd-4813-ae65-f6bae4dbada5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f49339-dfdf-444a-b6c0-28c8c83e305e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764ab470-0797-4924-b09f-e3ae38daa7cf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0b9954-9cb7-46bd-85a7-e0c64c5b0521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b74b98-0f39-4f43-b5dd-b77bfe63da86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e75f82d-f36b-40cd-be9b-4c96ba65ddcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e36097-25f3-47de-98b6-b2a9c306a9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48e1660-15be-4361-bdf5-2983d7407e07",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85854556-8b94-45d4-94d2-b147b6ab22a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1ea19b-422e-4b63-8bd3-3e8fb679e28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a4c986-c441-482b-a8dd-161a17a328dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3895c3-8c53-4bac-88fb-ef750bc9dad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff93b8b-8a1a-40b9-9021-fba141235a64",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642a27a1-61b0-40a8-af92-c6a72c4ebaf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5a187d-9a49-4d61-8fa1-8f224dadfd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd412429-3e1b-4053-802a-39b344cd0363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3462f7df-c975-4b86-a1b1-926fb73a52e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08beb4e9-e44c-4c2b-953b-472e006d3055",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9a314e-8a34-4a6b-ac6b-bb6908fafe77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39c8e55-eade-4630-8011-1b57b3a46246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35d0747-342d-4155-b37c-61fd52e5a809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45b8b6a-0fbf-441d-9dd7-a400aef16bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed22d953-fdca-4907-97ad-0bdcc42ef7b1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc266166-bff7-4a92-9b13-aaebf6a4343b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ab0a50-2ccb-497a-8f9a-6dcc2f329c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd0c932-3a9f-4c18-89a4-bdd019d1ca86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb6000e-150e-4d3e-bc41-c5b4d60d8ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98d4006-c7f1-4574-a4a9-68a6db144abb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80be13c-fd41-450c-9d6b-d798c2c330e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eeaaf02-842f-4761-9bdf-2d6339a25eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb8ed4b-3786-4c45-a1e9-ec55edafed86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610911c3-c56c-4a2a-a24d-c8993b92a9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f41c9e-7c1b-4dbd-a9e2-a966419ada4f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65feb12-8a62-47b0-be48-6727023fa734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa48b2dd-80f2-4623-b35c-353602944d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089acbb7-569f-4d61-9bdf-b58178c38117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eae5589-73a3-44e6-8580-7b8bc032f214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e15133-66a6-432a-a6de-2af36fa14ace",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fb09d1-48ee-4740-9962-d0c8a3a29385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef16342-806a-42f1-90c1-9c6e06760def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9e49aa-7ace-4892-994f-899eb7602aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896b3efd-c711-49dc-8320-010a5f951911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabf6c09-f4fb-45d1-ad42-aa9a562c999f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ce2ee4-e79e-4f3d-990d-c43ebd9c770c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "facb811d-8cd0-43bc-8f39-db291e53b5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975b2b61-d26d-40d4-b275-56ec91f63ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfda208-475b-4b2c-aeba-33826d7bc4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0d66b8-fe01-4dbd-a173-f2bcc46af75b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3930b6-b886-4e66-9ab3-43ecdac0e033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e86dd0d5-ff80-43f0-b8f1-3bb40f445ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa672305-652c-4108-ad78-191aafbab6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314b334b-c2da-4c5c-81cf-e2f6f03d3594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3d9576-2e5b-473f-9bbe-545730eca326",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e584c5d-810b-4235-a159-697fe9368101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cad9780-215e-4cac-bf29-751194eacb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe33264-fe64-43dd-8ed4-6a27d324a181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5eb2e7-acfb-419a-86a1-38d6caa2f3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf54efc-685d-4f41-9665-30ae7b2770f8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ee78fc-a177-4510-9d15-d2467d522b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "586b8464-ee70-4f7f-b579-710adddb6ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a5774e-6cae-46cc-9342-1dba9c8d1159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abeaed53-5dab-4905-ba6f-0e0b1e5fd6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc3dcc8-4b58-4f5f-9c42-d301f02f59fe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2641dda-1455-44e2-8e66-21fb685f6aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9cf39ba-663f-4ed7-8b37-a8c6bf673cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac0e4b0-5d63-4774-a8aa-919a3e553088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6688aeff-28d7-4e99-be69-8da7e7d9a333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e172b2-229d-4f66-8451-369ac13ba21a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beef6114-5011-4d90-aa27-727e09eaed32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5f384d-72da-46b7-92f0-f77c76b7db4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3968cc-98c7-45f3-b6dc-5a653174e403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c691d47d-d09c-430b-b6a8-20e8d2bda307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc95502-7b58-4d28-a6a6-5f1f90a66f01",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc30bca-d25d-4fb2-928e-413795082675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e807ead6-3f10-4960-b560-df8500f81876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55c6292-2773-477b-923a-d1047d11cd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cf31fd-8757-4d13-83b6-ab7a19f0616a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c97bb8-1d01-4127-a98f-a6d4429ebb3f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e29d4f-76b9-4375-92a6-3133c00cc679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18a88fc-11e2-45ac-b1e3-a6c02120909f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b604a5c-5fbf-4707-adce-14ce2558042e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9789e6-0606-4a90-b072-107c7723b5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0e2208-ffeb-4966-9b1d-44eb26782d1e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19edbe45-cdeb-43e6-98bf-641a78d7192d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640eb2a9-9f54-4651-8162-40bbad6b7ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecdbd39-be31-4a86-8515-67b213ba65b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24826260-e876-45ee-a9f6-de4cdee00386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa434679-539e-4e7c-a41b-cd5b13c4fa10",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60679e11-822a-48b9-8509-4645e4f63c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a55441b-2e91-432d-b437-e0a61e84deef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcc0138-dd2f-42b6-b802-31855b59651d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a8ce68-4c1e-449f-9481-4555d3838bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb2bbc6-4846-470c-8b64-9d92731c8c9a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7646d37-a374-4faa-9d46-a6d30dfe3d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8a51df-280d-415c-8ff0-4c93226d00b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43f5c04-f947-49e8-ab85-db3fad18a8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7817d376-7b8f-4c96-9e79-f03e559b8727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190661d0-2611-4b12-a393-d39d29b7b443",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224c1c02-9f79-44b3-96fc-d3035b2f8efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d93d5c3-076d-4c86-80bb-1592c4c667cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b49b1a-8624-4f34-a496-18bc8aca834a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16dc97c-e908-46e5-9657-1e003a76681e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d51113e-3c9f-4c70-b92f-0b9e25e5e0e3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5a614a-6740-4987-82db-e8cd354d3017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214e9381-7222-4ee6-bd4d-94edd4c66672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7858f14-b09f-425b-af31-df14e2243703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07e25fb-518c-4391-b8ee-fd0a1d5ee85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5800bb55-70dd-4fe7-8834-9d90abc88813",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0382060f-f55f-4db7-b2b0-2d1ea2cfebc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1e7262-bd71-467c-8383-ce6303d34155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c64d22-4f01-40c0-bb03-7d5887430554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809cc8a1-da05-4dbd-a4a5-111c92dcc3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75266216-a428-4683-807c-222fe7476bd6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c6879c-1ab5-4b43-a375-6ff6b2a7a369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558730a1-7613-44f1-8de7-a5923fadd027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095d893e-ca26-4a62-aff9-dd25223a0d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72be9f45-27a7-4443-a8fb-0db9ee2161f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e64be7-e4d4-44d6-aabf-78058a93e0af",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb800ac9-f11e-46ab-9d12-b2888f7973ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77642794-4b34-4293-a459-d854c795575c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c085be53-57cb-40b0-a863-c4f86ba7c40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e654cb-54f6-4e76-bf33-ed262d9144d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4824cdb-5ae0-4737-bcda-0ee907c000e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ca3602-0874-4026-a99b-646b4b491a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825701ef-6314-4651-8d6b-85e08c9d049c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c77d62-3331-4726-bed3-d46e18b21e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3574cdce-db6b-45dc-9e8b-8c60b604d8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ab7a5f-c9ce-43bf-ae84-eed3e17a07aa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fa0489-e1a6-4e2f-b715-7789144ac75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78f8101-852e-4693-ac5b-f22065e224a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7152daf-4ad8-4907-9e1f-ab4519861659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96168ed4-77c1-42b2-8213-e119005d9504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dbd58d-77a0-4124-9513-6b0fcb0f520f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1296af8-32c1-48a5-8d0d-77df2cae3270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4684105f-5959-4087-908d-1550ca7e50f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7e3d48-6d84-481b-8ce8-90d7785df9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053a3535-3852-4a6c-9834-2fd9494a6d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9646b1-fe07-4044-a60c-d6eef206322a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d776e317-f090-4dc6-971c-e5e9e510e171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a552c3fb-df97-4774-b2a9-51ff2db585fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a234055e-08fb-4b3a-8acc-a0ee118d4120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0696e751-853d-4ec5-b43c-0dd9df62d084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f67961-e27b-4880-bee6-728acae22b7e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5d7ffd-eebe-4026-8ca8-97b522e723f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7f2364-c517-45e1-9a2f-5d0c0bbecf5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b78e719-2232-41de-8660-d324672bfa57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384f8f30-3a99-4c67-9546-6ddb4d3a04ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58458db-0bba-44af-be8d-2d681cfcc169",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adead56-4690-47da-a2cd-84486dbbfa1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829e8258-c4fb-4610-b93e-37663473641e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f18e2e-756f-486d-9337-ca84355c7700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bccee38-dabe-4cd7-963b-4f0c7c8ff148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41a8079-9c54-4d78-b011-e1f336a2004d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8094ba-1afa-4691-b5d5-a65d392c0d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba94aaa-b37c-4a6a-a156-7441664d2a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98e6f21-0612-4b90-8e5b-f33517d2e903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efc618c-887f-4880-990b-dc063b5408ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9811f8-10af-4c1d-b9bd-0ff29387bdf2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5a38c0-08bb-48c4-8b8a-eab403e3a06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77a6dfb-0c94-4075-bfe5-c85f3725ca49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73270ca0-7592-423b-a352-493ef12115db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0db0378-8447-4b90-b901-d69e700ad3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eb56cc-e868-465a-a0b3-b61079fa533f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb98976-08c8-43b3-bc08-d62d01dfe4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48395514-df77-46eb-bf50-a937e6b9906a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5795ac35-9cdc-4aae-b762-59e48d262289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759f93f7-8751-4897-a575-f2675ffd3963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d648737e-2127-416a-9de1-7ef07880a3c8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584f59b0-5d5f-4d4d-b9ce-b130fe1910d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc499b6-61a2-4ae7-875b-32a4eb3c8b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1ced0f-31f1-4ffe-a196-76f8b02837c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9670da8-114a-4051-9ca1-bf1f89809f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "face00c7-8cfd-4be1-ba96-81a9cde18aa4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e991c91f-68c4-4c35-91a0-e654c8791d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55b4896-bbfc-48ee-aefe-2c4c407aa7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce05fbb7-2a2e-492c-b31c-3afc9b56f28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34000469-46ed-4209-b9c2-c6c6f6ceed5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afd261e-1028-4ed2-8c71-51cf04f6c1c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a04c2e-1264-4a34-8e29-5c9849de5c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53911b1a-784a-4236-b6b4-bd17d3204e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61bb0d6-9e46-453d-ad3b-81c09b1e221b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72037cd-790e-47b4-8d09-2c85072907d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3d4386-aa13-443e-822b-a7ecf7213fa4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e512ba-f6d8-476d-9584-94b19dd31fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3667bd84-28dd-4c6d-a9e7-261909a21015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d821e50e-dc92-49c7-8287-afda1215e15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540a5592-8b0b-43aa-a85b-b4113cd0bb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d0aca1-a392-4abb-b10b-55865c871469",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197e68f1-dee0-4896-bec7-fc2a0f7e562a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b1b861-e84a-4742-b861-7202785aaec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37984f4-7998-4b82-b031-be7c65f47aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124e1fe0-1369-4b6e-8a79-64a785c72faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2455807c-f777-4b78-874b-92f61364559b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23947155-9385-4c89-a758-11336df518af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ad8692-483f-4a0a-86e0-01f9a2c3695b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d98908-5239-4d7d-ac87-ad785fb05ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683328eb-1e56-4281-9a9d-735b07107a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3180f7-c75f-4e7a-9bfe-a2c5f6cf79d3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af973e3-0981-47a0-a964-b518f8ec0701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643575d2-969a-489f-a934-5ac5f91b372a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a74886-2a20-47e5-8d52-42b2436ed7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8deb961-5454-48c8-91dd-5794ccd7a1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8443867e-8438-4631-872f-263e40738885",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d152c592-a34f-4d8d-97c0-bbd8972ccd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc8699a-6252-4f35-a773-14f2e6ab5fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dcbc54-1008-480d-b50a-d996cd775590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de3e7a2-c6c2-44fc-abb5-161c601f71fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f9956a-59e3-4835-a024-cdd0160c4ceb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45fb540-c7c2-4941-9cb9-aae738d7e579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597c88d1-fb86-4139-8b9a-473b238cdc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8090fe46-d592-4105-8694-186d48f6e764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b941893b-e56a-4f25-a083-64cf49be5c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2b018d-a050-40c7-80a0-6f98712b9dd3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f86c7b-ad48-4ca9-92dc-9d06f477ba16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a81da122-ee67-430c-b64c-0781af7cb33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808a3698-1fef-46b9-bb4a-179362e137df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971d6520-2299-4fa4-a39a-548f7f9b98f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f79834-9308-4312-bf6a-818eecea3704",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cf19d3-a627-48d5-bed3-19141b7bcad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563814c6-61a2-44dc-b5d0-33794941de23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfa6d51-44ba-4085-8a5c-b80f172805a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09bc6e2-e729-435a-888b-b7dd450cb08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e495959-dc5d-4932-bb0f-6dbc03c54267",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e147dd8-104e-4b9e-a439-cc66adf2e7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed25f75-7951-43f7-8a0e-62f2a931c3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4f2e20-aaf0-43c7-a08b-825cb185dd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837ecaea-35cb-42c6-b890-fd4c6aed1500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce97778-e13c-4c2e-b299-bafa00e56506",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eab6ea3-c61d-47d2-8d3a-deaa99d46a56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2810006a-5157-46b4-ac4d-fb9ac16f1242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb77b1bd-5bed-4972-acfb-ba6d5b7a6ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462566ef-c612-4bd9-9bac-63d664ca235b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26e60b8-4ae9-4680-a089-ee7ffac98ad0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b23f820-af9a-41b8-b5fb-6fb887a8ca8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83d10a4c-8a20-45f5-a0d0-bdcc8277b838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bc9998-13b4-4400-849f-c9a42d1dfeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2fec7a-0578-4df8-989f-c239d25ff18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d83e6c4-a192-4a35-989a-c1f1a8d2aa36",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b75538-c2f4-472a-a16a-8af6f6a1854c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ed7ce4-2c38-4546-bb38-54998565c6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191988e6-23ae-4429-bd4b-f6d63c01a10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f696297e-6ae8-45a6-b446-78e3b9e5ff1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8187a0e-ede4-4da9-880f-fb2f2d91bc0a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65cd438-809f-4102-9db8-174d1e919bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "739c69f7-94cc-4fc4-94bb-63bd45e8ea14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9cbbd8-380e-4a23-b166-ac946bd8790e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346393b1-b425-40d7-8901-7dcce298077b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e38aed0-03a0-479c-b14f-82f9e470f932",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b70f8-7e7d-4cb8-bccd-229ed7e8a902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ad0ca2-a9e4-4bb5-b934-a95575e377de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f23bb5-80cb-4a8d-bc84-ce8846a2986f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daab146-2872-48b7-82b2-120b1ffffc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3bf879-e9e2-464f-a857-7ce9cb5d803a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07d3e19-1bf9-45a6-9a1c-f875ab3714f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcb08af-43bd-4ec3-b209-9211d4d95f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbfe3e7-3267-4c7a-b36e-2b8db3b70ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae59dce-b5bc-4814-8faa-c67308d2d8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7720467b-f66a-4073-a84d-c81bca6fcca7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c6a1a3-84da-40a5-ad62-d2a87fd89da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702d8879-a216-4e11-86b6-2b15fac69a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d50887-12c1-4fb5-9faf-9a1795440120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0693d4-dce9-46c0-bc15-9389f6dffb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0263cebd-5ec9-4d61-bc12-8da845a0722d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4aa9043-4bd3-41b0-bbae-5a923869cc29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c5f9eb-c8a7-4322-b5df-0c0e0a7f8c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a9371e-6eec-4719-96c7-11c4526aa268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d9f2f0-1316-41f6-bb40-e8a93a795fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae7e201-3dc8-4919-a1c4-fe29f9679bc4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5ead42-2ea1-44eb-bf54-73235c277735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c021c6-0f5e-416e-ad24-63a50870b9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213ffbb1-53c1-4a85-8d74-f1e4648c2ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8709fa62-6958-4bcf-81b2-9f614b2a385b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e380d9b-8fa2-4b40-9350-a4c5e41dedb1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6deb4a8d-3477-4abd-b651-8770ce65ec86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8c2b79-3192-4426-9b75-ae7e722617c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388cbc71-7e47-401b-bf7f-c02220755605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33100238-7a20-43a8-b8d1-20bf3ebab31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4defe50a-5cbe-4c4e-bc19-4d534732dfd7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841ff949-8660-4e44-a244-1cda4c0859f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d173f2-fcd9-4508-8add-124a3905ddba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c756cc-13fd-4873-a567-a452e0ffc2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1dfe4f-0f3e-41b1-8de5-a647762a35f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19eff282-9dca-4e0d-ab25-78626991de00",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0730c5-2c8b-4f8b-8f3b-15f583c502ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0121c31c-8554-4ea7-a1a5-48d0e7ec9aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b52299-c4a7-40a1-807c-6b41edc6de2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850e5948-7b43-4474-9903-84bdd633091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a0bd8c-6203-4b51-a2af-72ea23078697",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9935c1-b2de-4010-ab60-19f6424fa74c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fd8a87-3eea-481a-b1a0-1c60b9938934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8aacd6d-2191-41c4-9757-99689fcac597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208fab81-8d5a-4c34-8d64-fe9c41076b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847ba39a-b33f-4ff6-a52f-28b439706a97",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d21702-6b45-421c-aadc-9baef872ca0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5c3e29-29ee-4ca6-afda-263c0f5caebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f646e3a-ae28-48c6-9cad-4d5a5af20452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17750af2-595e-4b8f-a916-5348f001924c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3cae3d-930a-4c09-a44a-4c250b1f80c3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbe510c-c5b2-4764-8d4d-9776f4c72177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f679367-c232-4a57-8263-698e227a1709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104dc379-9579-42f2-8885-0a6b03741c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6151ca93-5e01-44bc-a29b-3e6f6490c77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debb7a46-66ac-4821-8d78-0572eeb3d792",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228617d4-d75b-4859-910e-00a53b68b4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2459a8ee-97b2-4ddc-8762-bba78b6201e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e92d2e-774a-434f-94dd-ee5cb3708027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea280c21-bec0-4072-9559-972d1f87a2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863cd36e-d20a-42c6-84a7-ce0e27cf7bdb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a80011-3910-400b-9f33-0d6259d664b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a1ffcd-6b6d-40c7-9ec6-2ad9b16d03be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce54007a-2656-4788-a452-198bc46cd6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3cb6e8-61ce-4a61-9a9c-8cf0932fdc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea6fcff-efe3-45c6-9c8b-64baf8edce06",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a3ffa5-db7a-4ccb-a892-90614998789c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d1c8fb-12b2-4a00-a330-b18a07057bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c49efa-fb60-40a1-b99a-eaba314e7ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3887b50-dd24-48d1-b2e0-d82acc0bf5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9729ec9-650f-4519-8729-755739ee6ffe",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03598569-a2ff-45a6-921d-d6f8c1e7c1b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b69ac6-403a-4ad5-b864-eb4549957d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98367025-3096-4722-99f4-ef2920006206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da37d00-22e1-4e52-a6e7-cf47c53feaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260ede10-d58b-4afa-bfc0-5e8c6a78ced7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166e0eb9-155f-4619-a381-cc647ae30349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956de87a-367a-4e41-b014-df74520b41ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451a455a-bfa7-4977-9c6f-118238f3549f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3f4cf3-7851-40b9-867a-f1c6c2df16a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d97f22e-7a62-4141-919c-154fd9adba76",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f47203d-59bd-4084-9422-9e9c66e0fdb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d21176d-2580-40c4-a1e4-8809dafc0298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2842441-8cc2-43e6-96ee-81b0b1d3694e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22b081c-5337-4f21-b686-a76ab77b79f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad4338c-4736-48f3-82fa-47f5b9a70fcb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69f5943-fd62-474c-82f3-96e04d72b6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef0d236-e030-436d-bc6f-c9ccce9561ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af2b41f-fd04-4cd0-8541-fdcc106f836c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704908d8-deb9-44a8-b277-a6c317716721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28540966-b280-489c-a96d-582676079e5e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb0011d-6359-4c63-855c-2e48021859c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d764c0f9-6fc5-41b5-a465-910905971e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c9f352-9efb-4872-bdef-37a34e49a031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02185f51-17c1-4ac9-ae0f-9c01df662aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc7756d-3bda-4414-a7b7-b9b114d82db1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81b53b1-3e24-4c64-9380-43fdbffd04e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24cdeb7-f866-4ec4-b2b3-6e803be786ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63adb90b-2567-42ca-9cad-4680cf61c9ff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a948d7-ca46-45cb-a677-55aea9a85ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d548621-a77a-45bf-82a7-8c52c20d1d79",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14745e9e-316c-4bb0-b6ef-4da986283312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0631f7c-abb2-4bec-a153-b9f66b8cd616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adcc401-a57f-45cf-95ab-8ff57288fa70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38c3fb0-8804-45e2-ad4c-014d460f6178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8242f0-131d-4644-b0f9-3c4c49b3fcb3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0b526c-2401-44db-8e4e-290121262440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9cee2c-9e38-4bfa-8187-f8c77b8ae92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38d0df6-37e6-4415-ac11-c093872e6d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45535f8f-5f33-4b11-87f1-4d30ae7f26ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5dfeb5-bc7c-4e89-8cde-f5cf2d351772",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca9c54-6acb-45f0-aff7-89eb092e1834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5591b917-3a87-4105-891a-60b2085dc6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ad0a55-e5e7-4316-ab5d-fc57dc02f174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8fc0ae-9b96-4253-a547-55b3bd09e7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87ba32f-59a6-48a9-bf0d-7de09742124b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeca4a3a-be29-4aad-800b-31c3654241fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf3739c-48a4-4fec-b5c3-45a33395e947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b1a793-fbfc-478a-ac52-c89d4d52dc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ff4f9c-e076-40e0-9676-9f1cfd839273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd91bc53-563d-4806-b4da-cf76f1bab883",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f09defc-f2f8-479d-a5db-16213edab024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76752ab-8264-4dee-9447-e323b8f2e8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd44a20b-3e9a-4c73-be87-c3792567193f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf9e130-7e30-4b55-8cbe-15071e9a334a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4b8e86-98f2-41ba-81a4-517e94a46cda",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f162f7da-3f64-4d45-9cdc-c324c4fdc325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a051942-7048-43f8-836a-9f5837c17d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2503cf-0d3d-4a3c-84e6-999803fb8c14",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19d2f03-4a74-4531-9e4b-858c6ef937f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1209a29d-ddd2-4600-810f-d61a2e72e456",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca3a531-6b06-41e7-9dd9-88767da45dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82367ff9-12a5-4572-bbcf-a3221e91056a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cee932-0047-49a6-8df7-27dd46838d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c02908-a945-4e0a-a3c3-430a81ce53d0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "052e895b-96ef-4cb9-8a8a-cf3c53717ffa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a550eb51-d305-44d0-933a-e9ed465442a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42fa70c2-1707-47ed-a361-a69ed1590f34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a93274d6-0fe0-4599-a157-bea5c9dc8067"
                    }
                  }
                ]
              },
              {
                "id": "0de703c5-2358-40e6-9c28-dc8b9e148609",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92f29d47-e349-47e8-909b-abc31769936b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f6c055-f3e9-4546-b451-9f908cadcd73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8a801e29-f138-42ef-a801-5d7f3f42b1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33234a83-1d1f-4a85-b8bf-3881dcdbcb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7db430d-8e91-47b4-a55a-bf5932c47bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10b2401-e038-41b1-8937-3460fc93b30f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0383fa2-90b2-42fb-8437-c078b4e9fe56",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b66cbff2-c200-4a15-aa38-91167e91197c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11d5dea-b209-4a5b-b2bc-cd4cac65edfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d67384c-e32e-4a50-b203-8f6fa6b36516"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13a9e395-1303-4b5f-b29d-b7648f6c77f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eddc311c-e2ed-4dd8-897d-0b4ee79c7a4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af6a3193-5843-4b73-9e25-dd54fa6e21df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb139515-3bb2-427f-a696-0c6b9783d11c"
                    }
                  }
                ]
              },
              {
                "id": "1be66624-1b1f-4d34-82dc-5cc92bb8ef84",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8050a32e-8a1c-4e87-a19f-146560be0bc4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e1b00d-ddfc-44d8-b2ea-cf37c8ca854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8b8c5ea9-c111-47d8-933e-fd04351c96ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c23490-15b1-4f9b-9039-bc7ad47d3dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e17cb8c-cc05-4721-9674-0f177ba581dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ecaa6742-825b-42e2-85a6-fc79eeed31fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6033ba45-853e-4c2e-805f-ddf03c0313c2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa9f4ad0-a421-48a0-8c6b-a40c80e2ad8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ebc92b59-f4ca-4623-bf6d-9459ef68b1e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c166e1b4-bf6b-4701-bea5-578b7b549343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37d21f4d-e355-4370-b836-de5aed42360e"
                    }
                  }
                ]
              },
              {
                "id": "fd080f99-17f4-4096-9b0a-ecaad46dc948",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b716018-3170-488d-a997-379eb2aa3e84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d505bc2d-40ed-45df-b1d4-1c896d4ea89b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "783c4f5b-868c-4aa8-bd08-214c80346cb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b5023c8-46bd-4235-9fa5-7f107c29111f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5aad585-83ec-4a16-878d-c4b34c03e8d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "90b9356f-c61a-420b-b776-bd7796e13427"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d705097-fb83-4641-95c9-3cb45c19d5cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a43772a-ae64-49b7-bd44-ea33a19316a1"
            }
          }
        ]
      },
      {
        "id": "e5f30735-4ca1-406d-a5df-ffa69a64c398",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "09cfd73e-711f-4f4b-b977-11d15dcb9633",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c725863e-0f41-44c3-96b1-217a3c1767c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f9e916d-e9f4-4fd9-b475-74565fe924df",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acaf7a0-8b5f-4d2f-9bec-5dd37d491f2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc9cc104-f0e0-491c-83c4-6adc06779d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d91916e-dd62-4302-bd04-cba52c9d6797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c5bb4af-8d84-49f3-bdaf-5f7dcdc9b5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd7022f-748b-4b7c-8871-7c57ba5b2f98",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dff4d70-97ef-46c2-9679-67c84fd1068f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ddd3f07c-ab44-47e9-8109-01028904fff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc52727-27a9-4451-a032-b000e8948d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95591938-d637-4fc1-bd52-d75f115be2a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba77409f-70bb-4da9-a2b0-355af4867be5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "086671bc-30ab-4e85-84a5-a1098bef0822"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3dc21e8-589a-4a4f-a398-9927bc4609b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e74a1b37-00b4-4ba8-87e7-19390a516fe3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "712d06e7-2757-4db9-bb5f-24c32eaa9768",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "066f11a2-c653-4f87-8ebd-791c06ead035"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc527621-9289-4886-bf4a-f805c5afb8ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35f96f31-19a3-4b9c-9cae-65de2dfdb618"
            }
          }
        ]
      },
      {
        "id": "b99bef51-0f35-46fc-84ca-293bc3821508",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "73240463-b898-4c7e-bdb6-786e33d891b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fc2ef14-d210-4d2b-9683-087b8d931d0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3feeeafd-a18c-4a75-82ca-775d5f52ea11",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97ecd3f-38f1-4bb1-96a7-15ba4ed1ac7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "efdca120-8168-4e68-838c-766f557928bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf500469-5d7e-407a-a33a-2455bc434004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1a82522-0046-4456-ba79-593743531ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852a5819-1aeb-43c1-aef7-72fe2fa02cac",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836cf044-c4ab-4b41-9246-847a92b11c85",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "677caaaa-90f0-4724-a2b6-7016707e0119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9290fc4-d184-472a-a9fa-1f50dcff99f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dc717f6-f445-4155-81e8-72977846f76d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "444f244c-12fa-449b-9bba-5811e2ea482c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bec228b-7796-432a-acfa-998c00d69527"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f4fcc7f-c6a8-4e93-9503-f928ce81291a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0e3e1d2-9e35-493c-80f4-95897d9c6d6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "032a695e-e334-427b-9d4e-a5d7751d4aa9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f1238533-a34b-48f3-ad0a-39ab89a3768d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2aaf3354-ac2d-487a-8e61-02fa5804f952",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24d840a7-acbe-45e6-ad08-4a5cfbfe38db"
            }
          }
        ]
      },
      {
        "id": "ab5f9e4a-901a-4b14-a5fa-e571c48fe274",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7e5bf0b3-d3ea-4362-99b7-c30d5568b1af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbd3012b-3d50-4c31-b545-38f4483d2d67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c70d739-13a5-4759-8eb6-1dbe3fa83499",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e8a439-405e-42c5-8ca6-b252a472e709",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d5faff9c-0673-4b63-9946-91c5598bc39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018fe4df-c615-4e9d-b10b-edd83aa2111a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c219544-437f-4d3c-af67-e63f63c5a860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4eb89c5-5135-43dc-80be-c0e408174c4c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0cb676-e876-463b-b688-d8a2c1887fb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28ca5158-f163-4265-bd86-11a0f88c3a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a439adca-20aa-4ebb-bc68-235b6299a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e06bb3a-1918-4018-a3b4-9cf58f212947"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "551b2de5-17e1-47f0-970e-32348c2d1fe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "464ccab5-38aa-4c70-bf95-87700d2726c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d549c428-7e2f-479e-996b-d20f169e36a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6234616-4407-4986-830e-625c2e3a83a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07acae58-88c9-4ecf-8bd8-a18740128b66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "23e1302c-3395-4ec7-ab02-7e131593521e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02ac9d4b-ae7e-4d6b-82ec-8f1917ff4217",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "920b8e77-78ef-4b42-be45-8015c001e5d1"
            }
          }
        ]
      },
      {
        "id": "ad04d8fa-0356-413f-922b-b2ef35f50a12",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb1651ac-6da4-467a-953e-86349a940fdc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d94bde36-7d40-45d8-bde3-9fa9b3c671d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a07c67df-594a-4f2b-aca0-2615720dd667",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "635eeed0-811b-4ce9-8c35-ecf77d120dd3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56da1756-304c-41cb-b699-1945eadd2402",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 556.1450381679388,
      "responseMin": 7,
      "responseMax": 4443,
      "responseSd": 636.9596032841008,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671410077772,
      "completed": 1671410235798
    },
    "executions": [
      {
        "id": "909aed11-f586-4b0e-a84a-31fe4e951fd0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d6e6cbb-bafa-4e24-bfec-7484d58dfc28",
          "httpRequestId": "96c6ca88-3a70-43e2-b3ad-eaec30227ffd"
        },
        "item": {
          "id": "909aed11-f586-4b0e-a84a-31fe4e951fd0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1a1c4363-4f3c-47ae-84f7-2043cd288ee6",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "430e5d17-bcbd-46a5-b520-038d6529a909",
        "cursor": {
          "ref": "e0d3e81a-01af-44a8-bf5d-d8a77603d6ea",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f4b73635-cac4-4042-ab71-ffb534a8bfa9"
        },
        "item": {
          "id": "430e5d17-bcbd-46a5-b520-038d6529a909",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "376aa335-c95d-4558-b389-b9016919bb20",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "b5c0646e-97ff-45f3-b325-0b2c831ce33c",
        "cursor": {
          "ref": "7310e88c-9fdd-4ea7-a7e3-9042ca2f78a9",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1035c4d1-0b94-49bc-b116-79049d1b86b4"
        },
        "item": {
          "id": "b5c0646e-97ff-45f3-b325-0b2c831ce33c",
          "name": "did_json"
        },
        "response": {
          "id": "c4b57b65-0ea5-4214-bb06-dfc64f0dbdcb",
          "status": "OK",
          "code": 200,
          "responseTime": 907,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f351b5e6-e2b3-44e5-8148-e2c730d4eb58",
        "cursor": {
          "ref": "b37261c0-e8eb-42fd-b8d2-d3e531b849d5",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3e14b960-7ed6-4a7b-b403-7fa3663c9174"
        },
        "item": {
          "id": "f351b5e6-e2b3-44e5-8148-e2c730d4eb58",
          "name": "did:invalid"
        },
        "response": {
          "id": "983f57fb-d73b-44da-9d6f-7e8b5992e986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f351b5e6-e2b3-44e5-8148-e2c730d4eb58",
        "cursor": {
          "ref": "b37261c0-e8eb-42fd-b8d2-d3e531b849d5",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3e14b960-7ed6-4a7b-b403-7fa3663c9174"
        },
        "item": {
          "id": "f351b5e6-e2b3-44e5-8148-e2c730d4eb58",
          "name": "did:invalid"
        },
        "response": {
          "id": "983f57fb-d73b-44da-9d6f-7e8b5992e986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4822d858-8e53-4856-8b5a-d9e91de250eb",
        "cursor": {
          "ref": "c96618fe-8dc8-48b8-aa87-af96088b4534",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b1b87224-14bc-4a1a-a7d9-8f3aaecbef99"
        },
        "item": {
          "id": "4822d858-8e53-4856-8b5a-d9e91de250eb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c519a964-17a6-465c-9b83-6bf2ce248086",
          "status": "Not Found",
          "code": 404,
          "responseTime": 617,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da17788-5e0b-46f4-9f7c-0bb5bc5f2297",
        "cursor": {
          "ref": "011b37fc-ef84-4eb6-a20e-c64cf63aa656",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2fbc906e-a9bf-4b0a-a7da-f908c74db611"
        },
        "item": {
          "id": "7da17788-5e0b-46f4-9f7c-0bb5bc5f2297",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "76b24d96-a943-4807-9a3d-d6acfda06940",
          "status": "Not Found",
          "code": 404,
          "responseTime": 504,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e202ef-6e4a-4e07-965c-806bac7e7691",
        "cursor": {
          "ref": "aeddd688-8310-4c61-9449-6b7b95286d08",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d24c24a4-9edc-4108-8ba6-d8a763ddbb08"
        },
        "item": {
          "id": "77e202ef-6e4a-4e07-965c-806bac7e7691",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "820cd361-6726-4b52-9f13-c99ac8d07aeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a20bb5c-8456-4f6d-989f-c6ddd789122b",
        "cursor": {
          "ref": "5d07a630-e9d0-4152-9620-a28c1035e379",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "809cccfc-65c2-4106-9d16-1990f3f3f648"
        },
        "item": {
          "id": "9a20bb5c-8456-4f6d-989f-c6ddd789122b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c611cb8e-30c6-49c0-a08e-f4b3db6fd822",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 482,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a20bb5c-8456-4f6d-989f-c6ddd789122b",
        "cursor": {
          "ref": "5d07a630-e9d0-4152-9620-a28c1035e379",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "809cccfc-65c2-4106-9d16-1990f3f3f648"
        },
        "item": {
          "id": "9a20bb5c-8456-4f6d-989f-c6ddd789122b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c611cb8e-30c6-49c0-a08e-f4b3db6fd822",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 482,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cb0425-e6f9-4b7f-b068-145ce367893f",
        "cursor": {
          "ref": "4c633c19-7262-47aa-a6ce-aff10876bc8f",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b720eb9-f808-4bd8-b56a-9349b7bfb0b7"
        },
        "item": {
          "id": "65cb0425-e6f9-4b7f-b068-145ce367893f",
          "name": "identifiers"
        },
        "response": {
          "id": "d639a01e-98be-41a2-908f-ae7ca5291713",
          "status": "OK",
          "code": 200,
          "responseTime": 769,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627a3c9e-e7cb-400c-90e2-65875ec66d8a",
        "cursor": {
          "ref": "646d1464-82b6-4677-9d78-b1b27498605a",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "30c8588e-770d-4043-ae9b-49c317635166"
        },
        "item": {
          "id": "627a3c9e-e7cb-400c-90e2-65875ec66d8a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8d27e63-94ec-40c7-bd42-0db938ba9229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627a3c9e-e7cb-400c-90e2-65875ec66d8a",
        "cursor": {
          "ref": "646d1464-82b6-4677-9d78-b1b27498605a",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "30c8588e-770d-4043-ae9b-49c317635166"
        },
        "item": {
          "id": "627a3c9e-e7cb-400c-90e2-65875ec66d8a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8d27e63-94ec-40c7-bd42-0db938ba9229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9c7ec2-1c28-41d9-b68e-52f0d774b3fc",
        "cursor": {
          "ref": "1696f93e-a09c-4de1-afd4-7a369e0ef954",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8c701a5f-2432-4c21-8607-f67324438050"
        },
        "item": {
          "id": "bc9c7ec2-1c28-41d9-b68e-52f0d774b3fc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0c6078e8-aa17-4745-9351-6ec4c555514f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb2b617-c328-46a8-871a-d75fbb8ba629",
        "cursor": {
          "ref": "da515d18-bee3-4128-a617-01ce012a2707",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "227f3adc-dd26-4d97-a3bf-1b03a1d2050b"
        },
        "item": {
          "id": "dcb2b617-c328-46a8-871a-d75fbb8ba629",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "1c1f1135-26df-467c-935b-53b6a9b35d96",
          "status": "Created",
          "code": 201,
          "responseTime": 2293,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "f6db9ac9-81dd-4e4c-b1ed-522b1fb52a57",
        "cursor": {
          "ref": "56b3b190-4f8d-4ca9-932a-ccd3ec78c358",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "618dc896-2cf9-4f76-ae08-3acad2d2eccd"
        },
        "item": {
          "id": "f6db9ac9-81dd-4e4c-b1ed-522b1fb52a57",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a1d9d62a-c4d2-4d71-8cad-5e0670ce3bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c79d90-7ef4-4f00-9c90-5fe62666b836",
        "cursor": {
          "ref": "52dc2caa-9886-4bcf-8945-5203eeebaaac",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4b072137-bee4-483f-8f69-28b9bcf21c33"
        },
        "item": {
          "id": "06c79d90-7ef4-4f00-9c90-5fe62666b836",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f8f57f68-a12d-4450-9998-56177800a09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454812b7-d239-498c-9ceb-c5604e2053de",
        "cursor": {
          "ref": "d792d18f-f8bf-4aca-8e2a-cd8fef0cbaf9",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "67ec08c5-92e6-4167-abbb-73ba2e6a39eb"
        },
        "item": {
          "id": "454812b7-d239-498c-9ceb-c5604e2053de",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8bdf6017-67fb-499a-969e-f846aa4a3212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04cfa96-a118-444f-ac0f-0c8cd370b4a8",
        "cursor": {
          "ref": "fcd54af0-aae7-4c33-98a4-063a62ce0173",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "df458b54-0143-4c35-b654-7a2e4581290b"
        },
        "item": {
          "id": "b04cfa96-a118-444f-ac0f-0c8cd370b4a8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a9161fa0-b462-4a62-82e7-eedbc09c55e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd07dfa8-d3db-42f0-9e4d-4917ae6859f0",
        "cursor": {
          "ref": "57defd43-f152-4274-9d57-655340602da1",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "58bd0b3e-fab3-485e-8067-59531517f35c"
        },
        "item": {
          "id": "cd07dfa8-d3db-42f0-9e4d-4917ae6859f0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d0e279bb-31ae-4e6c-a109-0a01bf0cca4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c72741-431b-4af9-879d-6177c92c8f0d",
        "cursor": {
          "ref": "66467864-a460-4179-afd5-8799a5907033",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "eadb4837-8929-45b6-b664-17c055d8e95f"
        },
        "item": {
          "id": "94c72741-431b-4af9-879d-6177c92c8f0d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "67d5e401-5ccf-44ce-8c40-1c913dce43d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6e2e39-1322-4835-9713-75575bfbddaa",
        "cursor": {
          "ref": "92a8a83c-af6c-4305-8789-de662ece345d",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8e2102f8-b2c4-43e5-bd99-b972cb8bd813"
        },
        "item": {
          "id": "fe6e2e39-1322-4835-9713-75575bfbddaa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "77d339b7-d259-4142-a379-6ea074055027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789db728-b55a-4946-9ff0-61d8174ed400",
        "cursor": {
          "ref": "497979cd-7e2c-4f16-a85e-d21fd6561911",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fb8648db-aed2-442f-9c27-cf3f1556ffaa"
        },
        "item": {
          "id": "789db728-b55a-4946-9ff0-61d8174ed400",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5490db7d-3798-4042-af7e-5bade7ae57af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dcdc8b-2829-406a-9ee7-ab8ce7ad36ca",
        "cursor": {
          "ref": "da0d8439-f44c-4340-a32e-ed7664c75df5",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bbddeb14-fee4-43ff-a2e0-ba5f8e56bf5f"
        },
        "item": {
          "id": "f9dcdc8b-2829-406a-9ee7-ab8ce7ad36ca",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0d519f25-5a2c-46d6-9a16-4b158d7453c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f03282-2315-49f5-b45a-bcb31dd5d316",
        "cursor": {
          "ref": "0266f1a7-90c5-4659-82be-d9d54d6d0c61",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "358788a1-54b2-4fcb-a6d4-7f8853d5c19c"
        },
        "item": {
          "id": "07f03282-2315-49f5-b45a-bcb31dd5d316",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c6e0dbc2-a63e-4cb2-a66d-8e6b893d2efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e98f62e-363e-4329-bb6f-0f32c1204c7f",
        "cursor": {
          "ref": "aea9f905-e715-4634-8bf1-6597a2808652",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e55e4933-2536-4e97-b704-6dd01bdf68d8"
        },
        "item": {
          "id": "7e98f62e-363e-4329-bb6f-0f32c1204c7f",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "77737b68-38f3-453b-982b-1b8947b0ee16",
          "status": "Created",
          "code": 201,
          "responseTime": 4048,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "e4c70ebe-ecca-44b0-b40a-2a00f209350f",
        "cursor": {
          "ref": "937b3a1a-aafa-467f-8989-5818838567a7",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "98f88700-5982-4fbe-9a13-fd7ca4667051"
        },
        "item": {
          "id": "e4c70ebe-ecca-44b0-b40a-2a00f209350f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "127e5fbf-8c70-403f-8b98-bb18d9172c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebab0788-7574-487b-80ee-b00de0993e1a",
        "cursor": {
          "ref": "da6ac63b-0fae-4fc5-9b57-1bdcb0379edc",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2f51a776-bac5-4490-b850-ab2eda1a2ced"
        },
        "item": {
          "id": "ebab0788-7574-487b-80ee-b00de0993e1a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0a9f7988-c3f4-43cb-bc41-04d5d4022757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fdf6a5-b1c4-48d9-960e-5e6de0bc4cb5",
        "cursor": {
          "ref": "efa8aea3-5071-4853-b0cb-704c9c3006cb",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3b605e60-c775-4b4b-b0d8-d87950ac4b97"
        },
        "item": {
          "id": "e3fdf6a5-b1c4-48d9-960e-5e6de0bc4cb5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1f6390ac-442d-48df-8097-9bd9e70bd60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9099c658-32e6-4396-82c5-b71c711a50e2",
        "cursor": {
          "ref": "e26c6049-32e9-4dd1-8317-10cddb2984f6",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b1c667f4-ae60-480f-8dd4-28ea05031409"
        },
        "item": {
          "id": "9099c658-32e6-4396-82c5-b71c711a50e2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e454c198-a14c-470c-abab-ac9ea778eaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc8a486-b7d0-4f61-a80f-498fa5e9c093",
        "cursor": {
          "ref": "15624fdc-dd2a-4c85-8608-002de61be27b",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "81732223-a18e-4f3c-a409-8f04dc943de0"
        },
        "item": {
          "id": "9dc8a486-b7d0-4f61-a80f-498fa5e9c093",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5a9be712-cdad-4d60-8f2b-93d47886e52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5f09be-e2e4-459b-a794-5db9d61221b5",
        "cursor": {
          "ref": "817f9813-7439-472c-bdfe-071397d2c07b",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "190a720f-d9f9-435e-ab37-6421491ef26f"
        },
        "item": {
          "id": "ed5f09be-e2e4-459b-a794-5db9d61221b5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "390a02b9-8ca0-48c3-8f7d-6496bb296c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eecd2f-4e86-4e21-919e-301b982fd8f6",
        "cursor": {
          "ref": "4fc3bc17-1de3-4042-9f85-199e944fd0fc",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9d2d068f-e36c-4281-a515-a19b81f56e1e"
        },
        "item": {
          "id": "a6eecd2f-4e86-4e21-919e-301b982fd8f6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bd855acb-605e-4d7e-bebf-44673fcb4d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd6ad57-a65b-4b22-a40b-320da6c628b1",
        "cursor": {
          "ref": "bfb30692-f79d-4c4e-b585-cf3b3d7a4758",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "771ec9b3-2f8a-4751-8c80-da78ca132379"
        },
        "item": {
          "id": "3fd6ad57-a65b-4b22-a40b-320da6c628b1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fe22f5d7-6dd6-49bc-bbda-b13aac235e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f8bf16-0746-40df-84a6-bb6a6e9333c7",
        "cursor": {
          "ref": "ad2ad1bc-57ef-4571-a754-f97c719f1c65",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "66341c34-3bca-4a19-8335-2552868e4bce"
        },
        "item": {
          "id": "91f8bf16-0746-40df-84a6-bb6a6e9333c7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ff481a91-09f9-441a-9bc4-ca9bab177b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1680e3-db9b-4970-9e7b-a3ac46c7a310",
        "cursor": {
          "ref": "eafd4c3e-5fc1-4a43-8691-7afbf6d112a2",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "15652ae5-9be9-42cc-9f2c-f1def5415af5"
        },
        "item": {
          "id": "ee1680e3-db9b-4970-9e7b-a3ac46c7a310",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6ccd467d-38f2-4f7a-8096-7ddc8782707a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47e943d-f171-415f-9632-37176910da0b",
        "cursor": {
          "ref": "cee917f3-8ab3-4981-ac0f-ca49382c9e04",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8091e806-f593-4f4b-9857-3cc41b14d71a"
        },
        "item": {
          "id": "b47e943d-f171-415f-9632-37176910da0b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "49bd21b1-0dfe-4f62-8e87-c4f7d6fd32c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af091ef-83cd-443f-be1e-3902793365c8",
        "cursor": {
          "ref": "5b92fa33-ba64-4715-966b-06eeb55a507a",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6b0b0af7-8298-4f48-a4e4-69eb17168c9c"
        },
        "item": {
          "id": "8af091ef-83cd-443f-be1e-3902793365c8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6095b028-c11c-480f-ab29-14714a77336b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd49520-2f5c-4ed0-addb-0fa8bbae7ebb",
        "cursor": {
          "ref": "8dd8996a-7263-434a-a099-874866180c3e",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "65b43e82-34bc-4506-8605-76e5de8e62a4"
        },
        "item": {
          "id": "8cd49520-2f5c-4ed0-addb-0fa8bbae7ebb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "14545943-88d6-40dd-be7b-a8f90ebe15ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78dcb8d-2af3-49e7-afae-04abb2afe6cb",
        "cursor": {
          "ref": "9108c3b1-4424-4f62-88a1-06230fb98e84",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "03c52775-390b-4476-93e5-a82d3853d1e4"
        },
        "item": {
          "id": "b78dcb8d-2af3-49e7-afae-04abb2afe6cb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c9c12e6f-31f7-4324-8006-4f4dab4d6a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142bfafc-d76e-44f0-9ea5-8a51bfb68b68",
        "cursor": {
          "ref": "ae9e5cea-d391-4a33-95e3-fc34dde59508",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "531596e7-983b-45e8-b6b9-88b09fe0675f"
        },
        "item": {
          "id": "142bfafc-d76e-44f0-9ea5-8a51bfb68b68",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "81347d95-4348-4630-857a-5e649e6cd941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11e9c15-c558-497a-8b17-e51122053284",
        "cursor": {
          "ref": "b766d276-f7c8-4979-b55b-29445d7ee351",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cd226f6a-9ea9-465b-9399-58d6ebfd2309"
        },
        "item": {
          "id": "c11e9c15-c558-497a-8b17-e51122053284",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "27a6e7df-25ea-4e56-8917-75fc81e84144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a0cbda-d66d-4d51-a767-4c310b25693c",
        "cursor": {
          "ref": "92d8f440-3aa2-4e79-abe6-c4a4bdfbbe85",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d2a1d7e5-76de-4adb-8a05-95fb0e7dce3a"
        },
        "item": {
          "id": "a7a0cbda-d66d-4d51-a767-4c310b25693c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3a7b0967-4296-4030-8d8f-52d41a21afb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10917f11-cd39-445f-b575-212cd16f0f84",
        "cursor": {
          "ref": "d9de0b06-cff6-487b-83d4-ba1e5a9f08e2",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d15ab5fc-3bdf-47d3-81c1-913e5f62b70b"
        },
        "item": {
          "id": "10917f11-cd39-445f-b575-212cd16f0f84",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a942aa03-6d7e-454c-b1b6-fa04b5c1dc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ddfb70-2809-4dbb-a0fe-80da9804070a",
        "cursor": {
          "ref": "c12f01bf-2f56-4174-b49f-296bb3188826",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "605486b1-49f7-43f1-92e3-691a76a73d08"
        },
        "item": {
          "id": "94ddfb70-2809-4dbb-a0fe-80da9804070a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c051b09b-0fef-4f95-af74-a0474e5fb851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd8cb45-3a95-4f4f-b992-2d713f71655c",
        "cursor": {
          "ref": "5be3ae19-75d7-445d-a380-f959d35fe71c",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "28876081-967d-4af7-b996-7c5397711ca5"
        },
        "item": {
          "id": "0cd8cb45-3a95-4f4f-b992-2d713f71655c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "25bfec7f-e5d9-4353-aeb7-9cd3f5f67f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9eda6ff-3fb1-4536-a1dd-90e60fc77bf1",
        "cursor": {
          "ref": "26654b37-b859-40b4-97b8-8b26d2ee1f92",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bce6d243-ddc8-4d09-afd1-ca07c0ec89e0"
        },
        "item": {
          "id": "d9eda6ff-3fb1-4536-a1dd-90e60fc77bf1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "553cb846-1f0e-4e6c-83d1-606de2f3e69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159c2a24-f6df-43f6-b6c2-87df2f367ac2",
        "cursor": {
          "ref": "1b8f2bc4-883b-4121-a1ff-699497938f71",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f6de20d3-b4cb-4dd1-8449-c24d1d0f0ca1"
        },
        "item": {
          "id": "159c2a24-f6df-43f6-b6c2-87df2f367ac2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "22d27bd8-88f7-4a1e-9943-c960ae4eb393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a089ac-463d-4f08-9a9e-cb836ab29275",
        "cursor": {
          "ref": "11742c62-fb96-45d2-9bf7-d6d62ecc0011",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "149d8fce-a788-4df6-a0a8-024ab283f768"
        },
        "item": {
          "id": "b8a089ac-463d-4f08-9a9e-cb836ab29275",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fc98a6e6-b840-4a61-acbd-3d432330533f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cd3802-185c-4792-b29c-e684f3a45abb",
        "cursor": {
          "ref": "5b188fb4-7c4d-4491-b7ba-a854f59ee93f",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b5588cbd-c9f9-43ad-bf51-1bb594191602"
        },
        "item": {
          "id": "26cd3802-185c-4792-b29c-e684f3a45abb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "60ca5fe9-fc4b-49a4-9bee-28c0279f346a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 590,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f8fd67-ce8e-4588-a739-5d9259d8699f",
        "cursor": {
          "ref": "197b6e05-4f41-429b-923c-272757ee6018",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bd7ec596-412d-4d10-9b2d-b6cc46f099cd"
        },
        "item": {
          "id": "89f8fd67-ce8e-4588-a739-5d9259d8699f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8aff6461-1483-41fe-b2cb-1f7658e2f968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c7c3b7-ff57-494a-aaef-ffe1185f2b9e",
        "cursor": {
          "ref": "ae4bcab5-c312-4994-b0ed-4a1100f720d0",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "06dbc967-0d32-4ed7-bdf3-534d7b700225"
        },
        "item": {
          "id": "63c7c3b7-ff57-494a-aaef-ffe1185f2b9e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "33272c56-6b07-4175-b78f-c6104bd337e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a67abe-f4c5-4364-99b3-c507c2a096d8",
        "cursor": {
          "ref": "78a4fe96-f8db-4bd8-9a06-d7749e507420",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bc8dc5e0-3210-4c70-8f3d-5c7711be467d"
        },
        "item": {
          "id": "53a67abe-f4c5-4364-99b3-c507c2a096d8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9a56bddd-3ada-4240-b80f-1bed9ab1826f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58a4293-8a91-43fe-91a3-99b48b3fcb98",
        "cursor": {
          "ref": "b1594fe8-4764-4924-ad63-f1d1dfc8c747",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "119f4ed2-5787-449d-97bc-14af5f16ef85"
        },
        "item": {
          "id": "d58a4293-8a91-43fe-91a3-99b48b3fcb98",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3fac5ee2-76bd-482c-8f11-1c2a5ce5613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cd0fb6-abad-4408-a4a0-aa5f603a8fcb",
        "cursor": {
          "ref": "acfcd5d2-ada3-48f7-a686-7b25562182c7",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8146bbc9-9ca6-4ea8-b08e-93caf61dcbe1"
        },
        "item": {
          "id": "38cd0fb6-abad-4408-a4a0-aa5f603a8fcb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e2f20cef-d0e5-4c7a-aed9-23652adc0685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c241b4f-1632-460f-bc53-4a5b2f754eac",
        "cursor": {
          "ref": "a76fe0b3-a32a-4dd5-a434-012d1a50c3fe",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f035d53d-1a2c-4a78-a320-625cc99b06d8"
        },
        "item": {
          "id": "1c241b4f-1632-460f-bc53-4a5b2f754eac",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5a2de442-f17f-4886-95f4-f1030630a6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb920b57-37a9-4f1f-9952-b41111a98885",
        "cursor": {
          "ref": "b9f57bea-6d36-4841-accc-0c6163b0bf87",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5930683a-c28b-43d6-9e99-f5f2e11ad4ae"
        },
        "item": {
          "id": "eb920b57-37a9-4f1f-9952-b41111a98885",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7293ef2a-c728-4d54-8c76-6814da0642ed",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 561,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04490ae-cd1b-49e0-9a50-772ab2ae0122",
        "cursor": {
          "ref": "df96d1fb-d154-46c7-9829-14d567283f50",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5be5ae1d-dae0-41a8-8932-c1b7094df30f"
        },
        "item": {
          "id": "d04490ae-cd1b-49e0-9a50-772ab2ae0122",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "148d1c70-d7b7-4026-843d-643a7fc87d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c94c883-7e97-4467-b926-978a23b4b774",
        "cursor": {
          "ref": "8991c5f1-0aac-4d3a-8a52-a2e29beb95dc",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9255b71c-ec6e-4ab4-8081-bbb448dd3991"
        },
        "item": {
          "id": "0c94c883-7e97-4467-b926-978a23b4b774",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "abff3351-a188-4c66-9bce-4a98070ee997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd6e79-778a-435c-8496-b3a1bb2599ef",
        "cursor": {
          "ref": "acf2748e-b89e-426e-b749-b6ceadc9997f",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4bee4fac-a555-4dec-ba7d-0f34d020d6e4"
        },
        "item": {
          "id": "7bcd6e79-778a-435c-8496-b3a1bb2599ef",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5b91275b-ac4a-403a-a4d0-2bac7bb34df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9e966a-631c-4675-bf0a-b82fc6f72807",
        "cursor": {
          "ref": "e9818bb7-a810-4436-b844-4bb4404faf3d",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9d5095c8-dd2f-4cee-a310-b4b0e39ea1a1"
        },
        "item": {
          "id": "ae9e966a-631c-4675-bf0a-b82fc6f72807",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4fada3f4-a094-4f18-970a-53d8a8cf8188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d01d58e-ec9f-4909-b1ad-a2a1f86a5693",
        "cursor": {
          "ref": "35741425-46cd-4015-80c8-6a5cebbf143d",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "336695ea-89cc-42ad-afd5-f32f6407e57b"
        },
        "item": {
          "id": "3d01d58e-ec9f-4909-b1ad-a2a1f86a5693",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2760b950-0b51-49be-adf4-d6de7cbaa55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1792816f-ab14-4339-88ff-143646e159ee",
        "cursor": {
          "ref": "19668bb3-22bf-4605-8768-dab7aed83a2c",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1b7e915f-09f6-4ec8-a381-495c3d363166"
        },
        "item": {
          "id": "1792816f-ab14-4339-88ff-143646e159ee",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6472516b-aad4-48ed-8903-6f92a91c7004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc70fcd6-1b73-41df-8ae4-7f21c915bfe3",
        "cursor": {
          "ref": "65db186f-c04b-4e65-b7d3-6a90b37ab229",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "20ae7bad-c808-4447-9e98-21b70046fe7f"
        },
        "item": {
          "id": "fc70fcd6-1b73-41df-8ae4-7f21c915bfe3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b219a0a4-bc2c-4da1-a2c2-62e743a21c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7892acd6-1fad-45ad-a92c-f9ce266a0c7f",
        "cursor": {
          "ref": "1179df53-348b-42e4-9d3e-a28c14e35874",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3246ff04-027d-4053-9969-850d042ef48b"
        },
        "item": {
          "id": "7892acd6-1fad-45ad-a92c-f9ce266a0c7f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4faa5069-b8c6-4367-9c5a-4c590c94601f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6d4bcd-2867-4866-bed6-8898e37bfc3f",
        "cursor": {
          "ref": "6e9c89b6-61aa-451f-8937-efb20f030272",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b2e29432-4b18-4883-8137-4537f7d97b60"
        },
        "item": {
          "id": "aa6d4bcd-2867-4866-bed6-8898e37bfc3f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "762e5d56-fa6b-4db8-a98f-71b0e564599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0142de72-a811-4329-8091-01ccfc17d620",
        "cursor": {
          "ref": "5b4ff26e-b008-47ea-9967-582c76c33665",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "90284d14-6683-4546-9970-a528147903e7"
        },
        "item": {
          "id": "0142de72-a811-4329-8091-01ccfc17d620",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "49f9677d-6354-4aba-8967-e2977c9d86e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf0e1b4-f3de-42bc-9496-399bd771e6fa",
        "cursor": {
          "ref": "d360f340-f5c9-4c8a-b8bf-48b17896cb21",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bdc14cea-6ac3-4d7f-802b-b4a9ca880b86"
        },
        "item": {
          "id": "aaf0e1b4-f3de-42bc-9496-399bd771e6fa",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e9d0dc3d-0907-478e-9deb-648a44395192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54081f13-b663-4db4-8dd6-3f74ba4a6c50",
        "cursor": {
          "ref": "82a59bbd-3122-4659-8d3a-48e7e3f93e7c",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dac37488-01c1-4f9d-9166-30b4e89c1188"
        },
        "item": {
          "id": "54081f13-b663-4db4-8dd6-3f74ba4a6c50",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d8f3c6c0-1d0f-4040-bbd8-dcf61abc5571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d3584b-32d1-4576-9a4c-41780f0d5333",
        "cursor": {
          "ref": "f2d1b8e0-a118-401e-97d7-33dbb26ec7bd",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "20f0b772-2d70-4606-b976-7ea2d4781e69"
        },
        "item": {
          "id": "e8d3584b-32d1-4576-9a4c-41780f0d5333",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8e670d80-4e88-41f2-a3c1-a315305554b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2328655-529b-498d-ab0b-d0bb911f6dce",
        "cursor": {
          "ref": "91ca6ebe-c376-4fcb-a745-586fad92714d",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "79633c38-224d-4090-8b05-47046cb21d66"
        },
        "item": {
          "id": "e2328655-529b-498d-ab0b-d0bb911f6dce",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "67e472c4-9bfa-4b4e-b931-e58a7e129d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db1f9f7-80b5-4392-bb65-990678dcd5fd",
        "cursor": {
          "ref": "4a15a951-b9d1-42dd-996f-dfba4f9954ef",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7cab9faa-a9b9-4364-b230-f29e1a31fecb"
        },
        "item": {
          "id": "3db1f9f7-80b5-4392-bb65-990678dcd5fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ad04404e-651a-4da6-995a-9befcc6bb35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00125010-4712-43af-8764-c626066f69fd",
        "cursor": {
          "ref": "caeafdc8-d9aa-4335-8273-d3ad5edb3b6b",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4ac1fb37-3a4e-4050-8697-2e6bfe3f410c"
        },
        "item": {
          "id": "00125010-4712-43af-8764-c626066f69fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0663afc7-38de-4cb7-8da5-cd1847bf272c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c09e80a-09f8-4350-be77-03e462e41734",
        "cursor": {
          "ref": "f40228d3-98f2-4e46-b632-808b491f8055",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "98241d9d-83f9-46cf-865c-6edf4e57e87b"
        },
        "item": {
          "id": "2c09e80a-09f8-4350-be77-03e462e41734",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2e3352e3-609c-4a78-bda3-038a04ee650a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151d88b5-4687-410b-a14d-dba8045ff2c0",
        "cursor": {
          "ref": "a9487c83-419a-4eb9-a22d-94c9b91c90d1",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "51d8d441-d293-4c01-8edd-1c2e66ed1ea6"
        },
        "item": {
          "id": "151d88b5-4687-410b-a14d-dba8045ff2c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b2d69511-6ca9-4aca-bb0a-74284416b8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f194fde2-db7f-4914-b12c-2548291520f5",
        "cursor": {
          "ref": "a3745e20-fe15-4f9d-a91f-0ee746048d2e",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ec0f04a5-160e-41db-a8ac-e09e93b97b76"
        },
        "item": {
          "id": "f194fde2-db7f-4914-b12c-2548291520f5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ac7de83c-71e1-4f7b-aa51-69fbd2d78ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b102b9cc-8344-41af-bd68-180bddb57641",
        "cursor": {
          "ref": "0691c749-61bc-4055-a489-127b412755a6",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "478ef5e9-fd0d-4839-bfc6-dacc5a9c4e09"
        },
        "item": {
          "id": "b102b9cc-8344-41af-bd68-180bddb57641",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "50dfe3c5-0667-4764-8396-39dee35c0444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188aecf5-1adf-4385-96c4-0da0cb953424",
        "cursor": {
          "ref": "961fd451-3fa8-468b-a1a6-594c9efae438",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cd4eadee-ef56-4e0e-bc7b-85b4571700d8"
        },
        "item": {
          "id": "188aecf5-1adf-4385-96c4-0da0cb953424",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d0025153-56ae-440c-8211-2990c8b81523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18edc5ac-f457-4be9-90cf-02dc9a232acf",
        "cursor": {
          "ref": "45b4a080-c10d-42af-badb-73497d763ef6",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7016a563-a460-4e87-bc40-b3adc35729a2"
        },
        "item": {
          "id": "18edc5ac-f457-4be9-90cf-02dc9a232acf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "085ac841-747e-49b1-abc0-e5241685fa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ede54d-e0ca-41d4-9384-a05eb3237987",
        "cursor": {
          "ref": "9c906b1b-3287-4651-89e2-9425cdfa4651",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bd36626b-ea29-4475-8125-1bf63ca12f12"
        },
        "item": {
          "id": "16ede54d-e0ca-41d4-9384-a05eb3237987",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a416608e-449b-43d2-af50-710ad554e02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b5b8b8-455e-4040-a384-a45644b905f1",
        "cursor": {
          "ref": "d9a2f94c-356d-46f6-b703-7cbe20281696",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b002dc8a-cb63-47ab-8f28-1f1c34ec2aac"
        },
        "item": {
          "id": "19b5b8b8-455e-4040-a384-a45644b905f1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ba17ff1f-10fd-4c55-9c93-420303f56382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeed03a-a733-4abc-999d-16016e4aaaa7",
        "cursor": {
          "ref": "4155f1e3-b909-4cd8-b5fc-1346dcd3b34c",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d91a941f-ff07-4ceb-bbd4-6c3a95b929dd"
        },
        "item": {
          "id": "adeed03a-a733-4abc-999d-16016e4aaaa7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "df540a73-29d0-40e8-918c-bd1d506d1ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2792d738-f9e7-495a-8815-3a3990fe2961",
        "cursor": {
          "ref": "a4bee199-3f25-4d57-8a5f-cf7811a6ac66",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "83c4bb9a-2677-4e31-9858-6647226590c0"
        },
        "item": {
          "id": "2792d738-f9e7-495a-8815-3a3990fe2961",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1b9316a9-7e11-4fa6-82c4-893ac8ff68bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fae13b5-e629-4c2e-8556-4fc063326d8c",
        "cursor": {
          "ref": "774d227d-e4da-4f87-8aff-9d2569920fe2",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "34b74677-e392-4472-97bf-e4329a67eef4"
        },
        "item": {
          "id": "4fae13b5-e629-4c2e-8556-4fc063326d8c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8d4ed48c-265d-4e90-8956-6aae54de02f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caad85a-b7bb-4171-a33f-f3596259e288",
        "cursor": {
          "ref": "94322ba2-605e-41b0-abd8-a2f27a8ca09f",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "40cf1845-01e3-46e7-a9ec-6d5238240d50"
        },
        "item": {
          "id": "8caad85a-b7bb-4171-a33f-f3596259e288",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2bae2122-7fd4-4d99-8f1b-d751bb28365f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b42e71e-23ce-4afe-b0db-490dd7230149",
        "cursor": {
          "ref": "e98f82d3-2255-4376-91ee-f9f29e3ea780",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ac85c5a6-b43d-45e7-b64b-d716717a6941"
        },
        "item": {
          "id": "2b42e71e-23ce-4afe-b0db-490dd7230149",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e76ce454-5c2b-4c80-9396-7cb0488b4971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113fb739-4ede-4a51-89ae-ad1f4dcdf023",
        "cursor": {
          "ref": "14020696-6d02-4451-8266-c9dbd890806f",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f349c2a5-7ce1-4a41-bee2-fd722171853e"
        },
        "item": {
          "id": "113fb739-4ede-4a51-89ae-ad1f4dcdf023",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "931b4041-38a8-4a0a-855c-bb056db4d18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bc2fbb-0ffb-4a3e-b939-42f2b73b7304",
        "cursor": {
          "ref": "a27bf87f-131d-4de0-a8a1-60287c70fbe7",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fff59e6b-bad2-40a3-85c3-463a10f98c44"
        },
        "item": {
          "id": "11bc2fbb-0ffb-4a3e-b939-42f2b73b7304",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e0d1db01-17a1-4187-9918-ca172a86ae92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3e4e0e-b80a-4881-88fb-38eb638490cd",
        "cursor": {
          "ref": "ef6c4a3e-715e-4689-be43-445974fd055e",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "39eddd11-ec56-48a4-a54b-e3a0b1311211"
        },
        "item": {
          "id": "be3e4e0e-b80a-4881-88fb-38eb638490cd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d471cc03-b22a-4ebd-ba56-e823e37c5d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecfa6f4-a8b7-4633-9971-3277a9f2dd70",
        "cursor": {
          "ref": "bc4f1d0c-ed39-4ab4-b305-990fb3d45b3a",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "10c78e8c-cb4d-4f6d-a2b3-348cbd194ab6"
        },
        "item": {
          "id": "1ecfa6f4-a8b7-4633-9971-3277a9f2dd70",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "82358624-9d99-4240-8431-9893479da39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562ba4ed-0aac-453a-9e2b-76adf99644a8",
        "cursor": {
          "ref": "8f40f45f-6d7e-4b0c-8cf0-a06a2c7f7617",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "39bcd897-16ac-4c4d-8cec-a6eda4c2ae44"
        },
        "item": {
          "id": "562ba4ed-0aac-453a-9e2b-76adf99644a8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1eb38d4c-c3e8-455d-aacd-1595be2b3676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9051a3c2-0196-435c-81a0-26e784931229",
        "cursor": {
          "ref": "30e6b155-c7f7-4d69-aeaf-707d46140712",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a706752e-67ab-46df-b046-5601911378fc"
        },
        "item": {
          "id": "9051a3c2-0196-435c-81a0-26e784931229",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ba85619b-f6a9-484b-82db-57584f43d9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bca0b41-0b35-4721-be7e-1e3d95ec15ee",
        "cursor": {
          "ref": "9195f15f-e338-4ec2-a3de-91fbfd878b58",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cdb6c89b-aa49-4551-ae89-322c7c2d756a"
        },
        "item": {
          "id": "4bca0b41-0b35-4721-be7e-1e3d95ec15ee",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fca5193b-514b-417a-9c83-c2fbdace6ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453e585a-275f-400c-b8e3-2479b06ca578",
        "cursor": {
          "ref": "1efb5b8f-3df2-4fca-805c-d3c3d9a4dae1",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1d5d558c-c3d3-4a60-bef1-ecaa08ec107d"
        },
        "item": {
          "id": "453e585a-275f-400c-b8e3-2479b06ca578",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "32f07b3b-cd83-4899-91ac-f2bbd62948c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce5b6b0-a3b4-40e0-be5f-d32c1122b162",
        "cursor": {
          "ref": "ece51ecc-fc02-45f3-842c-c242261660b9",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "60578f2d-3d7e-4b7d-83ed-43bbd6c3ec48"
        },
        "item": {
          "id": "9ce5b6b0-a3b4-40e0-be5f-d32c1122b162",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3ca8ad86-c11f-46bb-bb21-e0cd1fa050d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e776d469-3be9-417e-8b4c-ef70b4e6ecdc",
        "cursor": {
          "ref": "7b0ee940-9f95-4e6a-9052-7df2f5de9099",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ff8fcf8f-23c7-4161-90ae-69b5b24d7249"
        },
        "item": {
          "id": "e776d469-3be9-417e-8b4c-ef70b4e6ecdc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "17048209-c09f-43cb-86c1-f1808bdaa15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af41fde-68a4-46a0-a356-dff2f3abcae5",
        "cursor": {
          "ref": "ae68abc5-6c09-46bf-9c89-397203597c94",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "26512207-6763-4b48-aa6e-4ec033579d3b"
        },
        "item": {
          "id": "9af41fde-68a4-46a0-a356-dff2f3abcae5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "99a5acd2-69ea-410d-bd9e-6301c68f4e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012724e7-e406-4a7a-b4ef-bb9dcc46382e",
        "cursor": {
          "ref": "8d289bda-c46a-4b04-ae0a-7ad65b0dd31e",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cc43604e-cd1a-49c2-83f9-daac90ac322d"
        },
        "item": {
          "id": "012724e7-e406-4a7a-b4ef-bb9dcc46382e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b7d287d4-1759-4996-a06a-d214b188b9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454b8c3f-c9c6-4f95-9a7c-ce6c9626ce35",
        "cursor": {
          "ref": "1abda4fe-c2c5-4824-9c5a-b291d722eb12",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2b719a23-402d-42e7-afb0-c5c6720584ce"
        },
        "item": {
          "id": "454b8c3f-c9c6-4f95-9a7c-ce6c9626ce35",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "44135273-6d0f-46d7-846e-add39a1ad08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a9d3c4-32d0-45c8-9e97-7a6ce4c0e53a",
        "cursor": {
          "ref": "e4984c93-fc50-4918-b90a-27e645342804",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a34c092d-c8b5-4584-b8f1-a6416805b75e"
        },
        "item": {
          "id": "70a9d3c4-32d0-45c8-9e97-7a6ce4c0e53a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6f9dd179-c7b9-4ce1-a42d-40f75bdf6ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b9eac0-d3bc-4809-aec2-78833ddfdb8b",
        "cursor": {
          "ref": "bd066ec0-b9c6-4b52-9cca-b81a962f16bb",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fd3fada7-2701-4dcd-b6fd-9e52dcb3031c"
        },
        "item": {
          "id": "c3b9eac0-d3bc-4809-aec2-78833ddfdb8b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "07d3e2b3-b642-4100-8bd8-6e0c129d01ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fc2ad5-8fba-42f2-8c2a-41ee3ce9f35e",
        "cursor": {
          "ref": "5454a5ab-ed6b-4bbb-9752-b42a7f7d3828",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fefd338b-c1f2-4817-ab5f-38db4c6946bd"
        },
        "item": {
          "id": "59fc2ad5-8fba-42f2-8c2a-41ee3ce9f35e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "52e38332-f25a-499c-b8b6-0ebf3a52e260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defacc38-ade0-468d-b01c-2f7ff0459317",
        "cursor": {
          "ref": "d7fedd9e-3c5b-4950-bccf-1652fd47d188",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3371e556-8334-44b1-8b27-5f6360deaa45"
        },
        "item": {
          "id": "defacc38-ade0-468d-b01c-2f7ff0459317",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1fc4a938-5d0a-4837-bf50-2743a81d8750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d488ea7-f4a1-4b02-8769-0ad813b6c831",
        "cursor": {
          "ref": "bd502099-885f-45d5-abbe-2145c37671ec",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "926d2e47-0909-4741-bf6a-eabd643da512"
        },
        "item": {
          "id": "2d488ea7-f4a1-4b02-8769-0ad813b6c831",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d7cf3b85-f5d4-44dc-98eb-0b50ea062543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee35554-343c-44ff-935c-d39b9758dad3",
        "cursor": {
          "ref": "bc1bf9fa-81d8-451e-9103-1128f91fbf9a",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1a334322-a802-41c4-9062-702311da1e1b"
        },
        "item": {
          "id": "7ee35554-343c-44ff-935c-d39b9758dad3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7ff70646-9c8d-43a0-8c77-6e6e211b4fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0402765e-1116-4ec0-a496-f7391b007246",
        "cursor": {
          "ref": "2e997174-cc7b-4ad8-8735-c09e8d689000",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e56218b4-2ebe-4ec2-b28a-ed21662ba995"
        },
        "item": {
          "id": "0402765e-1116-4ec0-a496-f7391b007246",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f2846d77-07b6-4c5f-855e-7f1e5febcdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4d36dc-28c0-4c83-b956-ff721ae2f061",
        "cursor": {
          "ref": "e2f81584-d256-4de3-9cae-e9741b394144",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7754498f-525c-4020-96f3-58157f3c4ccd"
        },
        "item": {
          "id": "7b4d36dc-28c0-4c83-b956-ff721ae2f061",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "025a6cab-1530-452a-9a8b-30f5ef9e2941",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a645ba26-6988-4718-b31f-8faf9b3cef8d",
        "cursor": {
          "ref": "7e12feca-4825-486d-8329-0e47df16f492",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "399abda3-9abe-4f4b-b231-681ddbea7059"
        },
        "item": {
          "id": "a645ba26-6988-4718-b31f-8faf9b3cef8d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b67cd486-8c61-489e-bba3-cfbe24fc70be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 689,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2ec05f-1b50-4e03-9de3-670c96e992ef",
        "cursor": {
          "ref": "deaa755c-f567-4269-ad58-ba2e170ee9cd",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f7832f17-8afd-48d2-9fbd-7b397a4c3590"
        },
        "item": {
          "id": "fa2ec05f-1b50-4e03-9de3-670c96e992ef",
          "name": "credentials_issue"
        },
        "response": {
          "id": "74e68108-5139-41d2-9f32-d2018f5b8104",
          "status": "Created",
          "code": 201,
          "responseTime": 4110,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "d6c0ed5f-cbf7-4524-a09d-4acc5bb37e92",
        "cursor": {
          "ref": "d18b3e2c-eb9d-43d2-96ee-205c73feac79",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "435e88cc-0b5e-495e-898e-a793d2e518ba"
        },
        "item": {
          "id": "d6c0ed5f-cbf7-4524-a09d-4acc5bb37e92",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "441089c4-ffb1-47cc-8b2d-6130b351351c",
          "status": "Created",
          "code": 201,
          "responseTime": 3910,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "c6226b99-f9b7-4cb7-a3d8-a1e87a3154d4",
        "cursor": {
          "ref": "3dc5a735-f277-474c-a1df-1d5c8a5edacb",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c9966dc5-bbc4-466f-aaa9-07ecee5956c5"
        },
        "item": {
          "id": "c6226b99-f9b7-4cb7-a3d8-a1e87a3154d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9734917d-f6c4-4152-a69a-7cd7c74731ce",
          "status": "Created",
          "code": 201,
          "responseTime": 3584,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "01ac533c-16f5-4853-8752-83eee25b17a7",
        "cursor": {
          "ref": "55cc44aa-689d-40c1-962f-5fc411e979ed",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cb230b23-b4db-475c-b648-9daa65ebd9f8"
        },
        "item": {
          "id": "01ac533c-16f5-4853-8752-83eee25b17a7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d6608cdd-8184-4888-8b1b-77ecc94943fb",
          "status": "Created",
          "code": 201,
          "responseTime": 3822,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "f5e1aed9-c5e4-4bfd-a199-20f89e374a2e",
        "cursor": {
          "ref": "50f7bbb7-63ee-42c7-818a-10b77e37e720",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e9806c8-6026-403a-bd0e-1e125df18f6e"
        },
        "item": {
          "id": "f5e1aed9-c5e4-4bfd-a199-20f89e374a2e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8eca1521-532b-45c2-804e-c6ff3266ba72",
          "status": "Created",
          "code": 201,
          "responseTime": 4443,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "223f1a15-edba-46de-b8f4-c9f353e5da9f",
        "cursor": {
          "ref": "102161d6-408b-4644-bb5f-e9ea12b81d42",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6612d3c6-13f0-4530-a77f-aa77ce3e3f20"
        },
        "item": {
          "id": "223f1a15-edba-46de-b8f4-c9f353e5da9f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc043ecb-f23e-45f8-a211-dc4f9250a24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223f1a15-edba-46de-b8f4-c9f353e5da9f",
        "cursor": {
          "ref": "102161d6-408b-4644-bb5f-e9ea12b81d42",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6612d3c6-13f0-4530-a77f-aa77ce3e3f20"
        },
        "item": {
          "id": "223f1a15-edba-46de-b8f4-c9f353e5da9f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc043ecb-f23e-45f8-a211-dc4f9250a24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c277782-b423-4a17-8e56-615debfee8eb",
        "cursor": {
          "ref": "3e009320-a246-4820-b3af-c22a982fbe3a",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "76054722-9b2c-41c8-bbf7-578e8368e9b0"
        },
        "item": {
          "id": "7c277782-b423-4a17-8e56-615debfee8eb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ac13cbe5-7c71-4d34-874b-116d3fe8d5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8440261f-035a-47e5-8367-f46e4fede3f9",
        "cursor": {
          "ref": "3dd647a7-c034-44f6-af31-431c31268601",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "76cd7738-1853-40e8-8c20-1c2be8ca818d"
        },
        "item": {
          "id": "8440261f-035a-47e5-8367-f46e4fede3f9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "17e335f6-5fae-4687-b63c-7b6384d3ec2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265a3878-bd2e-4f34-be33-cfb24b9cef4b",
        "cursor": {
          "ref": "cca70caa-3984-4f2e-9afa-32611dfa9bd7",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "da408e0f-2a20-402c-8ca2-f7300715b1ee"
        },
        "item": {
          "id": "265a3878-bd2e-4f34-be33-cfb24b9cef4b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "26acae7a-a033-4b6f-a417-82fb8bd5f6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac89e10-2ce5-4b32-845b-9f0966d94187",
        "cursor": {
          "ref": "4a301197-3b9b-4312-8702-d61719e7938b",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "94a9c98f-aba9-48e4-b52b-87a555c8622b"
        },
        "item": {
          "id": "1ac89e10-2ce5-4b32-845b-9f0966d94187",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b31d3882-af48-417b-b020-01017157d9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e70c50-bfee-4193-b29c-da38f8a93622",
        "cursor": {
          "ref": "c5c02ded-85a7-46d7-b158-0fb48a92fcfd",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fdf836a8-1333-48f4-95cd-6097f77c73ff"
        },
        "item": {
          "id": "77e70c50-bfee-4193-b29c-da38f8a93622",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a293c598-afd2-4b61-bba2-4e9d8aeda587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c164613-45e0-4c30-a48b-2dd1024f9fb3",
        "cursor": {
          "ref": "4f844da6-591d-4553-9411-3556eccab724",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e9e93e17-c6fb-491b-95fc-468c205b050c"
        },
        "item": {
          "id": "5c164613-45e0-4c30-a48b-2dd1024f9fb3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e6a030a8-106e-46d6-8043-51f9466ae6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc16077-bd57-4837-8e0a-6727062bd7ff",
        "cursor": {
          "ref": "6a7cb13d-fbac-4759-b396-6ce9ab6fd491",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "06175710-80c6-40e1-be29-1fd2afb313c4"
        },
        "item": {
          "id": "2bc16077-bd57-4837-8e0a-6727062bd7ff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "825e1dc1-592f-447b-afe7-445a64bed8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d296ae-963d-47b1-82d1-b66dee8f9e9c",
        "cursor": {
          "ref": "0d02280c-0eb3-4418-9483-e677b78b6ed7",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a04b1826-0880-4ecf-929b-c8a556575f7a"
        },
        "item": {
          "id": "91d296ae-963d-47b1-82d1-b66dee8f9e9c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ecbe7fbb-5659-474e-bd6f-f5cb1efd37c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e063fe3-8b73-4df7-afff-75c31b6e1faa",
        "cursor": {
          "ref": "65430442-f64a-4859-9dc8-7a6e70f33cea",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3583858f-a7ff-4e17-8e5d-8b5f9ea2eea7"
        },
        "item": {
          "id": "0e063fe3-8b73-4df7-afff-75c31b6e1faa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "39569f6e-3133-4a77-8cc5-e792c7282608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180199f2-1a39-4ee6-9a4e-82c6951508f8",
        "cursor": {
          "ref": "f9b0645e-8200-480d-a15f-9f5cd93f44b8",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "932b93ba-e5b6-4af9-8ff8-e8e23e54ee53"
        },
        "item": {
          "id": "180199f2-1a39-4ee6-9a4e-82c6951508f8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "83578e1f-2f0d-476a-80ba-8f54238ee335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb611ee-e34e-4f30-8c62-565778e16141",
        "cursor": {
          "ref": "e49440b8-1cb3-4504-8f5d-d09e3c2b7be1",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "07ba0d08-7e52-441d-969b-12f5e8e2f117"
        },
        "item": {
          "id": "3eb611ee-e34e-4f30-8c62-565778e16141",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c3543b79-f7aa-4bd1-9275-d00d596de2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def0df19-6f38-4b54-9471-68ac6b14d2ae",
        "cursor": {
          "ref": "387d2761-e329-418c-b44f-63a8c4db735a",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "44a58282-e393-498b-ba3d-723c40c66f22"
        },
        "item": {
          "id": "def0df19-6f38-4b54-9471-68ac6b14d2ae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "977faea5-98bf-4905-b332-50cd689c62de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45d523b-7453-477c-912d-2f32e17cf1e0",
        "cursor": {
          "ref": "a3f8f2ae-8dfc-457f-a557-b7c6eb06974f",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5fb5412e-109e-4834-9ce0-56c4067ed767"
        },
        "item": {
          "id": "d45d523b-7453-477c-912d-2f32e17cf1e0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14793e1f-ca55-4ea0-849c-5626b263c4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126ac84e-a9d8-4c00-98b2-bf57051737e7",
        "cursor": {
          "ref": "9e5b85d9-4abc-4e8a-9d3f-2e07000ea4db",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ef599045-cb60-4bba-a603-bc54bff81bf8"
        },
        "item": {
          "id": "126ac84e-a9d8-4c00-98b2-bf57051737e7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "99da719c-8f5e-47af-bb36-46d03f825982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164d2e7b-3b6b-4ea8-a8ea-450fd14c022c",
        "cursor": {
          "ref": "a2511474-3320-4907-8310-39879c5894ed",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e029d14f-84ad-4b46-bf05-ef550a00edeb"
        },
        "item": {
          "id": "164d2e7b-3b6b-4ea8-a8ea-450fd14c022c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9c6242a2-7d58-430a-9f97-54c2cd15a3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7aec62-651e-4c82-a419-0455eeb0de3d",
        "cursor": {
          "ref": "c887f644-e24d-4fe9-8010-d57e42efee0f",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "febd3044-db4b-4365-b6a4-e1bedba2a534"
        },
        "item": {
          "id": "cb7aec62-651e-4c82-a419-0455eeb0de3d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f7b2e7ee-dc83-4632-8f7b-e444a56c7504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f11e4a-dd37-40c4-9fdb-68c5b806b78c",
        "cursor": {
          "ref": "683ceccd-ed88-44d2-ba4c-9d78ee37a0af",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dee75d94-fc7c-4544-8cb3-3ab754eb0a29"
        },
        "item": {
          "id": "70f11e4a-dd37-40c4-9fdb-68c5b806b78c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4c9f950-dfde-46c1-a562-dc4ff0a3f0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800ef72c-9523-4aa2-82a4-46fcdcd90710",
        "cursor": {
          "ref": "57c6b61e-d197-4478-a97f-3ff2a61f0472",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "27dc423f-8a01-48ab-b3d0-ac7b93c20929"
        },
        "item": {
          "id": "800ef72c-9523-4aa2-82a4-46fcdcd90710",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f5f901af-41d6-4453-b78b-65dca6a08473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7161df-120d-4961-a42e-f1b9056f812e",
        "cursor": {
          "ref": "a24eeb0f-07cd-4fe8-8894-995b1cea7443",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d0111186-9397-45b3-b530-5aa15ea145cd"
        },
        "item": {
          "id": "af7161df-120d-4961-a42e-f1b9056f812e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd6819c0-833d-40e1-8b21-91397ff88fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a42248-4681-45f2-bd59-de0f0456d7be",
        "cursor": {
          "ref": "ec33616f-7c5c-4eda-92a2-f8272de9c8ba",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a22488d8-2d25-4b7a-9831-8dec6676cdcf"
        },
        "item": {
          "id": "04a42248-4681-45f2-bd59-de0f0456d7be",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d1f7dd8e-9dd8-4874-af60-d1706db98518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93a8b02-cb11-405c-964e-5a5e29a45bc8",
        "cursor": {
          "ref": "74d47be4-dd6f-498f-ad57-76e5fca7f7b4",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d3fc8cb-2457-40c0-9104-80a8d459946c"
        },
        "item": {
          "id": "b93a8b02-cb11-405c-964e-5a5e29a45bc8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c6780190-ed52-4f44-b0f9-2c75404f03a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b51544d-757f-408f-ad33-5674a8299571",
        "cursor": {
          "ref": "b595f8d0-91e8-42f4-8aa7-276939a39ceb",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b5572a70-d0f6-4f3f-be03-07f2ae953040"
        },
        "item": {
          "id": "2b51544d-757f-408f-ad33-5674a8299571",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5f81c4b7-9fc7-4fd1-b2cd-e84abb978b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9812ed-70c3-4ee4-a2d0-0c5c08f078b6",
        "cursor": {
          "ref": "844dd912-aa10-4a43-b809-de5dca691bcb",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d574f7fb-e69d-41ca-908f-d2fee7249f5a"
        },
        "item": {
          "id": "5a9812ed-70c3-4ee4-a2d0-0c5c08f078b6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e1092d7d-f213-4287-8061-f8a84f67b5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7eab0c-1d73-4ed8-8d9d-99ba65b2bd64",
        "cursor": {
          "ref": "0d69005b-ddc1-418b-b9d7-e6107170390c",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4dde75e5-0bad-4296-b084-4ef2fffa9bc8"
        },
        "item": {
          "id": "6f7eab0c-1d73-4ed8-8d9d-99ba65b2bd64",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e8e12923-3fd2-4a55-b453-69fefd22bced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f0091d-1702-45b3-a169-9100f53f3548",
        "cursor": {
          "ref": "daf91988-9d24-4d76-8b47-ad9ab3c63566",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8a92fde5-62f0-418c-86e0-7ece5c870e95"
        },
        "item": {
          "id": "b2f0091d-1702-45b3-a169-9100f53f3548",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f099f17b-8ad8-44de-85b3-92fb4291fb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb335e4-b35a-4ed6-bd32-f79d1a90b927",
        "cursor": {
          "ref": "5dc36eac-80a8-4ff0-966d-cf4e5c0d693a",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e36187af-124c-4e0d-85c4-e78f19f5b8e5"
        },
        "item": {
          "id": "8fb335e4-b35a-4ed6-bd32-f79d1a90b927",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4009153a-b470-45e8-9991-0122b2069103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc14b202-e56a-49ea-9441-4248f4a70344",
        "cursor": {
          "ref": "bf11b265-4d68-4af1-bf30-e477a16d6a45",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fe2d83b0-2658-4091-aa27-8d7c7178e659"
        },
        "item": {
          "id": "fc14b202-e56a-49ea-9441-4248f4a70344",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "256e1c47-330d-4a29-b156-261d108359fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682e9a3-f2dd-4bab-9a76-c840b04d8def",
        "cursor": {
          "ref": "1b008ff3-51cb-49cd-91f8-ed415d1ca40c",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b7253d26-cb91-4d53-9e8f-e31da457c4ba"
        },
        "item": {
          "id": "6682e9a3-f2dd-4bab-9a76-c840b04d8def",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8b230f4e-ecc8-483f-88ef-b76348e9d515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1e8d76-a286-4ceb-868a-4481468c4d6b",
        "cursor": {
          "ref": "a4a99b91-295d-4f11-ba84-cb9d37ad199e",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c255f240-4006-4e57-8f1d-d28e8c08252c"
        },
        "item": {
          "id": "ba1e8d76-a286-4ceb-868a-4481468c4d6b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "80754195-b88c-43ea-87ee-afc7ebe36fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dcc9b8-130b-4c2d-ae01-68a7f3c54bc9",
        "cursor": {
          "ref": "dcbe1e9c-5ed7-4218-b213-7e266813d50d",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3ad4c2ef-699a-4e45-b36e-5b0936243c31"
        },
        "item": {
          "id": "b1dcc9b8-130b-4c2d-ae01-68a7f3c54bc9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "067b11b4-5780-48b7-ad5e-5207c86cb512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d0d1ca-c1d7-4df0-a2d2-ea7d89c4b2c7",
        "cursor": {
          "ref": "dabd7378-2d9c-441d-bdfa-06e074cdb3c6",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "064657dd-b27b-4f0a-a108-a95de67a4273"
        },
        "item": {
          "id": "b6d0d1ca-c1d7-4df0-a2d2-ea7d89c4b2c7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c244da43-0114-4155-8dd4-eac6ef425f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1ab1cd-f9e3-4193-9e6d-b61723c6319f",
        "cursor": {
          "ref": "8ce5911f-2b0c-489d-9a3b-564c22caeff0",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f65e9a49-2bd6-4151-a768-63fd7dc6df87"
        },
        "item": {
          "id": "de1ab1cd-f9e3-4193-9e6d-b61723c6319f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b9fe8e6c-296b-4b5c-9479-2dce51fbaffd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582b466f-0c7f-4986-880f-937d06e5fee6",
        "cursor": {
          "ref": "f8014b28-b5c3-4d9e-a00f-cffd5f37c66d",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "52c2c30c-de4a-43f3-86b8-f769251792af"
        },
        "item": {
          "id": "582b466f-0c7f-4986-880f-937d06e5fee6",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0212de47-a44f-4d16-8ad4-b6ecc3a4da6a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 499,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49187685-f91e-4bba-bd96-6804303cb9ab",
        "cursor": {
          "ref": "8803b1af-713a-4a88-90ab-29194433c386",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7e5527c4-463c-4c2f-8717-521f1266fe94"
        },
        "item": {
          "id": "49187685-f91e-4bba-bd96-6804303cb9ab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c62157c6-346f-45f1-9f89-f98ee78da909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49187685-f91e-4bba-bd96-6804303cb9ab",
        "cursor": {
          "ref": "8803b1af-713a-4a88-90ab-29194433c386",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7e5527c4-463c-4c2f-8717-521f1266fe94"
        },
        "item": {
          "id": "49187685-f91e-4bba-bd96-6804303cb9ab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c62157c6-346f-45f1-9f89-f98ee78da909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ed59fa-bfcd-495e-b4e2-c82c36d40f76",
        "cursor": {
          "ref": "33d72675-cef7-4e42-8c5f-b486556ca524",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8bda7c15-02c9-4a08-958f-26096a74d7d7"
        },
        "item": {
          "id": "a3ed59fa-bfcd-495e-b4e2-c82c36d40f76",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dfa7b620-b614-464c-929c-a0c6a792cfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f651f0-4f78-49c9-a8a1-a9eb70d4660b",
        "cursor": {
          "ref": "709fdade-6c38-43b0-9f18-9a2ea887a9e6",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8f8b97b1-013b-479a-a801-47e176f2f91e"
        },
        "item": {
          "id": "85f651f0-4f78-49c9-a8a1-a9eb70d4660b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c4f2be1f-734f-4f55-82e4-9acbd956669c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453683c9-0c38-4923-af55-148700a72637",
        "cursor": {
          "ref": "6d1c0b2e-4d3b-415a-96b0-e51a1204a7d9",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eda43ec9-7c08-47ad-b50c-bfa9231deec1"
        },
        "item": {
          "id": "453683c9-0c38-4923-af55-148700a72637",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "99c430ea-a6a8-46b8-b3e0-952329f88f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376f15c5-8887-4262-ba73-abf4474c0d43",
        "cursor": {
          "ref": "269427cd-63f4-4255-84ed-7bf651a0a1a2",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "83ebbeaa-4515-430c-a2f7-092447de9f7b"
        },
        "item": {
          "id": "376f15c5-8887-4262-ba73-abf4474c0d43",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "504f6a9e-ce30-4614-81ee-1814dc6cab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dc166d-5cca-4bf5-84de-0ef1b32e02e0",
        "cursor": {
          "ref": "42f0deb2-2998-4271-ba06-c6464b94f9c5",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "86bd1ea2-3af2-4a70-bda2-f8360539c313"
        },
        "item": {
          "id": "65dc166d-5cca-4bf5-84de-0ef1b32e02e0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fb41c06e-1d27-4776-823c-a86225b5efe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c5644c-06a1-4b9a-abbb-8b2f92e23dba",
        "cursor": {
          "ref": "47c1d58d-978c-4724-9ed1-8e8e32401a87",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5e4a72a6-514c-4b87-8a26-295eb0f73074"
        },
        "item": {
          "id": "d6c5644c-06a1-4b9a-abbb-8b2f92e23dba",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9ba89048-c50b-4185-8b1f-15b1540a5d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72ae6ad-6c20-4625-9a71-1e29789ce2d6",
        "cursor": {
          "ref": "64ecf81b-5971-4fa9-9619-ab07ae300dc4",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "58851dc6-f59b-4fd6-bce0-c2b6a26136ba"
        },
        "item": {
          "id": "c72ae6ad-6c20-4625-9a71-1e29789ce2d6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6e97e43f-f8cf-4f39-9e3a-f95cdbb0e9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b110f6a9-00b7-488d-88ed-e086bd4ac51f",
        "cursor": {
          "ref": "8d933acd-a4b3-435e-bf69-0b26ab392215",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ad65657-1cdf-4415-bc23-3b3746d302c0"
        },
        "item": {
          "id": "b110f6a9-00b7-488d-88ed-e086bd4ac51f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6ec7ceb2-967b-4c76-8290-fe5b9576853a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4389febf-0dac-43c9-a62c-d1a68a96c710",
        "cursor": {
          "ref": "47a4238c-2e69-4d9a-9bf2-ca11435b5ade",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "576a9339-1f0a-450a-aa9e-36047f76c26e"
        },
        "item": {
          "id": "4389febf-0dac-43c9-a62c-d1a68a96c710",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3080b036-9e60-4120-ace3-283d24e18611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b29494-5a2a-42a6-9eb2-69f8f802b061",
        "cursor": {
          "ref": "5e3c2517-e239-4442-b486-29e3f65ae523",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5419dadf-20da-484b-9cfc-8c221683a153"
        },
        "item": {
          "id": "b2b29494-5a2a-42a6-9eb2-69f8f802b061",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1208738a-8f6a-4953-a536-13dd4beede51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d418a4bc-0db6-4825-bfcd-d6dc95a2b17c",
        "cursor": {
          "ref": "dcf911e2-af61-4d1d-981d-740105aecb27",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d08f9b8d-aa56-48f0-a325-341f79ed5d21"
        },
        "item": {
          "id": "d418a4bc-0db6-4825-bfcd-d6dc95a2b17c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dc23536c-6208-4f55-972d-ff12a4b95909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8101c067-5258-49d8-b2f5-6016b46b5c05",
        "cursor": {
          "ref": "4536dfc2-57a0-4299-a789-38d5aea4bdeb",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "202b9e71-3eeb-4dc5-889d-f05487f90311"
        },
        "item": {
          "id": "8101c067-5258-49d8-b2f5-6016b46b5c05",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fee1349c-b316-49c3-ab0e-573a690f6193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286964dd-0452-4638-b547-04974a8a162b",
        "cursor": {
          "ref": "206aa469-f937-498b-81c4-44e91a8d3964",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9e37a597-6381-44a3-abc3-d540043eb67a"
        },
        "item": {
          "id": "286964dd-0452-4638-b547-04974a8a162b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "037e6dbc-3148-4b89-b499-9957a16d05bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ed9c9c-9773-4d6b-b018-d838bf0e907b",
        "cursor": {
          "ref": "a05d1a5b-ceed-47a9-86c6-19c415e0e92a",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "02d78657-6920-4a81-9beb-40b2ed4a25be"
        },
        "item": {
          "id": "d2ed9c9c-9773-4d6b-b018-d838bf0e907b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f78a45e7-af4d-4a15-9ac7-676d12f05e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dad6b2c-236a-445f-8866-d71a5dadc40a",
        "cursor": {
          "ref": "3af160a0-5924-40c5-8861-31b890e743fa",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9c42db81-e342-4ae2-add6-bde0a8970629"
        },
        "item": {
          "id": "8dad6b2c-236a-445f-8866-d71a5dadc40a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1fd9854d-9613-4b0c-8ac4-975a414ceac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cd87d6-04bd-4018-9228-356b4cbdbe5e",
        "cursor": {
          "ref": "396b6e45-4fd4-4147-b904-9ac9b5fe7afc",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2d4f893c-da1b-41bb-9352-d1c59efdd5b4"
        },
        "item": {
          "id": "f9cd87d6-04bd-4018-9228-356b4cbdbe5e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "128484b1-ae2a-4297-8bdd-477f49edc76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa943e19-6f5d-4153-b33d-7bff1f89bfd2",
        "cursor": {
          "ref": "e953be32-e344-4a00-a220-f6c452d4f820",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "316dae72-3228-485c-8a42-1388b7607658"
        },
        "item": {
          "id": "aa943e19-6f5d-4153-b33d-7bff1f89bfd2",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "709ef06c-e4b7-48dc-a496-7792c4458db8",
          "status": "OK",
          "code": 200,
          "responseTime": 3284,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "01aaa0c3-9499-497d-a5d7-f0988c93cdba",
        "cursor": {
          "ref": "22db02c2-74a2-46c5-8b63-834532ccb487",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5e41b73e-5579-4dd6-bb40-cc564f6c6b5b"
        },
        "item": {
          "id": "01aaa0c3-9499-497d-a5d7-f0988c93cdba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b23fa1e5-1307-4018-a8f2-a8228554649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99de0cd3-f44b-4dc7-819b-aa0ef2760a2d",
        "cursor": {
          "ref": "e0adb4a3-3aa5-40e8-bd79-859887edad28",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5b92b30a-15a5-465e-857a-289625c4a661"
        },
        "item": {
          "id": "99de0cd3-f44b-4dc7-819b-aa0ef2760a2d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3543cef8-0420-4808-a3ad-bcbe285ee1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce4c802-6776-4733-afcd-2ae0e6ca79d9",
        "cursor": {
          "ref": "2b94c845-f437-45bc-80bd-519744ac9161",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8b984583-f861-4421-b80c-e00383f02e45"
        },
        "item": {
          "id": "fce4c802-6776-4733-afcd-2ae0e6ca79d9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e49c233a-c334-49be-be0d-52f414bad305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2200b8a-a0dd-4aa1-93ad-09d0e5df489b",
        "cursor": {
          "ref": "395a7455-115d-4b84-9b1f-aa0dc3f201d8",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0f7cd107-862c-4ec6-b303-9c922b2e0b59"
        },
        "item": {
          "id": "f2200b8a-a0dd-4aa1-93ad-09d0e5df489b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bed125f2-8f0c-4f70-af2f-cb8f95451b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764ab470-0797-4924-b09f-e3ae38daa7cf",
        "cursor": {
          "ref": "b9f63612-21cc-4a19-9d91-dca76bc7a73f",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "45f28165-22fe-4386-895f-050290491faf"
        },
        "item": {
          "id": "764ab470-0797-4924-b09f-e3ae38daa7cf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "876083d6-e858-4f24-9d22-fff4d023ca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48e1660-15be-4361-bdf5-2983d7407e07",
        "cursor": {
          "ref": "fbe787be-2a2e-473b-9bfb-6703acd8ef46",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2fde5e44-97d2-4edf-a198-f28f5427773e"
        },
        "item": {
          "id": "c48e1660-15be-4361-bdf5-2983d7407e07",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8d460895-25c1-4432-8fa6-68a698a9aeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff93b8b-8a1a-40b9-9021-fba141235a64",
        "cursor": {
          "ref": "69c4edfc-c34d-4e40-8cc0-00f8feaeaec8",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4661522a-8faf-4b78-a2eb-f40e5c40862e"
        },
        "item": {
          "id": "cff93b8b-8a1a-40b9-9021-fba141235a64",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "02d6df27-71aa-4522-bcc2-11f30778cd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08beb4e9-e44c-4c2b-953b-472e006d3055",
        "cursor": {
          "ref": "6f5e3354-ebe9-465b-a059-7a089d391e2e",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4d81f2d4-a435-4a92-8bc1-c77f30fbf37c"
        },
        "item": {
          "id": "08beb4e9-e44c-4c2b-953b-472e006d3055",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6d3ecab0-5343-4954-891d-e83542e7a4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed22d953-fdca-4907-97ad-0bdcc42ef7b1",
        "cursor": {
          "ref": "3b0bea39-bd8b-47ae-805d-674065a1647e",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c0d23477-b679-41aa-9186-ebb73b8c5158"
        },
        "item": {
          "id": "ed22d953-fdca-4907-97ad-0bdcc42ef7b1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "df69e767-f06a-4af5-a6d6-c7f33a9a0235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98d4006-c7f1-4574-a4a9-68a6db144abb",
        "cursor": {
          "ref": "a90d4451-9104-4cdd-adaa-28f467f271bb",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "57de01ba-da40-48e9-aa99-6cd37d997ce7"
        },
        "item": {
          "id": "a98d4006-c7f1-4574-a4a9-68a6db144abb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "283b1d88-6350-4ead-a308-739ab8fd9c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f41c9e-7c1b-4dbd-a9e2-a966419ada4f",
        "cursor": {
          "ref": "8f885532-4f08-4477-8fa5-2b8233c8f784",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3ed0eacf-5fe8-4fb2-a9e6-9f41bd50e918"
        },
        "item": {
          "id": "66f41c9e-7c1b-4dbd-a9e2-a966419ada4f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "563287a0-13b6-4241-8882-489c1dc33bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e15133-66a6-432a-a6de-2af36fa14ace",
        "cursor": {
          "ref": "00df4aaa-cbc7-4975-a368-1417e030d656",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "de0388b5-2279-4a61-90ff-98f0cece3377"
        },
        "item": {
          "id": "d2e15133-66a6-432a-a6de-2af36fa14ace",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "36e586f5-5b68-42f0-8910-2af1ddd8b5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabf6c09-f4fb-45d1-ad42-aa9a562c999f",
        "cursor": {
          "ref": "be5edb90-ed41-4182-8fad-a10e89dfa28a",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dfa257e5-47f8-4960-af90-bfb0b7f83b39"
        },
        "item": {
          "id": "fabf6c09-f4fb-45d1-ad42-aa9a562c999f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dd655f4c-23c6-409a-a71b-24d16d7f22f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0d66b8-fe01-4dbd-a173-f2bcc46af75b",
        "cursor": {
          "ref": "26948a9b-96c9-44a2-a7ca-027c702301f3",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "57bc366d-01cb-44c4-a3dc-25e3b93f9a98"
        },
        "item": {
          "id": "5d0d66b8-fe01-4dbd-a173-f2bcc46af75b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c553f505-7a8f-418b-9cf0-e682d8c4ec02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3d9576-2e5b-473f-9bbe-545730eca326",
        "cursor": {
          "ref": "e5470c5a-0ad3-4e73-a2bd-ce75851d6561",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "269e399e-cc00-40e3-8d39-84aa362720fe"
        },
        "item": {
          "id": "1e3d9576-2e5b-473f-9bbe-545730eca326",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "07c4e0f0-e4fb-4059-b4d6-430b14da9812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf54efc-685d-4f41-9665-30ae7b2770f8",
        "cursor": {
          "ref": "46d8b7a9-620a-41a8-9e61-32725e65aaaf",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "459f4808-ea9d-4f1c-951a-6721509ea5ae"
        },
        "item": {
          "id": "daf54efc-685d-4f41-9665-30ae7b2770f8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b7b44758-dd00-4e67-8489-4b373c09a79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc3dcc8-4b58-4f5f-9c42-d301f02f59fe",
        "cursor": {
          "ref": "2ba52a96-550a-4024-aaaa-8d9fe0b37a03",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "70cf79cc-3354-4db5-aad8-52e9c7e135da"
        },
        "item": {
          "id": "abc3dcc8-4b58-4f5f-9c42-d301f02f59fe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a14795c6-21dd-45fb-9e72-7524fab657f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e172b2-229d-4f66-8451-369ac13ba21a",
        "cursor": {
          "ref": "ed8a6919-79d6-471f-846e-b0e565e74d8e",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "da34bd02-6c24-450d-8287-1d7276935cbb"
        },
        "item": {
          "id": "d3e172b2-229d-4f66-8451-369ac13ba21a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e9e60d2b-c568-4a87-81a5-a962b2e679e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc95502-7b58-4d28-a6a6-5f1f90a66f01",
        "cursor": {
          "ref": "94eb6486-5f6e-43e5-83c8-445d239e9adb",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "af4736eb-0605-4201-b32f-2959c5a573a9"
        },
        "item": {
          "id": "bdc95502-7b58-4d28-a6a6-5f1f90a66f01",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "49fd4f61-64b2-474c-9279-01c920fd827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c97bb8-1d01-4127-a98f-a6d4429ebb3f",
        "cursor": {
          "ref": "c26df50f-5b61-4ee7-b7cb-9a726bde4f01",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5902bb1d-62d1-42dc-b8c6-6e1c654055ec"
        },
        "item": {
          "id": "75c97bb8-1d01-4127-a98f-a6d4429ebb3f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "82c5a1c5-b70a-4438-9332-84b8b441cb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0e2208-ffeb-4966-9b1d-44eb26782d1e",
        "cursor": {
          "ref": "d5c16d09-1aef-4c9e-b390-8fc1dd0640c0",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ffbe790c-d1e8-41e8-befc-0d69239c5c37"
        },
        "item": {
          "id": "3a0e2208-ffeb-4966-9b1d-44eb26782d1e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0a4ef13a-56df-4b27-b5dd-a3a0c33b5d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa434679-539e-4e7c-a41b-cd5b13c4fa10",
        "cursor": {
          "ref": "7678d840-3924-48be-b43f-976d67688b82",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "21938d97-b99e-4b6f-bb61-ad691fd9ee21"
        },
        "item": {
          "id": "fa434679-539e-4e7c-a41b-cd5b13c4fa10",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c31d6ddf-994a-452e-8a47-d448c564fdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb2bbc6-4846-470c-8b64-9d92731c8c9a",
        "cursor": {
          "ref": "27841a06-d04e-43e3-8bd5-5aaf124774fe",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cc0b3307-5ad9-488a-bce8-957011cddae8"
        },
        "item": {
          "id": "9eb2bbc6-4846-470c-8b64-9d92731c8c9a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "22433452-ec36-4675-a953-d56b36db7223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190661d0-2611-4b12-a393-d39d29b7b443",
        "cursor": {
          "ref": "7bb3fdd1-c6de-4f99-9be4-bf4012cc63de",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc3d2127-87d8-4070-98a9-54c37499ff96"
        },
        "item": {
          "id": "190661d0-2611-4b12-a393-d39d29b7b443",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bb19510c-863f-44e8-afe0-38082cd7fc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d51113e-3c9f-4c70-b92f-0b9e25e5e0e3",
        "cursor": {
          "ref": "015df0a9-7eb2-4394-982e-09644b762b83",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aa0e4ec5-f044-4c7b-93ab-c5686d72462b"
        },
        "item": {
          "id": "7d51113e-3c9f-4c70-b92f-0b9e25e5e0e3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9cddd5a5-8356-4954-a47d-c365904191fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5800bb55-70dd-4fe7-8834-9d90abc88813",
        "cursor": {
          "ref": "64ff05e9-df67-41e2-8208-c0d50440c21e",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fde51a0d-19f6-4110-8e4a-fa6513b79921"
        },
        "item": {
          "id": "5800bb55-70dd-4fe7-8834-9d90abc88813",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "64a96fe3-9165-469e-bf63-855fe5fca1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75266216-a428-4683-807c-222fe7476bd6",
        "cursor": {
          "ref": "ff89dc0d-2856-4c0f-98d3-06d198cd772a",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f466a155-49c8-4878-bc23-c1f1719fb7ed"
        },
        "item": {
          "id": "75266216-a428-4683-807c-222fe7476bd6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "42d1bc45-54dd-4f1a-9bb4-d317bb89c877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e64be7-e4d4-44d6-aabf-78058a93e0af",
        "cursor": {
          "ref": "2800fbe4-5046-4d7c-b2bc-9dde4eb78380",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e28f9426-4570-4076-b1f5-054e7fb43e7d"
        },
        "item": {
          "id": "68e64be7-e4d4-44d6-aabf-78058a93e0af",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b40913f1-5772-4886-bdc0-e7300988a682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4824cdb-5ae0-4737-bcda-0ee907c000e0",
        "cursor": {
          "ref": "01fef542-74ed-42a1-8769-921e47c6d875",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7a5bb0da-a49f-4a79-bd84-e74c608275ff"
        },
        "item": {
          "id": "e4824cdb-5ae0-4737-bcda-0ee907c000e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8f5e8efc-3813-4528-b0fe-e0e54075421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ab7a5f-c9ce-43bf-ae84-eed3e17a07aa",
        "cursor": {
          "ref": "ff4eacce-0ad2-4272-95c0-a22aaa465516",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9dece3c0-6726-40d7-a125-4557f9b5d354"
        },
        "item": {
          "id": "e9ab7a5f-c9ce-43bf-ae84-eed3e17a07aa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bcc91d79-49a9-44ad-ba3e-2620de922adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dbd58d-77a0-4124-9513-6b0fcb0f520f",
        "cursor": {
          "ref": "037200b5-a574-4927-913a-ce3180141388",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2a233f48-8c10-42e2-b102-8394250c70a3"
        },
        "item": {
          "id": "10dbd58d-77a0-4124-9513-6b0fcb0f520f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "919256bc-e7c1-41c7-850b-c4f7fd923134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9646b1-fe07-4044-a60c-d6eef206322a",
        "cursor": {
          "ref": "66b1ad50-667e-45a3-9c12-5bc9c27fd26d",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ce6d44e4-ebe2-4584-9a4b-5c46ec0364bc"
        },
        "item": {
          "id": "2d9646b1-fe07-4044-a60c-d6eef206322a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ec98dda9-c259-4885-91ce-b368bc264102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f67961-e27b-4880-bee6-728acae22b7e",
        "cursor": {
          "ref": "f9d28e06-a2ce-4283-bb7e-5c11a2ab4420",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3824b38a-6933-4eb5-9977-a24b73f2df6a"
        },
        "item": {
          "id": "31f67961-e27b-4880-bee6-728acae22b7e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bd043bcd-bffd-4024-9352-02c02062f6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58458db-0bba-44af-be8d-2d681cfcc169",
        "cursor": {
          "ref": "febfa3bf-7579-4d56-afd2-3f39606c68b0",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1bc3e807-981f-49ba-a0d1-dd524c843f1c"
        },
        "item": {
          "id": "a58458db-0bba-44af-be8d-2d681cfcc169",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "45bfb8ed-e897-4503-83ee-7dd88108b2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41a8079-9c54-4d78-b011-e1f336a2004d",
        "cursor": {
          "ref": "d87f5761-7d15-4693-9aaa-d27c6fda7c2a",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "91a218a1-3589-4d9a-adc8-d330104e8d83"
        },
        "item": {
          "id": "a41a8079-9c54-4d78-b011-e1f336a2004d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4bb08689-404d-4bee-84e6-fde4d14f2356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9811f8-10af-4c1d-b9bd-0ff29387bdf2",
        "cursor": {
          "ref": "384dfa0e-aec0-4935-9d8b-3592de3075db",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7499966b-2018-4bd3-a5a0-7aa57e51e4da"
        },
        "item": {
          "id": "af9811f8-10af-4c1d-b9bd-0ff29387bdf2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ef0741fe-f82f-46c3-97ee-e37656d647f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eb56cc-e868-465a-a0b3-b61079fa533f",
        "cursor": {
          "ref": "edf57bad-60da-44b1-8ce1-5739d006838a",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1695dd5c-f7e9-4b23-b164-f146f96bdd61"
        },
        "item": {
          "id": "05eb56cc-e868-465a-a0b3-b61079fa533f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ebe3e22c-89da-4496-af31-84ae4b15a48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d648737e-2127-416a-9de1-7ef07880a3c8",
        "cursor": {
          "ref": "cae774d3-e609-480d-8ce9-e3cd045be177",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9814db20-c228-4c34-9ac4-397b3b21b9cf"
        },
        "item": {
          "id": "d648737e-2127-416a-9de1-7ef07880a3c8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "464dbc6a-4256-4f60-9b3f-626c55c04a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "face00c7-8cfd-4be1-ba96-81a9cde18aa4",
        "cursor": {
          "ref": "0f1d1ec5-5f75-49ea-8b9e-662c97982f06",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d1a9e222-e8da-4bc7-a6e9-8e1dd1f78f57"
        },
        "item": {
          "id": "face00c7-8cfd-4be1-ba96-81a9cde18aa4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1de42649-0fb7-42c5-951b-f669c26b1775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afd261e-1028-4ed2-8c71-51cf04f6c1c6",
        "cursor": {
          "ref": "05d506ab-1bf5-44b7-a14d-dc9ca2955d68",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "663f0dd2-a602-42e3-8bd8-080be53be2c0"
        },
        "item": {
          "id": "4afd261e-1028-4ed2-8c71-51cf04f6c1c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0f347f07-d9f7-4f0b-b5bb-686fa1f1c0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3d4386-aa13-443e-822b-a7ecf7213fa4",
        "cursor": {
          "ref": "20dd2ea2-99d6-4076-945f-608b593055f4",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1e93c171-8245-4161-87ef-2d5e6025788b"
        },
        "item": {
          "id": "cf3d4386-aa13-443e-822b-a7ecf7213fa4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f41b7214-ecb0-47be-9630-597e95eeed1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d0aca1-a392-4abb-b10b-55865c871469",
        "cursor": {
          "ref": "3e7822e6-1907-4897-a816-2a9af5aa7a79",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "18b6fcdb-3685-4cc2-802b-a588b81f228d"
        },
        "item": {
          "id": "b0d0aca1-a392-4abb-b10b-55865c871469",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "097da630-5b7b-4a1e-8127-772958489bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2455807c-f777-4b78-874b-92f61364559b",
        "cursor": {
          "ref": "435416e5-7f4a-4696-ad2f-c1d828f71653",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "35092399-f3ce-4bfe-9e02-552c5eb3e9ac"
        },
        "item": {
          "id": "2455807c-f777-4b78-874b-92f61364559b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d699ca3a-c19c-4505-8cd8-7942b7bd2d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3180f7-c75f-4e7a-9bfe-a2c5f6cf79d3",
        "cursor": {
          "ref": "1e1878fa-c017-4303-afc7-8ac16663153c",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ef131d8c-e3f5-46c3-a220-f1ed41ff7564"
        },
        "item": {
          "id": "6b3180f7-c75f-4e7a-9bfe-a2c5f6cf79d3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ae7f44ed-95b3-4e7a-9d84-ab7a75d4e7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8443867e-8438-4631-872f-263e40738885",
        "cursor": {
          "ref": "f272b745-e874-4ce6-961c-a765a5042d98",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4cef83b0-2fda-4b5f-b4e5-7eea9f68a384"
        },
        "item": {
          "id": "8443867e-8438-4631-872f-263e40738885",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9154f068-f121-4336-868d-f693a1d6e000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f9956a-59e3-4835-a024-cdd0160c4ceb",
        "cursor": {
          "ref": "09a20347-3980-48c3-97e9-9b3c08e7adb5",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dbfaac66-7b03-42e7-8a17-6ebbad49dc0e"
        },
        "item": {
          "id": "55f9956a-59e3-4835-a024-cdd0160c4ceb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1d8eacdf-3c3e-4aa6-82ed-618bc3d446d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2b018d-a050-40c7-80a0-6f98712b9dd3",
        "cursor": {
          "ref": "37e9242e-7bc3-4642-89c3-3c7d136b3e6a",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "97a932cb-58ad-472a-8aff-668c9bebb278"
        },
        "item": {
          "id": "7c2b018d-a050-40c7-80a0-6f98712b9dd3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6294a6ed-3b55-406c-9358-cb25b1b7eb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f79834-9308-4312-bf6a-818eecea3704",
        "cursor": {
          "ref": "86e1c1c2-46c5-4a07-8485-7b7c13c7c78a",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5a1cddf2-09c9-4fb6-8dc0-fc5ce652923f"
        },
        "item": {
          "id": "36f79834-9308-4312-bf6a-818eecea3704",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2f0a4ae1-46c4-4729-b0c2-dfc10e0abbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e495959-dc5d-4932-bb0f-6dbc03c54267",
        "cursor": {
          "ref": "f3a8768f-9d92-45f7-9323-7755c900d8f3",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "23316362-dbc3-41ad-9f84-f61428fab5ca"
        },
        "item": {
          "id": "6e495959-dc5d-4932-bb0f-6dbc03c54267",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0fac0dc0-1774-4503-bce5-919c80bc7ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce97778-e13c-4c2e-b299-bafa00e56506",
        "cursor": {
          "ref": "66096eaf-04a6-4d17-8301-34868cd188b7",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "de1d2ae6-809d-458b-9306-160a920e5459"
        },
        "item": {
          "id": "0ce97778-e13c-4c2e-b299-bafa00e56506",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "67f51756-70ba-4ac6-8892-969107fb1840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26e60b8-4ae9-4680-a089-ee7ffac98ad0",
        "cursor": {
          "ref": "395ddd05-1995-451b-8aa7-8a42c277c241",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7452d5b1-e6fa-4d1b-8a08-684efe1462a6"
        },
        "item": {
          "id": "d26e60b8-4ae9-4680-a089-ee7ffac98ad0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "60bdfadc-9a96-40bb-a9cf-347ba30171c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d83e6c4-a192-4a35-989a-c1f1a8d2aa36",
        "cursor": {
          "ref": "d1d16824-28ba-4e26-ad68-a40620eca3a3",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d3653645-9465-4e5a-92f6-9a3ce5a12221"
        },
        "item": {
          "id": "3d83e6c4-a192-4a35-989a-c1f1a8d2aa36",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1ae9ab07-22b7-4ceb-87bc-b0dc040b0e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8187a0e-ede4-4da9-880f-fb2f2d91bc0a",
        "cursor": {
          "ref": "42bb9906-6210-4451-92cb-f64087e7ae3d",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b1e74abb-0c89-4a18-af93-25e37dc90043"
        },
        "item": {
          "id": "d8187a0e-ede4-4da9-880f-fb2f2d91bc0a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1e5408b8-75c2-4c5d-9aee-439165bf7c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e38aed0-03a0-479c-b14f-82f9e470f932",
        "cursor": {
          "ref": "c2d41c2a-f812-4857-91b4-df31c235e6ad",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a2a09cbf-9b99-4880-a9cd-cdda09f5342d"
        },
        "item": {
          "id": "1e38aed0-03a0-479c-b14f-82f9e470f932",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "12a5d1cb-9cb2-434f-83a7-d7cb74df8889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3bf879-e9e2-464f-a857-7ce9cb5d803a",
        "cursor": {
          "ref": "63972dd0-77c1-4d8d-9653-57ad84aee125",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ece63818-104c-45db-9b4c-d049e9bb19c6"
        },
        "item": {
          "id": "3a3bf879-e9e2-464f-a857-7ce9cb5d803a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5ac044ce-9bc5-43b4-8144-cb5e87b7a80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7720467b-f66a-4073-a84d-c81bca6fcca7",
        "cursor": {
          "ref": "5795f5bb-b454-430a-8f50-67a8d8cc71a8",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b5e3073b-ad62-4add-836d-dd3cff8434b7"
        },
        "item": {
          "id": "7720467b-f66a-4073-a84d-c81bca6fcca7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "17a90b65-de93-4f45-94d2-acc6538297e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0263cebd-5ec9-4d61-bc12-8da845a0722d",
        "cursor": {
          "ref": "d3355270-2210-4a09-9422-a1317fb95d7d",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ceb9b16b-6713-4080-b8a2-43db1b32acd7"
        },
        "item": {
          "id": "0263cebd-5ec9-4d61-bc12-8da845a0722d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2d4810f6-83ca-48ed-bfea-148dc894cae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae7e201-3dc8-4919-a1c4-fe29f9679bc4",
        "cursor": {
          "ref": "3e8076a6-8091-4e4f-91b7-42a9a6000f42",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "594f3cb8-d8e6-4f9a-8551-aee5703091fa"
        },
        "item": {
          "id": "5ae7e201-3dc8-4919-a1c4-fe29f9679bc4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9a7e027c-16bc-4d78-9d87-f5fcf0fbd834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e380d9b-8fa2-4b40-9350-a4c5e41dedb1",
        "cursor": {
          "ref": "18c02a0a-23ed-4be6-bd9e-96c6dd024d30",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4620b25f-4967-4dfc-ab1d-033afe9e3f37"
        },
        "item": {
          "id": "2e380d9b-8fa2-4b40-9350-a4c5e41dedb1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ce84109c-e04e-452d-90c8-6102a27feb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4defe50a-5cbe-4c4e-bc19-4d534732dfd7",
        "cursor": {
          "ref": "6e687f34-9d9e-4f8b-a59c-0dd080841134",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3775168c-7bf3-45a7-92df-7754727e9d37"
        },
        "item": {
          "id": "4defe50a-5cbe-4c4e-bc19-4d534732dfd7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9acd1d7a-b278-426d-860c-42dc0fb16569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19eff282-9dca-4e0d-ab25-78626991de00",
        "cursor": {
          "ref": "1ff8b831-92a5-4d95-bba9-9108badb8062",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7eb1d80c-640d-4d2f-9ae2-305b30756f45"
        },
        "item": {
          "id": "19eff282-9dca-4e0d-ab25-78626991de00",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8e9ad120-5912-4d05-a7a5-09c12bb89483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a0bd8c-6203-4b51-a2af-72ea23078697",
        "cursor": {
          "ref": "9a3417c6-1452-4e24-a879-1e2baafa43a2",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f61694ce-c8dd-4c9d-a4b6-2ccb5a80c976"
        },
        "item": {
          "id": "d0a0bd8c-6203-4b51-a2af-72ea23078697",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7406bc72-3d66-4adc-84e3-0d8acae40c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847ba39a-b33f-4ff6-a52f-28b439706a97",
        "cursor": {
          "ref": "fb93b9c6-16a6-49f7-8d6c-d6bc66f256a0",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4df19be-fda4-42dd-b88a-bfddeae7a631"
        },
        "item": {
          "id": "847ba39a-b33f-4ff6-a52f-28b439706a97",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8705c8e3-2a55-4cfc-b104-5dc56d622e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3cae3d-930a-4c09-a44a-4c250b1f80c3",
        "cursor": {
          "ref": "dcb53e7f-16a8-459f-af4c-13a0827cfb4b",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "47c4324e-1303-4aa5-8626-5043ef95d0e9"
        },
        "item": {
          "id": "3e3cae3d-930a-4c09-a44a-4c250b1f80c3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "092d662e-11b2-45c6-83e1-96aabb3604bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debb7a46-66ac-4821-8d78-0572eeb3d792",
        "cursor": {
          "ref": "d0943f17-83ac-4ab5-980c-aa6191c34479",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a3f91612-d3ed-4842-870d-544bb2f9b647"
        },
        "item": {
          "id": "debb7a46-66ac-4821-8d78-0572eeb3d792",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c4a1d223-f8a7-4ffc-98e8-8f90e9df1e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863cd36e-d20a-42c6-84a7-ce0e27cf7bdb",
        "cursor": {
          "ref": "d4804b08-59f5-4e45-bdd4-4140b1c8991b",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "46ff7b6e-f636-4f7b-bf9b-86a345589191"
        },
        "item": {
          "id": "863cd36e-d20a-42c6-84a7-ce0e27cf7bdb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "56e0244e-ee1c-4ce9-9316-cfc165b426f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea6fcff-efe3-45c6-9c8b-64baf8edce06",
        "cursor": {
          "ref": "13bb9143-c70e-4278-83c0-55084d85972a",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7ff5163d-9af7-43c5-be37-bc192028c242"
        },
        "item": {
          "id": "2ea6fcff-efe3-45c6-9c8b-64baf8edce06",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4e08c218-97d3-4d47-83ad-31b564270be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9729ec9-650f-4519-8729-755739ee6ffe",
        "cursor": {
          "ref": "059fd527-5545-4934-af35-bb8fb41101e5",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "39cdbd8b-093b-4d67-8744-f50c24a4b2f1"
        },
        "item": {
          "id": "d9729ec9-650f-4519-8729-755739ee6ffe",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "62282b22-9c22-496e-8d65-451dd7647b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260ede10-d58b-4afa-bfc0-5e8c6a78ced7",
        "cursor": {
          "ref": "782f7a1e-94ef-4a20-bceb-75ca294c349d",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6eb9ef2d-6f35-42f5-b404-8d9d192f7638"
        },
        "item": {
          "id": "260ede10-d58b-4afa-bfc0-5e8c6a78ced7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "af4baa9d-be18-483f-b745-0a0b57880419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d97f22e-7a62-4141-919c-154fd9adba76",
        "cursor": {
          "ref": "0230d1ba-448c-4444-a228-272c533433cf",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9e25b447-07b0-49f5-a49f-1dda1f44e62e"
        },
        "item": {
          "id": "6d97f22e-7a62-4141-919c-154fd9adba76",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a436f221-4b3b-4c64-8dc1-0c8974853d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad4338c-4736-48f3-82fa-47f5b9a70fcb",
        "cursor": {
          "ref": "dfd06589-1f2d-4f6d-b4cc-52a2b01b24f5",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "278c920d-b2a0-4de4-a3ed-63d39df7db8e"
        },
        "item": {
          "id": "7ad4338c-4736-48f3-82fa-47f5b9a70fcb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f74ab5de-d05c-4c45-8ece-6e98d070b2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28540966-b280-489c-a96d-582676079e5e",
        "cursor": {
          "ref": "baf64353-74c8-4194-b118-837a701761e8",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2d893452-f6ca-4a8c-90a1-afa765bcc36c"
        },
        "item": {
          "id": "28540966-b280-489c-a96d-582676079e5e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9b47a81e-7b92-4053-8b77-52d0cbb5e446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc7756d-3bda-4414-a7b7-b9b114d82db1",
        "cursor": {
          "ref": "55a81068-5df9-471b-8fb1-20709e382154",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3d2bac02-7b6e-452c-849a-309ec4d9bcc5"
        },
        "item": {
          "id": "7fc7756d-3bda-4414-a7b7-b9b114d82db1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e8a915af-273f-42e9-a56b-3936381dcfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d548621-a77a-45bf-82a7-8c52c20d1d79",
        "cursor": {
          "ref": "a5d87f9a-b380-488f-985b-91c84ca75ac6",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0903554d-5986-4748-8147-7f25f8c5daa9"
        },
        "item": {
          "id": "1d548621-a77a-45bf-82a7-8c52c20d1d79",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a7a297cf-25f0-40f1-867b-8995962852dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8242f0-131d-4644-b0f9-3c4c49b3fcb3",
        "cursor": {
          "ref": "501e6799-f26c-4c1e-a31b-56aaa666432a",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dd381498-884f-4767-8b09-52a7a8403ced"
        },
        "item": {
          "id": "ef8242f0-131d-4644-b0f9-3c4c49b3fcb3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3363f953-3808-4ece-b479-7cf307c6be63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5dfeb5-bc7c-4e89-8cde-f5cf2d351772",
        "cursor": {
          "ref": "4bc3542a-f270-455c-aeef-80f11be2ea29",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "954e285e-6dfd-433c-9845-ca6f8f7b6f9a"
        },
        "item": {
          "id": "9b5dfeb5-bc7c-4e89-8cde-f5cf2d351772",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e5d557bc-7258-416f-a64f-140895739586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87ba32f-59a6-48a9-bf0d-7de09742124b",
        "cursor": {
          "ref": "74da4566-221b-4e86-9e03-45108b8ac65c",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ca2eb364-3551-4e39-8186-404543468c37"
        },
        "item": {
          "id": "f87ba32f-59a6-48a9-bf0d-7de09742124b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c1ab6a8a-fdd2-4175-aa5a-a59d7f2fcc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd91bc53-563d-4806-b4da-cf76f1bab883",
        "cursor": {
          "ref": "c8eebec6-878c-4c86-8064-f3d8d476a3f3",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f65c6024-fcfa-42bc-b8c7-5dd261ef8249"
        },
        "item": {
          "id": "bd91bc53-563d-4806-b4da-cf76f1bab883",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d70e435b-dac6-4ddf-b193-401c41fecede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4b8e86-98f2-41ba-81a4-517e94a46cda",
        "cursor": {
          "ref": "46be1089-5588-4975-876e-9b3c6c02f93f",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7a8836dd-5ce0-4bf0-b40f-0afa37385115"
        },
        "item": {
          "id": "4e4b8e86-98f2-41ba-81a4-517e94a46cda",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6f437e3a-8b3f-4543-af76-fdcd39f4c432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1209a29d-ddd2-4600-810f-d61a2e72e456",
        "cursor": {
          "ref": "d775030a-6158-42b3-8bda-a23fc990bd22",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1ed5547e-23b6-4c75-a675-3b11ef463aba"
        },
        "item": {
          "id": "1209a29d-ddd2-4600-810f-d61a2e72e456",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "05043708-d7c3-4b58-8d6a-1d1b2004b42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f29d47-e349-47e8-909b-abc31769936b",
        "cursor": {
          "ref": "2560014b-e111-44a3-a130-8acbd6eaa83b",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d124ba51-5e02-41df-8ba0-15b216984342"
        },
        "item": {
          "id": "92f29d47-e349-47e8-909b-abc31769936b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bdcd3b3a-9aa2-4c3e-b454-aa84d8d1a8ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10b2401-e038-41b1-8937-3460fc93b30f",
        "cursor": {
          "ref": "511f2b9a-b29b-43dd-aaf3-683fdcf67bee",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "35611bcb-2206-4594-9431-ba676026a7a7"
        },
        "item": {
          "id": "f10b2401-e038-41b1-8937-3460fc93b30f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "defa10e7-195a-4a30-ac6c-b5f4c64ea3fc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 280,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8050a32e-8a1c-4e87-a19f-146560be0bc4",
        "cursor": {
          "ref": "e45122ad-c9a6-4a2d-a115-c47a02da752a",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dc30d330-0167-49a7-818c-5189d5d130d4"
        },
        "item": {
          "id": "8050a32e-8a1c-4e87-a19f-146560be0bc4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8fccdd6c-dc04-43be-a4c9-50ed04ee7875",
          "status": "OK",
          "code": 200,
          "responseTime": 387,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6033ba45-853e-4c2e-805f-ddf03c0313c2",
        "cursor": {
          "ref": "8f1c0122-2e05-42f0-8797-9f3e181a81d0",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "389134c3-662b-4bab-8b9e-ecbdec4c3434"
        },
        "item": {
          "id": "6033ba45-853e-4c2e-805f-ddf03c0313c2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0dffbb44-defc-41f5-af8a-af5e5c82b55e",
          "status": "OK",
          "code": 200,
          "responseTime": 3064,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd080f99-17f4-4096-9b0a-ecaad46dc948",
        "cursor": {
          "ref": "f0933cf0-1c5f-4eb6-82ee-84a44d5a5ef1",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e0a1cd88-6279-4235-ac51-8fff0e5eebd0"
        },
        "item": {
          "id": "fd080f99-17f4-4096-9b0a-ecaad46dc948",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6e4e772c-4aec-4206-ad6f-6bdbf7ffa864",
          "status": "OK",
          "code": 200,
          "responseTime": 3384,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9e916d-e9f4-4fd9-b475-74565fe924df",
        "cursor": {
          "ref": "6fcf4ba5-5d02-4133-ab9e-d73181396672",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d153d45-916f-4bbd-bb01-7011e206e5b1"
        },
        "item": {
          "id": "5f9e916d-e9f4-4fd9-b475-74565fe924df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e053df65-e808-4cf1-b1ef-ff6ecc2565b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9e916d-e9f4-4fd9-b475-74565fe924df",
        "cursor": {
          "ref": "6fcf4ba5-5d02-4133-ab9e-d73181396672",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d153d45-916f-4bbd-bb01-7011e206e5b1"
        },
        "item": {
          "id": "5f9e916d-e9f4-4fd9-b475-74565fe924df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e053df65-e808-4cf1-b1ef-ff6ecc2565b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9e916d-e9f4-4fd9-b475-74565fe924df",
        "cursor": {
          "ref": "6fcf4ba5-5d02-4133-ab9e-d73181396672",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d153d45-916f-4bbd-bb01-7011e206e5b1"
        },
        "item": {
          "id": "5f9e916d-e9f4-4fd9-b475-74565fe924df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e053df65-e808-4cf1-b1ef-ff6ecc2565b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd7022f-748b-4b7c-8871-7c57ba5b2f98",
        "cursor": {
          "ref": "a0e056de-c3bd-4ed5-991f-95b1c216661e",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d849484f-0605-4249-854c-022bd824eccd"
        },
        "item": {
          "id": "5dd7022f-748b-4b7c-8871-7c57ba5b2f98",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0154c43b-def4-40ec-9eee-c0511f91b87d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 309,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feeeafd-a18c-4a75-82ca-775d5f52ea11",
        "cursor": {
          "ref": "80c0a6d8-a9a7-4a7d-bbae-18a47fc63d63",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30ce2ec0-b0d7-418f-8af3-7d938b62c011"
        },
        "item": {
          "id": "3feeeafd-a18c-4a75-82ca-775d5f52ea11",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9993420f-17a9-4e94-a38d-609dc98a021f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feeeafd-a18c-4a75-82ca-775d5f52ea11",
        "cursor": {
          "ref": "80c0a6d8-a9a7-4a7d-bbae-18a47fc63d63",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30ce2ec0-b0d7-418f-8af3-7d938b62c011"
        },
        "item": {
          "id": "3feeeafd-a18c-4a75-82ca-775d5f52ea11",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9993420f-17a9-4e94-a38d-609dc98a021f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852a5819-1aeb-43c1-aef7-72fe2fa02cac",
        "cursor": {
          "ref": "03c35d73-4ff6-44f0-9b0b-593c36619f26",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fd019f2d-2d5e-4fa5-85b9-7c8680f2bd29"
        },
        "item": {
          "id": "852a5819-1aeb-43c1-aef7-72fe2fa02cac",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a51f540a-e2da-471a-ab98-038b121632ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 536,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c70d739-13a5-4759-8eb6-1dbe3fa83499",
        "cursor": {
          "ref": "ea460629-fe4b-4fee-9fc5-9865384df88e",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d7af0a1d-5f4d-4e72-bce8-6883926c3286"
        },
        "item": {
          "id": "0c70d739-13a5-4759-8eb6-1dbe3fa83499",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e79a6f89-d9d9-4242-9ae0-49044ab20240",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c70d739-13a5-4759-8eb6-1dbe3fa83499",
        "cursor": {
          "ref": "ea460629-fe4b-4fee-9fc5-9865384df88e",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d7af0a1d-5f4d-4e72-bce8-6883926c3286"
        },
        "item": {
          "id": "0c70d739-13a5-4759-8eb6-1dbe3fa83499",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e79a6f89-d9d9-4242-9ae0-49044ab20240",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4eb89c5-5135-43dc-80be-c0e408174c4c",
        "cursor": {
          "ref": "d1cfee6e-06ee-499c-809e-8eb3814744d0",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a3c1f504-020b-4511-8584-dd4280d94c95"
        },
        "item": {
          "id": "d4eb89c5-5135-43dc-80be-c0e408174c4c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "28f9692f-d9ed-4a9d-8414-ee859bd86de3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 801,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}