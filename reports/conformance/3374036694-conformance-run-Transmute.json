{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "143ce927-a2a0-4e48-bea1-4e004f65beb8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "041016b4-b0fe-4616-97b9-8cccfc937e6c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48258ac8-63aa-4e78-89b5-7bfaa518870e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c782b47e-4631-4eff-ae3d-18947e70d32a"
                }
              }
            ]
          },
          {
            "id": "fefab59e-4570-4ffb-be1f-25e6c9744fe7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1052fa0d-3203-4941-8f04-e9c17bd8c2cf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b72c28f-168b-4bd4-9658-2fa2b84d298c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d158f727-5e59-4692-bfbe-d11c2f6706c1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1645e4fd-01b2-42a7-a555-dea48b9eea8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8415e17d-ba9c-4b57-bc23-dff057f3225b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2cf5b89-0cd2-4a93-80c0-123d2d7550f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a710ff2-01db-477d-b689-aa24ec3a7b1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ceb88642-3cec-4334-af31-521619b1a973",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f6cdf89-ff44-4be5-9179-52515b36bbb3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37785121-52b8-4e79-b79a-5ba522d40d1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd4c61a8-4cac-4606-9577-f6fad28741ec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fdf14c7-8e53-47d2-947d-47ad8d3b3d15",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fc2d7a91-5ee8-4abd-a5ea-92fdb10aeff0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c49bfe82-886e-4f31-b9fb-f82222f70aa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37bb4aed-3baa-4a9f-ab80-7f1a65eb03ae"
            }
          }
        ]
      },
      {
        "id": "5efb331a-0163-4852-b611-badf02b3fe9c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c25a9f17-0fcb-4c38-bd64-b8d8ea94e223",
            "name": "Negative Testing",
            "item": [
              {
                "id": "745e5837-b6e2-44b1-b290-89a543830eb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2aa9ba3d-623c-4fb5-af71-0090036c1574",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94910459-5162-4f48-81fa-4c9b2c3c040f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df650fd6-3782-4c24-ba5e-2f27a32ea443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5239394c-9ce1-419e-ad7e-973e2a7c92d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045ddcf9-3e33-431f-a354-4f6aa4bc3898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40ab7950-67af-4eaa-baf3-ec78a39177cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb1058b-0a48-40cf-ba50-818a74aef25b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6298b227-6c19-4937-ac31-b5968a716941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eae2a751-2fa4-498f-9aef-ea933cf0cce8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c136450-4e47-45cf-a5e1-16cd88f14eec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f504c4cd-7436-443e-b15b-e424cebcb672",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de38e67b-eba2-42ff-894e-9e7a2f18a3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "436aa2bd-5a6a-478f-a329-8686e54ad3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108f0cca-7388-4c6b-bfb5-09d6a1e13922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea341281-2e7a-4472-8f6c-fe18abf2b8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2586fa-9034-427f-9b52-c1013dce09c9",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d7fde4-249c-435b-ab1c-15568952fe67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "301728e6-3db5-4886-acc2-a0697136d7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762601d5-041e-4728-b446-a07f05c95577",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a2d5a5b5-d53c-45a2-8c28-f8bb46060747"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f966b007-a32d-4b87-814c-fef93407dc7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73fc08a7-a820-4fc0-a817-0f1d5b45f62d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40b2e808-5a2d-482b-a2f5-b9a0ad56c5ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a85bc464-6378-45dc-8db5-3ebcaf7d7bd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e039425c-07cc-4a34-9729-84f4b614b24f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "2e541828-c7e4-467d-9134-bdc075403d51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "572321c3-71b6-4262-af16-ed168a903fce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33e507e0-1df1-4f8b-b567-46ac0afc0a12"
            }
          }
        ]
      },
      {
        "id": "6a7530a8-5f97-4d42-92bd-2f33a64f61e3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dec3b353-1916-4215-b2dc-4b27ac6d736f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16a3b1b5-5c7e-45b6-98a1-74d51d2a0b48",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "25522122-2a09-464f-aafe-682e680d8bb5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019842f7-0267-4e84-88db-e712ccde0d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5cfba6-2e0e-4689-97d3-67f3fa04f95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a1a28c-3e4f-41d9-8152-451f4a4c970c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc76aa4a-add1-4c01-8cf2-587b0f56bf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ececd32f-4eaa-4bb5-86d5-0469f0a254bc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e95fee-57f8-44db-b44c-6cbcd3ae1420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644f4cbc-4bfc-458b-9ac0-01085fc7f8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d703175d-b9d8-4e4c-8b75-4f71358b4ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caace330-a9a8-46c9-bbdf-8e8a5efa49d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ee9d1c-be35-43d6-a3fd-a2dc41d9db4b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05cbc48-2b0f-457c-bf4f-5fdc92d035df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9cc172-531e-4354-842c-1f22f6ffca64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ea04eb-5223-43fd-af68-43548844bd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03bf4d79-f576-4356-8c1a-4c6bc49fc8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd40494-0a39-42b6-a1da-9a4fd01c1d58",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcf70c2-ac2e-4042-8118-5af6f00f9178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c65125f-21bb-4789-b109-dd53ead13389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18eb519-a231-41d0-b9d8-80992b57c59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84ed2084-06bd-494c-8042-00341b8e7dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc0eb8d-f383-4b0b-9956-16a116278a55",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27321166-0f49-4e76-a543-c22485763304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f662c3fd-e428-4884-a01c-fde5378796bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56e08e2-0f99-43b0-b98d-82a75939f89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0fa52b3-eef5-466d-8973-26f2300be153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae63c67f-d046-47b2-86ef-aa0c794172c3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4059c8f8-5008-4794-bf5f-c0a11d5de02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7784eb-5702-4d9c-ac44-fd6671d54502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b396114-0c0f-4207-a287-21840393e2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92f499aa-b9d8-4f9e-9a33-1c0df77b4ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a6534b-747c-4979-b7e8-6d2bedce437f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465753e2-c87a-479d-ac65-122d87fd9be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff57ead-befc-46cf-90a9-194bf017a99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae50e84d-d072-428f-9e6a-8932112633d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "077db655-d23c-40ac-a40c-a0981a730ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7a2baf-517d-41ec-89d1-6e7d1dc5a55d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8c8f45-96ce-49e2-980d-247aa19e787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f9c96f-254e-436d-bda6-e6304efd1407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff51ad27-93b7-46b8-96b5-7117b2e1028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a7769b2-a50c-499e-a51c-dfa7bec95d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0362f9b2-643e-4de5-9ea4-32397317862b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96853fc2-1cdb-4b0a-bbb3-9a1e92fc50ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8471d0cd-9180-414e-af54-d4d43e2226de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b02b78c-f24a-40ba-be6e-0d316edc39f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "affcac78-2a0d-4674-9f0e-41307cccdb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c0b21a-3dda-458f-ba21-e1c1a96ea895",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02282f6f-3efb-483b-9db1-0e039d47e717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80432143-8137-494f-b8f5-e154239cf084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995d716a-f0fb-4623-80c1-6f73ccb57dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fcdbd7d-461c-43c3-ad93-43f0a22b185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce49295-185a-418b-8ebe-2030a31c6cdc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891082b6-1793-4ff0-b063-27c7c78b5e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316a930f-24e4-401d-be53-346d708e3184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bdf459-9ffa-42db-a44c-d9501017c273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "094a1909-8796-4bf4-a060-edb36771e5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea57dc14-3699-42f0-9936-35329467aa15",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131689dc-d572-4a3e-aa59-f4689320c421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1176e32-1531-45ef-8e88-dea4040ace40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0c632d-5507-41b6-b8c2-8464aac6669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b644dba-7d12-454d-9b02-b33c8a4515dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90dc73d-7c26-45b2-baa6-4da03cb7a823",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2842f2bb-ee03-48c9-8f15-1164af789da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585b5afe-36d2-4ed9-ab3f-f773a836f02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b46039-587c-45f6-b0fc-d5a68cc597b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbec3c6d-6259-46ef-ba68-f04e1f9e5fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0c7ff6-de2c-41eb-8d96-077c64da9d1a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f95839-1727-47f3-8c45-e24bc387d842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b3d93a-88f2-430c-ae03-5d9b987ea716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530de96d-21ac-49b7-b503-7b0aab3c9530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe8345c-c5fa-4584-9bbb-0858ad296bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dcfdd0-4acb-4f6d-a397-4d1a700c6299",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985f7bcd-2989-416c-924b-64cc4af0ac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44aab4f2-440d-41da-a39b-f4880d0347ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae5c924-e7d8-4d26-94a1-0919b5c9d65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a8eb1d4-5a24-47b2-8270-abf4a76aaba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316bfce2-4de3-411d-85f2-15d491e37106",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9b9fc1-22ec-4971-9eed-fbb4e9a1e0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93c7ceb-ca89-492a-a368-8471ecaae4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89c020a-0073-42f9-8002-4a581b2e80fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70c61dd5-4cc3-4c8c-a44a-04cc4e131047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebc4168-d318-4d0d-9670-49d6024bb2f3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1600ab9-85e3-4c40-b127-522384970303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bde2cb1-6e9b-4362-85be-649f4c648db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb17060-752c-46c9-913c-9cef2d4796e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "738df94b-95b5-4bfc-92d0-e774121508f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b5435-afa7-4973-be93-a602c1f9e0b4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9e797e-2328-4854-9d33-a09fe10f0866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a9899f-4e44-4f4c-9136-179bc5ceb8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4527f48d-8c43-4dd2-8085-7f9b65ad3662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb095a9-3cb7-44b4-b48c-05a44b81f0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fe5b7d-a05e-41c9-88f5-a73f81247d6b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55c1341-5643-4cb3-92ab-dc5dfac35fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fa9241-8399-46aa-bd1c-79ad67fd0979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2262d1-8021-4795-9a4d-20b17be78293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7982074-a35a-4bf4-8098-e41e1cb0934f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc789c8f-18b2-4a0c-886f-e5c839804252",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03522e4-6753-4e00-9555-6410ee79ef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7803b99f-702f-4cad-bc46-52076879fae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a9af18-bac8-4e21-8644-336009abe557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18caefcc-8615-473f-a6b8-b7bee9d0e070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0d2f26-4b10-44ae-9b27-c84caa0b2bbe",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e4e073-3c7d-4354-94a3-ec96dfe2852c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db06ef1-becc-4e2e-b9cf-b8a2e0923b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c09c0a-4eb0-47e6-82ac-b2c17662b772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f7f455-bd88-4209-937d-8b664f4de73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4373b772-c726-47ea-b7d6-1a6fd68443b2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910e1f48-a06c-434e-a00f-87495bf61bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f7b04a-0ac6-4c66-9fee-4bd863ecf7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694bc99-90c4-4893-aafc-5975cc3ac08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "091b1968-f08d-43b1-9b9c-41fbbc5dcad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a2e6d3-59dd-4f08-a6a5-0e26f82cc8a8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c133ca9-7c3b-4c8b-b3eb-7e512ef0fbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6b14d8-045a-477e-9f31-c37f8528cdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3b79a9-d01e-4b7d-a4f4-1ee4087389fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "498bc9f0-d00c-4d9c-b662-a4db1d174942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e01c2-f63a-4014-b952-64350d2990c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7307fb41-5530-4ac1-9cdf-ac9412af4ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8044743c-f21f-49a7-addd-1cacf8a3d639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4377dad-fad1-4fff-92da-4f3f61701ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1e7145-f45b-47e8-8763-303d8e0023a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5f68da-54de-421b-9158-3a4c33403483",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcef5c1d-e8d5-419c-97de-b86b3da554b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecddf5f-abec-4b05-befa-71c46c7ffa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9f9f11-5bc3-442b-bc64-d65ade6a43a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71bb3e8-33b7-4935-8a78-7ce65ad43f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5d7846-17c9-4292-b20d-c9a00a0336f1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca9544d-a2ce-4a8c-b1d0-4d7c9c70c35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197929a0-be86-4ec8-b598-cef04929f510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf207a2-8715-4e04-9b19-45cb319a7bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc6c6fd-5eec-4698-a2c9-eaadb1b93b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba341c02-eaea-43f9-b0c5-93c022adf090",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc902dc2-2b86-405d-84ff-05be06c1e89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55a0ecd-7621-4cd7-a808-87fc3b568944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64572980-5335-4ce8-99b0-8565c1e45b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6027337c-1daf-41e2-af30-1d826134994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24711f4-15e0-49da-bcf7-eb5cd4fd2dd7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1531f3-830a-49c8-b0bd-26892b7619ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7711b1-ddda-415b-ba52-b6d8b7bc6860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa74cf3-22a0-4324-82d5-ea7b5950ef35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76785461-66cd-4558-896b-0725b34b7c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d64e11-e6cb-480b-8318-0745f7047135",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1d4323-5be2-4858-b900-c1f93bca29cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2293a8bf-21c1-40ae-9319-a8799e3f4aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174be1bb-f997-4c11-9738-d290015ade78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f799b915-9b84-41b8-977e-9bfdd28600c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220e6dbe-31c3-4b38-8048-f7cbc9662574",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89385816-0659-4e4e-8fd8-7f1eadb3902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f9d68e-b7f4-412e-a303-38755f73588b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef73081-bc53-4650-97e1-7161837b3d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e97a552-8249-4646-8dda-817ac506aef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089ca1b7-4ff8-4cd0-b74c-dd72a242afa9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3c9f55-ea75-4992-8c5f-4098758e1dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc183e9-af4e-44b8-9ffb-e42b02c00797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80bbfd1-2482-49ab-846b-eb1d5582e1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b970e7-8af1-4535-886d-00771435112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5d3cde-9158-4bf6-a2b8-3403f76739c4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f81deb-05dd-4c59-a56b-5737f81a5b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284b5366-8d91-472b-8cb8-7e35fbd1daa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80581595-661a-4cd4-ab37-235dbec85a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfd0272-afb0-4578-b986-7b58e1584057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3524dee4-4aca-4dd0-9481-e6f4ed2aa685",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774ff831-e2c7-4fbf-91e7-f91a45457aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee779b7-7d8f-4f06-bf17-e3f431b70b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3cbc49-32cf-440d-8989-d83dc065a262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74696e86-2275-49a4-a95e-0587a1cbe18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58679b6c-b329-42d0-a9a9-29c931833f80",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e269cc-51a7-48b8-b7f9-b8dedc5d2c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539a391c-bb71-4f9e-82e6-8016392bd5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172d042f-5796-430e-9b91-d91c7460e7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "539e9e83-01fe-41ab-9be5-4419985ed4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecd4cd9-8551-4d72-a6de-e7e37d390828",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11860e2d-d517-4a95-8955-d52f57aff648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb7af7e-d0b3-4225-b1f8-36004b6f197f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24952e3f-9a54-432f-8188-fd9c3c85ad5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbb546f-bf9c-4987-bd80-8396cbbc3d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486efe44-2e92-46eb-87ce-b4b0fa1f521e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7993ee-225f-4eba-862f-f312b1b4e6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7ba283f-34e7-456c-99e1-b95f4d3a605c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2820b25f-95d2-4a2a-acc7-070d6924e1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44426bb3-c2b5-4602-a7f4-050ac4a14542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de487f52-269f-459a-bdbf-1a67ba74fcbc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9286e15d-b337-4cd0-9faa-c16c7035ab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b07fa56-6f1b-478d-af6f-4082feeef8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95b16dc-f078-4625-a005-0c6a46f4e89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aabfa6ce-7d85-4a13-a8d7-6bd8427d2041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f1e3c6-20dc-419a-aee6-dac7aeba9fa6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce41d487-e0b6-48c9-94bf-e45a6934abcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f48c6b-3daa-49eb-b72a-6234f763eac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31cc816-133e-42b0-bd6c-fba02da4a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3fe3b8-fafd-4649-8de7-4aa0deeabd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9e53d5-1965-4e41-9c50-6e9c3212ca87",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2182ec0b-0fcb-4753-979f-c72c5e1e96af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416d8c2e-cce4-42ad-bd38-a16c84389ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472e91c5-2451-4516-8a40-e9127bd40772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f10fd641-6596-410e-b3fe-6f5ea34dfbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbdf5e2-7c83-4b23-acde-f62ee6716694",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4abfa4d-ecba-4e01-b2e0-43bf1575542b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca4ab5d-74b9-4fb4-baf6-c2f11be0d328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f414f9-cdbb-44fe-a52a-2ed2c3dab548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6c85de-c1ec-404e-8eda-bfa144bebbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c3fa62-3123-40a1-9542-03de2fd864c2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951f469d-d16b-427d-9697-c585b3dd8c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ad9a56-bcd7-44de-a196-b5be84fe5fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff36bf3-edc3-445c-9879-0ad9587a04fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bce31115-015a-4e86-be6b-dde88e3ab92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ffeb8-ad57-46b5-a8cb-dbf2f960a39e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4733d1b0-e13f-4a81-a69c-6740f4cdb163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b42c6e-fe81-4de4-af87-b411888d05f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920cb913-ff40-427d-a78d-c90d0bafd40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "47e9b613-39f0-40ac-8318-363e06bd60bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5553836-ca9e-4ac8-818f-4ef91332863f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e01b1a-d75a-4fd7-9762-a04b226b99d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6414519-a96c-49e1-b827-5932817944b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d1d8e4-8637-43e0-835c-6ede159892e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6804d62f-a33f-4c48-9833-5972455d9b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c593dc-2cfc-4703-ad5b-34978ba525e1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1547ee18-9c26-43d2-a386-c07ffac743e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7892d275-3dba-4eac-9568-ef6ffa4a0078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7648bab5-8968-49a7-a752-13787fbfbaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "09152719-8c59-476a-9009-6e936635d82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e95fdc7-aa67-4353-9b8b-ff39f9f0291e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba8360f-b57b-45fb-b5c5-fc2804ec14f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83af575-3196-4930-8fe3-860323b77083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a47979-064d-4bd9-b759-a44ce4364c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c75efd-daf9-4a6d-896e-97572c520569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa7a7da-2df6-4d0b-bbd8-258ece08eaf6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c392a652-9811-45e8-ac1c-233f5b4a9595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1454853-09e8-4196-8f11-552c52be3a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190ec6cc-459d-43bc-870f-63db974ee1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5366daa-80ab-42dc-8ec9-6bfb2497abcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcacc57-e570-447c-ba77-2334ca33fb15",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fa0651-2fb2-4178-bf31-c966c854142b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af53c65-c826-442f-8aa4-3c14eca0252d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f238d980-63d2-48a2-ab19-b71552824474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1009e2a-644f-4903-abac-99fb4f30be2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7f9625-0dcc-4672-b379-b3464672e36d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d25a5d-6eef-43be-bed8-c9d57a256ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4fd148-1b2f-4158-941e-e8ebe4bef23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32474010-51f6-49eb-9395-326acf5add32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c67411-98f0-48e0-a788-b0007f2f072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dddd2df-7556-4969-932b-d1ec88e44d03",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ee8dce-0704-4f8e-b959-caf4d4f58d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56c51d3-1d36-41ae-a11a-9d65e36849e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea92f97-fc9c-460c-bb4a-036396185b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c40b05-142c-45f9-8073-37d1f1e35573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db7cdc3-ac3d-4aa1-a498-e7228134c0e8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674d6f01-6179-4523-a290-1eeda73d45c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48c4d0e-8572-4f6c-ab4e-852bec5c6c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec49d06-77ea-45a7-8b11-30e8604c02c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc8ef8d-f81b-455a-822f-e06b2ae8089b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01a720c-dd6f-4a6f-9d45-22c8003e8ac2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2e1fcc-5033-4650-bdd1-acf528f26bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c35334c-9ec5-44f2-a3b5-1e90b13608b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee10f9d-4b0a-421d-8911-d811c4ab095c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "51489c95-85bd-470f-9f13-17ebe04ab217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5d2810-ecb1-4e1d-81f6-69ceb992247e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6727f98a-0164-4bb5-889b-0e26d1cd393a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5591fe54-9432-40dc-9a2d-5821284ac494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1294be1f-6b89-4455-b3e8-9823d8038725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9bc780-0c65-4d99-9ac7-b13e85680e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657370fa-a5f1-49b2-84bb-68fefd86bdb3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d363c39-1a13-4abf-8446-831990601639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553eb601-7a7f-4ceb-89cd-9a7a6d7aa7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c360caa2-a61e-41c7-80a3-46a15e89d4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d64663-4294-4afa-b71e-2570fc47a263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656dce46-9a5d-47a7-bc4c-8be5d7fc8c10",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8913806-5ef4-4d25-b8e7-b80be4a9f3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdabe29-eb3c-4775-b883-53e4a7bbd565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78afc92-3560-4fce-ac9b-58cc624ad362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93540f2b-8d36-4658-b65a-0f53388f3797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5a2866-3b75-42f7-8c56-db9ae6dbb2e3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee1905a-9bf6-46a1-9166-50cc6fbb0a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58e6549-6e54-4d78-aa53-28a7d0f15f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79a53a3-a862-49a2-b123-2c1378e454a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d23065-7bf8-4eae-a75e-7093452911fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a56af88-8e57-4660-815e-db0b13a54491",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0709c69-e603-4b4e-9528-9ba5feb6ac1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629e1751-d1b4-4292-b0cf-488a47266c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da3a0ab-2ea2-424a-a124-f8a7d6a5e40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a3932437-eb42-47f8-b00f-239dddc58b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db2646b-e056-42c4-b354-c257aa0ee5bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca282219-0d02-4ca3-817d-4088f2d8cff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac78dee6-3d87-45cc-bfa8-845dcb497bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbc011a-8fb4-4662-b4f1-4ad98e5a5da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e779ea90-ac97-4d70-b7f4-55c126d8e88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724e84b2-1055-4248-a09b-e34936ace387",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c545f534-d536-4faf-9622-52145697be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a471a403-2c0b-42ad-bbed-a976564ed8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ac385d-c9d2-4925-83c6-32890693e2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f298b825-2f3e-4dae-a13c-377d578bd1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd81c1b-e0c6-4aee-8e9a-5d20c5610d31",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1687f50e-1cc9-41c3-8a59-4caaecf48059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0042f95d-28e7-43d1-9068-16b4ddf7dfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76d928f-5b44-4dc0-83d0-820f2dfc964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c275ef2e-5541-4eee-a6b4-d8f8138737fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7bd33b-cd7a-44d3-8d1b-e84efab63edf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efec237c-ce99-4db6-b55c-cad73b27048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a268c54c-1453-4589-b076-359b2af3aa0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609c330e-c2a9-41d9-a9bf-0864bab419b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "428fed04-e889-4ce5-8a42-424c650f363f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89984fc0-1307-42c1-a54b-d6606d28383f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed424ff-5e3a-4552-b53b-d1dc88e73e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b8d47e-caf4-4446-85b4-0fb2e67a8432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de228c3-5dd8-4b32-af8b-e6e067b23227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "277a6a29-89df-4bf6-ab41-369ba34e2046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55306c7-9035-47a5-822f-19c1023b6609",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72709c14-d7f9-4ad8-8fc0-08068f6bdfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b713f0-4fe4-464e-9657-6c211267f001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb972b90-c06d-4f33-a70e-50ebb55fc0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67b9e3f-44f7-41fd-9974-0a3fa235eb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbe1c40-ba6d-42df-8cae-7ea6f888472f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e29cf6a-239e-4a6a-8f10-24e94324a062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26564480-9721-4d81-84a0-3d1bfa62bd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56f828d-6471-4bdc-b5ea-7c6eb458ca51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c37edc-085a-4e35-888d-f1386ffeb88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288362b5-b077-4e26-bde5-37d0859d1b53",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832324ce-4395-4cb1-9b5b-f40afd0a6bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5ad776-8add-43e4-8a22-00bc16df0c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bc3e16-15ee-4aad-a42c-7a4d9c54c235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68d5ca3-dead-48bd-9702-bc96d2244104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68140bfd-5600-4423-95fa-f3d7e8825246",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01650dc9-a9e5-4e34-8047-ab0aa276890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf51d78-4313-46ee-9949-6d8ff7329166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7382af3f-3fb0-481e-a342-4f47475988d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "feee9dbe-9b74-49d2-972f-d72eb8ff8cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b4ef8b-92fb-4c0e-aca0-58a403802c8c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfb5694-06bc-4686-9a6f-de0991176bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe577ae-a8cc-4327-ab3d-381cba435a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d91228-3960-4518-97ac-f4b4201d5058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c15d7ae-bf53-478f-89f7-16f131bee41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5387dc3f-38a9-4dd2-b52d-bcbe3e731ab4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709d4a7c-c1e0-47dd-bebe-c0ab738e28d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da144d3-1a44-42b9-8152-5e3ca4ca41f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a800414-0e42-4235-af6e-51c7d0e2818a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "929999ce-cc2a-4519-a6a6-4cda1eacecaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96604f5-3f97-4501-af8b-05b6ad0cbd74",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70adc482-c05a-40f2-87e3-b478eaa8029b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1b0e65-cc83-48dd-9d23-16ae4d130a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1f6d63-43b9-4932-9ddd-ac366d08bb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f32fa7-416e-49d9-b9fc-8595189c70d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02112e09-a299-4268-a988-ddb60a0f2e09",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e875fe5d-59f4-49aa-bf95-810c54369c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0e5956-9a9c-4c01-85c5-debd1f594066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0891fd3f-1f63-498f-9fbe-0f61184c6195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70aee0c9-e45c-4366-8593-1be1165bbd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c25d8e2-21f8-4a7b-9d91-68d894363472",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4141d0e-3fea-45bc-a047-ce809e13d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be676d7-b56b-4211-b703-271909e2c230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db5b58e-289f-4266-a4e4-8b0dd6c32ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2d60ad-b74c-486d-b11a-b8ca02565941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825cf9d8-de6b-40dd-b469-8e2db427a605",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833b8c28-0f83-497d-bf74-e5a1a161b9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b1d7e7-5926-4e18-aae5-0eaee73cfcd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719bfa02-1c41-4732-8e74-bd76b72273f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "682e5037-beb3-406e-9232-8ebb2624361b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0320f9-1c5f-4373-894e-df9c993c17cd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b362df0-532e-4327-ab5a-742943f753b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555736d9-7898-456f-a52a-496301ba7daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ddc0ca-9379-46cf-97a1-10a0276164fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ded860-b992-4497-8d48-6fc88fd0995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550b62e7-c301-4792-87ab-992240caeeda",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0d967c-951e-4195-911c-eeb6638655ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea847f43-34e1-4d3e-8192-5fe470750f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa091ba-43ba-4abe-a785-6235a2eba1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c955a40-bb5e-40a3-b27b-1a421b1c5d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d0e159-4fb5-452c-a49b-311dd954697c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc69d14a-ae0b-4587-bad7-65dfbb34a8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b05fa9-d07c-4c78-a326-7b072800a9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d7a0e2-b077-4667-9c0b-749905487e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77132f97-3e77-4f8d-9a97-d000464664bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2344fd09-6f46-454a-bb57-376efaaff9e1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd15a08-e1e2-4311-aed7-3559f6d976be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be8e5e3-290d-4aae-95c2-426c5a602aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f521ba-9caf-4da8-8995-fabded6a305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ff96c1-2616-45db-bd3b-6a2fc502f617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afc3b52-8e4b-45c1-b0af-2934c3975a8f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fea0f0c-4e10-4f64-8783-68fdf8ba41cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db9c6a5-8193-4282-ae88-ace52f7782b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6676b03-24c7-4fbd-955a-f20c6f1aaf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "017fd152-bee8-4e45-a493-5df891dcebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d406fd-7ac3-4701-bbb2-d69b93fad6c8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aef941-731a-4742-abdc-aa353861f5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d00473-3a35-4474-b93e-a89f3ac7098f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96afd60-bc24-420e-99ec-f608c7060c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a273f0-b026-4e3b-b6e0-ba79bda87aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8934c200-6215-457f-9e09-186475efc0be",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca87005-c1b7-422b-a98c-653f323fed65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52bb569-9dc6-43f8-a446-05b6de7e92b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dba3e2-8aa1-448b-8500-c7bfee8f0805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4c7d67-43c3-4658-8da4-62d590b5ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bfe207-960e-42fa-ae67-d90d05ca0c02",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd21e0ed-db25-4527-ba8e-ff8dd9e40968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254c9f31-49b7-4246-9218-97f4a617fe81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cd00ed-429e-4ffa-857c-4a7baee5318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf7fa9c-43bb-48e3-a607-4652bdd3da46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a536fcb-8af1-424d-8f26-677108d96cd7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931e432d-ae5f-4af7-9b27-ccdca25dec0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd36a194-dba4-47dc-8f5c-13e033347ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e32d9a-ec72-4f0d-9301-a16ff20fa968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "395582a7-7bab-4755-abbe-d7b60dd716d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1fcf1d-547f-4687-a662-eeb20cefad04",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac883640-4033-44e7-97a9-05e1f89b159e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cf1535-e121-4a0d-9c1c-5d2f60c475c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4259436b-9524-46ad-8196-6fc4488bd15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fdc1d2-c7a1-4a32-911b-c0d693a4604f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c985fbb-a555-49b3-8568-9fbd1d60413d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55852ac-fe41-45d7-bc5d-db5c68e113d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddf1f8e-997c-4d1a-b68e-723333b27cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a92898-3f7c-40cc-9446-192413914c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b23e30-b460-468c-8d76-adc94fd61a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54827391-de4f-4fdd-8b84-7b5b35fcebd7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89032ca2-4c47-4b26-b17a-585b879cd0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698c3cf2-fe2f-46ae-a28d-c7527e8d3f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7ab4fc-3831-4b14-91a5-463c4003cbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6ba3db-9229-4ec4-8512-24e90a7cabef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b05b63-cbcf-4786-8abb-4dc06159d223",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98b871c-33a7-4626-936f-be88cd7b0e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a95c6c-27ee-4ea2-a3fc-a3c33c74ba0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0aae229-38e1-4f65-a3d1-8d275f1877b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d317a0-da04-4f36-873e-66fa7a645b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8042598-cf33-4616-8474-d3070e7e7023",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc4248f-d41d-47d8-a77c-99baed43c24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1a9ca0-13bd-424c-805c-b3735640e012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c0e000-e9f4-48d1-94c2-25278e06a3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d26817-466e-4d28-8c80-ff09c6666400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c959d245-1da2-4f5a-b267-2684d7f8e03c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b151ae5c-a016-423b-aa0b-0fefe07a466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7757bb-bf18-435b-85e6-9f7899523df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f8e8ab-a578-46a2-ac2b-98b8006e6849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55a1763d-8cfe-4318-b644-1858acdbabc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301ec974-74ee-4056-be91-4536605afe6a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208c17d2-bb27-4a4a-852d-baa45bdcc334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2459950-285b-423d-ab93-d070cad892fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a46172-d4ee-461c-8f3e-fec21055f308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec1267b-8f13-4473-8366-35ba85e4267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943b96cb-bafe-4995-a674-d769b36467d2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4eca30-4c97-4571-880a-857b8d8e4f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98e4097-f2d4-453e-890d-5457e991ae55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcae10b-7797-446e-b01c-02ecb7d9e3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b34dbfd0-74cb-4109-86f9-197e54d72629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627896ac-fa8b-42ef-9f18-5ec20329dae2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8848886-916f-4bf7-b8cd-2cd6f55b8a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e59556-c85f-411c-9210-077b649e3d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d55d8b-e9dc-4bdc-8a2f-86eb09a9eb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf7f4b0-c580-43d9-a5cd-f39c76396b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4980b743-163a-4666-8f23-f6ac6ceb301f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac7c5d6-459e-497c-b968-f4968d4c2ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d83912-46fc-40d5-963a-b6d3c2613786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019d840b-2156-43f4-ab46-268e7a53f911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1023937-7516-460d-b0a5-f7e83643da11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba27a032-26e2-4476-8001-eeaa0b3fb741",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10d37b4-fdfd-4245-8d3b-cfe69ae134a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a497754a-4953-4e62-a057-357434222029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52678048-1074-407d-b9cc-2df0c85a97d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1eb9a2-4202-4975-9ece-4c152c8c9720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811e98ec-2d59-4c2e-b790-b364babd34a8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd37747-b839-4e0d-96ab-2718e02a513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bb1c469e-f717-4fbc-af46-16d261a45799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4d9165-6c13-4f27-8ba0-c8cfb6620500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb92053-1110-4099-a208-47f1fbac3544"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c18e1ed4-7c77-4de8-bbd7-ab40c81e82dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e48f189-f44b-4554-9495-05866669960d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8d947f-d65f-4222-a8d8-4643da9f8b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d8c3eda-69eb-439e-9ecd-0f8bb56aad43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22c3c45-3d9c-4827-9da0-331d7f3da459",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ee571ed6-b7ad-4033-bada-302da0ba48f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e1441c-2071-4b9b-b774-edb1a0239e8c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d432a95-781b-4c35-941e-16778930350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcd7fed2-f994-43e2-974b-19ee921eea87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe3ec2a-384e-4184-acdc-aa5bd0657251",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "2def3e47-3d57-4b92-ac82-7d4b19d977ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7db7c48-b270-4c90-a797-c27f7605d245",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "476bb053-d773-46ef-9168-483478a1748f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c1ca6c-f496-4145-956e-f146d92d0d9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d2975c0-7799-4a2d-be34-420832c713e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f47db7df-5fc4-4303-b629-497a47d5ac61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc722f90-56b0-4873-8a96-52a1e0ea0e5e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "17bb3c38-2db9-46b7-9855-4a9b5a4dd4c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "654ae5fa-9970-4f90-bb40-05538b542596"
                }
              }
            ]
          },
          {
            "id": "582af5ca-6cad-430e-b6ef-f419aa522afd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "981c638d-9167-4ac3-a72e-4f171acf9ca6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f635eac-d79f-4bda-81cf-9c16f5115be7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f70d23de-868f-419f-bd5e-a38b8045b6de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69c4c293-09b4-4ccf-beee-25850757ccb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0530596-6176-4170-b808-7b00becb21b4"
                    }
                  }
                ]
              },
              {
                "id": "3e81ccaa-0a67-4221-a4b2-f69ce1a59f37",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7925fae-adfd-4ce4-aa6b-5bda13f6a558",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9738d1c-2c3b-4f61-8617-c1a5aae3e942"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2038455e-ed07-4a40-ab51-b0f71a92fe92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49cb6ed9-5e4e-4cde-a62a-eaeaae6aa17d"
                    }
                  }
                ]
              },
              {
                "id": "257b1572-b4dc-4c69-8aea-6a5c9fc00dc2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfae64e1-e12c-4fd7-8a89-5038828ef5b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63fd2970-2b50-4b6b-a175-8e5b7ff8b8f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "146a7b4e-62ee-4da3-ae1a-ba2231bf5f56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3deeccc-ced4-436b-bb65-258cb518e14f"
                    }
                  }
                ]
              },
              {
                "id": "6f6fbc8e-05ca-4959-9a30-4227aa9f26de",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "549d0540-e8b9-4c49-a793-12c82dd650f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cde7ada6-3a9a-4509-9d47-f7d11280fd1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9220a5a9-b9ca-4b4a-aae1-d4dccb455e8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e5eb4f4-c26b-420f-9e87-455aef4ff615"
                    }
                  }
                ]
              },
              {
                "id": "1eff98fa-882a-4932-b6e4-bff236bb6b98",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b00610a5-d8d2-4c3c-a40c-20e857036218",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e077fec0-b7ac-49a5-84fc-2b3f634d0834"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd6153bd-4d58-4d5b-9505-23a2f50e8094",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d1dfd03b-e6f6-46f1-a3c1-c9ec88e23678"
                    }
                  }
                ]
              },
              {
                "id": "b72ab2a4-98c3-4d2f-84c3-b2adfe5fc3df",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68f3eb0c-f03a-4a84-8c3a-864f93068dcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa2d5a47-2d5c-4e2e-a9a8-1803b4f54d71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8edc4cbb-c4be-41d1-a215-6b10efea7b8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "443c8831-cc07-4a72-97e8-ccedceb37119"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2c500af-0888-40a2-a3d2-0d4a9fe76e57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec76e1e1-d0f9-4970-9933-b49230c0990a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d74c393-21b6-466d-af81-02e165fb6060",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7916f4fc-b685-4517-8e2a-757a41849ed4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2bf00b3-ffc6-4371-aac2-baea0c43fd9d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e36f26c3-fe71-4a7b-a46c-34dd5607f707"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2deb6c41-0656-4ecb-9968-ca05829e97b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "806dc282-6cd3-4f89-8eb1-7938b702d63a"
            }
          }
        ]
      },
      {
        "id": "dffb60f0-f16d-40ad-b7b8-d341c5889261",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "77267aa6-70ea-4451-a2e4-05fc5b0347da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c965615-ae44-44be-9e4e-416c6f09b65a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5569b688-c407-48d7-a3d5-95bba9ca6423",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7592e341-bc92-4ea7-874e-d7da72f749b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01572c0b-add1-4f7f-a21a-710df1e95518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b99d676-813d-4acd-bed6-2ce0b9d0f954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb260c2c-7144-49b7-9e4d-7338f384b8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2845d028-045d-4518-bb52-13e5fc782b53",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9873cfdd-56c7-463a-b789-04a63f8adac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27b1a16-2832-4f64-a440-2b62c606eba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af90fb8c-a105-407b-b957-7196b5aa9459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfb8151-584a-4a1d-9cca-5488b6c35cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c44b9f7-9447-410e-80a1-c47835a2bcc2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27237a51-2022-480b-9071-7cd584944074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975ad25b-af4e-4c5a-b89b-570ffb0a6e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e56b306-7259-4f2a-aa96-884c4fc8024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a806a4-acdc-455a-ae48-160727deb13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faefff7-26d9-48d1-850e-543c32167690",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6509957a-c315-4bcc-ac64-a010a054234e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df07c68-6d39-4c97-8411-0cdce1113f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717c3621-2721-4d06-b7bc-01594e93b45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2c612e-8230-46f8-b634-1ed317a309d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0c4b09-ae28-4654-a9af-5af6ef155742",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b78acd-634a-4c35-970e-18510c6d54bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6104aba2-9815-4d74-a9ee-9dc5d71d9e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56aeae8-a49f-49b0-8a36-023d710692a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbe9ccd-00c8-4dc6-af0f-71ac9f2fe445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9b6e69-6b23-41b8-8609-7259ed311af1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade22724-2a8f-4c19-a3ad-f2d49e8edce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452c91dd-0e38-43dd-ab62-c66f2883421e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7306ab-9d1e-4aa2-abba-9f8d7a5eb3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7759be67-881a-445b-9b4d-6b665e405501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1ce712-1dde-4bed-9bcc-a13889f02a18",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ada9f94-5b76-4471-9655-1799094e5531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9db5cc-9eef-4c35-9c8a-ca5cb34d21be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281445c3-99af-4e7f-987b-ee4a960c6e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2463b5cc-f18e-4d8f-984c-a3815b76b543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d9ba59-4c42-46cd-b571-75440f8130d2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce26e79e-f6dc-4aea-a494-0845929b8c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07407c06-8cd8-4009-a2a5-8eccf48c83f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f80472-b4b7-4270-9cee-847977bfe29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8f59a6-d908-413e-85be-8e4c4a3e8869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a9419f-e434-4eca-8f6e-03798d52ec02",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0516b700-c78d-423f-bf7e-d2da78ae5fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8098d342-b155-4c04-9d59-6ca54a36c23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee5b36e-69f6-4ced-a521-008065659536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2a1b83-e2ef-4a11-9c5b-10000d3fb973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7053390b-2a57-4df0-abef-f828f0f77371",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd95583f-a002-4a36-b5bc-083c9d903c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a1ece5-1b46-4086-8300-6f259f9c0afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6255a8df-c7da-49eb-ad93-a19d23bd15a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb5b4da-ee3b-43f7-b7f4-723936e78968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9da649-3805-440d-89c5-1bf14953c07f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfa943e-c4f9-452a-904d-713befb6275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3a1013-64fd-43e7-b30e-34eb176a7afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceb3436-035c-4ba4-be93-397fdc33e5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e74e6d-249f-47cd-bb07-ac88215f2f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c87ba07-3b12-44c3-b12d-6c5f5433453b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5fc335-e2cd-47fa-932d-6fb307cc36bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d16525-2488-4923-a5de-52be3761e0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7ef890-a44c-418b-a582-5944a7ab7adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e70a235c-6188-4a83-a6cb-3c9ae18f7eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9788f05b-72e9-4639-8041-7e7b5c3b890e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110d8fa9-2b81-41aa-9509-55b9630cf4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d478373a-b987-4fc3-a69b-5532ac99035d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a08d50-79ba-4a27-ac90-52a6e3c0838a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa05ecf-8ba8-4336-8d82-753fd28f408f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faa95f0-a0d2-43f7-a206-7fc74cfbc8c4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e109477e-2fdf-4ddb-b767-5ef1088f59d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584f0b9c-1245-4656-80ab-3e218a839d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ff6a99-8ec5-4730-b0d0-5153744a74ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfc9360-3263-4835-b5b6-82ce6dfcd0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3efe57-9fad-46b6-baa6-a998792938f8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a945c9bf-8cec-4988-b3e8-7c610c33f1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7898bfcd-0f19-4fa1-953d-db677be6f680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377e02b8-e45b-4cc1-b0dd-eb0885d6a5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6a8ee3-68a9-4485-8467-230af1e8c3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616878ab-ce98-40dc-9554-bb14c88f3cbb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0055c790-dc7e-4571-9797-ea99d6086de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e8ad60-6b7c-4be8-816c-76a947016325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2db5c9-d0b4-4c67-93ce-f2d431296acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f92bb009-e8ea-4340-95db-6b34c6ef06ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d260bc8-02a1-4358-ab76-1e27dd46c65c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0962c7-8113-4299-a808-07bbb278eea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a89863-0d95-4f98-b8ac-ec2dad17c2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9018dfda-2cf9-4897-a427-888a845c7e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3218aadc-a772-47fc-a8df-91c76df015be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1a7397-39d8-4015-86cb-5bdf4ee96aba",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95be95c0-f5eb-4e0c-888d-4ea7f98c3d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a73819a-6035-4b63-8884-3d86872ea095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73e6583-e357-47a0-af95-69a0455d0d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86214f8e-ef51-40c2-b606-928d8101e512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42d7810-7ed1-4d84-8e7b-fd12099de1e4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376e31c2-47eb-477b-96ee-b83b7f03c497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b997b5-7cc4-4f88-83fb-54262aac81bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95f357d-f800-4b68-9e3f-38016c72db4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d88911-6cde-47f6-99bb-f8b4d278994a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44da053-ca1e-47bc-9322-40069d359cf6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b1ca84-0b4b-4ced-945b-321f31c4a9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd748bc-1c42-4e5a-be9f-22cec3d0539c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1414de0f-3b4f-4e84-a104-fb820cfa38f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75de3655-1ad6-4a7c-aee0-4ca0427d6166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c65e0e4-cdcf-45ee-a417-55aaeded55b5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefc417b-8912-4b07-9317-3cf1e6a6e64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62414cac-2df0-41d0-aa26-cfdc2c98fbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6078c0-5ae8-498c-81de-5f517c814523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6850ca45-7d16-40a9-a713-603ec9f5c09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfa3671-35e8-4e5e-a716-9aad2df5a6c6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74edc1d-a57b-4deb-bcf0-8488a910bf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebdc020-8b9f-4486-a8ef-06fe826a4caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf404591-3d11-4a23-9286-5749b707c1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa87453-a5e5-4796-ae24-3cc686350132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d978daae-f6e6-4472-8ef7-4c34060b723e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170ddd10-99f3-4dea-a290-5755f4bee8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a592831c-e45c-4daf-b2fc-ea79d251ec94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928d46b8-55b4-493b-bed1-68b354cdbf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25e6938e-7ccc-4414-bedc-ed2537cc8d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b523d7-23b6-4be3-8ee9-5b9fbc5db507",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1cbeb1-8e7b-40e4-b947-7084cca4850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a88edf8-44f6-4ed9-836d-9999336fa299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39238050-82a2-4c6c-bef8-538bf4a29de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0f500a-041b-49eb-9518-d78fe180a75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f446d9-dd38-492b-9030-482d7fdc3e3f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d9df1a-6970-4b32-9385-694b4a850543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076ce85f-0064-4dca-8cb3-6f6329a3989c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c97de13-dce6-4bf4-b7e2-2f398d9078cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1d2969-b696-49d1-9d16-2d3f6505b43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fa8ceb-a042-46f7-8b78-f94e3bbcffcb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ff75c0-6f34-4fbf-b2a8-637e36bf1810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb81bd9b-1770-4db3-b4a3-3dc9d0a07a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c865cd7-0d7f-43e3-8d13-a01e1fc35ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b006fc18-6f44-4cd6-908e-9e4b51e0b992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d2af9e-e381-4487-ad6f-92787fd3e251",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536fa191-cb4c-4a8a-995a-1b6f1eafd0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d146f6b1-5dde-4fda-9004-6b485a25a1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70102713-a5a9-4aba-a7a5-ff276109d304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e91ed3-a77a-4c83-98d3-b872d94150aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0026617-1bf2-41ae-acd2-b0599d4501d9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb566d03-3b2c-422b-a983-a3d715320a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6893e1f-2a1c-491b-8bee-7ce8a40948d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f5138f-c607-4ade-985c-9f12d22817a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dea72f-723c-4596-804f-75d4a014215c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01331f7f-f857-4517-968e-611973e32625",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6c7558-b2ea-4381-bb80-bdc0f3328e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d81409-6b29-4492-9cdd-ce76273482be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460541d8-cfc3-46f4-981d-f5dab96f22de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17ce46d-42d8-41fb-8821-fa887b38a110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb0434c-90cf-4e3e-891c-154619d23e04",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f5f4c8-deec-43e7-84b4-e39dca3f108f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adfabc8-edd1-4dc1-b68a-f2bea9871e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951de13a-a6b4-460a-8e2e-5fd8ffff6453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1896031-71c5-41ad-b53b-12e27d7d91e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a07c2b-a4ca-4145-9fff-c87d204dedac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6581c0b-b39e-44dc-b456-a2d30b9ec4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfbfe03-59b6-408a-b4cd-38b4e7b6d732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16e1033-3d52-450b-858b-87c9d0e9f8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d47bd82-833b-4d7b-b9ee-a34b88ff2b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beefdd3e-d856-46a9-8ae3-13ad26613559",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9064e101-f5fb-4493-8021-de4688901111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdbae3d-3ac1-4660-ad3d-68bdececf40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8853ec-17df-4891-9904-a2d841179a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7dda6d-f700-4395-a90d-8e32fc0cd801"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "125fd415-b92c-4583-ad06-c1fc070844db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aba82aa1-db38-4fdc-a28f-0d43e6fe691c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c53831-2d05-4922-9e1c-59bae9e5d076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef992115-b05b-4620-8788-0868ecfbc342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533422cf-e07a-4205-8644-1920e2f43da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64c425a9-15a1-4385-88e7-67ec7e25bc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267c2a72-159a-4f34-8964-1e4d09a8a0c7",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3e6e27-bf8b-4246-be5c-df35df3bb9c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "385d4841-0d58-47db-b532-99e350d72178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cbb766-8881-4585-a037-57bf179321a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8047d535-6677-49de-8bf4-c54b39879dec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c8e69d4-3fbd-47ad-b90a-6aef52cd3893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff536cdc-4bb7-436a-9d0c-0aa1d08b8dc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac376855-daa8-4171-8815-a3892d742cb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "141fac33-45e1-4e3e-865b-9ebc14246c5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56dd7ab0-cea8-4fee-9029-650a38455ceb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "401bffe5-e542-45b4-bb2c-93c7ca280097"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a7bb920-0a57-4d75-b6e5-613448899367",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17d4f954-945d-4679-b664-06422b0ad4c1"
            }
          }
        ]
      },
      {
        "id": "4794e302-5168-460c-b1b4-4a9eb1215bee",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "eb11d792-4aaa-4c82-a13f-f7ef11d2b216",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a95bcd06-5cfa-45c7-9986-3f1da3e327f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d7b50de-38f1-49b2-a1a3-273759bebd0a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf189d26-a787-443e-9f6f-eeacabf3ff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6b6bad-b3f1-4ccc-a410-73b68dc26812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce48cf77-4485-403f-bbda-5b75ccce1130",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c33ef5f-d94c-44b1-98f1-ff457550f1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8842be25-71c2-4907-b95d-db31ac951e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b6de2-9d98-4fc7-b9fc-89e833882ec3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323f028d-d2cc-4898-a3f7-4fb410d2f679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e4d9b0-0a7e-410e-a047-ed1170dcdcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291d8cd2-143e-496f-b34f-80632b7cb094",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5c9dab-bce9-4d7b-b765-bca8360bae90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd818758-16eb-4d06-80ad-87e825935be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5636de8c-0889-4e43-a75d-a39ded43134d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3927ae91-b479-446f-a4f0-da892de4c45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767d77bc-9220-45e5-8da2-d562d14650bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff6125b-6463-48d2-aff4-128eaf6e0006",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bed8da9-1e20-4d7c-a25e-3c1b8e28b4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd04f910-31bf-4575-b5bd-ecf7095c5511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dc20e3-54bb-4503-a57f-df0eaaec8468",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3079f7-b002-4f0c-a65e-7d44a69fff03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0091ef32-4440-4575-8736-d9dd96c747ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa38dd51-66c9-4305-b956-273653969f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d190ae4e-9eef-44fe-bebc-6d28745385ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296549f1-aece-4b56-964b-d3ce965607cc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a496ca-128a-4fd9-8019-24de8a0a0d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1016fe8-1b07-440f-bcd5-a592240ebdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608f097b-c5dc-47cc-8306-b2e6f38d8f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4099cc26-212e-486f-ad67-891b15be18fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441138fc-8481-453b-9700-7e5e263898a6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b94c565-b0aa-43f8-9a0c-7007deea2641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0554c34-4b5e-4d84-9557-a30a5526b8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03590e30-9f92-4e2d-b061-71b25ffac2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9679fcba-b29c-4015-b419-78127fffdd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16735022-be74-4c71-b5dc-616ec4af045a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0028e6ed-e1e3-41bb-a49f-e17cab3ee553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6cbd670-c0eb-4a4f-9873-816b228da8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac03e03-8944-4da9-a99b-91c6ea2dc171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bd3516-2b44-4043-b4f4-7ef1ba504615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877b4a3e-5e80-4cd7-a8b5-ddd0dc2637b1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a1e514-1bfc-49ce-b879-2e83513d32ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8b00ae-91fb-4afd-89a0-105308acd355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da4b5d1-9319-4850-9c61-30e844e20148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40272349-875d-405b-9dde-0cf54dcb2226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710549aa-fa79-401f-ac49-850e993c82f3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5dfa18-c3c9-47d2-af50-693fc890c61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5b0ba1-deee-4ae6-b075-a45790eb84c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b93fe6-fbb4-40f3-a7e6-8a4a27633348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0a250d-ef13-42e2-b85c-f861ec8f3a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c7c1c1-72de-49ce-a476-0e3c8f27ca2c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa67fcb-1ee4-4d0a-8b38-b6c7d289a098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53bdba6-c427-455b-9f3f-ae8af9e9de52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ac115f-3b5b-4fe4-b1f5-c9ad56879676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11eb165-5dbb-486a-b958-61a5a2e76703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae837c3-78dd-4e53-9a08-b737fe74c6ec",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06cc239-f6ac-4bac-a0f9-94a0be1e43e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "121386e9-abe6-438e-8053-32ac229d2bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c784c1f-08b7-46c9-bae4-71e1ca13a9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c698c29-75fd-48fa-bb2b-f185c1825c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ee836d-8069-4daa-988e-fcd535823a5e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3837801a-80cb-41c7-8097-04fe7bcfcfc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48f0852-4113-49c1-8c0a-2ba73b35c973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1b387c-cbf4-460c-87be-d77573325021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288b0fcd-a95b-4e3c-ad3f-a243062a4ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88db2e76-c819-468e-be23-dd6913015a90",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785fc563-12a6-4539-8da6-1c471b1b8885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ccd1bd-960a-414a-a6a0-59a236c0e14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a013409-fc14-4aff-a5b2-572d1056446a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1452d0f7-6390-4f4c-987f-96a231170c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d04f7f8-7a7a-40a8-a675-7d5034e55a4d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877adc34-4131-4b38-b6d3-1b1bb663727d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16d3181-f63f-4f2f-afce-b2c4bde82040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e06093-9cc0-4a00-a1a0-da66f5d59562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a9eb95-06dc-428a-b992-b767caeb0525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40a9946-effa-4687-852e-697fcc9cc1f4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3052afe7-2b73-400d-8e3b-3d083e40964e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4798ab-c3ad-449d-b2d4-f249d99af714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9ee229-7b6f-4be9-b753-647d299eb21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa60c6b-a345-40f3-af05-10fe452ce9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1712e3a-b90f-4e90-9e4a-5a366b64db97",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3e957f-8a1c-4ac5-82af-0eb18a5a9d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e224db-a86a-4225-8873-e86eec5760ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f54bdc4-8c37-4a5c-81f8-12fbaf9bfe4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97d5475-167e-49d6-a7a3-dd3f938659e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8229d06-8a9e-45ec-86b2-906bae2829c1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951cb829-6997-4ef4-b690-a5b68f6f9aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99aeef3-447e-426f-82c9-f1ef0297663f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cffa5c-cdcb-41b3-b021-3421fd1e693f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b85cf65-33dc-429c-8f81-efa2bf6e7a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5450801e-d1e3-4cf7-b42d-2fccca117f07",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5035137-5e3d-4f7c-bd1e-d12ace010ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2d149e-8a90-42c7-af22-2c9bc114baa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f75cc93-4b61-4ebf-b449-52bdbd9e256f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccc15dd-9478-4076-b613-300cb2ba9299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1868732a-b4d0-467a-bb43-bb1cadab49b8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2608b9-e0f7-4f78-a46d-2ab5f49f5221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f553f15-cfc3-4924-b023-2118b5703c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88627f16-6568-4673-8b27-47225a63f9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4287406-8380-4509-a444-a9c3688603cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547785f3-9594-4680-83eb-705a976dfb9f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862e80ac-86ab-46a4-ac52-32e2d89b7dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ce58ef-072d-4f7a-aa3f-38e427eb3a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5603c520-c140-4e87-92eb-9728c79cdde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50423a73-bc9d-49e8-aa04-c7814b903896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18e4aa4-59a3-49b6-9c56-a27b959d0db4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110643c4-7237-4f3c-acd8-1010a435528d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03082a14-415e-4b3b-952a-5281b1fbcdb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec3a17a-5184-4437-8a83-01c6e5d359ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f3f7ba-ad98-49b9-8506-ebda9877bea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b16676d-8919-47f9-a610-6f1f253d2c4f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be5a0a4-4fb8-448d-915b-3b3cf8e4aea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e7f0eb-dada-47ea-924d-d3548a7cc2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb802047-edd8-4d47-9190-d13e341874d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b695259f-29ad-484e-9a65-12b447f6630c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c581282b-60c1-4b7b-921a-8a48e417342d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7a829e-7850-4055-b2f0-55900b1a51bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12dbe8d1-5aae-4e19-acf4-b12f722632c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc5e66a-fe3e-41dd-ac01-e3320afac26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d838f03a-75a1-45bc-ad8c-a16679ba381c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1719523d-df5f-4e64-8bd2-ccef6cd63ec2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e690e34c-a26b-4ef8-ba38-1b2a43111c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1cb2ba9-c247-4b3a-9b4e-36602cc5b634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e5659c-3899-4de0-a853-006c445f3fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e871edd-1fc6-4267-8166-d329a4ca4a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d3f5d9-1694-427d-bd02-8b4e8407d55a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1131fdc-dc05-4a38-88df-416de0be608e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd8dc48-70aa-4d2b-ac54-ce1150ab3748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9590cf-16c6-49e3-a13e-6536fa3aa7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc00f032-a1c9-444d-8e3f-12a144026555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2252e67-8bda-4766-81a5-ad452958529d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fce04a-2a82-4ec7-a988-cb635e852a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d09bc846-a207-4086-972a-46efe98c1931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238a1865-1c7a-4c9a-b6d5-791ff2782ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7df322f-fa8e-4361-bb1e-bbcadb32bff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ce497a-f2bd-4e80-b38b-91ad2a4a2598",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3725e0-17f1-481b-911b-b5cb4326a70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "120db414-6c6b-4afa-a2be-254aed183740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12f3f7a-edf2-4902-9acd-23ccb33d974f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc57b9f-5b8e-4d73-bb62-c89bc838abdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92606f4d-fcc9-4c98-807d-7aeb9d805811",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b8bf2d-b41e-41a7-babf-cccb4ae4c466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415fe91e-fac6-4eb5-b679-b657d22370f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d030ee0e-397a-4b2f-8560-daca779af983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b90492a-4cae-4a44-aa24-29337360b6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd60ea16-6d79-4e1c-a89d-5a656755fe0a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34325f2-8fea-4c9f-8866-898892e4c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b4e7ec8-d607-4479-9b82-5ad9e15b766d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715bc5be-b7e7-4428-ac7a-4f95548e806b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e2bf48-282d-491c-b431-0bb8896399e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfb2bb2-4fbb-4ce3-9f96-70bd7d993409",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9333929-df55-4644-b407-874ce6c526e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec471f4e-aa8f-4c81-a641-7c42fca69272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a340e221-fcd3-4878-a88e-fe388e70ad69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55e2714-409e-4667-b1d4-6ebbab762206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dff841-ac6b-4ca7-b40b-b2a8d96e8cd0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f24065-0a1f-424e-9e6e-fbd6cc02677d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6657dd-8487-4bf4-bc81-77620eb844f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b885ca-01ad-4240-b9d6-d74abbac769a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b54972-8492-44c5-ba5e-525f67844acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6fda45-9507-46db-875c-f297b74bf896",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03251b8-5a40-484d-91fb-733ef89c6e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a33d0c-4782-4be3-93fd-490ee84bc3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385ee455-2089-4ff9-9115-143970ad2871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209268f8-9f24-46ea-b9ee-7e40edc67a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9fb80d-9ce9-4f71-9364-fc2f4bfd64f2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7b0fcc-3bdd-449f-b951-e8ed79a35dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfead2a-c269-4520-b61d-84072e201436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63eea530-1237-436f-890f-51715536e19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2418e972-eb8b-4217-8de9-4fc56fa3d0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e401c352-c770-49ba-b058-62b5e39487e6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c881f0-ab0e-4c0a-9559-8e06b9f668d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5382d5-ca95-45d5-9049-fcf6cf97aad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc418dd3-1848-4c2d-9c6f-55b5145e0eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7388c51c-063c-42e6-bda1-ee8df708385b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0d8d54-fee7-4ace-8db8-ffda44e07209",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19309175-7392-43c6-a34e-41644b25c3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774b21d1-67a5-48cf-9efe-3ef33b23adb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1895ee-9572-4af2-9c9a-752b7ce5b92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e67eb5a-fb00-474b-8d14-b9375a3444da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f679eb-ac73-4f2b-9240-9d2720eef027",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cf2592-e1fb-4d73-8c3e-d26bce5e3876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe0fa6e-c9d6-4aca-b92e-4a0efe6aa274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5852b2e2-bad7-484c-8f3c-80f05097b62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0641ad89-7065-4bf8-904a-774fa5d754df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54336881-8c57-4220-a7fa-04ab0a85862b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1c9f2c-d965-4b2f-9a1c-273d00f828d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269f73d4-1bec-4810-b864-332098c9cea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07f9052-ac58-4165-bb9d-c6c168303683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9a3fb7-187c-4cbc-b88a-acf4d9fa9f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbb019a-0f35-40a1-b3e2-2ab3e13e3310",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cd23b3-b4c4-45ef-b7d7-6524efd7a6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d13626a-cdb6-4483-b120-9eb91427a967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04752092-dc26-4300-af9a-24b5a2ed0556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5802bf9e-28bd-4a2a-8188-251cd9eed1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536f2261-9d93-4622-9aeb-326798090404",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196df25f-b8ed-4b5d-be40-b4ec154c0f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec17746-47a5-402f-9221-a36691f2ea2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1100b7e1-e86d-4978-8ef4-5b16f9323d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6495fe-2ae1-4b96-af11-b161ffe9f2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98363555-ce2c-4d30-9feb-b1091e084b13",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c86df51-20df-4768-b989-322ff21ba3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39af536-dce0-4121-9ace-d6991d07fc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc369a7e-5f5b-48b2-9bad-b5c7a037ff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba0f2d6-af3d-4e8d-8579-7e2bcfe8791d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab9415b-4432-41cf-9046-2d7b37cef1e5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b500bc7-81c4-40bb-be36-7af2c68f037f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ad6ec7-a753-4f22-a9eb-f83f64d85825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bce721-bc1c-401a-9a2a-fd426d0f51f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9149e8f7-9c5a-4345-a2be-2c4fc063c314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6bac95-81e7-4c0d-8239-be1f952ff44f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb689a4-2ddd-41ef-8304-97d383594c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89dcc72-42c7-48e5-8938-aa9a232d98f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8232f25a-a362-4d3e-9d99-5f3623e13f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8dba00-8a62-46d8-8e0e-a72945dc8b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efc5791-6ad4-4c9f-aa92-1b3dbd05f3ea",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3df8177-6f50-4936-915f-ea7b6aa75e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ec884a-54bf-48b3-b1ff-8230fbcb0629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c2f470-ebd8-439d-9bc0-3c1a4f034ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bc229a-9d19-4ee2-b7ff-59cf2543133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047ca047-1ca2-499f-9df9-ec9578c83c45",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653a8289-881e-48b2-a413-5a9cf7044fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f273935-d335-4445-92dd-36a06931119d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f49a33-d85a-4911-8b97-dc10fa707a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7df7bcc-168e-4d76-8da6-6067cf8cfa85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01be3cae-21d3-43ec-8c2c-8819956ab6c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129c17ed-2a88-4135-8231-25b8e929e476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ad3a11-1c09-4acd-9735-3173fab910de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0531e41-c1a6-4a1d-af80-1cf84aa65998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e047d607-0f8d-46bf-bc08-fb600cabbd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3b1bae-39bd-4944-8f4b-b85588769d85",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd0b4c9-9acf-4a87-9710-1ae052bfc52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004d292d-813f-4c00-8aed-06ef23df19c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe014f05-b4fc-46db-bcf7-a05fe376647f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e599e3-fa98-42a4-8762-d5fac82dece1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10231bfe-39fa-4771-af13-ae283f80147e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a699be34-6c23-49e5-a78e-27f1d32279a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59dcda8a-3149-4b07-857c-f9afa65f1ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e3edb8-a1c0-4e77-9e19-d882fe9a4ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c7df9c-8744-4a3d-96c5-5c56fc277478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa89f48a-4bab-4e33-8620-b93ca5d33593",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6b88ab-3b92-4991-b2bf-906b92fba01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86fd324-58e8-4cdf-aafb-9d712f8c3cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21a3bca-5197-4967-b4ea-e2b061ead7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b68c789-0ea1-4cac-bef9-333bf7ef9547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759ea8a0-3862-4c3e-b337-b6d436898af0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179179d3-8928-4f16-83cd-3a341ebea031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15c2a42-f0a3-4748-9058-38cd5345c517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b465f7-3bd8-409e-9724-1304d9cf2d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d19373-2a33-41c6-a662-b494cbff1a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14835508-95eb-4d03-8644-bb03984b50d8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07c9e41-dd7d-4532-9b48-3e967d111419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c8aa36-0a1b-47e1-a045-4644f2ed3ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecad3f74-9d1d-4b95-8582-9e1340d53e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6fdfe4-f748-4ba2-a145-411eac916cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5396703-64bb-4605-8ae6-2a77cbf0b6f8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f820891c-c92c-4f87-8a3d-55c9ebc65906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e116ac-4048-4535-90bf-fc1f20ea9b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f8618b-eb90-4dd5-ba65-53fee56acbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f88c478-cfab-4a43-a89c-c8826ffb770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b957a4f6-15a2-4c18-883f-82e7058fc9ce",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9301594d-141d-4695-9fa7-dd88d5ca7b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425f599c-d0f9-4ee4-9769-20210413b1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303ee79d-54b9-490d-9ee9-88fb649701c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9429e9f-37ac-4b5d-bf47-ffe7a34b8ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4311ec0c-afe1-4a09-a145-f2a3c0b29049",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1eb33a-3500-4541-b5b8-05fa6b023955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb1f562-be28-4020-b2fe-39ea6eb68e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba468d-5abb-4ed0-82a4-aa70001feed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde8fe85-ffa9-4f56-8866-f5b4853a7201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ceff31-1687-413d-9376-62d9831803c4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3003a32-61e2-4dda-a5ea-851b480601f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abbea33-00fc-4d29-b334-c77631956d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65954de3-750b-41df-98c6-0900dc1ab910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61db0c4-5f40-4dc2-81a1-44103131e1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e628dfd0-8194-4d6a-97d2-7e48097c7f65",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad75b4e-ca51-4a4d-98a9-354b8dafe9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935813a4-2c0e-44dc-abba-ce608afb7dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f3c336-7043-4820-aa13-fe31947e6917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d290621-466f-4088-86e5-d22ab6f5662b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32def05-530b-4a6c-b3bb-11be31024de2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fbfd7d-0bc4-4161-85c0-af35ba754152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cb05eb-a90d-4bc5-aa32-4cf801d51100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1fa491-4e9b-44cd-8590-a6f214f7552d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acef8eb1-3f83-492e-8013-190890b3e35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7684d878-bc9d-46ad-98bb-ccfd27b106b8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfe03ce-d10e-4ff5-8e8f-b838a4237bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e420cb70-bffa-4825-b66b-87fcffd6a286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980afe56-ee6e-40e6-a6ae-392c23c99a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5001f018-1077-4d74-b919-36d6586126f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd976c3-1042-46d6-a7a5-f59a4ae529e9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2297b894-526a-4dcf-8cea-d153e8458f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236ddfb7-d130-45dc-8948-e6f5e1b6b062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08156df-d5a6-41d9-9bd9-00cbcf271e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273344d9-93b8-4267-97fe-6f38f187c32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865cc3f1-ce0b-4ea7-ae53-3fd73dcf9e36",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f69f5e-c500-4f9a-84df-24acc59797fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ec0f1a-8455-421e-9060-1c81c7791b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcbe46f-2215-4f16-9da6-0f31fc317699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cda2453-f443-4469-bd80-2ed20fd45acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c5f085-fe5c-4b13-95a5-8077a48bef73",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216b59c8-e786-4f17-9a5c-6b5607ab9da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9177b53-1eb6-4d03-97e7-bda42a75f5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fea720-b063-407e-9a02-176d12491403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3cda61-e3a3-403e-a594-8d9d43a535ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dc75d4-1150-43f9-87b0-db91a24a0380",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cdb139-796a-47be-96c0-f29f3d503f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00db6c48-87f9-462e-ae48-56a35e06a43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6855fd33-9341-4870-b725-9341f7a8f77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8684aa20-5596-44eb-b19f-f1633f20b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e4b14f-dd66-4d33-8045-ba389e635325",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5409082c-e60e-4d10-b138-abb81a725010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b284068e-3699-4e9c-906d-ce64424a04e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf979836-6293-4bff-b155-951964cd819a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee011be3-bb89-4d15-8abb-1e16d825ec79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb46a904-2fbf-478a-8d64-1e291d614aed",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4817f627-5711-4a75-bd13-616c71362d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a5a5324-33e5-497f-a37c-a13bb3b566d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5210f0-54a4-4996-99ce-7127d016ed0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c6f09b-c9ce-4b1c-9462-306b4825bac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f328e704-e260-4562-b354-ddc7d997c416",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d76c47-ed82-4c0f-ab28-8e3616ad6a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96608e8-187e-43f0-a6d4-c50a9dd435a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b94996-231e-4841-966c-830f4c2a1c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44df6f1f-d770-47f7-a7cb-dbb199f58bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab7c6f9-1fbd-47c7-8d67-b5bd5e55c51d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2b247f-06c0-4cfc-94a5-568220ca04ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da34a4ac-f4e8-4b9f-ad0e-eeba407f69dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49826370-8248-44ef-aa7c-8c381452868f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2091cd-1f95-4253-9396-a976672b11ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6cbf1a-229c-4d77-81f7-f23d95372a54",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c50ccbf-c91d-40d6-bd8d-56eb474c4a71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "916ec8a3-679b-4eec-af65-dc90dce61d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06eb81e-710e-4afb-a691-b5d1cbc40c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485b612d-3031-46ad-be10-d8d7eabf5854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12020ad3-8cf5-482e-9a68-f78d328e93b9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde4ae70-b3fe-45dc-be22-21e41e49e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e715bf67-1107-40b3-8f8a-fc36d7e6b9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d415be-eb94-422d-b633-f2652c974509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feadf2a4-9560-4e78-a252-5d3cceb2c8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbed5732-a6dd-4ec0-862c-456389342beb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48983f42-8244-4d17-b067-a8a487ac24b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f665405-996d-49ed-9dfb-400d4c8d3dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d21181-8aab-479b-bb0b-dff63241830a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bce25d-8f2a-490c-a7be-131e3403842e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0743a7-d850-412d-9a46-cf1752ddaebd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a6acfc-de9d-4270-93d5-e264d6b03a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b092f709-a897-47f2-8526-ffe151361a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eeedfe7-8811-44a1-ba9e-6370e369bdc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12baebee-6bff-4d36-8834-53324d040318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd7176f-7859-462d-aa06-08e9fc1d4479",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6af49e3-ca50-41c6-a611-fef2c4211ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c5a5b2-a6f0-4456-afba-2f4eabf41333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbce8ac1-2985-4d71-81a0-2938ad74e86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212e342e-fa12-44c7-8635-3d4046c49059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2934fd-446f-4d95-ba57-92812aec6385",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af6d6c-4490-4be5-b6ea-61689eaaa0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90aed76b-9a49-40c8-9c6e-452cc6b070b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ee5fe1-1739-4fde-b293-9c99af8b7763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d89036-4eaf-44b6-9c98-f0a5cd36dc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8581fa1a-960b-429e-ae5e-be9ebd43a88d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b426dd-6363-48f4-aaeb-df8febd6d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f357d7c-9dea-445c-b6ae-c54ba9596d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bd8937-f81e-43a1-943a-9883d69e615e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddaecde6-6cf2-4f91-b515-82bb7e22c3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48176e76-1a01-4875-aaaf-a06250f52b4f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdcd18d-83fa-4846-87ce-25d411ec062c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223eaef9-b043-433e-98e5-5dbb22696855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191882c0-d681-4843-902c-fa12fb599379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac91fe6b-2fe8-4bde-b30b-0bfbdcdf2a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fa464f-7d43-4676-beda-4de1a1afada5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ce32c1-febb-435d-a296-7b428e50d6c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f74745-7cbe-427d-85c2-3f9591c55217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9a16ce-28f7-42ed-a418-5bc02327503a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74442c97-a6d1-4a21-8918-6c02f46f34cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d4bd26-0fbc-486b-9f95-a86200951e3d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77263b12-1357-41fc-8177-81138d9e8a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6826c182-f115-47af-850e-69916c36fd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2732e40-ffbd-48db-8b28-25ab2f39d81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d870c461-abe9-4b2f-a13b-72186004a90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219b27ed-d76f-4163-bf9d-0422c4691219",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e65c7b6-f6ad-4a19-bcfa-46824ffa5062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61cfc3d8-f3b6-46a4-9f4e-c1b46f4ba423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aac4219-787e-4ab3-b75e-54bbaff1bd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83f974c-0961-4f99-a11b-4c5dffe34ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc4d6aa-5e01-400c-b58c-4bf9b0445910",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4e7d2d-8be1-45d5-87c8-57d7ecb03a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b5db213-121f-47d0-acd9-78d19df0c598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44f033a-0f75-40fb-8549-64abcfc7bebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596051b5-9754-474c-a207-cf6e0c092e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251e1324-fc87-41a6-9723-8442e9a22884",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c16cf5a-6f41-49e5-a724-258cc2f83da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca0a62d-2eab-4470-96c0-5df7c52aa1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd025dc-0214-4bd9-9b95-6fcd95f1af33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5c4c44-8507-44ec-804d-ab71789058fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd65e8c-fca9-496d-86bc-49362a13a53d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582ee576-1442-436a-b998-bd49130152ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb62f36-a910-4104-b2ac-7143732cc270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93677660-7b07-425c-8d3a-dedc6bba5f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0da922-5df3-4412-82b8-620d6430d6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedd9584-d415-4c15-add9-0955e5332808",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d97eb5-88c1-4a7b-96c2-defd4b722e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a6e1205-1d90-4d4e-9213-c5368e26db89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91378e8d-7ea3-46c4-a6e8-d5e1d0c531fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1a77f9-764e-44a4-a3c7-d5709991797a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b423ee95-3b6f-47b7-8d98-50da612fc7f4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b474513-21d7-4a98-aa03-ceeba4df6f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a952eea-6ae1-4391-9ebf-a353ff891398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf4ed4b-dd32-4313-9869-b0c7aa97b5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6888895-9014-4926-b667-3143f22f90d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0eee7c4-4f26-423f-8004-c5b24391a83f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5eca00-00c0-4f0c-ad06-9f24adbc7520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c907acff-4bea-4bff-b992-bc6d5ee928d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff2ef9c-a565-4ecd-ae39-a00686db2bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8d7aec-4698-4587-9cb6-49b3c4e10fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d4aa2a-7dea-45fe-9702-4da81085bb16",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a109506b-c6e1-4645-ae08-e011e88c2610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896438c3-fcc6-4abf-a9f1-2f0aa959d898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e197a74a-ac7e-4449-953f-27b41476cbf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cb1f4a-faa1-48c9-9c86-9b79cf1ce9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ab79db-4cca-416f-abdf-42c553ce45cb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeab83ec-cdc9-40b6-a58f-4e080962ff07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65e77fcb-21f1-4906-879c-e9414f2bc1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0773171-6c8a-4ee0-bc05-5bd02028c64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15374e3-bad9-45dc-96e3-286a0654db5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4da2b2a-3782-4d0c-a54e-7d7b14689657",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87991005-05b9-4347-b987-e55c15ea424f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84b4e9a-56ff-4ff7-842f-3ed9dd7a08d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08328cfe-8f45-49f7-996f-43a41d73c0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfba634-7b28-4937-b887-de2e164ede92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dff1d73-8e18-48c2-8e93-5daff76e0722",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a20ca00-0096-4288-9efa-32acd883c442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf35dca-af5e-4061-ae97-d800db07808b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0afaea-c5c4-416b-8ea4-67732293b8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c90c73-f0fe-41a3-af4e-1f8da6d8185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8b7c59-6fdc-4f84-a0fc-958f3e7f9e37",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1f1cd0-3522-4fcb-a2ac-22dfcdd4a13f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1721298-6ce0-4cca-8114-09634b6e0d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660b6962-33bd-420f-8c72-0a1fb89ca40c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8af80c-3b93-455a-991c-bb92971a6bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b59084-c71d-4835-88b6-76b1feebf26f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898a6bbd-b180-4436-9dbd-0c04604b19af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05a0c87-f75e-4544-bf60-b9ddfbf82694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417a8a31-cbfe-44d3-b188-e72e55566b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33885a25-5cec-4e24-9e79-fcc5d9bc62e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c041e2-67a0-44cf-b4cf-c0626f8be277",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d058fb-dd0f-45bc-bd86-8b26d7243d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cca9e8a-2bb4-4810-a775-23e4665b1853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d52a03-9e62-470a-8290-7b7537f263c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa84978-5d05-4db1-ba17-eff5cf3027be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb24b7b2-b652-4fff-b3f7-4f310e4a001a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e27064-3844-4edb-af65-89247c41c8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c5170c8-f338-4069-bec8-9eeee8cccc8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ee715d-7dad-4a6b-8ef1-d713aa2638dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f41499-0de8-4ef9-aa50-2a0ff8b03608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d62b29f-2bbd-47d2-8484-5606d8757106",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ab1ead-c21c-430c-9b8e-265331ef54d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ca1e8f-f261-4b73-8791-27bec26460f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf70670-a659-49b8-ae24-91b439da084f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ddb63f-33f8-4174-9db3-0b75c3480611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad005ac-9b4f-43f2-9847-d9e744b711dd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c343af7b-8154-4f44-98a4-3fea55fe55b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e46b3083-ab54-4df4-965a-35cb0dea3094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68deb0c8-56a9-4613-b53b-99c5c7dc3501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72eaa25-4f24-4e96-bf40-c4f8b8fc1332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384badfd-2737-4e2c-af02-4551d5519d49",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3097af-fe63-4a13-b2f3-d16ba0f56181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf5e48c-548f-44fc-91b2-30ad2b2e2cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b230de-bf0c-4ab7-8ead-d298e28b5030",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4e012f-aede-4b3a-8148-4dc3dab98a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3401e4b4-8001-4924-aac2-7ba2537581ce",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338638cd-6710-49b4-9cd2-2d816a427ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad2b04e-f5a7-41bc-b34a-09d589a92630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b51cc9-2d8e-451a-a31f-463724a74946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb21905-157c-4d37-ada3-50f5793e267f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8a10b7e-ac3e-43b7-9185-e2dfdd2605a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a3978ca-2a15-4582-b996-b624fd74c0de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebeac4f6-93c4-42a5-9e4c-8b6be7f2bf36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc4cfc2e-c922-4376-ac2f-5df36f2edb90"
                    }
                  }
                ]
              },
              {
                "id": "db041010-8da0-4e2c-9f72-e9c058bb1208",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6081bfbb-105c-4843-8b61-da6f7c4d1df6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b542e62-553c-44c4-90f7-8d396c973220",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "48abca62-b458-4fe0-b3ce-27e65a9d71d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be2b9f3-5df0-4deb-bc98-2caf2836553e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c40faef1-bc8c-400a-8e26-8d8ceea4ed4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3f92c0-f7d6-471b-ba9b-19fc2346bb1b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3c744f-01e3-4415-bbfe-e3829eba9859",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8cde2686-1ad4-479a-affb-1d4d85841ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f588f1d-9dbb-49c0-b95f-669cd530d985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50b65801-ddcb-4688-a450-8fee1b39fc07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b736389-9620-49e6-bb43-a131d43bbd41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6b2e07e-7ac2-45e8-9f0b-b68212ee729e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39d88e76-df79-43e7-9bf2-82f9dcab2f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "055c5b7e-2908-4065-881f-00c16569f005"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "2ba9be5e-2aca-4c3e-ba40-11a7bcae5a78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a00532c7-d5dd-4e25-be6f-8601274955ea",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb1cc025-5664-432c-bbb6-9b83a228ba15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61c0c933-b3b4-4248-9a84-1746cc62979e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d23c6d2e-3b59-4e52-8727-cdfe30f10951",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "432688ce-574a-41ad-894f-546a41d9070d"
                    }
                  }
                ]
              },
              {
                "id": "0174bf38-3ad8-41ac-85aa-e7ad19db8258",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89ed1796-7fec-4e6d-9232-c976ff2a32d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1bf1723-07c4-4f1c-a9a1-a22d89c5997f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a064fd2-bdfe-47b9-8036-b66a90c78469",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "200d6998-4f0a-4dc6-b3a5-e360b3fb070e"
                    }
                  }
                ]
              },
              {
                "id": "6ee3fed3-634a-4bd2-91bb-5c95f82acfff",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "742c42df-5f89-48e8-bd8c-77e1c20b54ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c9dfda0-e01a-43eb-a6ec-5ebc3cda8e50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69600602-fdf4-427e-8a6b-aaef59d6024f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6acb80d5-6490-43ba-8110-b09d44d64da0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d0662b1-ebf0-4c0f-980d-a570317112fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "696541a8-e6ec-42f1-a599-247be909ee91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1f7632b-2c5f-42ed-a984-e97e63ad6115",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e08de828-8e81-49d2-83df-a06162dab49e"
            }
          }
        ]
      },
      {
        "id": "8c0f74bf-8edd-46df-b9c4-23cfc389a81c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "12a9ebea-a837-4814-8f19-bd4b74dd0542",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e67617d2-21b6-46c5-a7cb-5807202453cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5ba5f42-a2e3-4422-b380-de0d238b7773",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bc71a9-6d30-45bb-bf54-da9ddd31ff7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "47e17fda-72fc-4333-8f66-07c037c741a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a26a82-eb0f-459a-8757-e4db0fd75812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf14a4a9-93ba-4a10-9dd8-00ff2998e6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c46fc65-494c-4a43-96b3-bc688131f77b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390f0d7c-80a8-40b4-8705-24bb5e5d9a22",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5a2d7e31-5da9-413e-af7b-ddb5a642fd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f57264-59bc-4999-b8ec-b3af63b0f896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b510e5ac-78e8-48b8-abae-790f1e2f6890"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29072785-accf-482c-87fa-0c2dd7690f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f968bb9f-cc6c-46bc-b71d-b0e025a45db0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "361c17eb-2b08-4e13-a8ed-703fc3446b88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "809d3311-7442-4328-a44f-bf0637867ecd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fa9e829-ac39-4542-87fe-bdf3aa6f5f08",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "644ddb27-9f19-48c0-8a4a-abfb5ee9f23c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23be14ce-77ec-44c4-bde6-310f77c57ee5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a9ccba7-b023-4bc8-b098-d5dfbaded8c2"
            }
          }
        ]
      },
      {
        "id": "535381bf-6abf-4738-932e-6c6a1fabea5d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae674c33-6713-407d-8d1f-38e528dc8c02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b04afa4e-47da-44de-b37f-596c0530c8d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e85529c-e726-4369-ac76-4696dfb48bea",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5882160c-e888-41aa-a007-4f877d95fbc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4af0586c-8bfa-4370-b309-675f7d379d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f65565c-0799-4c6e-b977-203a3d513b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "358b0cda-20dc-4b04-9969-1f68c7d0f150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16c881e-a568-45d6-95b4-db923fac8d54",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ef0b0b-5277-44d3-b2cb-250b318ceda7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ed9a0a2c-bb24-4968-8a55-e9f73f594419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b778a6-9540-4a13-8ee7-ac586057014c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2158fd66-b723-4db4-8f82-8043e9e28473"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96688018-893f-4c81-9f19-b81070481452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e4a9481-0643-4f42-8c9b-7166f09fdfe9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a76457d-418a-4a77-92fb-e7f6406a7f7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aeaec14e-9d25-4c78-92b9-bbc7b8acaa85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48378e16-fcfa-4058-abb4-e6b27f84d1ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "84bf9ee3-322e-436c-af86-1eb646dce2d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8ce36f8-210a-4b9b-95c7-ced1a48a21c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8593a6bf-9957-484e-8a33-567aa40ac8fb"
            }
          }
        ]
      },
      {
        "id": "2705881e-879a-4777-b319-0acbf66fdf09",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5de69231-1392-4377-b2da-a341916c4306",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f45c0a34-9955-4d84-baca-d8e6f1a22868",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75b360b2-8853-44fe-b9a4-dadce768bdfe",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f93f1b-1ae7-4842-bffb-f3e255cbd593",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7fbcd12e-8074-4388-bd4b-bc3a57c4dcb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8020c6a8-7657-46ad-8f4d-5648ba1a0731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "febedc04-41f9-44f0-aa8d-45b8556be077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490e94b1-be7f-463c-9349-90a06754777a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98432995-3c84-4abf-a0a3-512d565a2953",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "10cc27d8-c153-4317-aaba-748e6fbab492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a61c9d5-bdd6-4f3c-8e55-3710d86a028c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "893f7de2-b116-4769-963b-5a9764af7a99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9d93aea-923f-46c3-badf-4f85143c39e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b31c3042-723f-4896-9391-b55d0196774c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5737c967-eed7-4aff-8528-fae032bf67ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eabf182-7e3a-460c-a98f-65bae87bcdab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c60d3b0a-ab32-4460-bbc2-86ebbc5d6377",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "04d743d2-b700-47c1-b21a-d349354d6b69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08fd1944-4402-4720-97fe-0428fc8fbe36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f57c0a98-c5bd-4125-b551-a3d710d47961"
            }
          }
        ]
      },
      {
        "id": "beb57d14-d34d-4eb5-9747-a32704d4f44d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1574572d-8e68-449c-ac87-d31296742ad0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80d4a676-b942-4ca6-949a-d53818e6976e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5220a7c5-8764-4f4d-9ab7-afa2997a7017",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45922d56-3c7b-47d7-9ff6-61ca137f8ec5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "516dab49-680d-46e6-b8f8-58c47b499b78",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 404.0076923076924,
      "responseMin": 13,
      "responseMax": 4729,
      "responseSd": 417.9819189345552,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667350493173,
      "completed": 1667350610553
    },
    "executions": [
      {
        "id": "041016b4-b0fe-4616-97b9-8cccfc937e6c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5cac59b4-1661-40db-8ac7-766d3610c5c1",
          "httpRequestId": "e7099459-ca7b-4be3-993c-42f285001d69"
        },
        "item": {
          "id": "041016b4-b0fe-4616-97b9-8cccfc937e6c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a590817b-f681-4682-ae5b-71051b902ac7",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "fefab59e-4570-4ffb-be1f-25e6c9744fe7",
        "cursor": {
          "ref": "d2bb93d1-10c3-48a0-a26d-431554f08828",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "670a9511-61c7-465f-b0dc-07ca610183a8"
        },
        "item": {
          "id": "fefab59e-4570-4ffb-be1f-25e6c9744fe7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fa267714-0e33-4687-8480-2d279e0f2bde",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "8415e17d-ba9c-4b57-bc23-dff057f3225b",
        "cursor": {
          "ref": "e3e0cf9d-479d-46c1-b863-fd0077062d05",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d13140d9-c410-4895-b2a2-fa5e44ec6147"
        },
        "item": {
          "id": "8415e17d-ba9c-4b57-bc23-dff057f3225b",
          "name": "did_json"
        },
        "response": {
          "id": "cee14ab4-c77e-4bc3-a1f4-bb4cbc9779b0",
          "status": "OK",
          "code": 200,
          "responseTime": 631,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa9ba3d-623c-4fb5-af71-0090036c1574",
        "cursor": {
          "ref": "ec9d0e4a-1f9e-4e82-914e-9d9232ce69a0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3666f46e-0db2-4a68-8a9c-0cf8700b496b"
        },
        "item": {
          "id": "2aa9ba3d-623c-4fb5-af71-0090036c1574",
          "name": "did:invalid"
        },
        "response": {
          "id": "d8beccb1-7007-40dc-865d-20ad97d3af22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa9ba3d-623c-4fb5-af71-0090036c1574",
        "cursor": {
          "ref": "ec9d0e4a-1f9e-4e82-914e-9d9232ce69a0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3666f46e-0db2-4a68-8a9c-0cf8700b496b"
        },
        "item": {
          "id": "2aa9ba3d-623c-4fb5-af71-0090036c1574",
          "name": "did:invalid"
        },
        "response": {
          "id": "d8beccb1-7007-40dc-865d-20ad97d3af22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5239394c-9ce1-419e-ad7e-973e2a7c92d1",
        "cursor": {
          "ref": "31b822a3-1f6b-4952-bacd-e3b16deced55",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e0dcd2c2-cc10-4f55-a97d-4ff6ad9fe50f"
        },
        "item": {
          "id": "5239394c-9ce1-419e-ad7e-973e2a7c92d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fbf0df02-9897-4d4d-acb7-ff76b89dc4e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 471,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb1058b-0a48-40cf-ba50-818a74aef25b",
        "cursor": {
          "ref": "20263bfb-e7d2-431c-bd3b-d2ab5a7ffd30",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eb406155-822f-437e-95c7-742f4af0a1c5"
        },
        "item": {
          "id": "feb1058b-0a48-40cf-ba50-818a74aef25b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ca4c16ce-48a1-4095-b408-7f2c91c58427",
          "status": "Not Found",
          "code": 404,
          "responseTime": 489,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f504c4cd-7436-443e-b15b-e424cebcb672",
        "cursor": {
          "ref": "52c05a35-d695-4351-bc49-52331e3c280b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "087b5fba-6b64-4b96-92d8-659b5a3e9984"
        },
        "item": {
          "id": "f504c4cd-7436-443e-b15b-e424cebcb672",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8598667f-119b-4766-ace0-98c7cf9684e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2586fa-9034-427f-9b52-c1013dce09c9",
        "cursor": {
          "ref": "5c395438-4e1b-4c23-a4ad-1a3c5e766c8a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3ea20028-82a5-4d91-8f21-e3e4e40783e5"
        },
        "item": {
          "id": "6b2586fa-9034-427f-9b52-c1013dce09c9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7f7e1ec0-3b11-45f9-b4cd-e1fd42b2af4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 421,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2586fa-9034-427f-9b52-c1013dce09c9",
        "cursor": {
          "ref": "5c395438-4e1b-4c23-a4ad-1a3c5e766c8a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3ea20028-82a5-4d91-8f21-e3e4e40783e5"
        },
        "item": {
          "id": "6b2586fa-9034-427f-9b52-c1013dce09c9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7f7e1ec0-3b11-45f9-b4cd-e1fd42b2af4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 421,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fc08a7-a820-4fc0-a817-0f1d5b45f62d",
        "cursor": {
          "ref": "3c3ac7c7-c644-4972-92fb-debb836e8810",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "83f717d1-b2d2-4f66-b62f-193591d128b7"
        },
        "item": {
          "id": "73fc08a7-a820-4fc0-a817-0f1d5b45f62d",
          "name": "identifiers"
        },
        "response": {
          "id": "43860e94-eec3-4057-9e6a-f082c472f5b7",
          "status": "OK",
          "code": 200,
          "responseTime": 576,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25522122-2a09-464f-aafe-682e680d8bb5",
        "cursor": {
          "ref": "73a13cf0-3496-469c-a78a-9960b290b498",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35979c34-c16a-4e53-8883-4df710138acb"
        },
        "item": {
          "id": "25522122-2a09-464f-aafe-682e680d8bb5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "666fd8fc-6004-4a05-a934-2b6d4334360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25522122-2a09-464f-aafe-682e680d8bb5",
        "cursor": {
          "ref": "73a13cf0-3496-469c-a78a-9960b290b498",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35979c34-c16a-4e53-8883-4df710138acb"
        },
        "item": {
          "id": "25522122-2a09-464f-aafe-682e680d8bb5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "666fd8fc-6004-4a05-a934-2b6d4334360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ececd32f-4eaa-4bb5-86d5-0469f0a254bc",
        "cursor": {
          "ref": "6fadbf72-f4ed-4bac-bdea-ba16d69086aa",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "67972012-0cf4-41c3-b286-d0ef3829c5f4"
        },
        "item": {
          "id": "ececd32f-4eaa-4bb5-86d5-0469f0a254bc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "163bc944-fcf6-4d4c-bc41-139449780e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ee9d1c-be35-43d6-a3fd-a2dc41d9db4b",
        "cursor": {
          "ref": "55a5fe55-d292-4236-91e3-ae834c49cd71",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "816ef643-0119-4147-a29f-9abb8a1835ec"
        },
        "item": {
          "id": "42ee9d1c-be35-43d6-a3fd-a2dc41d9db4b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "30c8946e-052d-4b97-8fcb-05087d386875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd40494-0a39-42b6-a1da-9a4fd01c1d58",
        "cursor": {
          "ref": "b6d81431-892a-4bc0-b4b5-ce11dd4411e5",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "88ac980d-5414-49b9-9fc3-f65efde07731"
        },
        "item": {
          "id": "6cd40494-0a39-42b6-a1da-9a4fd01c1d58",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3a620938-9833-4ab0-91ab-593ec2ee3a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc0eb8d-f383-4b0b-9956-16a116278a55",
        "cursor": {
          "ref": "118a92a2-0ba9-4219-9b88-4c25394b43fa",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "25665761-68a3-4c3c-9b66-bb7970309770"
        },
        "item": {
          "id": "7bc0eb8d-f383-4b0b-9956-16a116278a55",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3a6c026f-d7fc-438b-a830-846a23e19095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae63c67f-d046-47b2-86ef-aa0c794172c3",
        "cursor": {
          "ref": "a29772f0-7c72-4ebe-ba3c-b22abef19f47",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "44cb24fd-4d3e-4097-b144-edc9480fe932"
        },
        "item": {
          "id": "ae63c67f-d046-47b2-86ef-aa0c794172c3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "12151d27-bf07-4cd4-a674-9262f1f81747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a6534b-747c-4979-b7e8-6d2bedce437f",
        "cursor": {
          "ref": "346cd538-584e-4b87-8b83-330b064c3143",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a3db16e3-5b1e-4ab1-a768-09c01996b5a5"
        },
        "item": {
          "id": "03a6534b-747c-4979-b7e8-6d2bedce437f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0c6d9a5e-0e4b-45c9-b1c8-0ef4ef03c72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7a2baf-517d-41ec-89d1-6e7d1dc5a55d",
        "cursor": {
          "ref": "1b1ac6ea-7ef8-40de-83bf-38756b236499",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5a4fb437-1a36-4ec9-aeed-8e95c4733742"
        },
        "item": {
          "id": "5f7a2baf-517d-41ec-89d1-6e7d1dc5a55d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3829cdc3-995d-4df1-a44c-817ae19fcef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0362f9b2-643e-4de5-9ea4-32397317862b",
        "cursor": {
          "ref": "7a401025-905d-4051-8660-52df395dc7cd",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cafdd79b-26dd-4c48-9595-9cf6cfb60498"
        },
        "item": {
          "id": "0362f9b2-643e-4de5-9ea4-32397317862b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "79c6067c-e644-4f7f-b9d8-c92d3745bced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c0b21a-3dda-458f-ba21-e1c1a96ea895",
        "cursor": {
          "ref": "63e6a754-a2d4-4a0e-a774-8d5f7c9e13dc",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "79eb6114-6133-4c0b-bb6d-b51e325c1a47"
        },
        "item": {
          "id": "b2c0b21a-3dda-458f-ba21-e1c1a96ea895",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "993a1dc2-b402-4f88-99d4-3109bf5347e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce49295-185a-418b-8ebe-2030a31c6cdc",
        "cursor": {
          "ref": "3ee014f8-51ba-4b48-8835-b115e71b7452",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "322cc5b5-532a-4d89-8c07-d8fd5b8c8cdb"
        },
        "item": {
          "id": "0ce49295-185a-418b-8ebe-2030a31c6cdc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d8fc6c14-9efd-4e31-b1c8-22bd801523e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea57dc14-3699-42f0-9936-35329467aa15",
        "cursor": {
          "ref": "eb0a1678-2edf-4d35-b345-33a5e6646658",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "33565547-0925-401a-9bfa-dab22b09f6cd"
        },
        "item": {
          "id": "ea57dc14-3699-42f0-9936-35329467aa15",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "11ecf654-747f-4c63-ab07-fcbd53cbf4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90dc73d-7c26-45b2-baa6-4da03cb7a823",
        "cursor": {
          "ref": "4daa0d6e-eece-4490-b12c-12fa179b6207",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ea6f0027-6234-4c84-8b25-775330d25c22"
        },
        "item": {
          "id": "a90dc73d-7c26-45b2-baa6-4da03cb7a823",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6c69ddde-09cf-49a0-8315-34be218ae874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0c7ff6-de2c-41eb-8d96-077c64da9d1a",
        "cursor": {
          "ref": "15c77b6b-109d-4e3c-a501-4dc636799fe6",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "20a18bd3-5deb-4957-90df-c2de576a3ad1"
        },
        "item": {
          "id": "ae0c7ff6-de2c-41eb-8d96-077c64da9d1a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "490c3161-d179-456c-8a9e-c88ef6711b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dcfdd0-4acb-4f6d-a397-4d1a700c6299",
        "cursor": {
          "ref": "f3eeb6f1-4db0-43f5-8634-c0a7f0f9aead",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dd6e5c6d-0794-43ce-9ccf-cbf857639b0e"
        },
        "item": {
          "id": "b6dcfdd0-4acb-4f6d-a397-4d1a700c6299",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1a96e343-257f-4028-a7ba-7500af1501c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316bfce2-4de3-411d-85f2-15d491e37106",
        "cursor": {
          "ref": "6f710d6b-373d-4cfd-b38b-821e748ba594",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "44099351-6176-4067-920c-1934307b7950"
        },
        "item": {
          "id": "316bfce2-4de3-411d-85f2-15d491e37106",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "77c58e47-3ecb-4b12-b285-d9944a460312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebc4168-d318-4d0d-9670-49d6024bb2f3",
        "cursor": {
          "ref": "2c44855d-e2d9-4a97-8a64-dfdc7915741a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c728c495-f25d-4a09-b8c2-a5073f86f95a"
        },
        "item": {
          "id": "8ebc4168-d318-4d0d-9670-49d6024bb2f3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c8e6e4e2-c0dd-4fb2-9989-b4cdcbcf47ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b5435-afa7-4973-be93-a602c1f9e0b4",
        "cursor": {
          "ref": "87ae046f-119b-40de-8544-dbbf55206a91",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "56747550-27d0-4b13-89be-c43277ed9881"
        },
        "item": {
          "id": "6b9b5435-afa7-4973-be93-a602c1f9e0b4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "38563ef9-330e-4b50-93ba-1bf863403577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe5b7d-a05e-41c9-88f5-a73f81247d6b",
        "cursor": {
          "ref": "14aa1ec5-fa98-4674-9f05-71863a4e171e",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eb55f7c8-ee88-41e3-9aec-82894620fd8e"
        },
        "item": {
          "id": "68fe5b7d-a05e-41c9-88f5-a73f81247d6b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a918b357-a1d4-4ef0-b185-89bb375f2c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc789c8f-18b2-4a0c-886f-e5c839804252",
        "cursor": {
          "ref": "758a6897-91f3-4fdd-9c8b-bd114fe8d55a",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f36605b3-7486-4a27-94e3-717e01a83935"
        },
        "item": {
          "id": "bc789c8f-18b2-4a0c-886f-e5c839804252",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1d644014-abba-4ec0-a581-6d6d02d5fd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0d2f26-4b10-44ae-9b27-c84caa0b2bbe",
        "cursor": {
          "ref": "34ebf23c-23a2-4675-a664-6f09611431c8",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3250849a-7c73-4a20-9d58-9798cf202f95"
        },
        "item": {
          "id": "dd0d2f26-4b10-44ae-9b27-c84caa0b2bbe",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "33c66de5-2df6-4811-9bcc-2ddb3b054360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4373b772-c726-47ea-b7d6-1a6fd68443b2",
        "cursor": {
          "ref": "a9f83879-7075-420a-8ddf-dc348684be5b",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a25b7982-4fce-417f-b385-7589c4b4273e"
        },
        "item": {
          "id": "4373b772-c726-47ea-b7d6-1a6fd68443b2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "41a7e091-19c8-46ee-97e9-d79b8172692a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a2e6d3-59dd-4f08-a6a5-0e26f82cc8a8",
        "cursor": {
          "ref": "0892069a-f4a9-4f9c-89c3-22b38c483907",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1e62bcb1-d92f-4ce4-8993-d2a8028be5f0"
        },
        "item": {
          "id": "81a2e6d3-59dd-4f08-a6a5-0e26f82cc8a8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5b9b6260-2c86-4693-b0e6-87871a3bebbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e01c2-f63a-4014-b952-64350d2990c0",
        "cursor": {
          "ref": "fe115244-c4ae-43f3-b011-f6f61974ff8f",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c6dcd60c-a408-462a-9007-f4ede80758c4"
        },
        "item": {
          "id": "d66e01c2-f63a-4014-b952-64350d2990c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eaa49bfe-b521-4008-a262-1affa29910cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5f68da-54de-421b-9158-3a4c33403483",
        "cursor": {
          "ref": "6f8e19c0-e89d-49f6-a134-6ed3b261a4d2",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f8c02036-0607-4be1-8470-b78f7f0a606e"
        },
        "item": {
          "id": "dc5f68da-54de-421b-9158-3a4c33403483",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "51be9883-894d-4ca5-89c4-dab2c930593a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5d7846-17c9-4292-b20d-c9a00a0336f1",
        "cursor": {
          "ref": "731f5a6b-590a-42fa-8d93-3e0c2b0ef874",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c81238f4-07c8-4db8-a33a-0261f7c5e902"
        },
        "item": {
          "id": "2a5d7846-17c9-4292-b20d-c9a00a0336f1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2f4c52d1-e39e-47e8-ac5d-ed7363652709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba341c02-eaea-43f9-b0c5-93c022adf090",
        "cursor": {
          "ref": "d2dc8334-49d2-4bfa-a0d5-b5238a1903ea",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d08e0258-d790-445e-85ac-45e8a3b1f404"
        },
        "item": {
          "id": "ba341c02-eaea-43f9-b0c5-93c022adf090",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "03895c0e-a974-4bff-b383-4bcc64876d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24711f4-15e0-49da-bcf7-eb5cd4fd2dd7",
        "cursor": {
          "ref": "780c25e5-d035-4ec7-bdca-93c8595c5573",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d123410f-0f32-4daf-b278-a72916719a07"
        },
        "item": {
          "id": "f24711f4-15e0-49da-bcf7-eb5cd4fd2dd7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f1b5e09a-d2d4-4f04-b62a-e15674974aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d64e11-e6cb-480b-8318-0745f7047135",
        "cursor": {
          "ref": "ccf35353-88ea-4a59-9b99-2ce0dfebf7be",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e43b3070-907b-4aa4-a82b-234357493b6e"
        },
        "item": {
          "id": "66d64e11-e6cb-480b-8318-0745f7047135",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eb2e25a4-5525-4ef4-b3be-ed0c4fab9e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220e6dbe-31c3-4b38-8048-f7cbc9662574",
        "cursor": {
          "ref": "72f212d4-698b-4003-b9b6-e89468feae2d",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9655ef49-a522-4a68-b025-e50166b4aa45"
        },
        "item": {
          "id": "220e6dbe-31c3-4b38-8048-f7cbc9662574",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6de9de55-1aa2-42af-a478-2996364ac026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089ca1b7-4ff8-4cd0-b74c-dd72a242afa9",
        "cursor": {
          "ref": "18298d38-09eb-4f6f-98fc-d49a97f8b94b",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "36dcb346-8af2-4b80-b80d-985716785a6e"
        },
        "item": {
          "id": "089ca1b7-4ff8-4cd0-b74c-dd72a242afa9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "970b314d-8749-4e6e-8703-2fb9723d2c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5d3cde-9158-4bf6-a2b8-3403f76739c4",
        "cursor": {
          "ref": "fa9bc9e5-258a-4e29-b3f4-024e73d98452",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c22f0447-1e42-4401-9323-e453d0690aec"
        },
        "item": {
          "id": "4f5d3cde-9158-4bf6-a2b8-3403f76739c4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5a18436e-1613-43aa-8b84-29c8295909b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3524dee4-4aca-4dd0-9481-e6f4ed2aa685",
        "cursor": {
          "ref": "d5db8aa1-67c7-456a-b9bb-32b859ef6a30",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "68b178e9-e4a9-4f43-bb45-84eedd933dca"
        },
        "item": {
          "id": "3524dee4-4aca-4dd0-9481-e6f4ed2aa685",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0bfed66d-f39a-4c10-b4ba-3ce168175e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58679b6c-b329-42d0-a9a9-29c931833f80",
        "cursor": {
          "ref": "f3ab8717-0c5e-4e67-ad61-1c0af7360caa",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "19599944-6834-4ad9-89b2-25ef6d268357"
        },
        "item": {
          "id": "58679b6c-b329-42d0-a9a9-29c931833f80",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9c3b6f79-e36b-4a2d-8094-92a820474347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecd4cd9-8551-4d72-a6de-e7e37d390828",
        "cursor": {
          "ref": "8206262e-a234-4fd5-9a00-4350bbee6d70",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "570b2031-08e9-406a-9073-864df4914d01"
        },
        "item": {
          "id": "6ecd4cd9-8551-4d72-a6de-e7e37d390828",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aef0b5ee-4e7d-4217-bc88-48dd36eac363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486efe44-2e92-46eb-87ce-b4b0fa1f521e",
        "cursor": {
          "ref": "3260ea68-4ae4-41b4-9186-99f43e1ea76d",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "51af49a5-ced9-4450-8520-66fd397e945b"
        },
        "item": {
          "id": "486efe44-2e92-46eb-87ce-b4b0fa1f521e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6fec8394-562e-4a77-b7ba-6fa5e2913961",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 473,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de487f52-269f-459a-bdbf-1a67ba74fcbc",
        "cursor": {
          "ref": "d1df9f0b-861b-487f-8f93-696c92285f72",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0a8f7965-6cfe-40de-aec6-a8576f4f01b6"
        },
        "item": {
          "id": "de487f52-269f-459a-bdbf-1a67ba74fcbc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "86f97c98-fd6d-4005-9a18-e1242cd788ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f1e3c6-20dc-419a-aee6-dac7aeba9fa6",
        "cursor": {
          "ref": "a0cfd401-13c6-42f8-9da8-69a1d7270975",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "70f2fde3-a1de-4cb8-8474-9492b07303b8"
        },
        "item": {
          "id": "e2f1e3c6-20dc-419a-aee6-dac7aeba9fa6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3a416108-bd66-4920-9cda-133768b50767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9e53d5-1965-4e41-9c50-6e9c3212ca87",
        "cursor": {
          "ref": "1035afd4-1d61-4656-9b88-d6c8cd99ed26",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fd76b4c7-3e75-4051-b1e2-0cc86a86a210"
        },
        "item": {
          "id": "7a9e53d5-1965-4e41-9c50-6e9c3212ca87",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3dcaebc0-3d92-4ea9-a01c-441a423df672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbdf5e2-7c83-4b23-acde-f62ee6716694",
        "cursor": {
          "ref": "6d4430be-b528-4176-8c7c-f54e48a1522e",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5fdc904a-6f22-4631-bb95-8ce5d8a98746"
        },
        "item": {
          "id": "6dbdf5e2-7c83-4b23-acde-f62ee6716694",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2a648f36-9a95-4def-bb29-7a5025f5fa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c3fa62-3123-40a1-9542-03de2fd864c2",
        "cursor": {
          "ref": "b738afcd-7820-4448-92a1-2af6c57cd31f",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e6363bc3-2dba-4617-ada0-45de5937bd82"
        },
        "item": {
          "id": "84c3fa62-3123-40a1-9542-03de2fd864c2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "955d37aa-6f53-482b-9306-a06df6109198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ffeb8-ad57-46b5-a8cb-dbf2f960a39e",
        "cursor": {
          "ref": "b5011c6e-7fd7-4c60-b922-df7c957b16ea",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "679fd290-d332-4bab-9f3f-fee15d5e1a15"
        },
        "item": {
          "id": "b33ffeb8-ad57-46b5-a8cb-dbf2f960a39e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "31e464b8-8382-4b54-a51d-f870dd705804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5553836-ca9e-4ac8-818f-4ef91332863f",
        "cursor": {
          "ref": "aa129663-cdac-44ff-a29b-666d827d8b5e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0f040253-8640-4310-b169-9af3ebc16976"
        },
        "item": {
          "id": "f5553836-ca9e-4ac8-818f-4ef91332863f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "04ea5206-7361-4b4d-a9ca-fd0d3f032dd4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 519,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c593dc-2cfc-4703-ad5b-34978ba525e1",
        "cursor": {
          "ref": "941a72c7-090c-4786-b681-cea650bd6654",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0cb6d18d-f5ee-4267-95ed-64d1f76cc3a5"
        },
        "item": {
          "id": "45c593dc-2cfc-4703-ad5b-34978ba525e1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "57aa9a08-f518-41a5-ad66-c7c622cc6491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e95fdc7-aa67-4353-9b8b-ff39f9f0291e",
        "cursor": {
          "ref": "55392fbb-f482-4773-9f22-eb6dc6fe8da6",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "50103c18-3040-4e79-9a49-1b350c0f0ec1"
        },
        "item": {
          "id": "1e95fdc7-aa67-4353-9b8b-ff39f9f0291e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bccee544-d164-46df-b801-2aa6fba3d876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa7a7da-2df6-4d0b-bbd8-258ece08eaf6",
        "cursor": {
          "ref": "4dd4ddaf-7a45-4310-a4b4-1e8027bbd7c5",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dcfa3405-4558-48cc-b602-2e39f90db9d3"
        },
        "item": {
          "id": "4fa7a7da-2df6-4d0b-bbd8-258ece08eaf6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "94b49352-8ecb-44f7-9aa9-f8708ad3364c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcacc57-e570-447c-ba77-2334ca33fb15",
        "cursor": {
          "ref": "1ac32f03-b51a-4366-a9a4-a291cef4476d",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0395d8df-bc62-495e-bccd-555cb500aeac"
        },
        "item": {
          "id": "3fcacc57-e570-447c-ba77-2334ca33fb15",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ffbb74e1-05f0-4d6c-abe2-df98ebc2a618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7f9625-0dcc-4672-b379-b3464672e36d",
        "cursor": {
          "ref": "59551986-d601-47aa-84b9-aaa80ab8977a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "512ea1b7-bcbf-4f2d-ab3a-9e1aa649278e"
        },
        "item": {
          "id": "ee7f9625-0dcc-4672-b379-b3464672e36d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "35879496-b86f-4b4d-9df5-95327484b37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dddd2df-7556-4969-932b-d1ec88e44d03",
        "cursor": {
          "ref": "0a0e7deb-e523-438e-bd07-b8396ce3c0c1",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "619f0a13-33ec-4d50-a37f-ded961c9b5d0"
        },
        "item": {
          "id": "7dddd2df-7556-4969-932b-d1ec88e44d03",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3f8f6725-1a1b-4009-aaf2-f5282ab27585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db7cdc3-ac3d-4aa1-a498-e7228134c0e8",
        "cursor": {
          "ref": "43c7312d-65c9-4f9c-a993-a84a1664eb1d",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0b46d368-100d-42f4-a4c5-34cc1dfbf10e"
        },
        "item": {
          "id": "4db7cdc3-ac3d-4aa1-a498-e7228134c0e8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2a0461f5-874a-41f6-906d-4b83eaf8ec41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01a720c-dd6f-4a6f-9d45-22c8003e8ac2",
        "cursor": {
          "ref": "1b41167a-5bea-4423-b8bf-99ac840a378c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ec814b2c-33c8-4219-a074-d2f57f729947"
        },
        "item": {
          "id": "c01a720c-dd6f-4a6f-9d45-22c8003e8ac2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "89f4a9ca-2330-46af-b19a-5688c4111e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5d2810-ecb1-4e1d-81f6-69ceb992247e",
        "cursor": {
          "ref": "8e46bfb0-c87f-49c1-8d43-b9d298788f58",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cf2f7914-f953-4080-9f84-db729ccd62e7"
        },
        "item": {
          "id": "9f5d2810-ecb1-4e1d-81f6-69ceb992247e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "00c02bdc-ccd2-413e-9ae5-48ce1e60d5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657370fa-a5f1-49b2-84bb-68fefd86bdb3",
        "cursor": {
          "ref": "4b90d397-fe37-45c5-b639-17ae50fbfa0c",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e567cf2e-7447-4bed-915f-ae5a9b80a5b4"
        },
        "item": {
          "id": "657370fa-a5f1-49b2-84bb-68fefd86bdb3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "52697135-fa44-4e05-a482-4c94c3fb261f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656dce46-9a5d-47a7-bc4c-8be5d7fc8c10",
        "cursor": {
          "ref": "27beee3e-ad8c-47eb-9805-0b903261491f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d3c2c028-37fa-49b3-ab65-57a260ac79d3"
        },
        "item": {
          "id": "656dce46-9a5d-47a7-bc4c-8be5d7fc8c10",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "948c4955-c4b9-400e-ac73-5fcb8a099670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5a2866-3b75-42f7-8c56-db9ae6dbb2e3",
        "cursor": {
          "ref": "8dc65f1a-922b-4de8-bfcc-3b2b508f5635",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a66a437c-ae66-4c8f-a68a-45219215656b"
        },
        "item": {
          "id": "3d5a2866-3b75-42f7-8c56-db9ae6dbb2e3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ad76562c-b57c-4936-9af5-20fac59b69eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a56af88-8e57-4660-815e-db0b13a54491",
        "cursor": {
          "ref": "e1fc8879-fff2-4c88-aabe-bd1223f26216",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3a756365-0434-4022-9ab9-4e16d1fb8f07"
        },
        "item": {
          "id": "5a56af88-8e57-4660-815e-db0b13a54491",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "11ef56f5-8c1a-4c2d-8744-4c84d8611bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db2646b-e056-42c4-b354-c257aa0ee5bb",
        "cursor": {
          "ref": "3096f13d-0059-407b-a9f9-fbb282e9c87a",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b9ff3c71-2809-4e13-af6a-2a0dd90059b8"
        },
        "item": {
          "id": "4db2646b-e056-42c4-b354-c257aa0ee5bb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "97798c39-6f30-40ff-a34b-c3f5c85ded3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724e84b2-1055-4248-a09b-e34936ace387",
        "cursor": {
          "ref": "bf445c8c-acd2-4520-a757-a71301a77a61",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "717daf9a-0135-4e06-8429-95c6e6eb1d04"
        },
        "item": {
          "id": "724e84b2-1055-4248-a09b-e34936ace387",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "55eddcc0-3eaa-4d73-a3b4-290f8813b380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd81c1b-e0c6-4aee-8e9a-5d20c5610d31",
        "cursor": {
          "ref": "82872051-e87e-4eec-9dad-cffe2996c706",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2c52d8dc-0546-4b07-a3cd-8cf8ee113e59"
        },
        "item": {
          "id": "5dd81c1b-e0c6-4aee-8e9a-5d20c5610d31",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "da414fc3-bdfd-4003-99a7-36666e3a3413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7bd33b-cd7a-44d3-8d1b-e84efab63edf",
        "cursor": {
          "ref": "c9cf8aa9-062c-49f0-bf4f-5d29d67d9a67",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5e292854-6467-4504-903d-b04ee3eb3540"
        },
        "item": {
          "id": "9c7bd33b-cd7a-44d3-8d1b-e84efab63edf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5561390c-3b14-4616-b07e-bc8f123e79a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89984fc0-1307-42c1-a54b-d6606d28383f",
        "cursor": {
          "ref": "0803d673-5c56-4785-ace7-a97f977f2341",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "29f8feba-455a-4ec8-8542-d275e8f34f63"
        },
        "item": {
          "id": "89984fc0-1307-42c1-a54b-d6606d28383f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a8bbf584-747e-4f97-8973-3988a8b2137b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55306c7-9035-47a5-822f-19c1023b6609",
        "cursor": {
          "ref": "df4e6113-e444-4856-8c4d-65ffd5668dae",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b58f0078-b80c-4fcc-b28b-27f1e45f2346"
        },
        "item": {
          "id": "c55306c7-9035-47a5-822f-19c1023b6609",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "af425aaf-9280-4b2e-8b52-08db9b6f5b17",
          "status": "Created",
          "code": 201,
          "responseTime": 1728,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "6bbe1c40-ba6d-42df-8cae-7ea6f888472f",
        "cursor": {
          "ref": "371309c1-fbd8-43e0-a16f-95789e4524da",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "259624df-f27b-4690-86ad-7e811d64f536"
        },
        "item": {
          "id": "6bbe1c40-ba6d-42df-8cae-7ea6f888472f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6a9a20e5-5a1b-4052-bd91-27bb4348a7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288362b5-b077-4e26-bde5-37d0859d1b53",
        "cursor": {
          "ref": "2b8d0a22-e27e-4f20-9fe1-802b8be23e95",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "62d8af43-5c27-4e36-9599-63acc539f850"
        },
        "item": {
          "id": "288362b5-b077-4e26-bde5-37d0859d1b53",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "85358a5b-e0e3-4cd3-bcb6-56bb9bdbda4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68140bfd-5600-4423-95fa-f3d7e8825246",
        "cursor": {
          "ref": "d27ab827-a988-4114-97fc-f9039cfb0110",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dbb2e609-0366-42d8-984c-a2b6eaf8cd3d"
        },
        "item": {
          "id": "68140bfd-5600-4423-95fa-f3d7e8825246",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e2fa309e-8aff-4b56-b1dd-6e4671f15d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b4ef8b-92fb-4c0e-aca0-58a403802c8c",
        "cursor": {
          "ref": "87acc581-081e-4f1a-b217-587a4ea16225",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1c69ab64-df36-483d-87d4-848ebe063820"
        },
        "item": {
          "id": "32b4ef8b-92fb-4c0e-aca0-58a403802c8c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d673500d-ee74-43f9-acaa-e7fcf9b38b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5387dc3f-38a9-4dd2-b52d-bcbe3e731ab4",
        "cursor": {
          "ref": "e523f899-3e25-4ed9-845b-7553564266c9",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b9dd8a34-6df2-4826-bc5f-9ef713b4416c"
        },
        "item": {
          "id": "5387dc3f-38a9-4dd2-b52d-bcbe3e731ab4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3d28921e-b2a3-4897-a5f2-3a3a27c5ae1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96604f5-3f97-4501-af8b-05b6ad0cbd74",
        "cursor": {
          "ref": "278059b9-5aff-4f8b-b2bf-e2eddc31f964",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "79e7fcbb-9e2e-4ce8-8c53-b9c07c770117"
        },
        "item": {
          "id": "d96604f5-3f97-4501-af8b-05b6ad0cbd74",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f453d68e-f9ec-4ab6-be41-d701b8d4cd5b",
          "status": "Created",
          "code": 201,
          "responseTime": 1657,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "02112e09-a299-4268-a988-ddb60a0f2e09",
        "cursor": {
          "ref": "03b25953-9dea-4c8a-9397-6ab732bedb4a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e965befa-44ac-4cd1-bc4e-612ba5827724"
        },
        "item": {
          "id": "02112e09-a299-4268-a988-ddb60a0f2e09",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bd7d1ea4-3913-4109-8cb9-144af1259146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c25d8e2-21f8-4a7b-9d91-68d894363472",
        "cursor": {
          "ref": "547ec3fd-3706-42e1-9207-dd62111561a9",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e81abb67-c937-4c95-bf45-d8006b6fc32b"
        },
        "item": {
          "id": "5c25d8e2-21f8-4a7b-9d91-68d894363472",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "33376868-93d1-4c93-a659-4e973f43f204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825cf9d8-de6b-40dd-b469-8e2db427a605",
        "cursor": {
          "ref": "8ce8a67f-e8cc-43c8-a696-12be854e7f36",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "45074cfd-e3a0-4843-b815-330cc80a47e7"
        },
        "item": {
          "id": "825cf9d8-de6b-40dd-b469-8e2db427a605",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ff1068c7-2ca2-485e-82e7-e8e98537ab27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0320f9-1c5f-4373-894e-df9c993c17cd",
        "cursor": {
          "ref": "93b695f6-5948-4ec2-8321-f0459db05ca6",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f5681309-96e1-481d-ae92-d51efd02ddf5"
        },
        "item": {
          "id": "4c0320f9-1c5f-4373-894e-df9c993c17cd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bdbb8374-ccf5-47dc-a3b7-fe234e9f237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550b62e7-c301-4792-87ab-992240caeeda",
        "cursor": {
          "ref": "fb0c9e6a-c7d0-4e9a-a293-e2742bbb1d6f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f7c199a8-5c48-4daa-89d7-9210f61ca6dc"
        },
        "item": {
          "id": "550b62e7-c301-4792-87ab-992240caeeda",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0624eb69-f77e-454e-8bc7-201166fbc3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d0e159-4fb5-452c-a49b-311dd954697c",
        "cursor": {
          "ref": "ef4c025c-2079-42ff-8bbe-737e7a951452",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7b01df2b-ff27-4b0f-9d23-17baabc6e22c"
        },
        "item": {
          "id": "c8d0e159-4fb5-452c-a49b-311dd954697c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f21a692d-7212-4717-80af-11dc2161d6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2344fd09-6f46-454a-bb57-376efaaff9e1",
        "cursor": {
          "ref": "219bbe35-6168-48d7-a75d-b71750c83ff1",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "eaa498cb-2057-4114-9e07-d8eced925b44"
        },
        "item": {
          "id": "2344fd09-6f46-454a-bb57-376efaaff9e1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4e5e355c-1153-42f5-93e6-1b263aa9987b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afc3b52-8e4b-45c1-b0af-2934c3975a8f",
        "cursor": {
          "ref": "ed251549-fd01-46e1-aca9-629d40ca5fa2",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "55b8eeba-a042-4edb-b23e-26e5d54e162e"
        },
        "item": {
          "id": "1afc3b52-8e4b-45c1-b0af-2934c3975a8f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fd17eecd-2cb8-46e3-854a-912663805857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d406fd-7ac3-4701-bbb2-d69b93fad6c8",
        "cursor": {
          "ref": "27fd30fe-9624-415b-aed4-5b8f52b52b2a",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "72c0f33b-48cb-472a-871f-13e71198be54"
        },
        "item": {
          "id": "85d406fd-7ac3-4701-bbb2-d69b93fad6c8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "54f1264b-3fee-4680-8fe9-6ee1f553c665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8934c200-6215-457f-9e09-186475efc0be",
        "cursor": {
          "ref": "5fa740da-559b-4a4e-b70d-f22314744a69",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2f6e86da-b3bd-4793-a1da-549097450715"
        },
        "item": {
          "id": "8934c200-6215-457f-9e09-186475efc0be",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f274a574-9e1b-43ca-b63b-dcfc0fa7d98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bfe207-960e-42fa-ae67-d90d05ca0c02",
        "cursor": {
          "ref": "4ed3842f-5afe-40d3-ba26-df4ae2164fff",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e7fd38d8-ba0c-4154-bfb1-70b7f6808e96"
        },
        "item": {
          "id": "81bfe207-960e-42fa-ae67-d90d05ca0c02",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6b68b1a8-1efc-4f1c-8165-269735ea8dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a536fcb-8af1-424d-8f26-677108d96cd7",
        "cursor": {
          "ref": "0adb7604-4877-4a76-adf8-dd34a2985014",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a7bca1a0-0d43-4761-a8b5-2313c714f6f9"
        },
        "item": {
          "id": "7a536fcb-8af1-424d-8f26-677108d96cd7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8bbfb5ed-4b15-44b6-ac00-d57b5500c3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1fcf1d-547f-4687-a662-eeb20cefad04",
        "cursor": {
          "ref": "34b660df-7280-474e-b231-b9c7bcde98cf",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fc18d93f-6bc7-42cb-b7bf-09c849801ff5"
        },
        "item": {
          "id": "4b1fcf1d-547f-4687-a662-eeb20cefad04",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6091c851-3355-48b5-9e84-8d12c639165d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c985fbb-a555-49b3-8568-9fbd1d60413d",
        "cursor": {
          "ref": "675599bd-8b24-48f4-bb60-2edf43940534",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d995d5d4-e51f-4290-96ff-94006dfc47a4"
        },
        "item": {
          "id": "9c985fbb-a555-49b3-8568-9fbd1d60413d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "63764929-f633-413a-9e18-79a3bce69baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54827391-de4f-4fdd-8b84-7b5b35fcebd7",
        "cursor": {
          "ref": "89a48db3-ea61-425c-a30c-e12e3889cf78",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dd56ae15-edbc-4019-99a5-18dc958bdae7"
        },
        "item": {
          "id": "54827391-de4f-4fdd-8b84-7b5b35fcebd7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6f5229c4-eaf6-43c1-b965-ff0efb0d5156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b05b63-cbcf-4786-8abb-4dc06159d223",
        "cursor": {
          "ref": "c60f2fd8-40d0-4bc2-98fe-c52ac6983580",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ea857eb4-a6f8-4d3e-b941-7618d4246171"
        },
        "item": {
          "id": "e9b05b63-cbcf-4786-8abb-4dc06159d223",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ac6ca033-f643-46f0-98ce-c95ec7e5cd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8042598-cf33-4616-8474-d3070e7e7023",
        "cursor": {
          "ref": "38e23938-d59f-42a7-9d75-ba0636392dc4",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "30a60dc3-8d9d-40a5-a843-6c4acd823d7b"
        },
        "item": {
          "id": "b8042598-cf33-4616-8474-d3070e7e7023",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ff11b8dd-14f7-4ffb-8b6a-87ddea6cb35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c959d245-1da2-4f5a-b267-2684d7f8e03c",
        "cursor": {
          "ref": "cda5ff1f-c296-4943-9fe9-849f25a5f85b",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6b849bf1-4f31-4b7f-8e6d-12873241bb5d"
        },
        "item": {
          "id": "c959d245-1da2-4f5a-b267-2684d7f8e03c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a699650-0e26-4136-9e72-20991fe9b227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301ec974-74ee-4056-be91-4536605afe6a",
        "cursor": {
          "ref": "3c3bc3a2-b8ab-4fb1-b2d7-9f404206e176",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "620db8f8-dd73-4c6f-9352-6727c259b293"
        },
        "item": {
          "id": "301ec974-74ee-4056-be91-4536605afe6a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e9f4e06e-6048-40e6-89e1-fb59ebf0dd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943b96cb-bafe-4995-a674-d769b36467d2",
        "cursor": {
          "ref": "b0485f00-9e32-4ec6-8a51-d2a0e5e9e9d5",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c77c8427-35aa-489b-8ca2-5d8f8adbcfb8"
        },
        "item": {
          "id": "943b96cb-bafe-4995-a674-d769b36467d2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "368c8b6f-3a53-495f-8adc-1656659d2334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627896ac-fa8b-42ef-9f18-5ec20329dae2",
        "cursor": {
          "ref": "f9758236-e4b4-4b46-8124-2a600f50595c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b6a6b178-9058-44a5-a454-7241d164d836"
        },
        "item": {
          "id": "627896ac-fa8b-42ef-9f18-5ec20329dae2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "27b70c20-1638-4f0f-a849-e662cb9aef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4980b743-163a-4666-8f23-f6ac6ceb301f",
        "cursor": {
          "ref": "53c251de-573c-4d1e-a718-a4369af619d8",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cf4cfc50-8d63-46ce-b6f0-674da280160d"
        },
        "item": {
          "id": "4980b743-163a-4666-8f23-f6ac6ceb301f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1a381e5e-9e72-413d-a5d9-72749697f016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba27a032-26e2-4476-8001-eeaa0b3fb741",
        "cursor": {
          "ref": "e18df0c8-6cac-425e-be75-73b7d763f9b7",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dcf3d4a3-7018-4d9e-9f32-39f29f2dff3a"
        },
        "item": {
          "id": "ba27a032-26e2-4476-8001-eeaa0b3fb741",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fe50078f-e075-4b79-9e4e-908fed623940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811e98ec-2d59-4c2e-b790-b364babd34a8",
        "cursor": {
          "ref": "7d421c4a-2453-4881-a596-0a9c9753ad13",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a1e5c4cb-5295-4e16-8a68-5731544d9d0f"
        },
        "item": {
          "id": "811e98ec-2d59-4c2e-b790-b364babd34a8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "292afb46-8ef7-4463-abb3-583a4e269abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e48f189-f44b-4554-9495-05866669960d",
        "cursor": {
          "ref": "06cfa824-128d-4ff7-84db-29659df58694",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0a00d64b-3ec8-4fa1-93b9-030ae064c6d3"
        },
        "item": {
          "id": "5e48f189-f44b-4554-9495-05866669960d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f795929d-4695-4e77-8549-dda963743223",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e1441c-2071-4b9b-b774-edb1a0239e8c",
        "cursor": {
          "ref": "e333c678-bb90-4d29-875d-e579a40c3455",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "44739ad5-bb63-4b4b-bdb4-7308231daece"
        },
        "item": {
          "id": "59e1441c-2071-4b9b-b774-edb1a0239e8c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9829998b-1672-4bac-acd3-ebd9b6f0a7e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 394,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981c638d-9167-4ac3-a72e-4f171acf9ca6",
        "cursor": {
          "ref": "031a5a6c-50f7-4490-bde2-fa08effa8b88",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c8d53f47-fe62-4d7c-9d41-70c2304ce1e8"
        },
        "item": {
          "id": "981c638d-9167-4ac3-a72e-4f171acf9ca6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ca62985f-37e9-4597-b476-2d696d9a4467",
          "status": "Created",
          "code": 201,
          "responseTime": 1694,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e81ccaa-0a67-4221-a4b2-f69ce1a59f37",
        "cursor": {
          "ref": "0d08b6f1-7cbc-4e71-980b-a074db7c6ff7",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "962555ff-47ea-44da-8377-5a21282ca989"
        },
        "item": {
          "id": "3e81ccaa-0a67-4221-a4b2-f69ce1a59f37",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "121b3423-28b4-49c4-9780-7b1578c76d1c",
          "status": "Created",
          "code": 201,
          "responseTime": 1689,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257b1572-b4dc-4c69-8aea-6a5c9fc00dc2",
        "cursor": {
          "ref": "80d4fa32-cb77-4568-8fb0-74a8c8c86c7e",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0b31c017-509c-4a3d-a719-ee49634cc4ff"
        },
        "item": {
          "id": "257b1572-b4dc-4c69-8aea-6a5c9fc00dc2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ae4df547-c09f-4298-b607-83847c235d3b",
          "status": "Created",
          "code": 201,
          "responseTime": 1730,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6fbc8e-05ca-4959-9a30-4227aa9f26de",
        "cursor": {
          "ref": "de37f2dd-3e7f-442b-97e6-b1e876562d5a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "407645da-417a-4494-b19b-5291df878741"
        },
        "item": {
          "id": "6f6fbc8e-05ca-4959-9a30-4227aa9f26de",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "47be1857-5f06-4c3a-9ad9-87ee63e156c4",
          "status": "Created",
          "code": 201,
          "responseTime": 1815,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eff98fa-882a-4932-b6e4-bff236bb6b98",
        "cursor": {
          "ref": "a5b71806-e46f-4d30-ba92-afeb1cfb6a60",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b93f781e-61b7-403d-8ba4-2adcc89ae1a8"
        },
        "item": {
          "id": "1eff98fa-882a-4932-b6e4-bff236bb6b98",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "88e637b2-6a42-48db-82af-1054ef16ee55",
          "status": "Created",
          "code": 201,
          "responseTime": 3446,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72ab2a4-98c3-4d2f-84c3-b2adfe5fc3df",
        "cursor": {
          "ref": "1dc96199-e426-43ca-bb6b-bea93ebe761b",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9fda396e-36e5-443c-97cb-ee4eb93dae51"
        },
        "item": {
          "id": "b72ab2a4-98c3-4d2f-84c3-b2adfe5fc3df",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1e6b473b-fb78-48be-ab7d-02f004c899ea",
          "status": "Created",
          "code": 201,
          "responseTime": 4729,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5569b688-c407-48d7-a3d5-95bba9ca6423",
        "cursor": {
          "ref": "d9c5175d-0c22-4b21-9064-b55f0cf31ad0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a6959205-ed5b-4ae8-bec3-5e7d923bc509"
        },
        "item": {
          "id": "5569b688-c407-48d7-a3d5-95bba9ca6423",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "45c8fa14-27da-4417-94b5-8285b959eb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5569b688-c407-48d7-a3d5-95bba9ca6423",
        "cursor": {
          "ref": "d9c5175d-0c22-4b21-9064-b55f0cf31ad0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a6959205-ed5b-4ae8-bec3-5e7d923bc509"
        },
        "item": {
          "id": "5569b688-c407-48d7-a3d5-95bba9ca6423",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "45c8fa14-27da-4417-94b5-8285b959eb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2845d028-045d-4518-bb52-13e5fc782b53",
        "cursor": {
          "ref": "57952c0c-501c-4a38-9748-5a61964cacdd",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5e77570-6d76-48c8-85c9-9239380a345e"
        },
        "item": {
          "id": "2845d028-045d-4518-bb52-13e5fc782b53",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0a4d10c5-6456-45a4-b5d4-4b7b37fb27ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c44b9f7-9447-410e-80a1-c47835a2bcc2",
        "cursor": {
          "ref": "b13f801f-b2a3-4186-9a38-ca520e3176b9",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5d7b610a-a533-4903-9e60-4dd0df0334f9"
        },
        "item": {
          "id": "3c44b9f7-9447-410e-80a1-c47835a2bcc2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3247d9c7-15f2-4c2c-8e8e-d543bf9495a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faefff7-26d9-48d1-850e-543c32167690",
        "cursor": {
          "ref": "a6612a3b-9906-4c54-9b16-3068c380e6bf",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "48b1cd4d-5d2b-4c8d-8d9f-844f6323e98e"
        },
        "item": {
          "id": "5faefff7-26d9-48d1-850e-543c32167690",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bf67abdd-56d6-4204-b463-512dcbf8f2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0c4b09-ae28-4654-a9af-5af6ef155742",
        "cursor": {
          "ref": "b004f0c4-049c-4c5a-8314-3addedbae63a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4767eb79-3992-47a4-862c-d8afa0472dac"
        },
        "item": {
          "id": "ec0c4b09-ae28-4654-a9af-5af6ef155742",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "408e1cb5-a3a9-4725-a5a5-e7e317283f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9b6e69-6b23-41b8-8609-7259ed311af1",
        "cursor": {
          "ref": "1fa58c24-01f5-4a62-bac9-31a8b8b4bf98",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bfb51c29-53fe-4d97-b59d-9c07ae254256"
        },
        "item": {
          "id": "7a9b6e69-6b23-41b8-8609-7259ed311af1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0724f51f-970a-4391-a6b3-547ba7b10799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1ce712-1dde-4bed-9bcc-a13889f02a18",
        "cursor": {
          "ref": "8ba70943-f9eb-4a68-b50e-3f115b369364",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ae7a2926-7db6-44a8-b65c-9da66b75ac74"
        },
        "item": {
          "id": "6d1ce712-1dde-4bed-9bcc-a13889f02a18",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "60c718d4-1f66-490a-b5b7-4f3afc89cefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d9ba59-4c42-46cd-b571-75440f8130d2",
        "cursor": {
          "ref": "461a0715-8e02-45d2-be36-c97df0c16f24",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1370c379-5577-4812-be54-7adbfd993648"
        },
        "item": {
          "id": "84d9ba59-4c42-46cd-b571-75440f8130d2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c1b72d1a-94dc-4958-bb3e-75534822aa51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a9419f-e434-4eca-8f6e-03798d52ec02",
        "cursor": {
          "ref": "88527d74-dd7c-41a7-9b54-7584b509f8a3",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1f9a7543-8d62-4f21-9228-9ae0939cc8e5"
        },
        "item": {
          "id": "24a9419f-e434-4eca-8f6e-03798d52ec02",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a47c17dd-94ae-4ddb-8650-add1224eb48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7053390b-2a57-4df0-abef-f828f0f77371",
        "cursor": {
          "ref": "ef304a21-a29e-4e39-8e93-f4df595aba38",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "73d531f3-4e44-4db2-bb5b-d9d6097a74ed"
        },
        "item": {
          "id": "7053390b-2a57-4df0-abef-f828f0f77371",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6382460c-4487-42c5-8004-e4dff8f0a6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9da649-3805-440d-89c5-1bf14953c07f",
        "cursor": {
          "ref": "8128ded2-f92b-47ab-9602-54ca5378d41f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1967ebb0-dbbb-4f73-8c01-a844bc5e9f41"
        },
        "item": {
          "id": "dd9da649-3805-440d-89c5-1bf14953c07f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "877a3e22-5cb3-4516-876e-2f1f9b25a491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c87ba07-3b12-44c3-b12d-6c5f5433453b",
        "cursor": {
          "ref": "5ff2c0a8-a95d-4d8a-bf2d-5ae0f0760595",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "243ed6c2-5dbb-4ccb-b055-e5839465139d"
        },
        "item": {
          "id": "7c87ba07-3b12-44c3-b12d-6c5f5433453b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "998f4d29-5eb8-416c-8401-37f90cce4a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9788f05b-72e9-4639-8041-7e7b5c3b890e",
        "cursor": {
          "ref": "95834777-1809-4b3f-89e7-41cb88843af2",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3b70bb6c-bd28-4cb5-9fa1-88da21450bf8"
        },
        "item": {
          "id": "9788f05b-72e9-4639-8041-7e7b5c3b890e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "01638d7c-e2fd-46e9-b248-e03fd6e07d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faa95f0-a0d2-43f7-a206-7fc74cfbc8c4",
        "cursor": {
          "ref": "31c03c6f-9215-46e7-8117-04fd6cc01f6e",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5295e77d-2e0d-45b5-95af-c08746e87711"
        },
        "item": {
          "id": "8faa95f0-a0d2-43f7-a206-7fc74cfbc8c4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d6bf0013-2cf6-4c4c-bff0-5c482d9d0d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3efe57-9fad-46b6-baa6-a998792938f8",
        "cursor": {
          "ref": "c3cd894d-b2f0-4987-80eb-f85b8501686b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5cffe67a-7326-42a0-bbf5-76ccd5068b01"
        },
        "item": {
          "id": "2e3efe57-9fad-46b6-baa6-a998792938f8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "99e77d81-a701-48b7-9d2e-53951fae509a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616878ab-ce98-40dc-9554-bb14c88f3cbb",
        "cursor": {
          "ref": "de57e141-67ee-4168-9689-e187939f3141",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3d0d7b0e-274d-44f2-978a-696191cb61ce"
        },
        "item": {
          "id": "616878ab-ce98-40dc-9554-bb14c88f3cbb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6884d9d1-2246-41a5-896a-afa515e69196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d260bc8-02a1-4358-ab76-1e27dd46c65c",
        "cursor": {
          "ref": "71004683-8bbe-4d86-bfa2-e1cd9af31ac6",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0cb2fe46-427b-4092-ae68-52b6234467e6"
        },
        "item": {
          "id": "4d260bc8-02a1-4358-ab76-1e27dd46c65c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "16cb68af-bc1d-4d89-8811-7dfed3e951ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1a7397-39d8-4015-86cb-5bdf4ee96aba",
        "cursor": {
          "ref": "68df95df-d809-40cb-8fee-5acea1954d8a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d55c55eb-cc62-473c-9689-c33aee950ac7"
        },
        "item": {
          "id": "0f1a7397-39d8-4015-86cb-5bdf4ee96aba",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e02cca25-d52d-41fa-94c1-d89f25e774bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42d7810-7ed1-4d84-8e7b-fd12099de1e4",
        "cursor": {
          "ref": "a3de58a6-00b7-4345-8ea7-477f440071e5",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "846a34d7-fd0b-4c71-8753-e97685952077"
        },
        "item": {
          "id": "c42d7810-7ed1-4d84-8e7b-fd12099de1e4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ee606bb5-883f-422d-a497-b5f62af93bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44da053-ca1e-47bc-9322-40069d359cf6",
        "cursor": {
          "ref": "e4790907-0fdb-4e34-adbd-d29c867b09c1",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8307b982-f6d4-4657-8c97-6ff6cca6f55e"
        },
        "item": {
          "id": "f44da053-ca1e-47bc-9322-40069d359cf6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "14200e84-787f-4826-b5de-f7fc488f8fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c65e0e4-cdcf-45ee-a417-55aaeded55b5",
        "cursor": {
          "ref": "ebaf2884-b53c-4c9a-84cb-e5e7111f96f4",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4f56a654-b60b-4e26-909b-0a0e9871f6d2"
        },
        "item": {
          "id": "8c65e0e4-cdcf-45ee-a417-55aaeded55b5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d28f83b0-da7d-4b1b-8335-578bb990f8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfa3671-35e8-4e5e-a716-9aad2df5a6c6",
        "cursor": {
          "ref": "f3e0e960-745d-4378-95df-18eb9d4f381a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "465196b1-b307-4ef5-b941-1687ba8621a5"
        },
        "item": {
          "id": "dcfa3671-35e8-4e5e-a716-9aad2df5a6c6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "92d5b57e-e23d-4852-a1ef-997f54ac50ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d978daae-f6e6-4472-8ef7-4c34060b723e",
        "cursor": {
          "ref": "20ccaf0e-79b1-4207-8756-8fa289da3a2d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "97049269-364d-4219-8f0b-50dbf6da3931"
        },
        "item": {
          "id": "d978daae-f6e6-4472-8ef7-4c34060b723e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5d0a2536-fb69-482c-98eb-7dc01765bc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b523d7-23b6-4be3-8ee9-5b9fbc5db507",
        "cursor": {
          "ref": "efc5d98e-17c4-46cf-af29-92b31e01977d",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fb47e3dc-7e87-485c-9e4f-24bde978faeb"
        },
        "item": {
          "id": "e5b523d7-23b6-4be3-8ee9-5b9fbc5db507",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a75bdee9-ec19-451d-91ce-ee82ec1bedf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f446d9-dd38-492b-9030-482d7fdc3e3f",
        "cursor": {
          "ref": "9607beaa-b5e2-44ba-af3a-0e54f544f696",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ce782581-4e67-44f6-b78b-0333e5b8d2c4"
        },
        "item": {
          "id": "e9f446d9-dd38-492b-9030-482d7fdc3e3f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e47e3383-c613-4751-8e2a-906fa6604886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fa8ceb-a042-46f7-8b78-f94e3bbcffcb",
        "cursor": {
          "ref": "db4cf5a6-13f7-4bf1-be25-5c6f2975359b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "94951ead-eb9e-460f-96df-8d60876baf23"
        },
        "item": {
          "id": "69fa8ceb-a042-46f7-8b78-f94e3bbcffcb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f7af1f1b-b5cc-489c-955f-f69581d9f268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d2af9e-e381-4487-ad6f-92787fd3e251",
        "cursor": {
          "ref": "f9eea41d-bb50-48d3-8df0-01814954af1d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "285bc799-b3d0-4ac6-ac45-468271c6932f"
        },
        "item": {
          "id": "90d2af9e-e381-4487-ad6f-92787fd3e251",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3d7f2f38-b911-413c-b974-56c8832aa390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0026617-1bf2-41ae-acd2-b0599d4501d9",
        "cursor": {
          "ref": "1337697f-1ff1-45a6-b5ea-030f84007532",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b0384d80-ccd5-4957-ae35-60a7e7037fe4"
        },
        "item": {
          "id": "e0026617-1bf2-41ae-acd2-b0599d4501d9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "86303790-18c1-4fe6-9c6a-b9f451c434af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01331f7f-f857-4517-968e-611973e32625",
        "cursor": {
          "ref": "346bb7df-dfce-46d4-82bb-8320db62f669",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3d367418-79e4-4b03-90bf-cd1930098237"
        },
        "item": {
          "id": "01331f7f-f857-4517-968e-611973e32625",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1649032b-1c10-459a-8a3c-792c9a94a4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb0434c-90cf-4e3e-891c-154619d23e04",
        "cursor": {
          "ref": "48f14b86-1017-4df8-b4e3-bc0a7cd7bea3",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e421f0f6-17b3-4765-bdc7-0a287976bbf4"
        },
        "item": {
          "id": "3fb0434c-90cf-4e3e-891c-154619d23e04",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "49ae4a66-8660-4600-9188-934fe2e411d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a07c2b-a4ca-4145-9fff-c87d204dedac",
        "cursor": {
          "ref": "2e98cea4-2a29-47dc-81d1-39fd8d10d68a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a801837f-c2a9-40e2-bab0-80fe862190a7"
        },
        "item": {
          "id": "c9a07c2b-a4ca-4145-9fff-c87d204dedac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c5274054-b4fa-495c-b8a3-135e00c181f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beefdd3e-d856-46a9-8ae3-13ad26613559",
        "cursor": {
          "ref": "1a8c5e9d-be8c-458d-b976-aac776f6dc3e",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "683a47de-0e28-491b-a7ef-77e4e1578f6f"
        },
        "item": {
          "id": "beefdd3e-d856-46a9-8ae3-13ad26613559",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "38ee281f-5bf3-4128-89f2-e766aed4fef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba82aa1-db38-4fdc-a28f-0d43e6fe691c",
        "cursor": {
          "ref": "ff291ffd-1285-4bd3-a07e-9828b65c7e98",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "87ee8f9b-933d-411b-b2c5-64468354edbe"
        },
        "item": {
          "id": "aba82aa1-db38-4fdc-a28f-0d43e6fe691c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "edb0e504-d27a-4d3a-b698-c86ebc0cede0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267c2a72-159a-4f34-8964-1e4d09a8a0c7",
        "cursor": {
          "ref": "29f00f43-e8be-4cab-a689-eb6cf669283b",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "081d5040-f651-4a2f-9676-11d527b3dc83"
        },
        "item": {
          "id": "267c2a72-159a-4f34-8964-1e4d09a8a0c7",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "24c28854-6205-411a-b567-cd3d5509c536",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 457,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7b50de-38f1-49b2-a1a3-273759bebd0a",
        "cursor": {
          "ref": "109778a2-1a39-4311-a63a-78cd249c756b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b08b25c1-81a3-427f-b7d5-f0ec5d148c6e"
        },
        "item": {
          "id": "4d7b50de-38f1-49b2-a1a3-273759bebd0a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a1f85247-272b-4e2b-b993-b4240b036693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7b50de-38f1-49b2-a1a3-273759bebd0a",
        "cursor": {
          "ref": "109778a2-1a39-4311-a63a-78cd249c756b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b08b25c1-81a3-427f-b7d5-f0ec5d148c6e"
        },
        "item": {
          "id": "4d7b50de-38f1-49b2-a1a3-273759bebd0a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a1f85247-272b-4e2b-b993-b4240b036693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce48cf77-4485-403f-bbda-5b75ccce1130",
        "cursor": {
          "ref": "eea22f14-874c-446f-b446-db4394790e65",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "63544437-a021-447b-a132-8b98887aac76"
        },
        "item": {
          "id": "ce48cf77-4485-403f-bbda-5b75ccce1130",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "56202d38-f8d7-4c7b-9ca5-6315f7a1d654",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 192,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6b9b6de2-9d98-4fc7-b9fc-89e833882ec3",
        "cursor": {
          "ref": "24bece84-8403-4216-a40b-07497456bd4c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7fb5951c-5299-40dd-88ec-45803746be3d"
        },
        "item": {
          "id": "6b9b6de2-9d98-4fc7-b9fc-89e833882ec3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b2dab8fb-8b82-4f86-9a51-d7f7529d3e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291d8cd2-143e-496f-b34f-80632b7cb094",
        "cursor": {
          "ref": "5257fb22-7df0-445a-b257-2c497b94eb45",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1007a38b-be86-498f-b3bf-e3520e2885a3"
        },
        "item": {
          "id": "291d8cd2-143e-496f-b34f-80632b7cb094",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7dcaddf6-99c5-4be2-aad0-0a83bed6af14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5636de8c-0889-4e43-a75d-a39ded43134d",
        "cursor": {
          "ref": "543ab7d1-3521-46c6-8db4-f94dc458ac7e",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0da0e286-4bf8-441c-86f3-f0b1790af084"
        },
        "item": {
          "id": "5636de8c-0889-4e43-a75d-a39ded43134d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0da8146c-f1ee-491e-b65b-24c32247836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff6125b-6463-48d2-aff4-128eaf6e0006",
        "cursor": {
          "ref": "c484749d-e247-47b6-a9e1-abe943465544",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b0d00474-0d52-4e4b-a345-74f44ac4b4a4"
        },
        "item": {
          "id": "dff6125b-6463-48d2-aff4-128eaf6e0006",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "545f4367-9ca6-443b-bd1a-1578ce4f31c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dc20e3-54bb-4503-a57f-df0eaaec8468",
        "cursor": {
          "ref": "35c43257-eebc-448a-bf26-dacd0aa82f56",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "acea682f-df03-499e-a71b-2923ab022946"
        },
        "item": {
          "id": "59dc20e3-54bb-4503-a57f-df0eaaec8468",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8baab9b5-e3a6-4dab-aa18-e89477106e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296549f1-aece-4b56-964b-d3ce965607cc",
        "cursor": {
          "ref": "6fe2bcd4-f55b-4375-8854-f2a83b81912e",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c1a5712d-cbad-4491-8179-acc9fd2bcd2b"
        },
        "item": {
          "id": "296549f1-aece-4b56-964b-d3ce965607cc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fbb89963-3953-4935-b530-d38199849d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441138fc-8481-453b-9700-7e5e263898a6",
        "cursor": {
          "ref": "d656faf8-b175-46d2-8298-5218bf9959b8",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d1bc2d23-c2a5-46f5-9ee2-826c8e68f8e7"
        },
        "item": {
          "id": "441138fc-8481-453b-9700-7e5e263898a6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a4232c29-2890-4b1e-b4a4-5a3e53d5ba81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16735022-be74-4c71-b5dc-616ec4af045a",
        "cursor": {
          "ref": "81dd9652-0f43-412d-b39a-558072e2c3b7",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f0fe86b2-d151-4068-9972-a02f0789562d"
        },
        "item": {
          "id": "16735022-be74-4c71-b5dc-616ec4af045a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b9804176-20d1-48e2-b4a1-2117ad0cb6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877b4a3e-5e80-4cd7-a8b5-ddd0dc2637b1",
        "cursor": {
          "ref": "a3091174-4d61-4fae-bbe7-63570e97bbc4",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5b8b1d10-f419-4670-ac12-9732e852fa27"
        },
        "item": {
          "id": "877b4a3e-5e80-4cd7-a8b5-ddd0dc2637b1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5f5ebd6c-0644-4f31-894a-150479977ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710549aa-fa79-401f-ac49-850e993c82f3",
        "cursor": {
          "ref": "202655ea-0e49-472c-873b-027a27ae95bb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bf650637-67b5-4093-bda1-07d9efc889b3"
        },
        "item": {
          "id": "710549aa-fa79-401f-ac49-850e993c82f3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "33328136-1bda-4552-bc72-007fc8e58fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c7c1c1-72de-49ce-a476-0e3c8f27ca2c",
        "cursor": {
          "ref": "be34070e-e533-4a50-b87f-a63cd749c57e",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "11dcfc5b-14e4-4f51-89b2-6b4b1a51b90e"
        },
        "item": {
          "id": "b2c7c1c1-72de-49ce-a476-0e3c8f27ca2c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "56aa9a87-97a8-4932-a013-ae00359604ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae837c3-78dd-4e53-9a08-b737fe74c6ec",
        "cursor": {
          "ref": "de3a27a3-cb21-4199-b969-919c7b82020f",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "54d90c60-c409-4653-9bc4-9d01ccac5b0c"
        },
        "item": {
          "id": "1ae837c3-78dd-4e53-9a08-b737fe74c6ec",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9a3ca671-b358-4e95-a246-e52887597d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ee836d-8069-4daa-988e-fcd535823a5e",
        "cursor": {
          "ref": "e694a7a9-202a-416c-b2e5-dd52f75b6341",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "339a4a9c-2355-4549-890f-48034e924300"
        },
        "item": {
          "id": "a6ee836d-8069-4daa-988e-fcd535823a5e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3d2e1b23-d9b1-4db5-b0ef-b93b741909ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88db2e76-c819-468e-be23-dd6913015a90",
        "cursor": {
          "ref": "85e6f058-9539-439a-b818-d76ef894406c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b672cb3a-12ad-4b31-91d7-ee992120be10"
        },
        "item": {
          "id": "88db2e76-c819-468e-be23-dd6913015a90",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "90b5e73a-5ff9-4cb1-96dc-d6e1a841bccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d04f7f8-7a7a-40a8-a675-7d5034e55a4d",
        "cursor": {
          "ref": "847a49f1-b47e-4c74-b126-ac6c7a8da746",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bcf61250-b5de-4d58-a059-b0d417ba9980"
        },
        "item": {
          "id": "6d04f7f8-7a7a-40a8-a675-7d5034e55a4d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "98899e5b-dfe1-4983-b04c-7f60555db541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40a9946-effa-4687-852e-697fcc9cc1f4",
        "cursor": {
          "ref": "0f2a781c-29f1-4d1e-be09-d45e26ae181a",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1b8a2893-9859-4d06-9217-82d576df8a74"
        },
        "item": {
          "id": "f40a9946-effa-4687-852e-697fcc9cc1f4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b62b3daa-9157-4568-9b60-fa4fff77f3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1712e3a-b90f-4e90-9e4a-5a366b64db97",
        "cursor": {
          "ref": "4dec33ec-b964-43e9-aa4c-7900bf0db70b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3edb76ec-e36b-4f33-bdc4-37e14a2ce287"
        },
        "item": {
          "id": "d1712e3a-b90f-4e90-9e4a-5a366b64db97",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3dc5d3c8-570a-46fa-bbb3-408f75d9b3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8229d06-8a9e-45ec-86b2-906bae2829c1",
        "cursor": {
          "ref": "4e346c30-4d95-47b6-a497-f5cea6d7ca31",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cb5fbdfd-7590-462d-b138-70a51ce699f9"
        },
        "item": {
          "id": "a8229d06-8a9e-45ec-86b2-906bae2829c1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7fa7cf85-1f90-4c25-bc83-84186318f36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5450801e-d1e3-4cf7-b42d-2fccca117f07",
        "cursor": {
          "ref": "9f4e1fe1-1532-4031-a91d-245c8970197d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "475d76e1-4eee-4670-a0b2-bf112eeccd9e"
        },
        "item": {
          "id": "5450801e-d1e3-4cf7-b42d-2fccca117f07",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a48f3700-c93c-4f57-a579-e2cbe4bff228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1868732a-b4d0-467a-bb43-bb1cadab49b8",
        "cursor": {
          "ref": "cb44f7b0-51e8-4c66-b04f-ab68a0dc265e",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a15bb4d2-8df6-4115-b17c-d83f9cd82955"
        },
        "item": {
          "id": "1868732a-b4d0-467a-bb43-bb1cadab49b8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "701317ed-83ec-4165-a8a6-4521cb7652c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547785f3-9594-4680-83eb-705a976dfb9f",
        "cursor": {
          "ref": "98242ef6-3ce5-4922-9105-4ab5c42211b6",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b3f91493-3652-48c8-bcf7-5c5c41126e85"
        },
        "item": {
          "id": "547785f3-9594-4680-83eb-705a976dfb9f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7f75d7e7-5bb1-4b92-9b75-b495d9109980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18e4aa4-59a3-49b6-9c56-a27b959d0db4",
        "cursor": {
          "ref": "b257039a-cdc4-416d-81fc-27345bdd1985",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c4f52ce4-7ea3-4412-aa34-f3b237c01f82"
        },
        "item": {
          "id": "f18e4aa4-59a3-49b6-9c56-a27b959d0db4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "10ed9062-5c11-4cac-8e2e-333a40c1bc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b16676d-8919-47f9-a610-6f1f253d2c4f",
        "cursor": {
          "ref": "9f711928-7f02-42a7-8abf-e8d959f4f961",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6caaeda1-c536-426d-982e-e49cb6f70f29"
        },
        "item": {
          "id": "4b16676d-8919-47f9-a610-6f1f253d2c4f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2c135da1-7207-4801-ae18-1da9a5fbbc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c581282b-60c1-4b7b-921a-8a48e417342d",
        "cursor": {
          "ref": "ebfb8a90-49bb-4818-b0c8-d102fb332bf1",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "230f33dd-9641-43de-8a68-91093d3bd4c9"
        },
        "item": {
          "id": "c581282b-60c1-4b7b-921a-8a48e417342d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1a3a3f65-e49b-4ce9-8a02-febf14a7815b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1719523d-df5f-4e64-8bd2-ccef6cd63ec2",
        "cursor": {
          "ref": "1f842b75-e747-432b-85e5-65fa7465b0fa",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c85d0d7f-b3b5-42b7-8529-78d8e8526ee5"
        },
        "item": {
          "id": "1719523d-df5f-4e64-8bd2-ccef6cd63ec2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8b7504d2-6e83-4a98-a3d6-1dd7908312b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d3f5d9-1694-427d-bd02-8b4e8407d55a",
        "cursor": {
          "ref": "18c3ba41-44b7-4115-90b5-a615a795b6fc",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "335fe36b-ff21-4a29-a8fb-1531b886985d"
        },
        "item": {
          "id": "37d3f5d9-1694-427d-bd02-8b4e8407d55a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a87ad939-b197-4ca0-b183-d88f69953a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2252e67-8bda-4766-81a5-ad452958529d",
        "cursor": {
          "ref": "70e75b36-03a0-43f0-b53a-9ea4edeae42f",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "79e71df9-9b89-4f4b-a084-e5c3aac04a3b"
        },
        "item": {
          "id": "a2252e67-8bda-4766-81a5-ad452958529d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "479e4d44-506a-4527-8b34-19f9e5f213f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ce497a-f2bd-4e80-b38b-91ad2a4a2598",
        "cursor": {
          "ref": "941719eb-63e2-421d-afa7-aae546f53ad2",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d9b68871-9243-4bb3-a688-f72a6c1258c2"
        },
        "item": {
          "id": "f8ce497a-f2bd-4e80-b38b-91ad2a4a2598",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c1e51ea0-f0d7-4048-9c82-e6ef821ab024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92606f4d-fcc9-4c98-807d-7aeb9d805811",
        "cursor": {
          "ref": "ec5008aa-0111-4b28-8f9c-672698f2aacb",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bda36365-bc89-4e0c-95c4-40d9889f1a04"
        },
        "item": {
          "id": "92606f4d-fcc9-4c98-807d-7aeb9d805811",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "517aa598-038e-4a29-93e1-405b81544ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd60ea16-6d79-4e1c-a89d-5a656755fe0a",
        "cursor": {
          "ref": "fbab3dbb-82de-49de-80d6-0ed18a9af861",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e34be28d-c4ee-4a8e-b68a-db1cd06af0f6"
        },
        "item": {
          "id": "dd60ea16-6d79-4e1c-a89d-5a656755fe0a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "efdae222-b53c-404b-85e2-870af21822c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfb2bb2-4fbb-4ce3-9f96-70bd7d993409",
        "cursor": {
          "ref": "e7848954-da93-4065-b8b9-f538622f351d",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "77e93fad-6d30-4990-9f13-28ca10acbb4d"
        },
        "item": {
          "id": "1bfb2bb2-4fbb-4ce3-9f96-70bd7d993409",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3167f2e1-7a66-4738-944c-41a3ce4d6e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dff841-ac6b-4ca7-b40b-b2a8d96e8cd0",
        "cursor": {
          "ref": "49acf92a-9c8f-44f1-9917-8fca203f666b",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "20a97523-5b8a-46a9-948d-be7aaa0dfaec"
        },
        "item": {
          "id": "76dff841-ac6b-4ca7-b40b-b2a8d96e8cd0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f1419386-bb15-42af-9eba-7462909ace96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6fda45-9507-46db-875c-f297b74bf896",
        "cursor": {
          "ref": "11315e3d-ad23-4bcc-96ec-1e41d991daf8",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1b18a3eb-c3f9-4e00-a13c-3e21af6d13cc"
        },
        "item": {
          "id": "dc6fda45-9507-46db-875c-f297b74bf896",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "01583e90-9246-4e5a-a6d5-b8020ca23726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9fb80d-9ce9-4f71-9364-fc2f4bfd64f2",
        "cursor": {
          "ref": "fe0b0e44-f8da-4b67-9ee3-1eb0a60187a3",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e85658fa-a459-4f60-8c9c-123351199da5"
        },
        "item": {
          "id": "ba9fb80d-9ce9-4f71-9364-fc2f4bfd64f2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d48b4e3e-01ab-4e79-90e5-dc43656f647b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e401c352-c770-49ba-b058-62b5e39487e6",
        "cursor": {
          "ref": "647559ef-3318-457a-8611-242427cdce55",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "91bf8d95-6b8c-4b6a-bda1-d3100d5ea123"
        },
        "item": {
          "id": "e401c352-c770-49ba-b058-62b5e39487e6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9a49e3ad-816c-45f4-bf28-8e58eed46e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0d8d54-fee7-4ace-8db8-ffda44e07209",
        "cursor": {
          "ref": "5804ef65-f249-48a3-bda0-6ebc78238b2e",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "46399b2d-7f2a-44db-a062-e3d553b7528b"
        },
        "item": {
          "id": "6d0d8d54-fee7-4ace-8db8-ffda44e07209",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "57f7fd0d-9b16-4419-837f-badb5cfd030a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f679eb-ac73-4f2b-9240-9d2720eef027",
        "cursor": {
          "ref": "be6ed3b4-c657-4c84-a49f-bd82efa710bd",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "64e303a4-6eea-46e5-b1f3-88203e2ff902"
        },
        "item": {
          "id": "77f679eb-ac73-4f2b-9240-9d2720eef027",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b3e3484f-96aa-49a2-85b7-e25c261b48bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54336881-8c57-4220-a7fa-04ab0a85862b",
        "cursor": {
          "ref": "3abe6c34-8bc8-452b-9cb4-b42a6b796620",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7cb858d7-3e56-411a-bac3-c096d2b80c5d"
        },
        "item": {
          "id": "54336881-8c57-4220-a7fa-04ab0a85862b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "47b62e8e-dbae-4e17-8134-0d037d50088a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbb019a-0f35-40a1-b3e2-2ab3e13e3310",
        "cursor": {
          "ref": "19642136-cb55-4ad8-9158-ee2e65751af5",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "aff64921-e075-46dc-ac72-899e7b2708aa"
        },
        "item": {
          "id": "ebbb019a-0f35-40a1-b3e2-2ab3e13e3310",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9e04ba3d-2944-4340-9801-96738253540b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536f2261-9d93-4622-9aeb-326798090404",
        "cursor": {
          "ref": "a99bce04-8845-4d88-9d09-5c728355eccf",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "24061243-e635-48b8-906e-76654832c132"
        },
        "item": {
          "id": "536f2261-9d93-4622-9aeb-326798090404",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fc4c359c-c6c2-40e2-88e4-7b687ba7b116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98363555-ce2c-4d30-9feb-b1091e084b13",
        "cursor": {
          "ref": "919a11ba-2c9f-4090-9b96-1f4b4e2a8ef0",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c63212c4-fe18-4ce3-abd3-e69e0f4b2562"
        },
        "item": {
          "id": "98363555-ce2c-4d30-9feb-b1091e084b13",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4dba3c1c-2462-4f87-b6e8-ad4e0529e8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab9415b-4432-41cf-9046-2d7b37cef1e5",
        "cursor": {
          "ref": "3a1c86d4-9c97-4c04-86b3-4e2f5ecd5539",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fb3f955f-d725-4e3c-8faa-8b3dec2eab2e"
        },
        "item": {
          "id": "5ab9415b-4432-41cf-9046-2d7b37cef1e5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bede4cfb-03bb-42e0-9c0a-d5f93387159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6bac95-81e7-4c0d-8239-be1f952ff44f",
        "cursor": {
          "ref": "1a11990d-fa65-4ef4-9904-0a7e215619a4",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a95fc6c3-759d-417b-a3b0-2b99b79c8fce"
        },
        "item": {
          "id": "aa6bac95-81e7-4c0d-8239-be1f952ff44f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b396b632-9262-47e2-8c24-89511e308132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efc5791-6ad4-4c9f-aa92-1b3dbd05f3ea",
        "cursor": {
          "ref": "48efc288-bef7-41ed-9003-37b436ebb3b6",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e9bf0004-ae8d-4d67-bcb0-7baa4c3e868a"
        },
        "item": {
          "id": "7efc5791-6ad4-4c9f-aa92-1b3dbd05f3ea",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2942ba0c-a7b8-4d63-833a-fa6f9c45d9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047ca047-1ca2-499f-9df9-ec9578c83c45",
        "cursor": {
          "ref": "9f863957-a736-4ae2-9809-38a39698059b",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bdf217c9-83ef-4517-b129-ecadcada122b"
        },
        "item": {
          "id": "047ca047-1ca2-499f-9df9-ec9578c83c45",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "10ae1282-e014-4a4e-9723-f34c3feae0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01be3cae-21d3-43ec-8c2c-8819956ab6c4",
        "cursor": {
          "ref": "034dc7e0-5065-4bf0-8d6a-0c4f5f960d7e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e876be00-9bd4-426c-9e6a-41f7aa3a1775"
        },
        "item": {
          "id": "01be3cae-21d3-43ec-8c2c-8819956ab6c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a83079fc-6492-485a-94b9-714df0539ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3b1bae-39bd-4944-8f4b-b85588769d85",
        "cursor": {
          "ref": "16f9165b-c8cf-4eaf-a113-626980e6e48d",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1410a266-54c9-48f7-81cf-3ee560463c83"
        },
        "item": {
          "id": "bd3b1bae-39bd-4944-8f4b-b85588769d85",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "30c8bdd5-ef93-4940-841b-c466a2d5415b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10231bfe-39fa-4771-af13-ae283f80147e",
        "cursor": {
          "ref": "7c24a5a7-7703-44c4-ad05-f9ccf7871d88",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "14e08bd4-c33e-4950-b03b-92c131677211"
        },
        "item": {
          "id": "10231bfe-39fa-4771-af13-ae283f80147e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "94f5e381-9980-4ab2-a5a2-13032d4d1877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa89f48a-4bab-4e33-8620-b93ca5d33593",
        "cursor": {
          "ref": "c8a6bc7e-8da0-4e5e-aae8-063a0d705232",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1a8419e4-0a37-4894-b367-53d6470f05b0"
        },
        "item": {
          "id": "fa89f48a-4bab-4e33-8620-b93ca5d33593",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6acfc33f-12cc-4e31-8f0a-bb405ccf7e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759ea8a0-3862-4c3e-b337-b6d436898af0",
        "cursor": {
          "ref": "11681d15-2938-4d20-bbbb-33d23702e760",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4a9ea987-f6b7-455d-94e0-bc232e5957f0"
        },
        "item": {
          "id": "759ea8a0-3862-4c3e-b337-b6d436898af0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3ba8018c-2967-46a9-88a3-0175d9582b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14835508-95eb-4d03-8644-bb03984b50d8",
        "cursor": {
          "ref": "cc4b1aab-3c97-4f52-8247-aaaaf2a5f3f7",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "189455a1-003c-4b87-bff0-1a98fe0cd2ef"
        },
        "item": {
          "id": "14835508-95eb-4d03-8644-bb03984b50d8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "757008a3-729b-472b-af15-019c67cd6df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5396703-64bb-4605-8ae6-2a77cbf0b6f8",
        "cursor": {
          "ref": "921382ce-3c3b-4be8-8ce8-c6f872901c43",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c6ab52e9-c020-4211-a5ff-d859c6338d74"
        },
        "item": {
          "id": "e5396703-64bb-4605-8ae6-2a77cbf0b6f8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "efbf3589-5a40-4099-a50e-49adf07b4595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b957a4f6-15a2-4c18-883f-82e7058fc9ce",
        "cursor": {
          "ref": "4e6bcad2-7b07-4483-ab01-79d8756671bb",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "494cfd6a-e41a-4c01-a3e5-90f2519f6faf"
        },
        "item": {
          "id": "b957a4f6-15a2-4c18-883f-82e7058fc9ce",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "83ef8f61-6f76-4f1d-9598-5f49965998fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4311ec0c-afe1-4a09-a145-f2a3c0b29049",
        "cursor": {
          "ref": "a89c47df-43d0-4fa5-a678-df71e5b96524",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "daf9472b-b439-4528-8233-403b5d3c6948"
        },
        "item": {
          "id": "4311ec0c-afe1-4a09-a145-f2a3c0b29049",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "558270e3-c7d6-4f9e-8b64-03a4ea3e4ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ceff31-1687-413d-9376-62d9831803c4",
        "cursor": {
          "ref": "e5e7663f-5914-49ad-8469-b48b859c9fae",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "264315ba-c68d-47c3-86d5-5dd0fa3b0c24"
        },
        "item": {
          "id": "66ceff31-1687-413d-9376-62d9831803c4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9042084a-cc31-45c9-b546-189c41f1be86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e628dfd0-8194-4d6a-97d2-7e48097c7f65",
        "cursor": {
          "ref": "6e298feb-ce00-4f19-b755-22e6ee305bfd",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f9d0f433-a6e7-42a0-9ef1-6090ea623e98"
        },
        "item": {
          "id": "e628dfd0-8194-4d6a-97d2-7e48097c7f65",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "249588d1-0b0b-4fdf-afa0-2c741f026f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32def05-530b-4a6c-b3bb-11be31024de2",
        "cursor": {
          "ref": "75ea7da6-c789-45a7-9e39-e3da32658e95",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ac13f5da-acfc-438a-9cd8-b5ee667eebcb"
        },
        "item": {
          "id": "a32def05-530b-4a6c-b3bb-11be31024de2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a7e93d02-186b-4943-8feb-f9df2abdf8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7684d878-bc9d-46ad-98bb-ccfd27b106b8",
        "cursor": {
          "ref": "e3b52ed3-0a52-4add-b592-44ed01faa26d",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5af613b0-e9a2-40cb-9e4e-01cd26fef22e"
        },
        "item": {
          "id": "7684d878-bc9d-46ad-98bb-ccfd27b106b8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f0b6491c-29e2-4190-9855-743473e38797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd976c3-1042-46d6-a7a5-f59a4ae529e9",
        "cursor": {
          "ref": "98cb8e26-4ff0-4265-a93d-e2bfcb79f4bc",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "134b5693-3d87-44d6-83f0-87665eaa9321"
        },
        "item": {
          "id": "5bd976c3-1042-46d6-a7a5-f59a4ae529e9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8a6b44c0-c581-4525-a575-0700215ccf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865cc3f1-ce0b-4ea7-ae53-3fd73dcf9e36",
        "cursor": {
          "ref": "9f0593c9-ed3e-4351-a1e1-b36f71fb429f",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fbcec836-f163-4cc2-b2f6-78ca1ae73d23"
        },
        "item": {
          "id": "865cc3f1-ce0b-4ea7-ae53-3fd73dcf9e36",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4fc0924d-a915-4bf1-a01c-2fc713a7e364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c5f085-fe5c-4b13-95a5-8077a48bef73",
        "cursor": {
          "ref": "40fe7d59-f7c6-4bcc-95b6-e59eed2be338",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0a9fc0f2-b561-4446-bdec-b7ed577c9b39"
        },
        "item": {
          "id": "18c5f085-fe5c-4b13-95a5-8077a48bef73",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "480f16d5-e493-4029-b5c3-e29ac84a86a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dc75d4-1150-43f9-87b0-db91a24a0380",
        "cursor": {
          "ref": "c9bafa52-8b42-4068-9bf9-ad97b2aa929f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5c3d0417-105b-4c38-b2cb-c6a4422071e2"
        },
        "item": {
          "id": "f7dc75d4-1150-43f9-87b0-db91a24a0380",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d4c3c9cf-dde7-4d80-879c-c14ec8851495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e4b14f-dd66-4d33-8045-ba389e635325",
        "cursor": {
          "ref": "2186cb42-e6a6-457a-a1c7-f31a7922856a",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6616b44c-144e-4dfd-ac3b-ac24dbe48e58"
        },
        "item": {
          "id": "b1e4b14f-dd66-4d33-8045-ba389e635325",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4bd49e88-c075-493c-81dd-1180bc07a849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb46a904-2fbf-478a-8d64-1e291d614aed",
        "cursor": {
          "ref": "650145cd-acc4-4023-9dca-5cd51888730f",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a4c323d4-1bef-4efe-a5b7-1070c51bfeb8"
        },
        "item": {
          "id": "fb46a904-2fbf-478a-8d64-1e291d614aed",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "be1aeed0-6978-4f71-bdc9-f307fb5f5c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f328e704-e260-4562-b354-ddc7d997c416",
        "cursor": {
          "ref": "81b8c8a5-661f-4056-827b-3896937304f8",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6ff2558f-88ed-4709-b281-c5a9f97534e4"
        },
        "item": {
          "id": "f328e704-e260-4562-b354-ddc7d997c416",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "42b09088-68b9-41bb-844c-dd64c898ffff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab7c6f9-1fbd-47c7-8d67-b5bd5e55c51d",
        "cursor": {
          "ref": "3c902700-0389-4d85-b04c-bb5f5fd17c0a",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f0ed281a-4831-4a1c-ba22-626d50ac54ba"
        },
        "item": {
          "id": "7ab7c6f9-1fbd-47c7-8d67-b5bd5e55c51d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a3e25325-c29a-4c93-bef4-a5577c8b1d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6cbf1a-229c-4d77-81f7-f23d95372a54",
        "cursor": {
          "ref": "f1bbc566-e15e-46dc-8c40-472e28cf8c0e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f753c472-323a-4e0b-ada2-22b190e39a48"
        },
        "item": {
          "id": "cc6cbf1a-229c-4d77-81f7-f23d95372a54",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "95f8711f-03d2-4331-8bd0-3d284e5d86a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12020ad3-8cf5-482e-9a68-f78d328e93b9",
        "cursor": {
          "ref": "eed949e7-9c40-4ddd-b46c-cd63973b330b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e5960c44-663c-404a-9e35-f762268e0f7e"
        },
        "item": {
          "id": "12020ad3-8cf5-482e-9a68-f78d328e93b9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7f5a87d6-39e6-46e1-b507-c5b45ff1ee0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbed5732-a6dd-4ec0-862c-456389342beb",
        "cursor": {
          "ref": "71ffa326-975a-4c7f-a789-92649cdc1413",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "32f8f50e-6a03-4ef8-a093-75d5364a57e2"
        },
        "item": {
          "id": "cbed5732-a6dd-4ec0-862c-456389342beb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b6ab9f6d-e04d-4c1d-a19b-02d940728f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0743a7-d850-412d-9a46-cf1752ddaebd",
        "cursor": {
          "ref": "6a4e1ccc-7b1f-44b2-9e50-7eb9be5337b7",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f00d2a8e-9ee6-4520-ae23-96a505fcb545"
        },
        "item": {
          "id": "0e0743a7-d850-412d-9a46-cf1752ddaebd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ede394fd-7243-4721-b1c2-05c8b51d2df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd7176f-7859-462d-aa06-08e9fc1d4479",
        "cursor": {
          "ref": "513d6cc4-4c9d-4794-bc9f-5b89dc5afde9",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0b6f515c-96ce-4065-9e67-c0a52595f82c"
        },
        "item": {
          "id": "9bd7176f-7859-462d-aa06-08e9fc1d4479",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5fd96e37-1b34-441d-91ec-246c137dbe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2934fd-446f-4d95-ba57-92812aec6385",
        "cursor": {
          "ref": "e13e7c27-4107-49e3-b58a-1ffa67661cce",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fb292389-4b93-4bda-b8df-0e2fcb9bcbee"
        },
        "item": {
          "id": "5e2934fd-446f-4d95-ba57-92812aec6385",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "742318e2-588b-4b55-a86a-8980a8f5fb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8581fa1a-960b-429e-ae5e-be9ebd43a88d",
        "cursor": {
          "ref": "5654ade8-885d-4dac-ab42-951cae64f477",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a990467d-7c17-460e-9c02-b7ad5108156d"
        },
        "item": {
          "id": "8581fa1a-960b-429e-ae5e-be9ebd43a88d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4120f1e7-9cf1-4b04-934c-5e05f8c69404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48176e76-1a01-4875-aaaf-a06250f52b4f",
        "cursor": {
          "ref": "8797acf4-ae3e-49ac-a07e-04783ae8d683",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7da59458-02b3-4d99-8bc3-f20268242371"
        },
        "item": {
          "id": "48176e76-1a01-4875-aaaf-a06250f52b4f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9941e9de-70eb-40c8-bd77-769e0097de95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fa464f-7d43-4676-beda-4de1a1afada5",
        "cursor": {
          "ref": "a42cc2a3-8d17-4b23-be38-298a4a813246",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "30d9f3fe-1fc2-4a06-8799-4bdf9c92d928"
        },
        "item": {
          "id": "02fa464f-7d43-4676-beda-4de1a1afada5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d68ccf7c-a512-4afa-ae85-6f2616f825eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d4bd26-0fbc-486b-9f95-a86200951e3d",
        "cursor": {
          "ref": "0cc370b9-5a28-4e5d-a917-16dd9f8657ad",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2f1d71e8-eff0-4ed7-bdad-8bb2e8e3c812"
        },
        "item": {
          "id": "65d4bd26-0fbc-486b-9f95-a86200951e3d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8dd44254-24c9-4191-9c27-1b4896570cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219b27ed-d76f-4163-bf9d-0422c4691219",
        "cursor": {
          "ref": "d3409a59-4704-4afc-8286-1b1515d09c16",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1e70c1bd-b275-4fcd-9976-e880bad955fd"
        },
        "item": {
          "id": "219b27ed-d76f-4163-bf9d-0422c4691219",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ecab42a4-983a-4e45-a433-bba9bc911de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc4d6aa-5e01-400c-b58c-4bf9b0445910",
        "cursor": {
          "ref": "5cbb2eea-c6e1-4ed0-9fc5-0caa3ecc08de",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7cf71209-cef8-4124-8c85-0ce6b9c713f2"
        },
        "item": {
          "id": "6dc4d6aa-5e01-400c-b58c-4bf9b0445910",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "373bc033-5763-43fa-acf3-ad61656c24de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251e1324-fc87-41a6-9723-8442e9a22884",
        "cursor": {
          "ref": "2cbf8142-e61f-4df9-ad8e-afefd5d0c974",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "00ae7a3b-6c97-40e2-aae9-41f51042cd9b"
        },
        "item": {
          "id": "251e1324-fc87-41a6-9723-8442e9a22884",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f63862e8-3058-43c3-8d82-fd17afd97c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd65e8c-fca9-496d-86bc-49362a13a53d",
        "cursor": {
          "ref": "c154277a-b35e-4a29-a098-51b2b14ca574",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1c798a2f-f92f-4412-b483-7c1a0d06318d"
        },
        "item": {
          "id": "6bd65e8c-fca9-496d-86bc-49362a13a53d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "810d7df6-514a-43f2-96bb-aac07e8eb57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedd9584-d415-4c15-add9-0955e5332808",
        "cursor": {
          "ref": "36faf9cf-22dd-455d-ac53-0d0da8645078",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bf5a2342-394d-4c8a-96ff-24a9b08de021"
        },
        "item": {
          "id": "aedd9584-d415-4c15-add9-0955e5332808",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7096a512-490d-4b07-9229-25d123b33ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b423ee95-3b6f-47b7-8d98-50da612fc7f4",
        "cursor": {
          "ref": "074247b8-daa7-45de-a532-22467a243aaf",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "62f77162-31c1-4915-b5b5-c68a8c68fa6e"
        },
        "item": {
          "id": "b423ee95-3b6f-47b7-8d98-50da612fc7f4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e1aae368-a4a2-4072-9704-a95eafa8e7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0eee7c4-4f26-423f-8004-c5b24391a83f",
        "cursor": {
          "ref": "cd120b49-ec5e-4a1f-b7e2-891f089c626a",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "064ef92f-ab4b-4a72-adbe-4f04527a128b"
        },
        "item": {
          "id": "e0eee7c4-4f26-423f-8004-c5b24391a83f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4b7fbbdb-ddb6-4439-b109-fa1e83b03d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d4aa2a-7dea-45fe-9702-4da81085bb16",
        "cursor": {
          "ref": "3e032426-af15-46e3-ae4a-ef4eb215e6a7",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a63b8ea4-5f10-45af-8131-f10568cf34bc"
        },
        "item": {
          "id": "02d4aa2a-7dea-45fe-9702-4da81085bb16",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ed3b50b3-9bba-4a0f-a905-39a946f1b1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ab79db-4cca-416f-abdf-42c553ce45cb",
        "cursor": {
          "ref": "cca048e1-213a-4604-831f-dc65b1e4128a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9ca25464-c1f4-4d30-9850-cad747f912ba"
        },
        "item": {
          "id": "64ab79db-4cca-416f-abdf-42c553ce45cb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d7edab02-dbf3-4ec1-b8f5-3ed155d11f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4da2b2a-3782-4d0c-a54e-7d7b14689657",
        "cursor": {
          "ref": "fa65b9b3-6044-49b9-adaf-95d1f69b20cd",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "28e790f5-7b3b-4869-9723-8907e56df81a"
        },
        "item": {
          "id": "a4da2b2a-3782-4d0c-a54e-7d7b14689657",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "67f904ff-46ee-4134-a93d-ae3e3b12b850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dff1d73-8e18-48c2-8e93-5daff76e0722",
        "cursor": {
          "ref": "1a97a45e-5a91-46aa-a45a-f956cb5f696c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8fb2fd07-9b93-42aa-a802-21acd572d41c"
        },
        "item": {
          "id": "5dff1d73-8e18-48c2-8e93-5daff76e0722",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d9f93dc3-ad3e-4ed8-92d2-00e2dc31526c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8b7c59-6fdc-4f84-a0fc-958f3e7f9e37",
        "cursor": {
          "ref": "36bcc230-6483-4621-b48e-45faec239956",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b8ead84b-33f0-4fe0-81a9-dec1b641ac88"
        },
        "item": {
          "id": "ca8b7c59-6fdc-4f84-a0fc-958f3e7f9e37",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f73effa2-0b47-435c-a276-db9abfbd7662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b59084-c71d-4835-88b6-76b1feebf26f",
        "cursor": {
          "ref": "108c64c5-acd7-401d-a367-cef21fee6a54",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3d866b1b-cce2-4e9a-82d7-eb40c77d00cd"
        },
        "item": {
          "id": "93b59084-c71d-4835-88b6-76b1feebf26f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "775fd8eb-054a-473c-9270-8db3f5205f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c041e2-67a0-44cf-b4cf-c0626f8be277",
        "cursor": {
          "ref": "3a3563ce-9748-47bf-906e-e7a9c43bc986",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fdd972b9-2788-41d9-a30f-d5690c45a1e8"
        },
        "item": {
          "id": "06c041e2-67a0-44cf-b4cf-c0626f8be277",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "97983aaf-fedf-4b6b-a7aa-2fe24d8a8108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb24b7b2-b652-4fff-b3f7-4f310e4a001a",
        "cursor": {
          "ref": "7a72ba29-ce92-4c44-921e-791af8f677c2",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cb00594a-2d47-40da-b78e-ef2b87a0e3bc"
        },
        "item": {
          "id": "eb24b7b2-b652-4fff-b3f7-4f310e4a001a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d8b56a53-8861-4d1c-a824-678830364736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d62b29f-2bbd-47d2-8484-5606d8757106",
        "cursor": {
          "ref": "c6409225-0fe9-452c-800d-ddbf8d7480a9",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "94c96075-b084-4739-8ec9-65feb582bebd"
        },
        "item": {
          "id": "8d62b29f-2bbd-47d2-8484-5606d8757106",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b8e9e9a0-4745-422d-beb6-6c89cc77948d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad005ac-9b4f-43f2-9847-d9e744b711dd",
        "cursor": {
          "ref": "763a9cca-784d-4eb0-90a2-dbefe42b15c6",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "115f4dd2-4836-46a5-8466-02fa28bc6e53"
        },
        "item": {
          "id": "0ad005ac-9b4f-43f2-9847-d9e744b711dd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1c3b622d-dd7d-48f9-96c9-292ec40bba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384badfd-2737-4e2c-af02-4551d5519d49",
        "cursor": {
          "ref": "6d15b438-958d-46ed-8410-8912f7f6e31e",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "630d0d93-69db-41a1-92a4-09eeeee951ee"
        },
        "item": {
          "id": "384badfd-2737-4e2c-af02-4551d5519d49",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6262e8ba-47e4-4f2f-9b13-39f6f66122f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3401e4b4-8001-4924-aac2-7ba2537581ce",
        "cursor": {
          "ref": "b8ee1683-56af-49fe-8186-fc011fd26f57",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c5259a4f-2091-4f5f-bbdb-cade293a36bc"
        },
        "item": {
          "id": "3401e4b4-8001-4924-aac2-7ba2537581ce",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "747cec41-75a3-4513-9cbb-a81c22896853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6081bfbb-105c-4843-8b61-da6f7c4d1df6",
        "cursor": {
          "ref": "afe9998a-1333-4820-bc31-c45812858688",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4d2a40bb-0e20-4973-9883-10ca51bfd970"
        },
        "item": {
          "id": "6081bfbb-105c-4843-8b61-da6f7c4d1df6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c051a4d7-917d-4f16-95fb-a6449f3a0c95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3f92c0-f7d6-471b-ba9b-19fc2346bb1b",
        "cursor": {
          "ref": "e8d1cefd-c9d2-437d-bd17-0f4cd99dbb0c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1b29f832-0a6c-403e-87b5-650027787ea6"
        },
        "item": {
          "id": "7d3f92c0-f7d6-471b-ba9b-19fc2346bb1b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "60a4891d-8f99-4952-b166-00688108497b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 190,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00532c7-d5dd-4e25-be6f-8601274955ea",
        "cursor": {
          "ref": "f8f04aeb-5d1d-4115-ac8d-f3175d478230",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "45c86bcb-de40-45f4-b828-7422984eb571"
        },
        "item": {
          "id": "a00532c7-d5dd-4e25-be6f-8601274955ea",
          "name": "credentials_verify"
        },
        "response": {
          "id": "12be7cc4-e425-4efb-a6ab-a13ccdd7de74",
          "status": "OK",
          "code": 200,
          "responseTime": 341,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0174bf38-3ad8-41ac-85aa-e7ad19db8258",
        "cursor": {
          "ref": "f63cf068-6b53-461a-82c6-eb378a0a5c81",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2df03bba-c73d-437a-8783-ccb45569b649"
        },
        "item": {
          "id": "0174bf38-3ad8-41ac-85aa-e7ad19db8258",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "f20da75a-559f-4283-acb6-a06c3f9a50ed",
          "status": "OK",
          "code": 200,
          "responseTime": 277,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee3fed3-634a-4bd2-91bb-5c95f82acfff",
        "cursor": {
          "ref": "feabb1af-372c-48fb-8276-4083e3b376bb",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f2b5d6e2-8da9-4da6-89c7-9f58a7f0bdbc"
        },
        "item": {
          "id": "6ee3fed3-634a-4bd2-91bb-5c95f82acfff",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9f0307ac-1deb-472f-9a7e-fa90e69ce62a",
          "status": "OK",
          "code": 200,
          "responseTime": 276,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ba5f42-a2e3-4422-b380-de0d238b7773",
        "cursor": {
          "ref": "7ef59da2-0f41-493c-84e8-4c440f617082",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ddd028d3-a2c1-4756-8b4b-9486682225fa"
        },
        "item": {
          "id": "a5ba5f42-a2e3-4422-b380-de0d238b7773",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9bb57959-34ed-4573-af0c-5e41d416a8ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ba5f42-a2e3-4422-b380-de0d238b7773",
        "cursor": {
          "ref": "7ef59da2-0f41-493c-84e8-4c440f617082",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ddd028d3-a2c1-4756-8b4b-9486682225fa"
        },
        "item": {
          "id": "a5ba5f42-a2e3-4422-b380-de0d238b7773",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9bb57959-34ed-4573-af0c-5e41d416a8ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ba5f42-a2e3-4422-b380-de0d238b7773",
        "cursor": {
          "ref": "7ef59da2-0f41-493c-84e8-4c440f617082",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ddd028d3-a2c1-4756-8b4b-9486682225fa"
        },
        "item": {
          "id": "a5ba5f42-a2e3-4422-b380-de0d238b7773",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9bb57959-34ed-4573-af0c-5e41d416a8ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c46fc65-494c-4a43-96b3-bc688131f77b",
        "cursor": {
          "ref": "b7b59399-900a-48e2-934f-81eeb5f3f950",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f283dbba-4802-478a-abdb-6b7264de77e5"
        },
        "item": {
          "id": "6c46fc65-494c-4a43-96b3-bc688131f77b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "52737ca3-18f0-4572-9812-e7e2b4f9c76c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 205,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e85529c-e726-4369-ac76-4696dfb48bea",
        "cursor": {
          "ref": "00de9239-70a0-4691-be4b-f17d6ee4b41c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "83447633-436f-409b-a671-1b875081643b"
        },
        "item": {
          "id": "9e85529c-e726-4369-ac76-4696dfb48bea",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c5b27505-203e-4761-af04-04bb82b4e19d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e85529c-e726-4369-ac76-4696dfb48bea",
        "cursor": {
          "ref": "00de9239-70a0-4691-be4b-f17d6ee4b41c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "83447633-436f-409b-a671-1b875081643b"
        },
        "item": {
          "id": "9e85529c-e726-4369-ac76-4696dfb48bea",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c5b27505-203e-4761-af04-04bb82b4e19d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16c881e-a568-45d6-95b4-db923fac8d54",
        "cursor": {
          "ref": "329e65dc-4173-47c9-a344-71674634f429",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fc285083-4697-4fdb-bb9f-c344db5f3008"
        },
        "item": {
          "id": "c16c881e-a568-45d6-95b4-db923fac8d54",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "21b52ed7-79ce-47e4-b9de-d7af4b3409dc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 426,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b360b2-8853-44fe-b9a4-dadce768bdfe",
        "cursor": {
          "ref": "9221d317-4677-4435-bf65-195e0ea49295",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ed6fb5bd-f60e-4f2f-aaf1-582c46ec4c88"
        },
        "item": {
          "id": "75b360b2-8853-44fe-b9a4-dadce768bdfe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "88dd03e0-1b64-41ca-b7c2-4d5950417818",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b360b2-8853-44fe-b9a4-dadce768bdfe",
        "cursor": {
          "ref": "9221d317-4677-4435-bf65-195e0ea49295",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ed6fb5bd-f60e-4f2f-aaf1-582c46ec4c88"
        },
        "item": {
          "id": "75b360b2-8853-44fe-b9a4-dadce768bdfe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "88dd03e0-1b64-41ca-b7c2-4d5950417818",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490e94b1-be7f-463c-9349-90a06754777a",
        "cursor": {
          "ref": "744dcf35-cdb2-4fc8-9e89-fdb99a01eb13",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a9b9cf6e-e51b-4b1d-bb11-72b213ba8a3f"
        },
        "item": {
          "id": "490e94b1-be7f-463c-9349-90a06754777a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "5a79f89a-3ab4-4120-ab18-2b3a6ab00658",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 403,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}